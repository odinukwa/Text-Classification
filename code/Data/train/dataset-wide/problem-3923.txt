No one wants to be in that situation. Everyone is in that situation. So step two: Get used to it, and stop caring. The question that should be on your mind is not "do my undeserving no good slacker coworkers deserve their bonuses?" The question on your mind should be "am I getting an adequate compensation for the amount of work I'm putting in?" The answers to those two questions have nothing to do with each other. Put another way: the only way to control what bonuses your slacker coworkers get is to sabotage and badmouth them. Do you want to work at a company that encourages that kind of behaviour? Worry about what you're getting, not what anyone else is getting. Make yourself look good by enabling everyone around you to share in your success. 

Well, if I wanted that, I'd hire someone straight out of college. I want my industry hires to justify their higher cost by being immediately productive. 

The bit where you express unhappiness is "I'm disappointed to not have the opportunity to work with you this time", in case that was unclear. 

Again no offense intended but be realistic. Would you do that if you were Bob? I wouldn't! The supposition that Bob will take one for the team and be happy about it is not realistic. Bob will quit and angrily badmouth his former company on social media. 

First off, if this subject interests you, I have a number of articles in my blog queue coming up in the next couple of weeks about how I deal with technical interview questions as an interviewer. To address your specific question: this is not a problem I ask, but suppose it were. Why would I do so? To find out: 

You expected fairness and loyalty and thoughtfulness from a corporation. That's a great mistake to learn from, particularly since this mistake cost you nothing. Don't make that mistake again. 

Beyond simple honesty, you tailor your answer the same way you tailor every answer in an interview: by considering the motives of the person doing the interviewing. Presumably they have a business problem and they believe that going to the enormous expense of interviewing and then hiring you, they might have a chance to solve that problem at a reasonable cost. (This is assuming that the interviewer is acting in good faith; see my comment above for thoughts on that.) If you want to make yourself seem attractive, make it clear that your motives are aligned with the business problem that you are solving. (This of course requires that you understand what business problem you are possibly solving in the first place; use the interview as an opportunity to clarify that if it's unclear.) For example, if the position is sales at a car dealership, "I want to make a lot of money" is a perfectly acceptable answer. It shows that your goals and the goals of the business are totally in line. Commission-based sales generates profit for the dealership at the same time as it generates commissions for the seller. It's a terrible answer if you're applying for a job teaching math to high-school students. (Unfortunately.) 

You kind of can't, you're going to get turned down for all sorts of reasons. That said, it will never hurt your career to network more. By networking I don't mean acting like some awful slimy stereotype of a salesperson, I mean going to stuff like meetups and user groups and trying not to be a jerk. If you're especially lucky you'll directly meet a manager looking to hire, but even if you don't it's quite likely that you'll meet people who know someone who is looking to hire and can put in a good word for you. It's not necessarily fair but people just trust a friend of a friend more than they do a total stranger. 

"I statements," lots of "I statements." I'm very suspicious that you're going to need to look for another job like the other answers suggest, and frankly I think that's the better option. It should not be any sort of surprise to your boss that you want to progress in your career and I think it's a bad sign if you have to tell them directly that you want to ever move past the position you're in now. That said, if you don't want to start looking for another job immediately, what I recommend is having a talk with your boss about what you can both do to help you reach your career goals. It's necessary here to approach this as if you and your boss are on the same team, it won't work if you see your boss as an adversary (if you can't help seeing your boss as an adversary then you have your answer, skip the rest of my answer and find a new job). It's not impossible that your boss either doesn't understand how important leading a team is to you or that he thinks coaching other developers is a necessary step on the way to leading a team and that he's helping you reach your goals. Either way it would help to make sure he understands exactly your career goals are and that you understand exactly what you need to do to convince him that he should make you team lead of this project or another one. To make sure you don't phrase things in an adversarial sort of way, you're going to want to use a lot of I statements. For example "I'm feeling frustrated. I thought I had been clear about wanting to be a team lead or architect on a project, but this new project finally came up and I'm just coaching junior devs. How can we get me into a lead or architect position? What would you need to see from me to feel comfortable recommending me for a position like that?" What you've said about how projects work at your company ("A lot of times, it is just one person from our company working with internal developers at the customer on their projects. Most of us are not very happy with this and would prefer projects where we can work together as a team, preferably in our company office and not the customer site.") makes me think that other senior devs at your company have been waiting just as long as you have (or longer) to lead a project or to work as part of a close-knit team. You'll probably also want to ask your boss if he can give you an estimate of when you'll get to lead a project given that there don't seem to be very many of them at your company and that there are probably other senior devs who want to lead projects too. I would literally just ask "Can you give me an estimate of when I'll have a chance to lead a project?" and "What would I need to do to be the first choice to lead a project when another one comes up?" 

First: you said in previous questions that you've had health issues including difficulties with anxiety. I fully sympathize with how difficult that can be. I strongly encourage you to look for whatever kind of support system you have available to help mitigate those problems. Any problem gets a lot harder to solve when you have anxiety to deal with. There may be support available through your work, while you still have a job. Talk to your doctor. Use the resources at your disposal. Now, to consider your questions: 

Good start, but you have not yet explored all that is possible in the realm of closing down nosy questions. I do not want to discuss it with you. Full stop, end of conversation, do not feed the trolls. Talk about work at work. 

That's easy; as others have said, put your coworkers who are known to be fit through the process; if the process consistently rejects them, then there's something wrong with the process. But that's not the problem you have. This is a question-and-answer site, and you've asked the wrong question. The problem you actually have is a significant fraction of candidates are plainly unfit, and this is wasting time, effort and money that could be better spent elsewhere. You have a pipeline problem, not a coding question problem. Something in your candidate pipeline is producing a large fraction of plainly unfit candidates. As is well known, a great many programming job applicants have no ability whatsoever to write even simple programs: $URL$ Ask around and see if other interviewers are having similar problems. If they are, then push back on management and recruiting to see if they can figure out what is incentivizing recruiting to keep sending you unqualified candidates. 

So don't burn bridges. Be polite and professional. People quit. That's business. If they don't get that, then that's their problem. 

The specific algorithm is totally unimportant. It's a jumping-off point for the real task of the interview, which is determining if the candidate can reason about code using the tools in their toolbox. I have never once had to solve the tower of hanoi problem in my job. I have many, many times had to rewrite a recursive algorithm into an iterative algorithm with an explicit stack in a stack-constrained environment. A candidate who cannot do so is unlikely to succeed on my team. So, the answer to your question is: solve the problem in good faith. If the problem is really a "fizzbuzz" -- just a test to see if you can write code at all -- then you will pass it quickly and the interviewer will move on. But I would use a simple, standard problem as an opportunity to probe the candidate's skills more deeply. 

I've been contacted for a job offer because the employer thinks I might be good for the job. More specifically, I was found on Stackoverflow and contacted about my work there. This person would like to know about my actual programming experiences. He's seen what I've done on SO and assumes that I have atleast worked on projects in the past. But the truth is I've never worked on projects (open source or otherwise). I consider myself to be an experienced programmer (4+ years) but I have not done anything "real" with these skills of mine. I'm interested in getting this job. How do you think I should respond to this person? 

Let's say I am applying for a position as a software developer and the company to which I'm applying says they offer training. I'd like to know what exactly training is? Is it akin to an unpaid internship? Do you have to go to classes, learn from home, or does the company choose an employee to help get you up-to-date with everything? 

I've been told by many people (including my former boss) that I look unhappy or upset about something. This is almost always untrue when people point this out. I attribute this mostly to my anxiety. I'm afraid to show emotion or be outgoing around other people which makes it hard for me to socialize or connect with someone. I'm afraid this is going to happen again during a job interview. I don't want the interviewer to be afraid or intimidated by me. I want to be outgoing and look like a happy person but I just don't see it going that way, I'll be too anxious, and this always happens. When I interviewed with my former boss, she said that I seem shy and quiet, which is true. The interview that I was in was a group interview, where multiple candidates would sit around a table and would be interviewed one by one (as if that wasn't stressful enough for me). I think that if this was a private interview, she would have noticed that not only am I shy and quiet but I seem to lack interest in what is going on (which again is completely untrue). I fear that this is going to prevent me from getting another job. What can I do to prevent this from happening the next time? 

If a recruiter contacts you and inquires about your current employment status, does one have an advantage in saying that he is currently employed as opposed to unemployed? Moreover, does the recruiter expect you to have a job in the field for which he/she is recruiting? Does it really matter at all? 

If they ask again, say it again. This can be surprisingly difficult, so practice. (Note that this applies to more situations than just the one you're in.) Now, if they ask a question that pertains to the business, such as: 

That was the correct response. An even better response would have been "I look forward to receiving your offer letter; please email it to blah@blah.com and I'll give it my prompt attention. Have a nice day, goodbye." 

The function of severance is to trade your statement that you will not sue for a lump of cash. Are you willing to sue them? Remember, the point of the PIP is to document why firing you is the right thing to do. 

and hand it to your manager. Notice that Company A was not mentioned. If anyone asks any nosy questions about your personal life such as where you intend to work next, then the answer is: 

One day shortly before I left MSFT they gave all of us personality tests, because middle management was obsessed with faddish metrics. Those personality tests showed that, SURPRISE, the people who were hired to build code analysis tools in a highly competitive environment were (1) analytical, and (2) competitive. Being competitive is great. People who enjoy competing should be hired for competitive industries! The trick is to incentivize competing with your competitors, not each other. A question you did not ask but seems germane: 

Of course you do. If you're only going to be comfortable by controlling the behavior of other people, then you're not going to get what you want, because you can't do that. So find a way to be comfortable without controlling the behavior of others. 

Since they are punished for doing the latter and rewarded for the former, it's not clear why you expected otherwise. Incentives matter. I am reminded of a question on another site -- posted by a professor! -- about why so many college students are fixated on their grades, rather than their mastery of the material. Because they've been told their entire lives that all that matters to their future ability to live comfortably is their grades. Why would we expect them to behave any differently? We built these Skinner boxes; we should not be surprised when the human animals in the boxes try to maximize their rewards and minimize their punishments. 

Well, were I the hiring manager I would interpret your statements as "instead of me paying for training to improve my own skills, tell you what, you guys pay me to take up the time of your employees who will mentor me, and in exchange I'll abandon you for my better-paying freelance work after I've learned what I can from you". Maybe that's not what you intended to communicate, but that's what I'd hear. I've had interview candidates who told me straight up that they intended to use the position as a stepping stone to work outside my division or my company; I "no hired" those people. They might be great technical candidates, but if I'm just going to have to find their replacement in six months or a year, it's better to pass on them.