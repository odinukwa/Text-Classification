Was hoping to implement the "options rotate" directive within resolv.conf to have DNS lookups rotate through the nameservers listed in that file. As I understand it that is the point of this directive. It does not work on any system that I have tried to date. It always uses the first nameserver directive in the file and disregards the rest unless of an error. I tested by using a fake DNS python script that mimics a DNS server and always replies with the same bogus 192.168.1.1 address regardless of the request. When placed first in the file it would always go to this server and when placed second it would never go. This is with the "options rotate" directive included in the file. 

mxtoolbox has a pretty comprehensive blacklist checker. I know you already checked but this might be useful to others who come across this post as well. Your best bet - as mentioned by caelyx - is to implement DomainKeys and be done with all this nonsense. Yahoo and Gmail both green light dkim signed email till they have reason to do otherwise (users tagging it spam). If this is at all business related it's a pretty obvious choice ROI wise. An hour or so of configuration and testing equals much fewer issues with spam filters. 

At this point restart mysql and let it run for a few hours; so as to have representative performance values available. Then, as was recommended previously, download and run mysqltuner. Beyond that you may want to configure graphing of mysql performance in Munin or another graphing solution. Hard to know if any anomalies or long term trends in mysql performance exist without something like this. 

In addition to the wrappers option....I imagine this rsync backup is making use of an ssh key. You can restrict a key to a specific source IP or domain. This would be equivalent to a user-to-IP restriction since only that user is making use of that key (if your smart, which you appear). First line of authorized_keys file: from="trusted.domain.com",no-port-forwarding,no-pty ssh-rsa AAAABasdf 

I'm coming from munin and a CPU graph contains data for system, user, nice, etc ALL on one graph. I just installed ganglia and setup the basic monitoring. It appears that each type of cpu data is a separate graph! WTF is this and can I change the defaults to combine these into a single per host? That is my question, how do I combine cpu data into a single graph. Also, can I change the layout to something closer to munin's day-week side-by-side layout? I'm trying to be impartial and give ganglia a chance. ;) 

You could write yet another python script that downloads the python scripts into the proper local dir/s via http or ftp. urllib/2 modules would work just fine. This would work over a LAN or WAN so that may be helpful in the future. To keep the script simple you leave the scheduling logic to windows. Just add the new script to the Windows Task scheduler folder and schedule it weekly or whatever. If they were all on an AD domain I would recommend looking at the package deployment features available through group policy. You would add all the scripts to an msi package and push it out as you wish. 

The files are not re-installed though. What needs to be done to get yum to reinstall the files? UPDATE: Did an strace on the yum install and it appears that the file "/etc/pam.d/system-auth-ac" is opened by the rpm install but not written to. Looking further it appears that the file is generated once the authconfig binary is executed. So now the problem is no longer RPM related. I need to figure out what the default command to authconfig looks like for RH5.6 so I can get a normal system-auth-ac file. 

It sounds like you don't so much as want a full list each time the script is run but rather a list of any new/uknown files that are set suid/guid. If that's so then: Get a list of current results: 

Reboot and look for a RAID BIOS/config option (F7, etc) key will depend on RAID controller. Within the RAID BIOS you can most likely re-configure the virtal disk to be a single disk instead of two mirrored disks. This will clear the way to reformating the second drive within windows disk management interface as drive d. The specifics are dependent on the RAID controller, see their sites support section for limitations. Backup first! 

Investigating inventory management software and was hoping to get some recommendations! Tested OCS so far and am almost hoping that there's an alternative that is extensible and has an API. ------- UDPDATE -------- I want an IMS that can be integrated into our existing systems: cobbler, puppet, powerdns, etc. So we don't have certain host data in one database and partially duplicated in another database. I would like for all provision, configuration, and management systems to drink from the data graciously updated within an IMS. I'm kind of amazed that an IMS doesn't exist in any notable web framework. One that could be integrated along side puppet and other favorites. :( 

Any way to force the use of a defined host static route when the IP is on the same subnet and disregards the static route entry? For instance I have a host host: 192.168.1.2 with subnet 255.255.255.0 and a default of 192.168.1.1 I'd like to communicate with 192.168.1.3 via 192.168.1.102. 

There are multiple ways to solve this. You can have a secondary server with just nrpe running. In this way it's acting as a proxy. So the main nagios sends a check through the server running nrpe. Example: From the main nagios server: check_nrpe -H NRPEPROXYHOST -c check_ping -H 10.0.0.3 .... The NRPEPROXYHOST runs the command as if it were the nagios server and submits the results back to the main server. In this setup the secondary server does not run nagios or any bloated daemons. Just the nrpe daemon, the nagios plugins to be ran. This can even be configured on some sort of gateway device and would not necessarily require a dedicated server be deployed. ====== Method 2 would be configuring a second instance of Nagios at the site and having it perform the active checks and submit the results to the main Nagios server. The main nagios server would have all the checks configured with active checks disabled and passive checks enabled. This configuration is a true distributed Nagios as documented on their site. It's quite a bit more robust so if you see yourself having to perform several hundred or thousands checks to these server (every 5 minutes) then this is your best choice. In most instances the secondary server is called a "satelite" nagios instance and the results are usually submitted to the main Nagios server via the NSCA protocol (which is encrypted). The Main nagios server listens for these via the nsca daemon and submits them to the external command file for processing by nagios. The downside is you have to have the config files on two servers and make changes to both sets of configs. You have to have these hosts as passive on the main server and active checks on the satelite server. This is scalable to no end and the preferred solution for installations with tens of thousands of service checks to be performed. Also, look at building the configs on a central server and keeping them in revision control and have a script on the nagios server periodically checkout the new configs and reload nagios. ===== Method 3 DNX, $URL$ an awesome project that patches Nagios so that it can send checks to be performed to "node" nagios servers. To the best of my knowledge though this configuration does not allow you to pick and choose which checks are executed by which node (node affinity), or if they are NOT to be executed by a node. So this solution adds distribution more than it does a proxy into a secondary network. 

Sounds like your on a tight timeline, so you should probably get some help with this one. If you do choose to go it alone you should know that most VPS accounts are a bit stingy on RAM. It's common to use a web server besides apache for this reason. Lighttpd, Nginx, etc are good choices. Stick with Ubuntu or another distro, they will have all the packages you need available in the default repo. I run CentOS but I end up adding additional repositories and setting repo priorities. Since you aren't all that familiar with such and are on a timeline you should probably stick with a debian based distro at first. Work on getting the site up under an alternative domain such as dev.domain.com so you can test it before the switch date. Only change one thing at a time and test it fully. Don't add APC, additional mysql options, ssl, all at once. I honestly believe that this could be a great learning experience in the long run but disastrous in the short. Everything I know about hosting is due to three years trial and error..not three weeks or so. Good luck. 

Most common solutions are NIS+NFS or LDAP+NFS. NIS is easier to set up than LDAP, but LDAP supports multiple OSes and is more flexible in that sense. I would recommend using one of these two since both are well documented and established in the industry. 

Nginx or lighttpd are sure bets. You can configure Apache to be more competitive by using the mpm-worker module in place of prefork. However, this requires configuring php to use fastcgi or the like; that's probably a smart idea in and of itself. I personally run wordpress using nginx with php-fpm and it's fast as hell. There are some optimizations you can make regardless of which web server you choose. 

Create a shell script that find and compares the results to the previous list. The list is just a variable in the script. You could have it be it's own file though. 

Well, obviously symlinks aren't going to work and to the best of my knowledge you can't have two completely seperate chroot environments available at the same time. So... if you want to chroot them to their home folders plus the foos group folder then just have all users dropped (chrooted) into /home. Then mount /srv/foos to /home/foos instead. Make sure each users own homedir has proper permissions so that only that user has access to it. In this setup each user will be able to access the foos group folder and their own home folder. They could see that other users home dirs exist, but will be unable to access them. Perhaps someone else has a better idea?