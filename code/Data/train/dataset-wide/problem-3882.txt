No reputable or honest company should or would ever say that to a candidate. I also do not believe that they do not have the money to hire you as per the original promised amount. The first step of the hiring process besides who you want to hire is how much you can afford to pay them (employers always have a salary ceiling for a job role). If they're being honest, then it sounds like a poorly run company and one you probably shouldn't work for. There are numerous red flags in your question: 

There is no way the recruiter can verify what you tell them about previous salaries. No employer will ever give out that kind of information to a recruiter or new company, so it cannot be verified. Some would argue it is unethical to lie about the figure and I agree it is, to an extent. You need to be realistic with the numbers however. Recruiters aren't idiots, they have access to salary information. If you tell a recruiter you earn $120k a year for the sake of getting a potentially higher paying job, but the average salary for someone of your experience and skill-set is only $90k, they will know. Not only that, but you risk pricing yourself out of a job. If you quote your current or previous salary too high, you could be excluding yourself from the list of potential candidates because the company isn't offering that much money. However, as you also point out, if your current or previous salary was way below market value, you run the risk of not getting the salary you deserve. Many of us have lied to a recruiter about how much we've previously earned, I've done it once before out of embarrassment of how below the average I was being paid and another to get a better salary then what I was previously on. I've never quoted more than $10k above what I was previously earning though. 

I'm sorry for your loss. In the real world, time off is time off, regardless of if it's for bereavement or for leisure. In either circumstance, only your supervisor is authorized to grant you the time off or to decline it. Since you've lost a family member, I also doubt that they're going to decline the request, but in the context of an office setting, the only people that need to know why you're taking the time off is you and your supervisor. Once it's been cleared, then and only then should you make any kind of announcement. The last time I had bereavement leave, I was coming off of a week-long vacation. I had informed my supervisor the instant I knew when I'd be out, and declined to make any public announcements to anyone else when I had came back to work the following day. I had felt like it was handled professionally and succinctly, and the person who needed to fill out the appropriate paperwork was acutely aware of what was going on. If anyone else were brought into that loop, it'd add unnecessary channels of communication since they don't have to do anything while I'm out except their individual jobs; they can't handle the time-off request or anything like that. A lot of people are thinking that the manager was in the wrong here, but I would say they'd only really be in the wrong if they gave you this feedback in the open instead of in a one-on-one setting. Even worse if they jumped down your throat about the matter. Since you're still learning, it's not unfair to expect to get feedback on something like this. It also wasn't unfair for them to say that it wasn't good to announce this to the entire floor. (Note that I didn't mention them saying it was "unprofessional" since you yourself didn't state that they explicitly used the word "unprofessional". I'm sure that they understand what you're going through - or at least can sympathize - and aren't going to chide you for your actions based on that alone.) 

I understand that it is polite to say 'excuse me' after you sneeze, and to say 'bless you' to someone after they sneeze. In situations where someone (possibly) yourself seem to sneeze incessantly, do you need to keep saying 'excuse me' or to say 'bless you' to the other person? I assume that once is usually enough to indicate that you are aware of the etiquette. Is it less polite to say it just once or not to say it at all? 

I think good or bad experiences are defined by how much you learn from them. In a bad work environment there are still plenty of good experiences to be gained. In fact, one of the most common interview questions is to do with the challenges that you face at work, and if you have always worked in an environment where everything works well then it is hard to assess how good your skills are when under pressure or resources are constrained. It also speaks volume for a person to be able to produce good work under trying circumstances, so I would say that it is a matter of being able to separate between things that you have control over (and those that you don't), and also the thing that you can gain from the experiences. 

The same applies for the second question. If I were asked, "What would you do if the network is down?", I'd start by asking these questions: 

Everyone's going to run into quirks or issues when working with another person. The fact that John decided to call these issues out in public is unprofessional and erodes morale outright. 

From an engineer's perspective who may be interviewing you...how am I meant to evaluate your skill or see how you solve problems if you refuse to do so in my presence? Let's not mince words here. I suck at interviews. I was unemployed for about five months because my interviewing was so terrible (from my perspective; I know I'm a brilliant developer but interpersonal communication has always been a weakness of mine). But that didn't mean I didn't do any coding exercises; quite the opposite. I made sure that I met their coding exercise requests, and showcased what I had learned from past experience (including clear documentation of code, READMEs, unit tests, etc). I wanted them to know what they were getting from hiring me; a diligent worker who regarded themselves as a professional and expert, and one who understands what it means to architect the solution, test it, and deliver it in a way that makes sense to everyone. By you refusing or failing to do that, you miss the opportunity to really put yourself out there as a stand-out candidate. I've not heard of many professional institutions hiring someone without asking them some kind of coding exercise. Let's face it - as a developer, you're going to be paid a lot of money to solve problems, and if you don't showcase how you solve (or at least approach) problems, you're not showing me that you're worth what I'm willing to pay, or more. 

A company that has a single point of failure is unfortunately not a good model of business operation. There is only so much a person can do, and the problem with the effort versus reward in companies is that the more effort you put in, the less reward to get (as your effort becomes taken for granted). At the end of the day, if you have raised a resourcing issue that impacts on the deadline and the manager/boss doesn't do anything about it, they only have themselves to blame. There is no real good or bad way to tell him that the deadline is not going to be met, only that you should do it as soon as possible because it will give them more time to work out how to deal with the situation. If you get blamed and fired then be thankful that you don't have to put up with the situation any more. If they end up hiring another person then your immediate problem is solved. Whatever you do, don't procrastinate because it is better to make a decision and spend the time focusing on problems that you can solve. 

I'd be surprised if HR were the ones evaluating a person's competence for the job based on their institution. Actually, I'd be surprised if HR were the ones evaluating a candidate's technical expertise period, but I've heard of stranger things. The long and short of it is, while attending a prestigious college can definitely help propel one's name and/or standing amongst other qualified candidates, that's about all it's going to do. The main factor of whether or not someone actually gets the interview nod is if they actually fit the requirements of the job. The prestigious college may get one a few extra looks during the interview process, and it may also set some predispositions about how they're meant to perform as well, but the main qualifier for whether or not they're competent and capable to perform isn't going to lie in the college alone. As an example, I worked with, then for, a person that didn't have a Bachelors in Computer Science, whereas I do. Irrespective of that, this person was brilliant at their job. They opened my mind to a lot of programming techniques and practices that I most certainly didn't know, and this developer has my absolute trust and respect. There's someone else that I'm familiar with that didn't fare so well in the IT industry, and they've got a few graduate degrees to show that they went through the paces. They're brilliant, but they lean very heavily on pre-baked solutions from frameworks and other places, and are not ones to go out and attempt to remedy a need that the framework simply can't provide for them. 

I would definitely raise this with your manager. If you don't, it will reflect very badly on you (trust me). It sounds like the person you are mentoring isn't taking you seriously, maybe the problems aren't challenging enough or they want to get their toes wet and bite into something a little more serious. If that's the case, then give this new employee more responsibility. If they think they're ready to get into a real piece of work, tell your manager of the fact and then designate them a few tasks. If they fail, then they have no excuse as you gave them the opportunity to gradually ease into the work through smaller exercises. When you train to become a chef, your first year is spent cleaning and cutting up fruits/vegetables and meats. You don't get responsibility instantly, you have to earn responsibility and to me, this new employee hasn't earned such responsibility. They can assist with a meal, but by no means are they ready to prepare one on their own. 

You claim that this is a very low evaluation, but you don't explicitly state if you've been punished or otherwise demoted because of it. Without any tangible effect from these evaluations, there's no way for you to know how to improve, or what's keeping you from getting 90% or above. Talk directly with your evaluator and ask specific questions about your performance. Do not make this out like you want to know why you're getting marked lower than you expect; instead, steer the conversation towards tips and direct suggestions on how you can improve as a professional. Think "professional development" instead of "evaluation". I wouldn't recommend writing a letter or contacting anyone else on the matter, since it could result in more direct and unfavorable reviews in the future. 

I have seen the use of an ash tray that resembles human lungs that makes a coughing noise when you put a cigarette butt in it work reasonably well (it certainly annoys people nearby). It might work as a novel shock tactic for a week or two. 

I think regardless of the actual GPA score, the important thing is to provide some explanation so the interviewer can put it in the right context. For example, a bad GPA score may reflect that you are not good at exams if you can back it up with good practical knowledge and work experience. Alternatively, a good GPA score may reveal some lack of practical knowledge but at least shows dedication to learning and commitment to achieving to your potential. So the important thing is to bring out the positive aspects no matter what the score is, and address the concerns that the interviewer might have with any perceived shortcomings as reflected by the score. 

Take it as a chance to improve the way you communicate your opinions on others' code. Instead of believing that this was intended to reprimand you of your behavior, think of it as a soft prodding that you should be mindful of not just what you say in a code review, but how you say it in a code review. I know from experience that reviews are meant to be egoless and that we don't single out any one person, but it's still people writing the code. Take the chance to ask your manager or lead how they'd have responded to code you found less favorable, and simply improve from there. Make it a focus point for you to build on as opposed to it being something (potentially) negative. 

There are always a lot of unknowns in the interview process, and the thing you would hope is that it is the skills of the applicant that determines whether you get the job or not. I think interviewers don't always have the best idea of what the 'right fit' is necessarily, and to take anything they say personally just makes you feel worse when you face a similar situation next time. There is definitely a big factor whether they know you have applied or not and whether it is the same person doing the recruiting or not. I think the fact that you reapplied for a similar job means that it is of interest to you, and I don't think it can work against you unless there was a specific reason they didn't want to hire you the first time and you need to avoid tripping the same alarm again. If you cannot obtain this information, then I would suggest that you look at this as being a new interview where you have gained more skills and experience as an employee, and that if this is the right timing for you then the rest will take care of itself.