If the standard employee allowance is $90, e.g that's the allowance given to everyone in the company, you are unlikely to be successful, although asking for double the allowance because you're already making considerably less as a intern (if that's true), might be something the company would do. In case, you would simply say "thank you for extending the employee allowance to interns as well, but is there any way to get more since my salary is less than that of a regular employee?" However, if that is the allowance given only to interns, or you are not receiving a considerably smaller salary than an entry-level employee, or if you are receiving other benefits as an employee that are not typically given to interns, then I probably wouldn't push your luck. There's a fine line between looking too demanding and needy versus actually being needy. If you cannot get to work any other way besides driving and parking, and you cannot afford to make up the difference on your own, then you might want to consider a cost-benefit analysis of taking that position in the first place. 

If your objection is to the fact that they could call your current employer for a reference when you haven't told your current employer that you're looking for a job, then that's on you. The fact of the matter is that probably more than anything else, a prospective employer wants a reference from your most recent work, as that reflects your skills, outlook, work habits, etc now. If you have not and in no uncertain terms will not ask your current employer to act as a reference, then you will have to be up front with your prospective new employer about that. The fallout from that could be that you are no longer considered, or it could simply be a big negative mark against you from which you'd have to recover in other ways (by being extra great). As an example, depending on the type of job, level of responsibility, and so on, if I can't talk to your most recent employer, it's very likely that I will just drop you from consideration all together. For example, if I am hiring you in a management position, and at your current company you manage n number of people and are responsible for x number of strategic initiatives, and you have told me about all of this but I can't then verify or get a different perspective on it, then I'm not going to move forward with your interview because that's not a risk I'm willing to take. 

You can certainly ask for months to consider the offer, however most employers would scoff at that sort of thing. In my experience, managers want an answer as soon as possible so they can start planning your onboarding. What is more common is accepting the offer with a start date that is a while away (this is especially common for students about to graduate). This would, technically, buy you a few months' time and give you the ability to change your mind (or not!) about accepting the offer. Keep in mind that if you accept an offer and then renege, you may end up burning bridges. In my opinion, politely turning down the offer and explaining why you're turning it down is the best bet. This will let the boss know that you did go in with the intent of accepting, and therefore weren't wasting their time. This also opens up the possibility of the boss saying "Well, if your circumstances change, let us know. We'd love to have you on board." 

Yes. Simply set up a meeting with both supervisors and ask them who you should be reporting to (and be prepared to hear that you should be reporting to both of them). Ask if you can send out just one update email to both of them instead of two different reports every time, or if all three of you can have a once a week/month/whatever meeting so everyone is caught up to date at the same time. Explain that the less time you have to spend with email, the more time you spend on the project. That said, some managers will still want you to report separately. If that's the case, it's what you'll have to do. Many managers, however, will be thrilled to hear that someone else is handling it, and will say "Just report to person X" This is especially true when one person is a Project Manager while the other is a business manager. 

This is something that only the new company or agency can answer. If the agency gave you more time, I'd definitely use it. It might give them a bad impression of you, but if they revoke an offer because of their own ridiculous deadlines, good riddance. (It may not feel that way, but trust me, you don't want to work for a company like that.) 

I'm a big fan of regular 1:1 meetings (both having them with my direct reports and with my own manager) and from my perspective it's perfectly fine to ask your new manager if he or she would like to schedule 1:1 meetings with you (although he or she should really be on that already, but let's give them the benefit of the doubt that they're just settling in to their position). Your manager could always say no, which would certainly tell you something about your manager and his or her management style, but there's no harm in asking. Should the manager initiate it? Yes, I would expect that. But, if they don't, and you really want the opportunity to speak on a regular basis, you should say so. When you ask for a standing meeting, it's important to show that you have a reason for it, which gets to the second part of your question. Absent a "formal" structure for the 1:1, but with the goal of providing some sort of agenda so as not to waste anyone's time (yours or your manager's), you could follow the general organization of the daily stand-up meeting used by practitioners of Agile: what did you do yesterday, what are you working on today, what blockers do you have in front of you. Of course, such detail is not really appropriate for a weekly or bi-weekly 1:1 with your manager, but you certainly could provide an overview of what you did since the last time you talked, talk generally about what's in front of you, and then talk about any issues or concerns that you have. All of that would start what should be an organic conversation between you and your manager; if you do 1:1s regularly you'll probably find your own way into a conversational structure that works for both of you and provides good and useful information. On a related note, Rands talks about 1:1s from a manager's point of view, and how they're the chance for a manager to listen for updates, vents, (and possibly head off) disasters. All of that assumes a regular and useful semi-structured conversation in which you can both speak honestly, and again, from a manager's perspective (although not your manager), going to your manager and asking to implement something like that to foster a good working relationship is a good thing. 

I feel like a lot of managers might be upset if you bypass all of the hiring procedures to contact them directly; the procedures are in place for a reason, after all. If there's any doubt about whether the position is still open, I'd go through your recruiter. If the position is closed, you've wasted their time by making them read an email about a position that is already filled; if the position is still open, you might have saved the manager time/effort by contacting them directly (they may not want to interview you again, and they can stop interviewing other candidates.) I would go through the recruiter, but I tend to play it safe. 

I would say that it does apply here. If it wasn't in the job advertisement, it's not an automatic deal breaker for you to not know TDD. That being said, it is a deal breaker when a programmer doesn't test their own code. Check for accuracy somewhere, even if it's not explicitly TDD. This will help showcase your creativity and problem solving, and show that you can work around your gaps of knowledge. (Seriously, even a bunch of comments with hand calculations saying "Program spec says y = a + b, so for a = 1 and b = 2, y = 3. Program output matches.") Put something in the program to show you tested it, even if you didn't test it their way. THEN offer to test it their way. Approach it from a "I did this to the best of my ability, however if you gave me greater detail about your TDD methodologies, I would be more than willing to incorporate them." This shows you're eager to learn and assimilate to their culture. Basically, yes, you need some tests... but it isn't because of the employer. It's because every programmer should be testing their code in some way; if you aren't testing it at all, there's a much, MUCH bigger issue at play. If you can't test it with TDD, admit that, tell them what tests you did as a workaround, and offer to do it their way, if they want you to. 

You have nothing to really lose by doing this since you're already leaving, however it may give your current company a bad impression of you. If you decide to go this route, treat it like a vacation day--schedule it ahead of time, make sure all of your work is in good standing order, and that things won't fall apart just because you're gone. Honestly, it's good practice for when you've left anyway. If you can get the paperwork done in a day, I'd say it isn't a HUGE deal; if it's a week (especially out of a four week notice), it's a much bigger deal. If you absolutely cannot risk losing this new job, this is the better of the two options. 

If it is not your primary position, and there is nothing to be gained by adding it, there's no reason to add it to your resume proper. You will still need to disclose it on any application you fill out that asks you about "n previous positions". However, if it is a position that fills a gap on your resume of some length (e.g. 2-3 months), then add it as whatever title you hold there -- if it is "On-call Developer" or "Developer", or whatever. You don't have to go into any detail about how much you worked or when; the goal of this entry is to show that you didn't have a gap, not that you did great things (unless you did, in which case by all means talk about them). If I'm reviewing your resume and I read that it's not a full-time job (or for that matter isn't a job you've held for very long), I'm not expecting to learn anything from it besides someone invested time in you and you didn't get fired. In other words, not much. 

In a cover letter: "During my time at XYZ Corporation (formerly ABC, Inc)..." In a resume: SuperAwesomeWorker, XYZ Corporation (formerly ABC, Inc), 2008 - 2010 I wouldn't worry about going too far down the list of entries on your resume to correct names of companies, unless it will cause confusion when people attempt to verify employment and find all the paperwork/emails/calls come from XYZ Corporation and you listed only the name ABC Inc. 

What I'm looking for is someone not just out of school, who has been working with Ruby and Rails for more than a year, in a team environment, in a production environment, and who doesn't need a lot of hand-holding. Recognizing that people switch languages either for fun, profit, or otherwise, I'm also quite happy to see resumes from people who have (for example) worked in Java professionally and then switched, or PHP professionally and then switched, or (insert other languages here). But even then, if they've just switched, that's probably not someone I'd rate terribly highly -- they have to make good case for their skills (which for me comes out in their take-home assignment after a phone screen). So yes, I genuinely look for some reasonable number of years close to what I ask for in a job ad, but I also look at all the other factors involved. Four solid years of work in a single language when I'm looking for 5? I'll probably interview you. Only 2? Probably not. Three years in one language and a switch to another? Probably would make it through my first cut, but I'd want to read something interesting about it in your cover letter.