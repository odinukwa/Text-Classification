I clearly don't know what exactly happened, but based on your description my assumption is you spent the game taking the ball away from the other team, dribbling around everyone, and scoring goals. Your colleagues probably think you were acting like a showboating jerk. Your team probably feels this way because you hogged the ball, and the other team probably feels like you were running up the score for no reason. Like almost everyone else said if you want to repair this relationship you should apologize. However it doesn't seem to me like you realize why you should apologize. If you don't understand their point of view and how you should have handled the situation better any apology is going to sound contrived and may reinforce their belief that you're a jerk. For example this isn't productive: "I'm sorry that you feel bad about how I acted during the soccer game. I told HR that I was really good and would ruin the game. Guess I was right..." In my opinion you should have used your skills to enhance the game, instead of dominate it. I know hockey is a different sport but I don't know soccer well enough to pick out a good example. Wayne Gretzky was the greatest for lots of reasons, but I think it is germane that under "Style of Play" in his Wikipedia article they list this quote from Sports Illustrated: 

If you wanted to prove your greatness then you should have done it by uplifting everyone. Once you proved you were a threat then the opposition would have mobbed you. Instead of dancing around them all and making them look like fools you should have sent perfect passes to your teammates so they could be the hero and score. Same bit on defense you should have played zone defense and been a wall for any individual player. Even though you would prevent their forward progress still let them pass the ball away to their teammate. That way opposing players have a chance to have fun too. Of course if the score is close then score some easy points to keep your team in the lead. This way you still show off your skills but you do it in a positive way that shows you want to make the team shine instead of focusing the spotlight squarely on you. I think this kind of thinking will lead to a much better apology along the lines of: "Hey I'm really sorry for acting like a jerk out there on the field. If I had to do it over again I would use my skills to lift the team up instead of show off. My selfishness ruined the game, and I won't make that mistake again." As pointed out in the comments a great closing line would be to offer to buy the next round or two of drinks next time you all go out. After I gave this apology I'd also make it a point to give specific praise to your colleagues whenever you get praised. When your boss says, "Great job doing XYZ" try to respond with something like "Thanks I think that turned out really well too. Janice really helped make it all possible by doing XYZ." This will show that you appreciate the contributions of others, and won't try to hog all the glory like you probably did on the soccer field. 

So, I am the SME in one area, and a backup SME in an area that overlaps. I cover my coworker's (Let's call him John) area while he's on PTO, and he does mine. A few weeks ago, he came by to let me know that he would be leaving the company as a heads up, but asked me not to discuss it with anyone. I kept silent, assuming he would give a customary two weeks notice, at which point we could start planning a shift of responsibilities. His final day is a little over a week away, and we're getting to the point where I really should start talking to my manager to let him know my attention is going to be divided. While the two areas overlap, there is generally enough work to do in both that it will affect my performance trying to cover both areas, I would like to Inform my boss in advance so he can plan. The thing Is, I want to respect my coworkers wishes (he didn't need to tell me). I've asked him about it and he said "He'll let them know" but isn't telling me when. How can I approach this situation? Edit: As per Alroc's comment, dual coverage is a company standard to improve bus factor. Every person has a dedicated backup (most of the time it's a paired backup in two related areas, but sometimes not). Additionally, to my knowledge. I'm the only person he has told. I know explicitly that he has not told our team lead. 

So, I'm considering going out job hunting again, and I've read it's always good to have a portfolio of your work handy. Unfortunately, the results of my work are rather boring to most people (An JavaScript/html calendar similar to JQuery's day-picker, an active html analog clock, etc). Alternatively, I have side projects that are more interesting (an Arduino sketch for a player-guitar, an Arduino sketch for an led grid that simulates light patterns similar to what you'd find on the bottom of a pool under moving water), but less useful in the real world. I'm trying to not be too broad or make a question which only has subjective answers, but I'm also trying to understand what sort of code and projects a recruiter might be interested in. I feel like my utilitarian code is more useful in the real world, but my side projects show more of an aptitude and ability to problem solve. Which would a recruiter be more interested in? 

I really think that the phone interview will just leave you with a Sword of Damocles hanging over your head. While the video interview might be a bit more intimidating for you initially it will allow you to nullify what seems to be a big concern of yours. Always remember that you are interviewing them as much as you are interviewing you. Finding out if they will react negatively to your appearance is something that you should discover as quickly as possible so you can make a more informed choice. At the end of the day you want to work somewhere where you can be both happy and successful. A video conference can be one easy way to separate the chaff from the wheat. 

I personally think that you should go for the Skype call with video. I'm concerned that if you choose a phone interview because you're worried about your appearance you won't have an opportunity to resolve that fear. Best Case with Phone Interview If the phone interview goes smoothly you're probably still going to be concerned about how they will react to your appearance. Worst Case with a Video Call The worst that can reasonably happen is the interviewer makes an off color comment or you get some vague rejection later from an HR type saying they aren't interested in hiring you. Both of these outcomes are actually a gift even though they might not seem like one initially. The off color comment shows you that this isn't an environment that you'd feel welcome in, and no one has time to waste in a hostile work environment. The vague rejection letter lets you focus on other companies that truly value what you can contribute. Best Case with Video Call The interviewer is completely unfazed by your appearance and you move forward in the interview process. Now you've eliminated your appearance as a concern, and can concentrate on how you can add value to the organization. 

While I try my best to make sure that anyone who I may be working with knows I will be out of office anytime I'm out for 8+ hours, I realize that that is a very easily forgotten fact. I've been toying around with the idea of setting my OoO message the day before I leave, to let people know that I will be gone tomorrow and possibly following days. This allows people to ask me any questions they have that may turn into blocking issues while I'm gone. On the other hand, I realize that people see the out of office message and may assume I'm out of office now, which sends the wrong message. So, my question really is, is it common to start the out of office auto-reply a few hours before I actually leave so that people can get any last minute questions in? 

Catess, since you've only put your applications in, I'd recommend not actively persuing one at the detriment of persuit of another. At this early stage, it's great to consider which jobs you'd prefer, but since you haven't been contacted for any of them, it'd be in your favor to make sure and be attentive and respond to all possibilities with equal enthusiasm. The ball will be in your court once you have job offers to compare, but until then, make sure and keep up with any communication and diplomacy with all three possible employers. One thing to keep in mind is in this situation, even an interview does not constitute an offer. Just because you've had an interview with your dream employer, don't skip out on contact with the others until you have the job secured. 

I would suggest leaving these off without further study. It's great that you got some hands-on time with Java, Python, Ruby, and Selenium, but if I were interviewing you and you said you gained valuable in-depth experience with all of these technologies in only a week (you mentioned you were fired from the last position after only a week), I'd be very VERY skeptical, to the point that it would almost hurt your chances. Honestly, I feel like you should leave the position off your resume, and only post it in your work history. If the interviewer asks about it say something like "I was let go due to XYZ, but XYZ has been fixed". Assuming XYZ is innocuous, something like say, lack of reliable transportation, then it shouldn't hurt you too much. It might help get more quality answers about how to approach the situation if you were to post why you were let go as well. 

I think you have gotten a lot of great feedback related to the specific questions you asked the other candidates, but I don't see any real answers that address your stated question: How do I tell if a set of interview questions are too hard? One obvious way you can answer this question is by soliciting feedback from other developers. You said that you are the only developer in your organization but that doesn't mean you don't know or can't meet other developers. You can ask for feedback from friends who don't work at your organization. If you don't know anyone else that slings code for a living then you could go to a meet up and try talking to someone there about the task. Finally you could consider running these questions past a recruiter. Of course there may be a conflict of interest there if that recruiter starts sending you applicants who perform amazingly well on your test but don't appear to know anything else... Another direction you could go is search for interview questions online. This does two different things. First it might give you ideas about the style of questions other people are asking. Secondly you can compare the relative level of difficulty between common questions and the questions you're asking. You might think that this route might encourage cheaters since these questions are "known" but anecdotal evidence seems to show that even though FizzBuzz is incredibly well known a significant number of people still fail when asked. Finally, I would argue that "too hard" is really relative to the kind of person you want to hire. Don't dumb down your questions because you feel bad that people aren't passing. Instead set your questions at a reasonable bar to screen out people who aren't going to be successful in the position. I'm certain that a position at Google where the applicant will be designing advanced search algorithms isn't going to have simple questions like "What is one difference between a POST and GET request?" Instead I'm sure they are asked advanced algorithm and machine learning questions. Having questions that are too hard for people who aren't going to be successful, but demonstrate an understanding of the principles they will need to be successful is ideal. So my advice is to not worry too much if the questions are too hard. Instead worry about what are the basic principles you are trying to screen for that a candidate needs to be successful. Once you've isolated that the only real hurdle is making sure your questions are clear. That being said in my opinion there is real value to finding out if a person will ask for clarification before building a grand solution that solves the wrong problem.