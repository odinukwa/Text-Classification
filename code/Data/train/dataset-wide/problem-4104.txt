You wrote, "during an annual pay review"; so of course another alternative is to wait until your next annual review and suggest a pay rise then, based on what you did (including get another certification) during the previous year. 

Implementing that requires the source code to be checked in, the build instructions published. I'd suggest you do that as a semi-emergency. Allow the developer no write-access to the production server or the build machine (to verify that production code is buildable from version control). After you've done that (after you know that the source code is in version control and the build instructions are published), then other developers can think about inspecting the source code and helping to maintain it. Note that Get Rid Of Indispensable Programmer As Quickly As Possible was published by Gerald Weinberg in 1971 (so, really, everyone ought to know this by now). IIRC the original quote is, 

That's a contract that I might be disinclined to sign. For example as an employee I wouldn't expect to be sued if someone finds a fault in software that I've written (because I expect them to test it too, etc.) ... but as an contractor (perhaps a.k.a. "independent supplier") I'm not so sure. What if they were sued by their client, and they tried to deflect the liability onto me? They may allow you to tweak the wording of the contract slightly (before you sign it, assuming your request is reasonable and they want to employ you). For example I once altered a contract so that it said I could expect to be sued in the case of "gross negligence", instead of just "negligence" (I decided there's a difference between negligence and gross negligence and the latter would be more difficult to prove). If you are going to be self-employed, here's quite an interesting video I watched recently on the subject of legalities -- Mike Monteiro: F*ck You, Pay Me 

In thinking about it, these questions are probably better answered on $URL$ but I'll answer here anyway. Maybe someone will move the question across to that site. Salary/Travel Expenses The amount of travel expenses are on the low side for US government recommendations for Georgia as per FY 2018 Per Diem Rates for Georgia. However these rates are based on staying in a hotel and buying every meal at a restaurant. But if you are staying for an extended period in your work location, you should be able to obtain a lease on an apartment etc that will be cheaper than a hotel room - which also allows you to cook your own food for cheaper prices etc. You need to look at hotel and apartment prices in the location that you will staying to see if these travel expenses make sense. The salary of $USD1000 is very low for the US, but it may be more than what you would get in Mexico. And this is the equation the recruiter is looking for - pay you more than Mexico (but way less than the US), but charge the client less than US rates and profit from the difference. It is up to you to decide if this is acceptable - however I would try and push for more money. But remember that the more they pay you the less profit the recruiter makes. But as per the comment from bharal, you will also be gaining valuable experience. In addition you should be making valuable contacts that could help you move-up to a better paying position (EG you might be able to get future employment without using this recruiter and hence make more money) Visa I am concerned that the recruiter has been vague about the class of visa you would require, because if you are a Mexican national you are potentially eligible for Visas for Canadian and Mexican NAFTA Professional Workers 

Is it okay to slightly modify a forwarded email? It may be acceptable or preferable to block-quote instead: for example you could write, 

be able to talk about work-related topics (software development) be understood understand what I was told in reply. 

While my question may be easy, I don't know how long it may take them to answer. I think it depends on whether the question (not the answer) is quick. If the statement consists of two sentences, one statement and one question, then it's a quick question to ask; for example: 

Your other problem is apparently that you didn't discuss or obtain permission to do what you did, before you did it: because he's not expecting how much you've changed. If I were senior developer reviewing a rewrite, one of my worries might be, "How can I tell whether the rewrite broke existing functionality?" Do you have an answer to that question, e.g. are there defined system tests or acceptance tests, which the new version of the software is still passing? If so then it's easier to review the new version on its merits, based on its superficial appearance and structure: e.g. to assess whether it's more modern, more maintainable, etc. If not then you need to determine via code-inspection whether functionality has changed; which might be difficult if it's a complete rewrite. 

I look like I'm 11 years old if I go clean shaven There isn't a single correct answer to this question, but one of the "right amounts" is "none". It doesn't really matter whether you look like an 11-year-old, any more than it matters whether you look like a woman or a man. It used to matter socially, or perhaps at school. But at work I presume they're interviewing you for your experience, personality, knowledge, insight, ethics, cooperation, and so on. they will form their own opinions about my age If you're in a State or COuntry where you don't put your age on your resume (e.g. because job discrimination based on age is illegal i.e. "ageism"), then they ought to be assessing your experience and so on instead. Isn't your age obvious anyway, if your resume includes the year when graduated from school, and started your career and so on? 

I would not do such a thing. I would not ask, and if i would be asked, i would not answer and potentially inform my former employer. Rationale behind:"how do we negotiate?" is actually more critical than pricing information. "How do we negotiate" involves the information whom you have to address to influence the decision. 

I will reformulate the question into something more general: Does an expectation onto the first task for an beginner which is not matched make him bad in his job? No, I would not draw such a conclusion from this observation. 

My answer is significantly shorter than most answers here: It is the function of the HR department to perform this process in a way that there will be no repercussions against the company (and as such, you). If you have the feeling that you already said something which may be interpreted as a discriminatory action, tell this to HR (in the "i have the feeling, that he interpreted this differently from what i meant" way), and ask HR if you should switch this person to another manager.If HR decides to let him with you, it is their responsibility - ask them for advice and let HR guide the process and follow theirs course of action When i am confronted with such a situation, I only discuss the very specific problems which I had in a specific situation with that person, and ask him/her for the a small improvement (for example informing co-workers/me when there is a problem/delay). If he/she does this reliably at some point, the next thing can be fixed - or not, if he/she does not. 

If you do and want to bring it up, a time to do it might be in answer to my question, "What was your most recent job?" or "I see a recent gap in your CV, do you want to tell me about that?" or "Why are you looking for a job now"? Then you might reply something like, "I've been ill. I am recovered now (but need to remain on the drug, which is why I'm overweight). That will (and/or doesn't) affect my ability to work, so I will (and/or won't) need 'accommodation' (and immediately continue on to other, 'positive' topics without stopping for approval before returning the conversation to me, so that I have something else to talk about with you)." Timing it like that might help to fit the information in parenthetically, with the types of topic which are usually discussed in an interview: recent experience, motive for working or not working, ability to work, any accommodation needed, and so on. This advice is off the top of my head, imagining myself as interviewer, and not based on extensive experience of this topic. 

I reckon that, once they've heard the question, then they can decide whether and how they want to answer it immediately. The question they're asking is whether it will take you quite a while to even explain what the question is. 

This sounds like a case that wants Architect Also Implements (my apologies for the short, link-only answer). This (documented "pattern") is one of many "organizational patterns" in Coplein's Organizational Patterns of Agile Software Development. How you do that depends. Do you have a team leader? Is the architect your team leader? Who (if anyone) has told the architect to do what he is doing? Without a leader (or if you are a leader) could you schedule a meeting to talk about it face to face? Instead of having layers like that (where you need to consume each other's work), (my experience is that) it might be better if everyone becomes a "full-stack" ('senior') developer where each developer acts as a more-or-less independent team, or maybe pair programming (i.e. teams-of-two), each being assigned their own features to develop and/or subsystems to maintain. Use code reviews (and maybe design reviews) to improve the "bus factor" and to ensure that everyone's work is maintainable by someone else. A benefit of full-stack is that people use commercial APIs (to external system interfaces) as much as possible, rather than home-grown internal APIs (to libraries developed in-house). In that scenario you might still need an architect e.g. as a chief developer: 

Basically I would want to know about the stability of the workplace and whether working at a client's site adds inconvenience that you don't know about. EG the company office may be 5 minutes from your home, but it would suck if the client is 2 hours away and you have eat that extra commute time yourself. 

You are probably not covered by workers compensation. So if you are injured on the job you will be SOL. There is no paper trail of your wages. Thus you have no proof that you have been paid at all (or even the correct amount) for your labor (and/or that the correct deductions have been made). You are now screwed by any situation that requires you to show proof of income and/or taxes. When your employer ditches you, you would not be able to collect any sort of unemployment benefit. If you continue to work under the table it could reflect badly on how future employers perceive your integrity. At the end of the year you will be responsible for paying all the taxes that were not with-held from your wages. Unless you are very strict with your budgeting you will find it hard to come up with the needed cash at tax time next year. You are also not paying into Social Security, so you can nix that when it comes time to retire. 

Any job that is based on support will always have issues of work/life balance - you will always be waiting for the hammer to drop at an inappropriate time. And that even includes your School Computer Technician suggestion. Imagine this .. it's 4:30PM on a Friday and some aspect of the school's systems goes down. They have to be up and running by 8AM Monday, but you treasure your 40 hour week, so you tell your boss that you will get right on to it .. at 7:30AM on Monday morning. Can you see that flying? And the systems will crash at 4:30 PM on a Friday of the weekend that you planned something big. That is guaranteed. And of course Bill's comment reminded me that scheduled maintenance/upgrades is never at a convenient time. See my example below. That leaves the development side of things. But that can be hit or miss depending on how aggressive your boss is with deadlines to complete projects and the sort of company that you work for etc. But eventually you will be pulling an 80 hour week at some point in your life to make a deadline. But hopefully you will look for a company where that is uncommon during your interview process. Finally you could try to "be your own boss" and start your own company. But that would guarantee that you don't have a work/life balance! 

Reasoning: The management dealt with it as it saw it fit. Trying to deal with something which is your managers business against your managers wishes is inacceptable for a senior employee. I think the manager should do the following: 

Very careful - dangerous ground - for one of your contacts acknowledging such a goal, you need to be friends, and they need to like risks. Could be much easier to found your own company together and after a decent time change to another company, under your own responsibility. Taking over teams from other companies without their consent may not sit well with the original employer - when a single employee leaves it's very difficult to argue that he "can take away a customer with him". If a team leaves and take customer contacts, projects etc. with them, the original employer will make very sure that they do not take any IP with them developed when they were still employed. Be prepared to walk out naked - no codebase, fewer customers, and possibly an HR-related lawsuit on your back. 

I only express dissatisfaction with my colleagues opinions on such matters when their opinion clearly puts them outside the constitution. If they stop being objective on a too short timescale, i rather just make a mental note to give them a task requiring balancing between interests 

1-3 are thing which you have to address directly with HR and/or the person responsible for safety in the company. 4 you could mention to your colleague 5-6 are thing which you should discuss with your boss once. It's his task to determine the right steps. Don't make accusations or draw conclusions, just state the facts; don't suggest actions. 

From my reading of this your boss is a bully who is trying to control you. In which case nothing you will do will ever satisfy him. While stress is to be expected in a new job, as a new graduate and at a start-up (what a combination), there is no excuse for demeaning people like this. I have experienced working for such people and no matter how good you are, it is still a soul destroying experience. The only recourse is to change the boss either by management replacing him or you replacing the company you work for. 

And while my main job is cranes at the moment, yesterday I was at a company that prints secure documents for a certain government and was installing a custom C#/WPF/SQL database/IIS Website application. This app collects data from computer vision cameras that monitor the inkjet printing onto documents that you might call a SSN card (if you happened to reside in a country that uses the term SSN), and tracks the overall print job quality. After doing stuff like this I have trouble imagining working for a pure software company that does B2B websites and internal data shuffling applications - I like it that if I screw up my job something can genuinely go "boom"! 

(Second anecdote) At least you don't have someone faxing documents to the phone on your desk instead of the correct fax number - I've had to deal with that too. 

It sounds like you are dwelling on the past. I'd suggest that you treat him like a regular employee. If he does his job, then fine. If he does not do his job or want to do his job, you replace him. If you can't replace him due to nepotism, then that is where you have a real problem. At that point it becomes him or you. In addition, during the 3 years that you have been general manager, what has this boss's friend done? Has he remained the same, or has he turned his life around? Unless you know the answer to that question in detail (and it sounds like you may not) I feel you should be giving this guy the benefit of the doubt.