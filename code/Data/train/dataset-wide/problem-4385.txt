Assuming these are all legitimate mistakes that are the fault of the employees and not the process, a system of peer accountability seems be in order. If you have a regular meeting with the employees to review tickets (e.g. projecting them on the whiteboard), and point out if they have not been updated in a regular enough time. If you have regular stand-up meetings, where the root cause of a problem repeatedly comes down to a certain developer forgetting a semicolon, that should be embarrassing to the programmer and provide the incentive him to change. I don't like meetings anymore than anyone else, but making the team members accountable to each other for results and their performance in following through with certain things will in most cases make them more likely to do it. 

I would say that once you have established yourself in your career (with a few notable exceptions) where you went to college will not count against you. On the other side, I was lucky to have attended a college with a good reputation, that have had several alumni in decision-making positions in the town in which it was situated. It would not be completely honest of me to claim that having the name of the university on my resume didn't mean it got a more generous look than it would have otherwise, and that this never meant the difference between me getting past a certain level of screening and not. I have even been told before an interview that a manager likes graduates of my school. It really shouldn't matter, and I really would like to be able to say that it doesn't matter. But that's not entirely how the world works with human beings. A hiring manager is more likely to trust someone from his alma mater or a similar school than one that he doesn't know. 

Testing isn't about productivity but rather repetition As a developer you're very conditioned to look at things from an output perspective. Testing really doesn't satisfy this. It's mundane and boring work - but that doesn't mean that you're not doing good work when feeling unmotivated. The unfortunate reality of testing is that it is very repetitive. The joy in it has to come from breaking something, or finding a flaw - which happens rarely with good code. Focusing during testing? Write test cases. This sounds like it's adding extra work onto an already boring task but I find as a developer that I'm very achievement focused. If I have a series of test cases to work through then I feel that sense of accomplishment each time another one lands on the completed pile. Additionally having a record of the testing performed is important, and doing this is highly recommended. Find the joy in bug hunting! Finding a flaw in yours or another developers code is a raw learning experience. I find it quite enjoyable taking an interesting bug to another developer and hunting down the cause together. You shouldn't find them often but when you do it can be a great learning experience that you start to seek out when testing. 

This also suggests to me that the terms are inflexible. You're likely to create a situation which you will have to later back away from leaving you right where you are now with the same two options. That said, is this a deal breaker for you? If this is enough that you would happily stay at your current employer over taking the position then it's worth at least making the attempt with them as you have a fallback you're happy with. If not and you're leaving anyway then I don't think this would be a great first step with the new company. 

The main purpose is to avoid wasting both the candidate's and the company's time if the candidate would not accept an offer at a certain level. If the position is for 60k, and the candidate's lifestyle demands 80k, it's better to know that up front than to go through the whole interview process only to find this out in the end. It's a pre-filter. EDIT: Of course, that's the good, or benign reasons they might ask you that question. The bad, or malevolent reason would be to get you to commit to a lower salary than they are willing to pay. 

The usual social sanction for a joke that falls flat is lack of laughter or silence. Hopefully, this would be sufficient not to try it again. If the pattern continues, you can tell him you'd prefer he not joke about your height. Of course, for a certain class of folks, this would be an invitation for a steady stream of jokes about your size. Your description makes him sound like he's more clueless/ignorant/insensitive than sadistic, so he may respond well to the feedback, but you would know better than I would. 

See above, and my disclaimer -- I have never ordered room service in my life, regardless of who's paying, since I am viscerally offended at the idea of paying $18 for scrambled eggs. But this may not be the norm. -- I'd say the biggest variable is how your actual interview went. If you did well, then people probably won't be looking for reasons to knock you down. If you did poorly or fair, then submitting questionable expenses could make you the butt of water cooler jokes at the company for the next several years. Remember that guy who couldn't even code fizzbuzz, then expected us to pay for his room service and airport lounge and a replacement for the bus ticket he lost? 

Does it mean anything? Ultimately it doesn't mean much. It sounds like a standard way of ending an interview. However! I do think you should always have some questions prepared to ask the interviewer. Do your research! This question is asked to gauge your potential interest in the company. It's always a good idea before an interview to research what you can about them. Typically I do this by looking at Glassdoor, Google and LinkedIn profiles of employees that I can find. As you do this you will inevitably discover some questions that you wish to ask and this is the time to do so. ... but if you can't Understandably that's not always realistic when the company is small or not much information can be found online. In these cases I defer to saying something along the lines of: 

It's difficult to know exactly how to present this (as I don't know the full situation) but if it is as you say it is then he's likely going to hear this from multiple sources so state your piece, and don't talk him into a corner. You want him to know that you're frustrated but then give him opportunity to do something about the situation. Keep in mind that I wouldn't expect much in this situation. The company would have considered these positions before relocating the office and a lot of these fall under your personal responsibility. 

The recruiter is your buffer between the business and yourself. You seem concerned about being too pushy - but a recruiter helps to avoid this. They're going to let you know where you stand if you ask and you should expect that your follow up won't go to the company unless the recruiter thinks that it's necessary. I would send a follow up to remind them about your application. Use the original e-mail and reply-all on it, this will retain the context for them and save them from having to go looking for it themselves. Something casual along the lines of: 

Disclaimer: I am the type of person who will take public transportation even when told explicitly that taking a cab is acceptable because I tend to be frugal and sort of enjoy the sense of adventure. This is probably not the norm. From my perspective, this is what I would conclude from each of the items, if I got word a candidate had submitted those expenses: 

Write kick-ass code. If you do an awesome job coding, then there will be fewer fires to put out, and it will make everybody's life easier. When it does, you may need to do a bit of self-promotion in demonstrating how what you did helped. Metrics may be your friend here. If you still encounter resentment even after you have demonstrated how your work is making their jobs easier, then you're probably in a toxic environment and have another set of issues. 

In my experience, what these types of request typically mean is that management has already decided on certain cuts, and is using the suggestion scheme to provide some cover. Then people will make suggestions that don't impact them. Non coffee drinkers will suggest getting rid of coffee. Single people will suggest cutting family health benefits. Whatever cuts management had in mind, chances are someone will suggest it. Management can then implement the cuts as the result of ideas coming from the front lines rather than imposed from above. I'm not saying that's what you're doing, but how this action is likely to be received. 

Why do the minimum? Applying for work is a competition of skills, background and work ethic. Doing whatever you can to stand above other candidates is how you win the offer. Is they're asking for a portfolio then chances are that a great deal of people applying for these roles are doing this, if they weren't then this employer asking for it means that they likely are now. What does the recruiter expect from me? In this case the person requesting your portfolio is a recruiter so it's likely they've been asked to do so by the company in question. Since you don't know whether they're expecting a summary of projects or a code based portfolio then I would produce both as you can always re-use these in future interviews. How do you actually do this with JavaScript? I've interviewed a number of JavaScript programmers who have provided a portfolio of work. Typically they will send me a Github account to look at their work however it's also not unusual for front end designers to bring me a printed portfolio of their work to an interview. I remember this, and react to it quite positively. How to produce a printed portfolio as a backend developer? Understandably you are more of a backend than front end guy so it's difficult for you to produce a very visual portfolio for interviews. To overcome this I would write a summary of the projects that you've worked on and some of the design decisions you've made. Basically a timeline of projects that you have worked on along the general lines of: