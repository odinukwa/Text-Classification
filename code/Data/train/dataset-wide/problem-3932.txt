Updating for clarity. Is there anything they would find based on the fingerprint results that would make them question their decision? For 90% of the people out there I think the background check / fingerprint scan is merely a formality. IF there is anything that you would think is questionable that would come up on the background / fingerprint scan you have two options. 

You should disclose it immediately to the HR professional you're working with so they can see it in context rather than being surprised by it. You should reach out to the HR professional before the background check is completed and ask them to clarify their process. Unless you're applying for a FED job, in which they are doing a formal SF86 background investigation for clearance, you may be entitled to the response that the clearinghouse provides the organization you're applying with. 

I should add that when I first started working on it, it didn't even compile. And when I got it to compile, it failed at runtime. It’s a nightmare. The problem is, the management has received assurance from whom they inherited it, and from previous “gung-ho” developers, that it “works,” so have invested significantly into it... And now the buck is passed to me. And they want it in production in about 2 months. When I suggest that previous developers may not have been entirely honest or understood the product entirely, management sends mixed signals about “just get it done,” and “why isn’t it done yet” ... and “we’re not really sure it ever worked” to “it was working when you received it,” and “we’ve never seen it work” to “it’s already in production.” [EDIT: pasted most of the next paragraph into the TL;DR section.] Management also suggested that perhaps it’s so complex that I can’t understand it, and posited the mistakes are by design; that the original developer is so meta, that what looks like mistakes are actually strokes of genius. Granted, I’m no genius, and maybe that is the case: to which I offer my previous observations about the very fundamental issues I found. Perhaps there’s politics at play above my level. 

First, decide if you really want to be an insider. Are these generally likeable people with whom you want to work? Assuming they aren't rampant sexists, a likely explanation is that they are just trying to vet you. They want to know who they're working with and whether they fit in. The fact that you're a woman and relatively inexperienced are what make you different. Noticeable differences are the most obvious candidates for why someone may not fit in with a certain social group, and naturally the first things to be scrutinized. From mhwombat's answer: 

I'm in school right now, and in a couple of years, I'm going to look for work as a software/systems engineer. The thing is that right now, I'm 32 years old. With age being a potential issue, where is age less of an issue? What type of company/culture should be absolutely avoided? Any warning signs? Some backstory, if you have the time. (TL;DR, I'll be an "old" man in a new job, and it could suck.) I've got a couple more years to go before I graduate with a BS (Yes, I know degrees aren't everything, but I have none at all, except for an Arabic AA.) in CompSci, as well as several AASs (in Computer Programming, Web Development, and Comp Sci) and several certs (C++, Java, OracleSQL). Right now, I'm just not comfortable putting myself on the market because I don't feel yet I'm even an "average good" programmer, though I'm putting tremendous effort toward that. On the bright side, I didn't start out software/tech ignorant. I was in the Marines for 8 years, finishing the last three in Special Operations Intelligence (Signals), and did contracting for a year in a company that specialized in networking centric geolocation. Got laid off and went back to school. Then was hired as a contract worker for Google for over a year and a half. I've had plenty of computer science exposure and OJT in programming (also UAS systems, remote sensing, GIS, database design/implementation, and SDRs), but have only really dedicated myself academically to Computer Science/Software Engineering in the last year, after realizing this really is what makes me happy, and where I seem to have the most suitable talents. Thing is, I'm going to be a 34-35 year old entry level employee, working with 22-24 year olds starting fresh as well, but they are all shiny and new(and may actually have more experience in tech industry), which may make me look bad. People my age will have over 10 years experience and will not be my peers, likely having senior positions in company. I feel it could be a situation where it looks like I'm experienced because of my age, but when I behave like a new guy, which I will be, I'll be treated like an idiot, instead of a new guy. I've got a family to worry about, so this is really stressing me out. 

You're going to have to get over your image issue really quick. Yes you are younger than those you are hiring, yes you have a lack of real work experience. You also have another big problem, and that is lack of leadership experience. What you need to focus on is what you do know, and that is apparently the business you run. You need to define your "Leaders Intent" what it is that you want people to do for you, and then hire those people who understand that vision. You're going to have to come to grips that what you don't have in experience you will make up in learning OJT (on the job). You should expect adversity due to the fact that you are young, and you will have to compensate for that by being resilient when you make mistakes. What other industry / job puts the onus of leadership on individuals barely out of High School...and with little job experience. The US Military. Specifically look at the Marine Corps...you have 20 year olds who are platoon or company leaders, who are responsible for the success of their mission, but people's lives. You're only responsible for their paychecks...and the success of your business. Study the traits of those individuals, look to that environment for your own leadership skill development and I have a feeling you'll do just fine. Hang on...it's going to be a fun ride ;) 

TL;DR I inherited a project. Long story short, the code I am tasked to maintain is bad. So bad, in fact, the product is not only incomplete but non-functional and has been for years. How do I communicate to management, in a way that isn’t embarrassing to them, in a way that doesn’t make me look lazy or stupid, that a valuable product is in a dire state? 

Clarification: this question vs technical debt This question has to do with me challenging long-standing beliefs about a product without committing career suicide. Rather than strictly be about dealing with technical debt, there is this: management suggests that perhaps the code is so complex that I can’t understand it, and posited the mistakes are by design; that the original developer is so meta, that what looks like mistakes are actually strokes of genius. Perhaps another reason this isn't quite about technical debt is that the difference between 'genius' code and technical debt is that management communicates that I'm not supposed to alter 'genius' code, and that 'genius' code isn't technical debt: it's the secret black magic. I wish management would think of it as technical debt. Instead they don't. Management isn't concerned with the time, cost, or money directly –– although that is some concern. 

Definitely don't do this. It is still somewhat uncertain to what extent they are being friendly but rude versus outright disrespectful. If they are just being buttheads, you will immediately set a combative tone. If they are truly being misogynist, you are attacking their professional weaknesses, which will likely backfire. Besides them becoming defensive and putting you further on the outside, they have 15 years of experience to throw back at you. 

Details Most of the time, I wouldn’t be nervous communicating this to management. Unfortunately a long line of piece-meal maintenance by people, some of whom had little development experience, who only “touched” the code long enough to add a patch here or there, then move on, has painted a picture to management over the years that the project is just one step away being production ready. That is woefully not the case. A short list of issues in the genius code I have come across in the ~1.5Gb code base are... 

In the interest of transparency the only risk mitigation you have when it comes to a background check would be knowing what they are looking for. Which can work 1 of 2 ways for the company doing the background check. 

Many companies will ask for clarification of things seen on a background check. My FED interview was extensive, and any civilian background check was never close. Most of the time they were just provided records found from Intelius. Worrying about a false positive with a background check is not something I would be concerned with, unless they aren't using a defining element to ID you, such as your SSN or taxId. I've had friends in the GOV space have a real nightmare with GOV background process, because they were a John Smith JR, and John Smith SR was a real piece of work. When the GOV search for John Smith they pulled all of SR records and attributed it to JR (names obviously changed here) ...but unless you're in that type of scenario, see the above for risk mitigation factors. Once you feel comfortable with their process and have a comfortable success factor certainty in your mind, then resign your job, otherwise I wouldn't until you've come back cleared. 

What are the nature of the meetings and complaints, and who are the outsiders? Sometimes newbies can be overzealous, and a team "casualizing" these events is just a reflection of the importance of the issue to the company. That said, they could also be heavily disrespecting you and actively parking the bus on top of you. It really depends on the specifics, but they're really begging for a lawsuit like that.