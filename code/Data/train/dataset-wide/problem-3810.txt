First don't feel guilty for saying no. You aren't saying you are not going to do the work, you are saying to follow the process. Further, these people know what the process is, they are trying to game you into doing their work first because they know the way tasks are prioritized in the official system will not get their work done first. This is like asking daddy for permission after mom has already said no. They know what they are doing is wrong, but they want what they want with no consideration for the other projects in the queue. You have to consistently push them back to the offical system. If they need a higher priority, tell them who to contact to up the priority in the official system. Remeber the offical queue serves several purposes, it measures your performance (which means the unoffical stuff is killing your performance measures). It also serves to show when more people are needed by the length of the backlog. Skipping the official system is the worst thing you can do. 

Sitting quietly in a technical discussion is a sure way to get marked as junior or incompetent or not caring about the end result in the minds of the others in the meeting. With 4 years of expereince, you are an intermediate dev not a junior one and starting to speak up and participate in design and technical debates is part of that. So you need to fix this immediately. First you can ask questions about what was said. Don't worry about looking foolish, you actually look worse by being too quiet. You can says things like, "That seems like an important point, but I am not sure I understand completely what you are saying." Or you can say, "How does that relate to..." and bring up some earlier point. Or just ask the question outright, do not Google in a meeting unless you want to bring up a source that you will present to refute what is being said becasue you think it is wrong. Next you can be the person who gets the discussion back on track when it is not progressing. You don't need a copmlete understanding of what everyone is saying technically to do this. Just say something along the lines of: "We seem to be stuck here between what Harry is saying and what Jane is saying. Maybe we should try to list out the pros and cons of each side." Then get up on your feet and go over to a whiteboard and start listing out the pros and cons you have heard for each one and asking others to provide them once you write down a few. And if you hear a proor con that you don't understand, say something like, "Can you explain a little more why that is a pro?" Sometimes the problem to resolve isn't so much technical as it is business related. So sometimes you need to get the conversations focused on what problem are we trying to solve and how important are the relative factors in making that choice. So while Gary might be right that XYZ will do a better job of solving the problme, Steve's solution might be more feasible in the time you have available and will only be 5% less effective. Now the deciding factors commonly are things like: Price (for off the shelf stuff) Developmment time Effectiveness of the solution at solving the problem Interoperability with existing code/hardware Deadlines or Time to Market Maintainibility Acceptability to the business (they aren't going to buy a new Oracle database when they have SQL Server even if the Oracle solution is better) Risk of failure If you set the priorities of these types of items and can get management agreement as to what they are, then evaluating the different technical possibilities is much easier. This is a step best taken before you start to argue technical details though. So try it first when you have a meeting before people get to making technical proposals. As a hint, what management will set as the highest prioriy is very often not what the devs arguing the technical issues would see as the highest priority and most technical disagreements come down to each party placing a higher priority on something different. That is why it is helpful to set up the priorities of various decision factors as part of the intial discussion of what the problem you are going to solve is. This also helps if you have some people who would like to make business decisions based on what new thing they would like to learn insted of the business needs. Focusing on the real business priorities will help people make better choices. 

I see no reason why that would make a differnce. When I hire, I am concerned about your qualifications not how you use social media. 

Let's be blunt. Your office has a policy that this sort of thing cannot be done at work. Your co-worker is aware of that policy and that others have been fired for not following it. He knows he is doing wrong or he wouldn't be trying to hide it from you. This sort of thing is not only a sexual harassment problem but those types of sites tend to be where viruses that can disrupt your business can be picked up. So he deserves to be fired and he knows it. He has decided that his sex life is more important than his job. Why on earth would you feel guilty about bring up the issue to his boss? If you want to try to salvage him, you need to do more than hint. Tell him outright that he has got to stop accessing that stuff at work. But it is highly unlikely he will stop. He already knows he can get fired. Most likely if he knows you know, he will take steps to make you look bad so any accusations are not believed. Based on what you said, this is not a nice person, he is sleaze with an anger management problem. He is not in any way trustworthy. You might want to check out the company's written policy on this sort of thing. You could also get in trouble if you knew and didn't say anything. If that is in the policy, don't risk your own job. We had something happen in one job where someone said something bad about her co-workers on Facebook and not only did she get fired, but everyone who was a friend of hers who had not reported it got into trouble as well although they were not fired. 

As a rule of thumb, once you graduate from college or have at least a year of work experience, anything you did in high school is pretty much irrelevant. I will add an exception if you did professional programming while you were still in high school. As far work experience, anything older than 10 years can go. As far as technical skills, anything you would hate to get hired to do, should get eliminated. 

If you are now a senior manager, you have probaly learned now that you should be able to effectively work with anyone whether you like them or not. However, your former boss is likely to be fairly unhappy at this development. You may need to havea plan in your back pocket of where he could be moved to if he does not want to work with you. You need to sit down with immediately and talk about what you expect of him, why you are retaining him on the team and how the new relationship will work. Acknowledge any problems you had in the past and how you contributed to them and what you have learned since then. It may be possible to salvage this relationship if he is willing to try, but if his attitude is negative at the end of this talk or if he after the talk starts making public problems for you, then get rid of him as soon as you can. This does not necessarily mean fire him, if there is somewhere he can transfer to to save face, that is fine. His talents may be good but they are useless with a bad attitude. He needs to be aware that you are willing to restart the relationship and that you respect his abilities, but he also needs to realize that his own attitude will dictate if he can keep his job. Don't keep him if he is a snake in the grass. The problems he will create will far exceed any technical abilites he can bring to the group. The choice in the end is his, can he get along with you or not. I've seen this play out several times at work and it it all came down to the attitude of the employee. If he was willing to work for someone who used to work for him and who he disliked at that time, it will work out fine, but if he isn't the best thing for you, for your team, for the project and ultimately for him is to move him elsewhere in the organization or fire him as soon as possible. 

Yes it is likely they will. Most companies that state this is their practice actualy do these things which are all pretty standard employment practices after all. You will likely need references; at this stage in your life, college professors will be fine. 

You have to learn to compartmentalize. You are not friends when you are at work. You may be called on to do things that will make some of these people unhappy such as monitor their Internet usage. You may be called on to provide information that may lead to disciplinary action or even firing. AsS a network admin that is part of your responsibilities. If these people are friends first and co-workers second, you cannot effectively do your job when they two come into conflict. At work, you must be willing to choose your work responsibilites over your friends. If you can't do that, you are quite frankly in the wrong line of work. Talk to your friends and tell them that you need to behave more professionally at work and that you need to distance yourself from them at work and why. Real friends will understand. I have had close friends whose work I have had to criticize or get corrected and vice versa. We are still friends though because we are adults who understand that at work, work needs come first. Note this doesn't mean that you can't be friendly in your manner or even have personal conversations. It means that you can't interfere with their work (through spending too much time fooling around, through practical jokes causing work stoppages, etc.) and you can't let the friendship stand in the way of your own job performance. BTW as a network admin, you are supposed to be inherently trustworthy. Do not ever do something illegal or unethical at work (or somewhere that you repesent your company as well as your self.). This will result in a loss of trust and that is the one thing you cannot afford in your field. Not only will it get you fired, it will get you blacklisted and rightly so. The ability of your company to stay in business is largely affected by your ability to behave in a trustworthy manner. 

Let me be blunt - your job isn't to keep learning, your job is to perform. Yes in IT we do need to learn new stuff to keep up, but that has nothing to with the actual tasks you are asked to perform. Companies don't pay for people just to learn and they actually don't care if you learn anything if you do the work you are assigned well. You went to a new team and haven't earned their trust through performance yet. Why on earth would they want to assign you more work if you have made mistakes in what you were given or if you are continually asking for work that you don't already know how to do? Assigning work to you is a risk and it is apparent from their behavior that they don't believe the risk is worth it. Now clearly some of this is because they do not appear to be the types of people who see value in mentoring and part of this is due to your own poor performance and your inability to play office politics effectively. Truth is though, when you are junior or new, the onus is on you to adapt to them and not vice versa. If this isn't how you would run a team, then fine, don't run a team that way when you're the PM. However, you are not and you need to adapt to how they do business. And you need to get out there and do some serious fence mending before you get fired. First action is to be meticulous in the work you do for them from now on. No serious mistakes at all and no minor mistakes if possible. You have the time to do things right the first time. So do it. No excuses. You have to impress them and you haven't done that so far. There is more latitude for mistakes once you are trusted. There is none in your current situation. This includes doing things the way they want them and not the way you would prefer if there is a professional disagreement. This is not say you can't disagree professionally ever, but you can't until you gain their trust. If you are as you say the only person with the right background to be assigned to the project, then there must be tasks that you are qualified to do that they are not. Ask the PM to be assigned to those tasks. They brought you there because of a particular skill set, so ask for tasks relating to that. DO NOT UNDER ANY CIRCUMSTANCES mention wanting to learn new stuff or needing to learn new stuff to do a task. Concentrate on helping with the skill set you currently have until you are trusted. Talk to them about how and when they want you to communicate with them If the senior turned Lync to Do not Disturb, that is a sign that you were being a pest. This is not the way to earn trust. You need to have sensitivity to their schedule and needs as well as your own. Do ask for work every day and ask the PM not the senior dev. If he tells you to ask the senior dev, then ask him and when he doesn't give you any work, tell the PM that you are not getting anything and to please assign something. Volunteer to do the tasks no one else wants to do. Yes this is scut work, but it has to be done and if you do it to an acceptable level of performance you will build trust and you will be building a basis of having done them favors that entitles you at a later date to ask for favors in return. You may very well need to clear the air. Right now, you know they don't appear to like you or want you on the team. What you don't know is exactly why that is or what you need to fix to be a better fit for this team. Sometimes, it is not that they dislike you but that they are just too swamped to handle the extra task of bringing someone up to speed. Or perhaps you have made some mistakes that made them lose trust or maybe they just didn't want another person on this team. Or maybe they don't actually know what skills you have that can help them out. They may not even know that their actions are bothering you or that you aren't delighted to have nothing to do. They may hate your personality or think you are too pushy. Who knows what they think. But you can't fix a problem until you know what it is. So I suggest you tell them that you are concerned about how you are doing since you don't seem to be progressing to more important tasks and then ask for their feedback on your performance and what you need to change to make it possible to contribute more fully to the project. What you hear back may be painful. If they were happy with you, there wouldn't be this issue. Some of what they say may be true and some may not and some may be a matter of having different perspectives. What ever they have to say, hear it out without any defensiveness or attempt to respond until you have heard everything and had a chance to process. You can't fix what they don't know about, but even if you disagree with their perceptions, they aren't going to change until you know what they think and then make a plan for fixing the perception, if not the actual performance. You have to be aware of perceptions as much as actual performance because they are going to judge your performance based on their perceptions. In judging performance, perception is all there is. This is why people who quietly work in the background and never have an issue fail to get the rewards they deserve because no one above them perceives the work they did as important or difficult. It is why some people get rewards when they don't appear to many others to have contributed much. They have taken the time to manage the perceptions of those above them though and so their bosses think they are great. In the long run, while you have to try to fit into the team the way they run it, not everyone is a good fit for every team. You may or may not succeed in turning this one around. At some point, you need to look out for yourself and move on if the team isn't working for you after you have tried to really make it work. I am not a fan of the "run away at the first sign of problem" mindset that some people have, but you also don't want to stay in an environment where you are not happy and they are not happy with you and you have genuinely tried to fix that. In this case, it is not your problem that they would lose the client if you left, so don't feel guilty. If that is actually true, then it is up to them to make sure you are happy.