Can anyone advise on the best way of doing this? Is setting up a dedicated SMTP server on the Exchange server (not a separate physical server) the right way of going about this? EDIT: Note this is for Exchange 2003. There is a post on setting this up in Exchange 2007 which appears to have recognised the frequent requirement to do what I need. It doesn't give much detail on 2003 though. Can anyone expand? 

I've further developed the code so that it now accepts a comma delimited list of properties and writes them to a delimited file. 

I have a situation where computers in some of our remote offices from time to time lose the ability to use our DNS server (in head office) to resolve hostnames. The offices are connected via VPN using Cisco ASA 5505 (VPNclient config rather than Site to Site) connecting back to an ASA 5510 at head office. Ping to the IP address of the DNS server works. But nslookup will get a "no response from server" message. Computers in other locations can use DNS fine. This is an intermittent problem. One day/hour it works, another it doesn't. Other offices connected in the same way work when another doesn't. No config changes have been made on routers around the time we see the problem. The DNS server that drops out for the clients is on our private address space in the 172.16.0.0/12 network. The ASA 5505s and the clients behind them are each in a 10.6.x.0/24 private address space. Each ASA 5505 has its DHCP server configured to assign addresses and DNS config to clients behind them -these are generally Windows XP clients, with a growing number of Windows 7. The primary DNS is our one in the 172.16.0.0/12 space, the secondary is 8.8.8.8 to allow access to the internet in case the VPN tunnel drops for any reason. Some users have reported that the problem goes away after doing a repair connection in Windows XP. I think this could be caused by the DNS cache being flushed as part of this - the Windows DNS cache makes the intermittent problem look less so because it caches failed lookups as well as successful ones. However, it is possible some other aspect of Windows is involved. Windows 7 clients have also had the same problem. Any pointers on deeper troubleshooting, or anyone else found this? 

Good enough to start with. Surely your VPS vendor will be able to upgrade your VPS if you find you need more - all you need to do then is reboot to get the extra memory. 

PSEXEC is the tool to use for this. Not TELNET. You say PSEXEC gave you a headache. But TELNET clearly isn't working - give it another shot. 

My organisation delivers a number of applications via Citrix which on the whole works very well. However, some applications require uploading of files from the users local Windows filesystem. The experience of this is very confusing for users. They do not realise that the file dialog invoked from a Citrix application is showing the Citrix server filesystem, and are understandably confused when they can't find their own documents. Citrix does provide access to the local filesystem through drive mapping - C: becomes "C$ on Client(V:)". However, the My Documents shortcut then goes to the user folder on the server. How have other people tackled this problem? Is there anyway to automatically map the My Documents link in the Citrix file dialog to %CSIDL_MYDOCUMENTS% on the client computer so the users don't have to navigate through this foreign looking file system? We are using Citrix Presentation Server 4.5, but happy to hear about solutions that work on more recent versions since others may face the same challenge. As if that wasn't fun enough, some of our users are on Macs. The C$ on Client mapping actually maps through to the root of the Mac filesystem, so it isn't a lost cause. Has anyone done anything smart for Mac clients in regard to this? 

One might imply that there are multiple subnets from the diagram by the inclusion of routers which often indicate the boundry between two subnets, but they don't have to. They would almost certainly indicate multiple broadcast domains. All the IP addresses could belong to the 223.1.0.0/16 network. Without knowing what subnet has been configured on each host you can't say for sure from the information given. 

I guess you are using the hostname to access your server, and in DNS this points at the Binatone's IP address. When the Binatone gets requests from the inside, it doesn't do the port forwarding. You either need to access your server via an alternative name, IP address, or make the DNS name resolve to the internal IP address. The hosts file change suggested by @slimsuperhero is the simplest way if you are the only person working on the web server. If there are more people then you probably want to do something with internal DNS resolution. 

I know that each of these things needs to be appropriately rated for the equipment to which it is connected (although I am not sure how to calculate the correct rating). The offices will generally have the following equipment (in varying quantities): 

I am designing our vSphere farm - we'll be migrating from ESX 3.5 to 4.1. I plan to set up a new farm using ESXi 4.1, and move the Virtual Machines on the 3.5 farm into it by shutdown, then import. In ESX 3.5 there is no distributed networking, so each host has a vSwitch connected to my SAN NICs, and a port group for the vmkernel. In vSphere (ESXi 4.1) I have the extra option to set up a distributed vSwitch and distributed port groups for vmkernel to access iSCSI storage. Is there any benefit to this, or should I stick to non-distributed networking for iSCSI. 

This is one of those situations when you doing your job disrupts someone else doing theirs and vice versa. Sure you could burn many hours trying to figure out a technical solution, but talking to each other and finding a suitable time will be cheaper and more easy to sustain in future. If they really need zero downtime, then you need to know so you can invest in that, since there may also be costs related to unplanned outages that are unacceptable. If they aren't bothered about that, then they should not be demanding you don't do your job! 

Depends on the specifics of your environment, and what resources you have available. If this is a public facing web server, you should look at locking down access at a lower level than the scripting engine, or the Apache server - i.e. some sort of firewall. That could be a firewall running on the OS, or between the server and the internet. If the server is not available from the public internet, then you are probably good with Iain's suggestion. If this was a *nix box, I'd set up iptables to restrict access to everything, then open up specific ports to specific IP addresses/subnets as required. You can then layer further security on top of that - but if you want to restrict on IP address, IMO the best place to do it is at the point the traffic hits the server, not the HTTP service.