Memcahe is a service that runs in the background and you can connect to it using php's memcache module. Any record that you store in your memcache, has a flag which will let your memcache server know when it has to remove your record. Take a look a this. It should be in your php code, You can add all your records in memcache server and set their expire time to one day for example. All records in memcache are being distinguished by a key. Now in your PHP code, instead of sending a request to your database, at first you can check memcache to know if it's storing your record by sending it your data key, or your data has been removed due to it's expiration. If the record is expired now it's the time to create a query to select data from database and storing it in your memcache server again. 

The problem was because of repositories conflict, which some of them are storing newer version of mySQL and some of them are just holding their old, sure-to-be-stable versions. I disabled those repositories and kept only the ones which are holding latest stable version of MySQL and problem fixed. Thanks for your help! 

I have a VPS with CentOS and I'm facing a very strange behavior by Apache webserver. I started this server with 50GB of disk space and soon I ran out of space so I asked maintenance department and they added another 50GB as a new hard drive. So I created a new partition and mounted it in and I moved all my website media files to this place and at the end I created an SymLink like this: 

Today, I ran out of disk space once more and they did added a new hard drive with 100GB capacity this time. I just wanted to do the same as I did for but this time it's called . 

I think manual for memcached covers your needs. But remember you cannot get the records that you've stored in like you do in your database by command. 

Any ideas? Edit: Ok, now it stopped saying ssl_error_rx_record_too_long and just says "Firefox can't establish a connection to the server at doo.". It loads up and works in Chrome, IE, Safari, Opera. Just not Firefox. What is up with that? 

I'm trying out mod_spdy and I've run into a problem - it seems to be incompatible with AJAX requests and mod_php as in this: $URL$ The solution seems to be to run php scripts through fastCGI. Now my first question is, why is that? Is there maybe some sort of a workaround? Is this incompatibility just temporary? I would not want to switch the whole production server to fastCGI just because of this. What would be the advantages/disadvantages of that? Also, I do not understand why it needs https. Why can't a simple, let's say static, website gain speed from mod_spdy? I'm looking for plain speculation here - do you think mod_spdy will be sometime available without the mod_ssl requirement, or is the architecture so different that I should not expect it at any time? I hope I'm expressing my thoughts clearly. Thank you for your thoughts. 

both of the sites show Kloxo Default Page as an error. Both of the subdomains, when pinged ping arturas.duomenucentras.lt 

I'm quite a noob at configuring servers. Anyway, I'm running CentOS 5 and I've been meaning to install the php-xml package for my PHP 5.2.17. This server runs proprietary software which requires PHP 5.2 to be installed and not 5.3. Currently, I was using the atomic repo. But when i do a yum install php-xml it want to update all php packages to bleeding edge version of 5.3.6. I don't want that - I want to leave it as it is and install php-xml 5.2.17. So I've downloaded the php-xml package by itself and tried to install it when it threw an error saying: 

I'm trying to set up a server with Kloxo and two virtual hosts. They are pointed to the same IP, but a different directory. Here's the config of virtual host files. They're in different files, and included in the main httpd.conf file. NameVirtualHost *:80 is uncommented. arturas.conf: 

However, the upstart job on Ubuntu 11.04 ( or ) simply waits (hangs) indefinitely without outputting anything. The strace isn't telling me anything, but if anybody cares to take a look: strace -fv start mysql I would like the upstart job to just report an error and terminate rather than hanging. How do I do this? (Background: I have an EC2 instance with an extra EBS volume to store permanent data. If the EBS volume is not available at boot time, the system hangs waiting for mysql, and I cannot even SSH into it to fix the problem -- so now my instance has become completely unusable. I would like it to just continue booting, even without a MySQL server.) 

This is working fine in general. But sometimes the volume is not mounted, for whatever reason. In those cases, mysqld fails like it should: 

Yes, you need to run ntpd. My clock was 18.5 seconds off on an EC2 micro instance (running Ubuntu UEC Maverick) with 5 days uptime. After shutting down and starting again, it was back to normal, so there seems to be some kind of drift. This is despite saying , by the way. I'm not sure why it's not working. Installing the ntp package has solved the problem for me. The clock stays accurate, and there's nothing suspicious in the syslog that might indicate a conflict with Xen's clock synchronization. (It uses ntp.ubuntu.com as its server. I'm not sure if there's an NTP server in the AWS network that I could use instead, but the Ubuntu server will do nicely for now.) Update: I've recently observed that on my (newer?) instances the clock stays accurate automatically, without ntp running. Judging by the comments, this doesn't seem to be the case for everyone though, so it's probably still best to use ntp just in case. 

You are right, the Ubuntu EC2 EBS images don't come with swap space configured (for 11.04 at least). The "regular" instance-type images do have a swap partition, albeit only 896 MB on the one I tested. If some process blows up and you don't have swap space, your server could come to a crawling halt for a good while before the OOM killer kicks in, whereas with swap, it merely gets slow. For that reason, I always like to have swap space around, even with enough RAM. Here's your options: