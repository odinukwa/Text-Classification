Probably a big problem is that your code does not handle ties. I will leave that to you, as it is pretty easy. 

It's really just performance. There's gotta be a better way to do this, but I can't think of a single way. 

Since you said that Step 6 takes a lot of time, and is mainly executed in the method, why don't we simplify it? 

After all, who wants to do that? I don't see any point in making a separate class for finding the deepest node int the tree. Why not just put it under one class? There is a better way to do it with recursion: 

Challenge 3: I don't quite understand challenge 3... From the new comments added and after looking at your code, I have come up with... Some things to note: 

In the case of roots, to find \$\sqrt[z]y\$, \$f(x) = {x_n}^z - y\$, and \$f'(x) = zx^{z-1}\$, resulting in: $$x_{n+1}=x_n-\frac{{x_n}^z - y}{z{x_n}^{z-1}}$$ 

This way, programmers using it has a choice of being able to give less information, and add it later through the methods. Also, this allows them to prevent them from doing stuff like: 

Award Budget Cuts The awards committee of your alma mater (i.e. your college/university) asked for your assistance with a budget allocation problem they’re facing. Originally, the committee planned to give N research grants this year. However, due to spending cutbacks, the budget was reduced to newBudget dollars and now they need to reallocate the grants. The committee made a decision that they’d like to impact as few grant recipients as possible by applying a maximum cap on all grants. Every grant initially planned to be higher than cap will now be exactly cap dollars. Grants less or equal to cap, obviously, won’t be impacted. Given an array grantsArray of the original grants and the reduced budget newBudget, write a function findGrantsCap that finds in the most efficient manner a cap such that the least number of recipients is impacted and that the new budget constraint is met (i.e. sum of the N reallocated grants equals to newBudget). Example: 

Time complexity: O(n^2) Space complexity: O(n) Time complexity: O(n) Space complexity: O(n) I have the following questions regarding the above code snippets: 1) How can I improve the time and space complexity of my code? 2) Is there a better way(lesser lines of code, better data structures) that can be used to improve the code? 3) Is there any better approach to solve this question? Reference 

There is a similar line in , and a lot of lines after the function declarations. Let's go format the rest of the code: 

Of course I didn't include the numbers in the description... I am sure there is a better way to do this. I just did a simple solution, where I add all the numbers and take the first 10 digits. 

The can be thrown at . You now can just use your original approach, but catch the specific exception: 

How many warnings do you have? ANY of them means bad code. In this case, some of your variables are unused. Remove them. 

Why the "A" in the middle? I would remove it completely, as it both reduces readability and is doesn't add anything to the meaning. Same with all the other ones. In 

Here, I suggest you do instead of . It is a matter of preference, but I think is easier to understand. 

(And yes, add your and methods as well) This way, your code can be faster as implementing a with a can slow you down, because a also has to deal with and more complicated s. I like the fact that you did . Most programmers would (or at least I would) use . Here: 

Constant is constant and you can find it in Excel documentation or in object browser in VBE. 2) Use temporary string[] array Writing to worksheet cells one by one is inefficient. Work with string array and fill final array at once into worksheet. You can initialize array: 

I guess you thought about avoiding of method, not you mentioned in title. I can't test your code because I don't have either COM port nor motor. I would like to give you some general tips how to improve your code. Let's implement some SOLID and DRY principles. I would start with class Motor which will represent your device. You can implement for example singleton class for this purpose. This helps you to separate your motor logic from other logic such is user interface. I can also imagine your port settings as a part of application configuration. Motor.cs 

I am not experienced in serial port programming, but I am pretty sure that event SerialPort.DataReceived should be used to invoke subscribed method as you do with your serialPort3. I don't know exactly why you are using Thread.Sleep(), because I cannot see method. 

The assignment is not necessary because is already false. About recursion: It is possible. With it, here is the final code: 

Is there a more efficient way of implementing what I am doing here? Are there some bad practices in there? What is the time-complexity of the methods? (Just want to find out) 

I am not sure if this is the formatting problem in copy and pasting from IDE or it was like this in the IDE in the first place. To correctly format your code here, you can copy and paste from your IDE, select all your code, and press or click the button at the top of the editing pane: 

I don't see the initialization of ,, or . If they are class variables, that's fine, as long as it is meant to be a class variable. If they are outside the method just so that another method can set the values and have the current method run, then it is not okay. If they are class variable just for the method, have them as method arguments. Here: 

Never import the full package. It is considered bad practice to do so. Instead, import what you need and only what you need. Instead of just reading a file then printing it, why don't you create a method that reads all line of a file and returns a list of all the lines? This way, you can do more with the result: