Your problem is one most likely caused by windows security software and can be resolve by following two methods 

The column is memory utilized by SQL Server database engine in MB. You can put this query in stored procedure which would run at defined interval and give the output to you Edit: The script you wrote in question is already giving you information about memory utilized by various databases. What else do you need it seems correct query to me. Again IMO there is no point in taking action based on how much memory each database is utilizing the value is might change continuously and you cannot draw any inference regarding performance after looking at database utilizing more memory. This happens because you run a query which requested a large page read and that pages happened to be from particular database so its not any issue its what memory is designed for to cache as much possible to avoid any physical reads. Again its better monitoring memory at instance level than database level. I would also say if you have set max server memory correctly considering every aspect in picture you should not worry much about memory. You would be going in wrong direction if you are going for threshold. Why do you want to set threshold if certain database or object utilities memory. Its totally normal for database to use memory as set by max server memory limit. Again no body can tell you threshold value. You should focus on monitoring costly queries. Its highly unlikely memory spike will occur because when SQL Server utilities memory it only releases it when SQLOS asks it to do so. So even if you set a threshold your alerts wont stop because SQL server is not going to release memory under normal condition Please let me know if you require further information 

Session ID 210 was granted 19G of memory. This is blunder. just consider a scenario if 5-10 such queries start running. Can you also add output of 

The startup process is Just keep monitoring it, eventually it will complete. Also as stated rollback process can get blocked and can incur waits so keep monitoring that as well. 

The counters should not be taken for a moment collect it for period of 8 hours or so and please run it when load on system is on peak. You can use Performance data collector set 

The answer to the question "how much memory SQL Server would use" is, as much as it can. For that reason its always advisable to put appropriate value for max server memory so that buffer pool is restricted. Please don't use task manager to get SQL Server memory utilization it wont give correct value in case when SQL Server service account has privilege. To find how much RAM SQL Server is using please use below query 

You cannot and should not come to conclusion that SQL Server is facing memory pressure by just looking at one perfmon counter, this is just not correct. You have to rely on other perfmon counters which I am sure you are aware. Now for your question, since both are same this means the SQL Server memory requirement is balanced as of now and its quite likely that SQL Server is not facing memory pressure. In most cases I have seen that on steady system target and total server memory are equal and I have always found out that when they are same it means currently there is no memory pressure. 

With confirmation from Pix(from Chat) the correct way to remove cumulative update is to use instead of using . The way to remove updates is documented in Installing Updates from Command Prompt. The script would be 

There are couple of things to note here. The database will only be accessible by query seamlessly and would allow connection if all three phases of recovery has completed. The three phases are analysis, redo and Undo(sometimes if DB is in consistent state after redo an UNDO phase would not be required). In enterprise edition the database would come online after second phase (this is called Fast recovery which was introduced from SS 2005 onwards) and you would see database as online but still internally third phase, the UNDO, phase is going on and would be accessible completely only after third phase completes. What I mean by completely is For fast recovery, a query may bump into one of the locks being held to allow fast recovery â€“ in which case it will have to wait for that lock to be dropped as UNDO progresses.Please read more about Fast recovery In standard edition database would only come online after all three phases have completed. You can read more about three phases of recovery You can check status of database using sys.databases view select state from sys.databases In errorlog if it is written for particular database that Recovery is complete then you can be assured that database is online and can be accessed EDIT 

I can see from the question that you have . There was Bug in SQL Server 2012 which forced PLE to plummet but that was fixed in . Now since ** SQL Server 2012 SP3** has been released I suggest you apply SP3 and see if the issue subsides. 

This statement is only true for SQL Server 2005 to 2008 R2. Page allocation >8KB is not done by buffer pool. The allocator which does page allocation for buffer pool is while allocator which does allocation for memory pages >8KB is and memory to this is allocated outside of buffer pool. For SQL Server 2012 there is which does allocation for both pages <=8KB and pages >=8KB 

You can find similar blog related to what you were asking. You can also use undocumented xp_reagread command 

You can query DMV sys.dm_db_persisted_sku_features to see what all enterprise features you are using. 

Believe me this definition is incomplete. It describes it in form of time which is not a complete definition. I have always noticed that it is measure of I/O activity on server. The greater the I/O activity the more volatile would be BPool, thus fluctuating PLE. 

NDF is secondary data file, By default it will not be created unless we create the file while creating SQL server database or manually create it after database is created using AlTER DATABASE statement. SQL server by default will create one primary data file and one log file. If it is not visible in sys.master_files means you have not created it. Read more about database files and filegroups $URL$ To add secondary data file please see $URL$ 

There is corruption in your SQL Server database column is LOB and may have VRCHAR datatype. Index ID 1 indicated problem with Clustered index so I guess minimum repiar options repair allow data loss might delete data to recover database. Dropping and recreating index will not help.Please dont run repair first. Do you have latest valid backup of SQL server database ? Best possible solution here is to restore from valid backup. How big is your database. Please run restore verifyonly before restoring the backup to check that backup you are restoring is consistent. Although restore only will guarantee that backup is complete and valid in all format. Please read SQL Server errorlog and windows event viewer to find out reason why corruption happened and then take steps to fix it. if you dont have valid backup you might as well try to repair the database using below command