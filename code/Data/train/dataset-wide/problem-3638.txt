I have a web application (IIS 8) on one server (Windows Server 2012) connecting to SQL Server Reporting Services 2012 on another server (Windows Server 2008) that until recently was working fine. About a week ago, it stopped working, and since then, I have not been able to get the system working again. The premise is that my code calls to SSRS to retrieve a report, then serves it to the user (so that the user never has view or access to the report directly for security reasons). The error message in my logs states "The request was aborted: Could not create SSL/TLS secure channel." The web server is reporting "A fatal alert was generated and sent to the remote endpoint. This may result in termination of the connection. The TLS protocol defined fatal error code is 70. The Windows SChannel error state is 105." which says that it's trying to negotiate an unsupported protocol. Fixes tried (and failed): Updated code to force TLS 1.2 Fully patched both servers, and software that doesn't automatically get patched Checked firewall on both servers (it is disabled) Examined and updated the allowed protocols, etc. with IIS Crypto to disable insecure options on both servers. And out of desperation (because it came up in search results and Windows Update notes): Added the LdapEnforceChannelBinding registry entry per MS at $URL$ Followed the directions at $URL$ re security check exemptions Removed the last set of patches from Windows Update 

So, never remove the user , as it is used in Debian to administrate MySQL (shut it down, roll logs, upgrade packages, check existans of user in MySQL, set new user password etc). 

To help you set up a server next time, you should also have a look at automatic installation software. The important thing is that it should be a complete installation and set up without any touch of a human hand until maybe restoring data from a backup and before allowing the server back on the net. It will help you, and future admins, when restoring servers after different disasters, like hardware failures and hack incidents like this. I will also work as a good and up to date documentation of your servers software and configuration. 

You can look for RFC documments when you want definitions and answers about Internet and domains. You find all RFC:s at $URL$ RFC 1591 defines DNS (Domain Name System), TLD (Top Level Domain name), and ccTLD (country code Top Level Domain name). Those are the name after the first dot, that you normaly don't use. So "serverfault.com" is actually "serverfault.com.". The full name of this site is "www.serverfault.com." and has TLD "COM". The domain name "bbc.co.uk" has the ccTLD (which also is a TLD) "UK". RFC 3071 talks about TLD:s and ccTLD:s as defined in RFC 1591, so it would be good to have a look into. You might want to search "IDNA" and "Punycode" to :-) Also notice that any name in DNS can have different resources connected to it. So bbc.co.uk could be a machine and/or a subdomain with www.bbc.co.uk 

In our organization, we have two test machines running Windows XP. While attempting to test a roll-my-own UDP message server, I found that both could receive small messages (under 2k) just fine. However, when I test sending large packets to both of these machines, one receives them fine, while the other can't receive them at all. Both machines have SP3 and both have their Windows Firewall shut off, but one still isn't working. Can anyone tell me where to look for anything that might be blocking or limiting the packet size on a Windows Machine? Thanks. 

Before I take any of these steps, does anyone have any ideas on anything else I can try to get these two servers talking again? 

We can use CTRL-ALT-DEL to get to the task manager, and from there run explorer and other programs to get into things to look, but this is really baffling me and our admin. Does anyone know what could cause all of this to happen at once on so many machines? Thanks. Edit: Seemed to be fine for a week, but it's back. Some machines have varying degrees of the above symptoms. 

We have a number of client machines on a domain that have decided to start exhibiting some strange problematic behavior this morning. All machines are Win XP SP3, fully up to date with patches and symantec av. Several different virus scanners have been tried (separately, of course), and nothing found. The symptoms of the issue are: 

The MAC address can be the same on different ethernet adapters on the same machine. SUN had one uniqe MAC address for each machine. So the ethernet cards for SUN computers didn't have any unique MAC address, the machine did. So when you connected the machine to two different networks, it had the same MAC address on both networks. 

To restore MySQL:s password (or any MySQL-users password) you can use the account. You need to run to get the password for the account. 

I agree with every one here. You should start to learn and set up a working infrastructure when you are not to large. Because then you are prepared when you grow. Depending on what you want to run, I would go for FAI, cfengine and pre-seeding for Debian/Ubuntu. FAI can work with many different tools, so it is a good start for any Debian-like distribution. With FAI (and cfengine) class-controlled configuration, you can easy divide your installations into small modules, which you then can select which to use for each of your machine. In this way, it will be usefull even if you have many different machines. It is actually more usefull, as you will document your installation with these scripts. And when you install on a new machine, you will not forget anything. Yes, you SHOULD have some machines to test on at befor you deploy your changes in a live installation. But with configuration script like this, you will not forget to do any step in the live installation. 

We have a utility scheduled in Task Scheduler on Server 2008 R2 that just ran into an issue I haven't dealt with before. The utility hung up (no activity for a day), and selecting end did nothing to end it, so I had to manually kill the task through task manager. After I did, I tried running the task in debug mode from my machine, and it went through until a dialog box popped up. Once I cleared the dialog box, the utility completed its run and exited cleanly. The utility doesn't have any dialog boxes of its own, as it is designed to run under task scheduler, so the dialog box was a surprise to me. It came out of an API we are using, and I took care of the issue that it presented to me, but now I want to know if it is possible to have task scheduler detect and handle these dialog boxes, or if I need to add some extra code to handle the possibility of these dialogs appearing. 

Have you checked the case differences between the requested file and the file on disk? Don't forget that under most file systems used by Linux, Hello.doc does not equal hello.doc. 

Splunk looked pretty good, but we couldn't justify the price compared to a roll-your-own, so I had to roll up a basic logging server using a UDP connection. Fortunately, a 64k size limit gives me the ability to send 99%+ of my log messages through with just one UDP datagram.