There are certain graph theoretic problems (especially optimization problems), whose solution-subgraph (i.e. the set of vertices and edges)), is invariant under certain modifications (especially modifications of edge weights) of which some examples are 

given a fnite set $\mathcal{P}$ of points on a $n$-sphere $\mathcal{S}$ and, define a function $f:(s,\mathcal{P})\mapsto\mathbb{R}_0^+$, that maps each point $s$ on $\mathcal{S}$ to the $n$-volume $Vol\left(CH\left(s,\mathcal{P}\right)\right)$bound by the convex hull of the image $\mathcal{P}'$ of $\mathcal{P}$, when stereographically projected from $s$ onto the antipodal tangent-plane, 

I was able to find an efficient solution to the problem, when I read that $\hat{B}$$^{-1}$ contains as entries the diameter and the barycentric coordinates of the simplexe's circum-sphere and center. The key observation that occured to me was that the barycentric coordinate of a vertex $v$ corresponds to the hyper-volume of the simplex obtained by replacing $v$ with the circum-center. The resulting "center-simplex" contains all edges of the face, that is opposite to $v$, plus $d$ edges of length $r$, the radius of the circum-sphere. As the same is true for all other simplex-vertices, the relative order of the volumes of the associated "center-simplices" is solely owed to the hyper-area of the "base-face", i.e. the one that doesn't contain the circum-center of the original simplex. 

The term "distribution" is commonly associated with statistics and, less commonly known, to generalized functions. Questions: 

To make this question specific, I would like to restrict it to 4 points in general position and, to calculating the conic section through the 4 original points plus the two jittered copies (it is not required to find a specific kind of conic section through the original 4 points anymore). 

Any pointers to articles or blogs related to the problem would be of help to me. Remark: I chose the preliminary term "churning" as an analogy to the approximately surface-area and volume preserving deformations of the stomach; I am however no native English speaker, so a more appropriate verb may exist. 

The article "Rational Cubic Implicitization" by M. Floater should come close to what you need; the article is available on CiteSeer. 

Remark: unimodal ellipses can also be charactarized by the fact that their evolute is entirely contained in the closed elliptical disk, the critical case being that two of the astroide's cusps are on the boundary. It seems however to be unwritten law not to depict evolutes that do not penetrate the boundary. 

One should however be cautious to use a shortest-path algorithm, that works with negative edge-weights, such as the Bellman-Ford algorithm; there is however no need to deal with negative cycles, because of the physical background of the arc-weights. 

in the original observation $\Sigma:=\lbrace 2^{i+1}-1|i\in\mathbb{N}\rbrace$ and $f:=3k\ $ resp., $\ f:=3k+1$ 

Imagine a 2D curve defined as follows: $x(t) := \kappa(s), y(t) := \tau(s)$; if it were true that a space curve always contains a point where curvature and torsion are simultaneously extremal, then the associated 2D curve (as defined above), would always contain a corner of its bounding box. Even if infinite curvatures and torsions are allowed, counterexamples can easily be constructed: take a space curve, whose associated 2D curve as defined previously, is an archimedian spiral. 

It is a wellknown fact, that Moebius Ladder Graphs have $2n$ vertices, but nowhere could I find any hint of how to generalize them to Graphs with $2n+1$ vertices. Last week I had the idea of giving up the restriction to cubic graphs and arrived at glueing together the two ends of triangle strips with $2n+1$ triangles in the "Moebius manner", i.e. with a twist. The result is 

It is known, that the edge-set of the shortest and of the longest Hamilton tour in a complete symmetric graph is invariant under the addition of vertex weights. When checking the effect of vertex weights on the outcome of different combinations of edge-weights, I noticed that the vertex weights are cancelled, when taking the alternating sum of the edge-weights of an even cycle. Letting $v_i$ denote the vertex in position $i$ in an arbitrary sequence of $2k, k\ge 2$ vertices, and letting it denote its unknown vertex weight, when used in arithmetic expressions; letting further $e_i$ denote the edge connecting $v_i$ with $v_{\left(i+1\right) MOD\ 2k}$, $\ 0\le i\lt 2k $ and, when used in arithmetic expressions, letting $e_i$ denote the unknown "base weight" of that edge, i.e the edge-weight minus the weights of the adjacent edges, we can express the alternating sum of the cycle's edge-weights as: $$\sum_{i=0}^{2k-1} (-1)^i*(v_i+e_i+v_{\left(i+1\right)\ MOD\ 2k}) = \sum_{i=0}^{2k-1} (-1)^i*e_i$$ While this observation is fairly trivial in retrospect, it seems to me that the alternating sums of edge weights of even cycles could be important graph-invariants, especially in the context of the symmetric and asymmetric TSP. As I suspect, that these alternating sums must have been encountered before, I would like to learn of publications that mention those sums. 

The answer is the construction of the De Bruijn sequence by concatenating certain Lyndon words as indicated here or, in this article; that construction also guarantees the existence of the specific De Bruijn sequences you are looking for. A very comprehensible hands on explanation of the construction can found here. 

What can easily be concluded, is that the set of constraints must contain the ones for a spanning tree and thus certain subtour elmination constraints. What also can easily be concluded, is that the vertex degrees must be even. 

I recently faced the problem of calculating shortest paths in undirected graphs in the presence of negative edge weights; I could not find any applicable algorithms via online search. Transforming the undirected graph to a directed one by replacing each edge $e_{ij}$ with a pair of antiparallel arcs $a_{ij}$ and $a_{ji}$ and then applying the Bellman-Ford algorithm is not an option, because egdes with negative weight correspond to a negative cycle consisting of a pair of antiparallel arcs. Imposing the constraint, that the successor of a vertex must not be equal to its immediate predecessor doesn't rule out all negative cycles that contain a pair of antiparallel arcs, and apart from that, leaves open the question of which of the antiparallel arcs should be excluded. After some experimenting I found this candidate transformation of a pair of antiparallel arcs (and thus for undirected edges): That transformation also can't rule out antiparallel arcs from appearing in a partial shortest path constructed with the Bellman-Ford algorithm; it appears to me however, that calculating the shortest path via mincost flow reliably rules out antiparallel arcs from appearing in the calculated path (in the mincost flow version the capacity of every arc is set to $1$ and the cost is set to the arc-weight and using the wellknown flow constraints for the shortest path calculation in the mincost flow formulation). 

I would prefer the Hungarian method in cases, where a simpler algorithm and a simpler data structure seem desirable; that could be the case, if only small instances need to be handled or, if a GPU implementation is intended. Handling m-to-n assignments is also possible with the Hungarian Method via cloning: 

By "Pair Statistics" I understand statics that are based on values $\varphi:\mathcal{P}\times\mathcal{P}\ni(p,q)\mapsto y\in\mathbb{R}$ that can be observed for every pair $(p,q)$ of individuals of a population $\mathcal{P}$, where $\varphi(p,q)=\varphi(q,p)$