I'm relatively new to T-SQL and looking through my predecessors scripts, I found a line I can't quite parse. It's a hard thing to look up on my own. Hoping for advice. This line occurs inside a WHILE loop, but I don't think that matters. I believe functionally, that this is gathering the values from a column across a few rows that share an ID and concatenating them with commas into 1 field. But I don't know what this is called or how to look it up to use it myself. What is this 'x' doing at the end? Can anyone point me to information on this? 

I'm working in SQL Server 2012. I've built out an SSIS package that is made up of a few scripts and 2 data flow tasks. The data flow tasks move data from the local SQL server out to an Amazon SQL server. The whole package runs fine in Visual Studio. I imported it into the Stored Packages in Integration Services, and I can successfully run it from there. However, when I set up a job and run that SSIS package as the one and only step, it fails. The only error message I get is that Step 1 failed. I can't trouble shoot why it fails because it otherwise runs successfully in Visual Studio and even in the Integration Services. I've done a similar project before successfully, and what's different here and where I suspect the issue is in the Data Flow tasks. I suspect that the connection to the Amazon SQL Server is failing, that the password isn't getting properly passed. Again, I've got that information correct in the package, but somehow it's not running with that. Can anyone point me to the way to properly pass the authentication info when the SSIS package is run as a job? 

No not as such, unless someone is doing testing I have hardly seen people manually doing a rollback. The rollback is specified in stored procedures or transactions in which you either want complete change to be entered or nothing at all. 

That hexadecimal job name must have come from job_id column which is present in both msdb.dbo.sysjobhistory table and msdb.dbo.sysjobs table. What does below query returns for the hex job ID 

Frankly this is something I have not worked on but if I were in your place I would take some time before closing the system and devote that time to maintenance activity. Depending on fragmentation suppose you plan is to perform the maintenance task weekly. So on Friday or weekends(as you like it) before closing the system why not give couple of hour to the SQL Server and within that hour perform maintenance task. 

The error message says it all. Restore operation requires exclusive access on database when you are trying to restore it from backup. Since it is not able to get you are getting error message. Since you are restoring on already present database you dont need to use command. Below should work 

I am not saying with surety that you might be hitting the bug mentioned as it requires more thorough analysis. 

Below is reply from Microsoft Team on a This Connect Item which was raised to understand why fragmentation did not decrease even after rebuild. 

There is no direct DMV which will tell you I/O for specific table. I mostly use sys.dm_exec_query_stats DMV which has useful information about query which is taking high Physical and logical reads. Looking at query you can see tables involved if query has multiple table it wont give accurate information but you would know what all tables generate most I/O requests 

Given that the package works both from the Wizard and from Integration Services I believe the server has everything needed to run the package from SQL Server Agent, but I cannot see how to do it. 

I have a two-node SQL cluster (2008 R2). Some of the databases within that SQL instance are mirrored to another server on a remote site, using the High safety with automatic failover. The mirroring connection timeout value for those databases is set to 90 seconds. When I move SQL from one node in the cluster to another node, using the Failover Cluster Manager application's option of "Move this service or application to another node" the databases that are mirrored are instantly failing over to the mirror. This is undesirable behaviour. My reason for setting the mirroring connection timeout value is that I only want to fail over to the database mirror if the cluster fails completely and there are no functioning nodes. Is there any way to achieve this? It feels as though it should be possible, otherwise the concept of mixing clustering and automatic failover database mirroring would be unworkable as every node failover within the cluster would trigger a mirror failover. Thanks. 

Using Kenneth's code, and a few other bits and pieces that I pulled together, I came up with the following code which I think should do the job. If anybody sees any potential problem with this I'd be interested in knowing! 

Is it possible to restore the incremental log backups onto the mirror to bring it up to date and back online, or would you need to start from scratch with a restore of a full backup? Depending on the size of the database the difference could be hours of downtime so it would be nice to know. I'm predominantly interested in SQL Server 2008 R2 and 2012 but other people may be interested in other versions if there's a difference. 

From above definition please note that memory allocations are tracked by clerks. But for practical purposes you can safely assume sys.dm_os_memory_clerks is place to look for memory breakup as used by various components.Every component that allocates a significant amount of memory must create its own memory clerk and allocate all its memory by using the clerk interfaces. Frequently, components create their corresponding clerks at the time SQL Server is started. Please note clerks only track memory allocated to various components they never do allocation of SQL Server memory. 

SQL Server 2005 SP2 is not supported at all. As a fact SQL Server 2005 even with SP4 does not falls under category of normal support however it does falls under category of extended support. As per MSDN Blog We would like to remind all customers that Mainstream Support for SQL Server 2005 Service Pack 3 and SQL Server 2005 Service Pack 4 will end on April 12, 2011, and Service Pack Support for SQL Server 2008 Service Pack 1 will end on October 11, 2011. Microsoft is ending support for these products as part of our Support Lifecycle policy, found in $URL$ Please read MSDN blog for more details PS: Even if you have Microsoft Premier support and you are at SQL Server 2005 SP2 and raise a case with Microsoft for help they would first ask you to apply SP4 and ask you to see if issue subsides. If not they would take (After applying SP4) your case under extended support If you want to know difference between mainstream and extended support This MSDN Blog would give you more details 

The OS on both the locations would be sitting on . So this is virtual environment. Everything would be exactly same between source and destination. The cluster has quorum disk as witness not fileshare and shared disks are on SAN. NOTE: We have luxury of downtime as weekends would be given to us for migration.