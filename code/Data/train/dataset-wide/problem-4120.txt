If you think you have a good relationship with your boss (but not necessarily with your company), then keep in touch with the boss. 

If you do and want to bring it up, a time to do it might be in answer to my question, "What was your most recent job?" or "I see a recent gap in your CV, do you want to tell me about that?" or "Why are you looking for a job now"? Then you might reply something like, "I've been ill. I am recovered now (but need to remain on the drug, which is why I'm overweight). That will (and/or doesn't) affect my ability to work, so I will (and/or won't) need 'accommodation' (and immediately continue on to other, 'positive' topics without stopping for approval before returning the conversation to me, so that I have something else to talk about with you)." Timing it like that might help to fit the information in parenthetically, with the types of topic which are usually discussed in an interview: recent experience, motive for working or not working, ability to work, any accommodation needed, and so on. This advice is off the top of my head, imagining myself as interviewer, and not based on extensive experience of this topic. 

For example, if you're applying for a job as a xyzzyxian frobnicator*, you should definitely mention that that's the specific subject you're studying. If you're applying for work as a grocery store clerk, and doubt your employer would know a frobnicator* from a fnord*, leave it out. Similarly, might your future employer care that you're studying at Barville*, rather than at the main Footown* campus, e.g. because the job you're applying for is located a lot closer to Barville*? If so, do mention it. If not, you could leave it out (but it probably won't hurt to mention it anyway). Ps. The same general principle also applies after you've graduated. Sure, 10 years after graduation, nobody's going to care about your degree beyond the fact that you have it (because by then, you should have some relevant work experience and/or a further degree to demonstrate your skills), so you don't want to waste too much space on it. But if you're applying for work straight after graduation, then your studies will be, for the time being, the most relevant part of your rèsumè, so they deserve some extra detail. 

If you talk (or preach) then it's quite a common experience to get 'back-talk' -- see e.g. this blog. 

And/or if you're more interested in the company than the boss, ask if you could have a meeting with more than one person (e.g. your boss and their boss, or your boss and an HR person): to discuss your future with the company. By doing that you would have a second contact (in case your current boss leaves) within the company, who knows (based on the meeting) that the company wants you. 

be able to talk about work-related topics (software development) be understood understand what I was told in reply. 

An off-the-wall suggestion (I've never heard of it before and have no experience with it): ask whether it's OK for you to record the meeting, so that you can review the recording with someone else later. For example you could hire a person to teach language X to you: and have your lessons consist of reviewing the meetings you recorded at work (to ensure you understand them, and to identify the vocabulary used in meetings so that you can learn that). Discuss with your boss who should pay this person (you can probably afford to pay that someone privately yourself, it might be only an hour or two per week of their time for a few months), and who should hire this person (your company/manager might want to be their employer, or might want assign an existing company employee to that job, since the contents of the recorded meeting will presumably be company secrets). 

However, you'd like to apply for work while studying, and you're wondering how to describe your ongoing studies in your current rèsumè. If so, the direct answer is: any way you like, as long as it's factually correct to the best of your knowledge. For instance, you'd be perfectly fine listing it simply as: 

You could, if you wanted, even include details about any minor subjects you're studying, if you feel they might be relevant, and maybe your current GPA or any other relevant academic performance metrics. The important questions to ask yourself, with regard to any extra pieces of information are: 

If I understand you correctly, you're currently studying applied xyzzyxian frobnification* at Foobar University Extension School* in Barville, XZ* since 201X*, which will eventually earn you an M.Sc.** in frobnification science* from Foobar University* in Footown, XZ* when you graduate in 201Y* or thereabouts. Once you've graduated, you'd list your degree in your rèsumè as something like: 

I look like I'm 11 years old if I go clean shaven There isn't a single correct answer to this question, but one of the "right amounts" is "none". It doesn't really matter whether you look like an 11-year-old, any more than it matters whether you look like a woman or a man. It used to matter socially, or perhaps at school. But at work I presume they're interviewing you for your experience, personality, knowledge, insight, ethics, cooperation, and so on. they will form their own opinions about my age If you're in a State or COuntry where you don't put your age on your resume (e.g. because job discrimination based on age is illegal i.e. "ageism"), then they ought to be assessing your experience and so on instead. Isn't your age obvious anyway, if your resume includes the year when graduated from school, and started your career and so on? 

*) Placeholders for unknown major / institute / town / year / etc. **) Or maybe a B.Sc. or a Ph.D. or some other degree. 

might the/a prospective employer care about this detail, and if yes, would including it give a favorable impression (or save you from embarrassment later)? 

I'd say you absolutely need to talk about this with your line manager. It sounds like the fundamental problem is that both you and your line manager are (or are perceived to be) responsible for allocating resources to different projects, but, despite your mutual discussions, you end up disagreeing with each other in front of higher management and failing to present a consistent position. If so, you really need to sit down with your line manager to figure out why this happens and to come up with workable strategies for preventing it in the future. In particular, you really should ask your line manager for their viewpoint on the matter; they may well be equally annoyed with you for, say, failing to be properly accommodating towards upper management requests. For the future, once you've both raised your concerns and agreed that there's a problem, you should try to come up with some way to present a consistent front. There are many possible ways you could do that, from planning in advance your mutual responses to any likely upper management requests, to agreeing on definitive, non-overlapping areas of authority, so that you can simply pass any requests not in your designated area of authority to your line manager (and vice versa). 

Implementing that requires the source code to be checked in, the build instructions published. I'd suggest you do that as a semi-emergency. Allow the developer no write-access to the production server or the build machine (to verify that production code is buildable from version control). After you've done that (after you know that the source code is in version control and the build instructions are published), then other developers can think about inspecting the source code and helping to maintain it. Note that Get Rid Of Indispensable Programmer As Quickly As Possible was published by Gerald Weinberg in 1971 (so, really, everyone ought to know this by now). IIRC the original quote is, 

I.e. the purpose of the meetings isn't only to discuss the software and to throw my proposal in their face. The purpose is also 'soft' e.g. to reach a team consensus, to hear from everyone, perhaps to let everyone feel they've had an opportunity to contribute, let them feel good about the team. Maybe you shouldn't pride yourself on being "quick", either. Another possibility is to specialize, e.g. at my current job I do software-design things without asking, but whenever there's a UI-design question I'm not sure of, then I ask someone else who's good with the UI. You could do the same with (open questions to other people) for other bits you're not sure of (e.g. "How shall we test this?", "How shall we estimate this?", etc.). You could also try (in theory: I haven't tried this myself) phrasing your statements as a question, for example, "I think we should do such-and-such. Or is there maybe a better way?" 

Because a CV is supposed to be a factual and impersonal description about you, not by you. Yes, usually, you do actually write your own CV, but that's not something you're supposed to emphasize. Basically, write your CV as if you were someone else describing yourself in third person. Ps. Caveat: Rules are meant to be broken. Sometimes, writing your CV in an unconventional style might make it stand out and cause a prospective employer to pay more attention to it. Of course, sometimes it might also just get it sorted into the circular file that much quicker. It's up to you whether you feel that's a risk worth taking. 

However, if you're looking for work in a field related to your studies, it's quite plausible that your prospective employers might be interesting in knowing a bit more about your studies than just the fact that you'll hopefully have a diploma some day. As such, you could also consider fleshing out the entry to something like, say: 

Is it okay to slightly modify a forwarded email? It may be acceptable or preferable to block-quote instead: for example you could write, 

After my first software design meeting (in which I explained my software design proposal), my first manager told me, 

I reckon that, once they've heard the question, then they can decide whether and how they want to answer it immediately. The question they're asking is whether it will take you quite a while to even explain what the question is. 

Your other problem is apparently that you didn't discuss or obtain permission to do what you did, before you did it: because he's not expecting how much you've changed. If I were senior developer reviewing a rewrite, one of my worries might be, "How can I tell whether the rewrite broke existing functionality?" Do you have an answer to that question, e.g. are there defined system tests or acceptance tests, which the new version of the software is still passing? If so then it's easier to review the new version on its merits, based on its superficial appearance and structure: e.g. to assess whether it's more modern, more maintainable, etc. If not then you need to determine via code-inspection whether functionality has changed; which might be difficult if it's a complete rewrite.