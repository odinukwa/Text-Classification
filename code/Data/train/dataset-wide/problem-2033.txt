I agree with some of the other comments though that perhaps your servers are set to auto update and this is how it could have occurred. Based on how your server is configured and combined with the changes to how CUs are installed, it could have auto updated. 

The RSAT tool was updated with the general availability of Windows Server 2016. By going to the same link as the preview RSAT, $URL$ you can update your workstation with the new version. 

SQL Server Reporting Services (SSRS) is a server-based platform for hosting reports. Report builder is client tool that may be used to create reports to deploy to SSRS. As such, you would use SSRS to manage security on for the reports that you may have deployed with Report Builder. 

Your server authentication mode may be set to Windows only instead of Mixed Mode, which will allow Windows logins and SQL logins. If true then the SQL login will not work. In SQL Server Management Studio, you can right-click on the server and then go to the properties. Then go to security and see how the server security is configured. You can change it there also. If it is set to Windows only then you will have to use a Windows login. If you want to change to mixed mode to use SQL login, you can make the change but that may require the instance to be reset to take affect. 

Having said all that, I still use it and recommend it. I generally try to let developers use just that tool instead of SQL Server Management Studio (SSMS) because I look at SSMS as a DBA tool and SSDT as a developer tool. 

It is obvious to have better performance for the value of innodb_flush_log_at_trx_commit as 2 than 1. As commit operations are fairly dependent on underlying system even fooling-by-OS is an extra step one takes for every commit. For value of 1 flushing to disk operations are bound to happen every transaction while for 2 it happens once a second (depending on OS scheduling) 

(Consider backing up binary-logs if you want point in time restores.) For backups you can use traditional mysqldump or mydumper/loader. If your data size is large, it'd be better to go /w physical-backups, follow settingup xtrabackup for mysql with Holland framework. 

Here is an old instructions for setting up master-master replication for windows but concept is same. Considering you already have a 3306 instance by default you can follow below steps to setup as well (if above doesn't help) 

Finally you can setup backup on this slave. (This is little complex than wht's written below) You may also have individual slaves for both masters and setup backups on them. You can later push those backup to remote location / network drive/ tape / upload to s3 to retain longer. 

Considering all the slaves were in-sync with master while you issued reset-master, it is safe to issue on slaves with newly generated first bin-log. 

This will let the slave catch-up with latest available changes from master. If your binary logs were not yet shipped (via replication) to slave, then you might want to ship them manually and play it on slave. (Provided they're available - as you say you have co-ordinates) 

You may have to shrink the data file to reclaim the space. Deleting data will not free up the space to the operating system, it will just make the currently used space less full. Truncate is similar to delete but doesn't log everything like a normal delete does. Here is a dumb analogy I use sometimes: putting a cup on a napkin can take up most of the surface space on the napkin but filling and emptying the cup has no affect on the napkin. In this analogy, the napkin is available space and the cup is your table. In your case you just emptied the cup. Now you have to remove it from the napkin, and shrink will do that for you. But what you should look into is why this table got so big in the first place. You may very well run into the same problem soon so you may have to revisit the space used and add more space to the database. 

I would suggest using SQL Server Data Tools (SSDT), which is essentially the latest iteration of the Visual Studio Database Projects. I use this at places that do not already have a way to source control their databases since it easily integrates with TFS, which most Visual Studio shops use for source control. A couple pros I have for using it are: 

I had similar issue before. I had all SQL Services that I needed running on MSA or gMSA except for Reporting Services (SSRS); this stayed this way on Windows 2008 R2 and 2012. This issue went away when moved to Windows 2012 R2. In my experience, SSRS was the only service that would not run on MSA or gMSA on OS prior to Windows 2012 R2 but the database, analysis, agent, and integration services all worked ok with them even when not officially supported (MSA running with SQL Server 2008 R2). At this link, $URL$ it states: 

Before doing any changes and attempts, take complete backup of your databases. If you have physical backup of your database: 

You can check if the return value for the command, if 0 then OK else failure. Put may put it in shell script as follows: 

but as @greenlitmysql has mentioned you might see performance issues later on as the data grows (and length of column)... 

Oprn. is "slow" because you do ensure the data durability & consistency. Oprn. is "Fast" because you did less work (disk operations). Even for the "lies" mysqld goes an extra step. 

Looks like in the name of alises you also seem to ignoring the join ! So my guess is non-existence of index is causing the delay, but you can confirm by posting explain plan and/or table definitions. 

If you're using MyISAM, convert to InnoDB and you might see some drop in this counts. There is no other way to reduce this unless you stop querying them. Increase the table_open_cache and table_definition_cache & observe the stats...Raise this as much as you can! May be you need to increase system file handlers too and that is a way to go. 

When you're comparing, RAID-10 is still a better architecture than RAID-5. My opinion is that regardless of hardware improvement the underlying functionality still remains the same for RAID-5. (Even though Ronado's answer has "If you do not use innodb_file_per_table...", he'd still recommend the same.) 

So if you're setting 6 servers, you can set them as: auto_increment_offset=1,2,3,4,5,6 auto_increment_increment=6 so on each servers insertion series will be like: 1,7,13... 2,8,14... 3,9,15... 4,10,16... 5,11,17... 6,12,18... Idea here is just to generate unique auto-increment numbers. BUT WAIT!!!!! Before you begin, when you say 6 servers it will be pair of 3 master-master or are they slaves of original master? If they're slaves, are they going to accept writes (not good!)? Are you going to write on all nodes (in case of master-master? The architecture isn't clear enough and hence your solution of auto-increments might not be right / required as well. Anyways... I hope we fixed the confusion of auto-increment. Trust the documentation and don't get confused by too many articles. 

Back in March 2016, Microsoft had a blog announcing updates to the SQL Server Incremental Servicing Model (ISM) and one of the things they have there says: 

LinkedServerName would be the real linked server name and SourceTableName would be the name of the table in the linked server. 

While it doesn't specifically state anything, something changed in the Windows 2012 R2 OS that allowed using MSA or gMSA for SSRS and I'm assuming it's related to the quote above. I just ran into a similar situation a few months ago during an upgrade/migration to SQL Server 2016. The original OS was running Windows 2012 and I tried everything I could to make it work but it never worked with SSRS until OS changed to Windows 2012 R2. 

I would say the stored procedure itself probably does not include the comment with the current script date. SQL Server Management Studio adds that when you generate the view of the procedure. In my experience, the stored procedure itself starts with CREATE or ALTER and anything above that is added by SSMS when you look at the code. 

Per Books Online, compatibility level sets certain database behaviors to be compatible with the specified version of SQL Server. As such, some queries may no longer work or may need to be slightly changed. These may be performance related especially when going to level 120 or higher as those change how the query optimizer works. If you do not change compatibility level before upgrade, the upgrade process will upgrade to lowest level compatibility on the new install, in this case to 100. The benefit of changing compatibility first before migration is to see if any queries need modification (assuming an application is attached to this database). Since this is a migration, one way to test performance is to migrate the databases to the 2016 server and then run same queries on both and gather metrics from them to compare. However, on same server performance should be similar, assuming the query is still able to run. An example of a query that will no longer run after changing compatibility mode would be as follows: 

You have few options to consider but first I hope you're not troubling your production server but may be a slave of it to dump out things? (things may get bad there.) 

While WAMP comes only with MySQL-Server (no client tools etc), not 100% sure but did you see if the wamp-setup is offline installer only? 

Ofcourse a physical files restore will be quicker than loading a dump. So, if you have full physical backup / snapshot of mysql data-directory - you can go fast! (Below answer assumes that you have physical backup available.) Tables are MyISAM: 

are you sure you're doing what you want? In first query you specified localhost while in second you specified %... so for % you will have to connect to server remotely or using ip. Check below: 

I saw query then explain and then table definition and first question came into my mind. Why are you still on MyISAM @ 5.5? Let's just change this to InnoDB and you should get the results. This 0.1 to 2 range could be caused by locks or other reasons but let's avoid that issue first? Be-aware that below conversion will lock the tables and may cause downtime. 

MySQL Server master-master replication is possible for max 2 nodes. You might want to use Galera Cluster (Percona Xtradb Cluster or Mariadb Galera cluster) Or Oracle's NDB Cluster to achieve HA as a better solution than master-master. 

Last line explains the case. Referred: Dealing with MySQL case-sensitivity Update: For views and case-sensitivity, refer this bug report. 

One reason for separate drives even with SAN is that a given disk or set of disks can only do so much I/O at once. Any of the things on the drive could saturate the I/O on the SAN by keeping OS, TempDB, logs, page file, and the user database on the same drive. Depending on the query and server configuration, TempDB, the page file, and the LDF could all be in contention for the I/O. By separating those, the I/O for those set of disks is exclusive to where they are allocated. Another thing to consider is any one of those things could also use all the available space if sharing disk space and instead of one component shutting down, the whole server could be shut down. 

There is a lot of info out there about this behavior going back years. Here is a thread: SQL Server Management Studio slow opening new windows Common thread there seems to be SSMS is trying to reach a location in the internet. Another thing there states to change the user feedback Opt In setting. Maybe one of these options will speed it up 

SSIS can connect to many different servers based on the connection type used in the SSIS package. Since even SQL Server 2016 SSIS still uses Native Client 11 (and has since 2012), you should not have any issues connecting from SSIS 2008 R2 to SQL Server 2016. SQL Server 2008 R2 uses Native Client 10 or 10.1 but has no issues connecting to SQL Server 2016 either. In the connection manager in SSIS, you choose the way to connect to SQL Server. It could be ODBC, OLE DB, or any number of connections types. I say this to say SSIS itself does not care what version of SQL Server you are connecting to but the task you use will determine the connection type. I would assume you are using OLE DB and as such you may choose the provider in the connection string.