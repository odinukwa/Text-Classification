I guess to find a final answer, you would need to have a lawyer look into your contract. But assuming it's not different from 99% of the other contracts, then "credit" is just a nice thing to say. The code your wrote on company time belongs to your employer. Nobody else. Your name on it is purely cosmetically and probably only allowed inside your company anyway. From a company perspective, having your or your colleagues name on it is both equally superfluous. So "should you be allowed" is something that your manager can have an opinion on. Like "should he get a cookie" or "should I smile". In the end, it's meaningless. Your manager will probably weight your unhappiness against the other guys unhappiness and make a decision that's in the company's best interest. 

Companies fail. It happens. As long as you aren't the founder or director of finances or someone else who had the power to change that, it should not reflect on the other former employees. If leading the company was not one of your responsibilities, the success of the company is nothing you have to worry about in your next interviews. The only thing that could reflect badly on you is if you lie about it. 

She did not lose the job. She never had it. The other candidate had everything she had and spoke a useful language on top. So the other candidate was simply better. Sometimes you have multiple candidates that fit all the written requirements. Would it be "fair" to just throw a dice then? Maybe. But it makes total sense to pick the candidate that is better suited for the job. And it seems the company did. That's both legal and moral. It would have been different if the final pick had been based on gender, age, sex or religion, but based on a skill that can be learned and that is actually useful for the position? Well, that's how it's supposed to be. 

A job is where you exchange your time for money, so you can use the money for something you would not be able to do yourself using said time. Example: 

Developing software is not in any way regulated. Anyone can do it. So if you can get a job without a degree in that fields depends entirely on your potential future employer. Some will require a degree, some may not. If you want to know what your chances are, go and check the job ads in your area. Assume you had the education you are aiming for, and check if you would feel comfortable to apply for the jobs you want to apply for. 

This is your personal problem, but your boss can act on it and improve the situation. What you boss can not do (or should not do) is give you an allowance to lower your quality or quantity of work. So telling your boss about personal problems that may worsen your performance is nothing he can act on. There is nothing for him to do and therefor talking about it is of little value. If you tell your boss your performance might be worse, in your boss' eyes it will be worse. You could probably do the exact opposite and get lost in work and work overtime all week to evade a confrontation at home and still, as you told your boss you might deliver bad performance, you boss will think you did. So don't do that. If you can come up with something actionable that you can do and needs your bosses approval to mitigate the fallout, go ahead and ask. If you cannot, don't. 

"Better" in this sentence is a purely fictional measurement, at least to him. You (both, as a team) have never set the standards of "good" so assuming something is "better" has no common base. You have been taught that OOP is "better". But if it was a good education, you have also been taught why. So make a case. What would your solution offer that his would not offer. What could be done with your software, that could not be done with his? If you present him with a likely business case that your solution would handle in less time or for less money, then he will see that it is indeed "better". If you cannot come up with an example why your approach is "better", maybe it's not. OOP and Inheritance are tools to solve problems. Maybe this is not the right problem for the toolset you have? It could as well be that you need a second (and third and fourth...) toolset. 

No. The point where anybody can be held accountable is when you both have signed the same piece of paper and you both (or at least you) have a copy of it. That is called a contract. Anything before is just talk and talk is cheap. 

I think people can reliably put themselves into those categories. It tells me more than "7 years PHP" because I know tons of people that will never reach expert, no matter how many years they invest and I know people that are experts after a year or two. As with anything on the CV, it's up to me to check if it's real or just "marketing". But that goes for single line on a CV anyway. 

That's horrible. For all the reasons in the other answers and for the fact that it does not pass this very simple test: 

A cover letter is your sales pitch. Last time they did not buy, but now you have improved and you are a way better deal. Why would you want to hide this messages back in your CV. Why would you have them make a diff between the new and the old one to see that? Tell them. Tell them about your good experience last time with them in the interview, tell them how you got more experience and what you did at the other company that could benefit them. You could send the same cover letter and it might not be seen as negative. But that's not what you want. You don't want the same result as last time. You want positive. So go and craft a cover letter that tells them how much you improved and how good an idea it would be to hire you now even if they did not last time. 

A combination of #2 and #4 should be a solid approach to the problem. Tell your supervisor you are not sure if and what classes to take as you don't want to spend company resources if it's not needed. Ask your supervisor how to determine whether you should take a specific course. (This answer is pretty short but you already did a good job of looking at the alternatives. There is no secret to this. Just go ahead and ask.) 

You could hire a lawyer, but to be honest, not following up on simple emails and not showing up for work on the required date does not look good for you. You did not honor your side of whatever contract you had with your company and wherever you are, that will take a very costly lawyer to bring to a favorable end. So if they do dismiss you, you deal with it by immediately updating your CV (a thing you could do today), looking for prospective new employers (you could also start this today) and applying there. Learn you lesson and don't use a single communication channel only. You should have called and you should have showed up in person on the day that you were expected to do so. 

This part however is a bit problematic. The company could care less why you drew the conclusion you did. The company will pay you what they think you are worth (preferably a lot less). Any kind of professional argument you can bring for your position must include that your work will be worth it. You having a manor or living under a bridge is both equally worthless to the company. If you want more money, concentrate on why they should pay you more money. The only reason they should pay you more is because they profit more. Show them how they can profit more by hiring you. If you simply want to explain why you don't take their offer, I would stick to a less personal reason. Keep it general, like "After calculating in all factors like cost of living, the offer didn't meet my financial expectations." 

That sounds like an excerpt from an IQ test. Unlike brain teasers, where once you know the answer they are dead easy, IQ tests test logical reasoning, pattern matching and short term memory under a time constraint. This is a pretty good indicator on how you will do as a programmer. It's not the only one, but one.