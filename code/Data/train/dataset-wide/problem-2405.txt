A permissions problem prevented MySQL from starting with , so it silently fell back to , which doesn't handle concurrent updates very well. 

I am in charge of a large PostgreSQL database, with few dozen tables. I suspect that many of these tables are never accessed. What's the best way to check when was the last time a certain table was accessed? I thought of adding a trigger on , and , but I hope there is a more efficient way. 

I have some tens of thousands of these statements every day in my file, and I'm not sure where should I begin my investigation. 

Assuming that there is a index on the relevant columns (), is this approach efficient? Are there any better alternatives? 

How can I change the location of the log file in PostgreSQL? Can it be done without stopping the cluster? 

Use the FORMAT function, which works for floating point numbers as well as for integers: Floating point numbers: 

I'm trying to delete all the records except the last, say, 5 rows. "Last" is determined by , as may be duplicate. I've tried: 

MySQL's shows the permissions of the current user. Is there a way to log in as root and show the permissions of all users? 

How can I print the integer part of a number with commas separating every three digits? For example, 

I thought that the is a wildcard for all hosts. It worked for a while, but then I had some permission errors when the user tried to access the db from the same machine. I added the following lines: 

I am using PostgreSQL 9.3 on AWS RDS to store geo information into an indexed table of points. My data is write-oriented, meaning that I write nearly 1,000 points per each geo search query. I am considering some scaling solutions, and MongoDB seems like a natural choice because it's mature, scales up well, and supports geo indexes out of the box. Is there any reliable and recent benchmark that compares MongoDB performance to other SQL and NoSQL solutions, preferably under write-intensive scenarios? 

MySQL version () is 5.1.48, but I think that MySQL lacks the ability in all of its versions. What's the right way to create an index only if it does not already exist in MySQL? 

Consider a production database with a few dozens of normal-size tables, and a handful of huge tables. I am looking for a convenient way to the database content, excluding the few huge tables, for my own local laptop. I can easily dump a small sample of the huge tables using , if I occasionally need to address these tables. If I use the argument, both the schema and the data of the huge table is omitted, which breaks queries expecting these table on the local development environment. Is there a way to dump a data base with a complete schema, excluding the content of some given tables? 

I'm using PostgreSQL 9.3 on RDS. Once in a while, I run a VACUUM FULL operation on the database. However, such operation can take quite a while and it blocks other tables, so the need to stop the operation might arise. Is it safe to stop a operation that takes too long? 

The problem How do I efficiently and idiomatically compare the content of two tables, each in a different DB? I have 3 DBs (the classic , and ). Each DB has a few tables which should be exactly the same regardless of environment, like . I would like to write a script that would compare these tables and alert me when there's a mismatch. Characteristics 

The problem I have installed on my MacBook Pro. I don't remember how I installed it (there are numerous ways), and now I want to upgrade to . Foresnsics The running processes are: 

The problem is that I get an interactive screen with the results of the query and an , which requires pressing esc in order to go back to the normal shell. I have tried using and/or following the psql manual, with no luck. How do I run my file in non-interactive mode, only displaying the results an exiting the script? 

The problem seems to be permissions for . I Googled a bit, and this table seems to be related to PostGIS. I have tried , with no effect (it is not supposed to work for schemas anyway). Any idea how to be able to dump the schema of my DB? 

The problem - complete DB lock after a schema change Architecture I use a PostgreSQL 9.3 with PostGIS to store location updates. The updates are written to two tables - and . Each had: 

I have installed PostgreSQL 9.5 on OSX using the EnterpriseDb package. How do I install PostGIS on it? The official PostGIS OSX Page says that: 

Is there a way to create an index in MySQL if it does not exist? MySQL does not support the obvious format: 

When the development of a new feature is complete, I have to manually update the prod db schema until on both DBs is identical. This process is error prone and tedious. So, I am looking for a tool that can: 

I would like to execute some statements, and commit the entire batch at the end. I've tried the following approach: 

Is there a way to show all users that have permissions on a database? I'm looking for something like: 

According to the PostGIS manual, geometry columns should not by added directly, but using AddGeometryColumn(): 

To conclude - I have duplicate values in my table which can not be found or cleared. Any ideas how to fix this? This is a production server, so all fixes should be done without affecting service. 

How do I set a timestamp column whose default value is the current UTC time? MySQL uses function for UTC timestamp: 

Is there a schema diff/patch tool that can help me convert prod schemas to the more advanced dev schemas? 

The question was answered at the AWS forum by Shawn@AWS - The list shows available, rather than installed, modules. 

The problem is that the boto, the Python library for accessing AWS Service, lacks any reference to geo object. The Java equivalent, on the other hand, has such support. Is there a way to use the geo features of DynamoDB on AWS using Python? 

This snippet works without problems on my local database and on one of the testing databases, but hangs for a very long period on another DB and never runs the command. I have stopped Apache (with all possible clients reading and writing from the DB), made the change and started Apache again, but this isn't a very elegant solution. How can I know which connection is blocking the command in a PostgreSQL database? 

This query returns the longest-running queries on the database. Then, I manually copy the query text to another window, and run on each query to identify longer queries that need indexing. Is there a way to automatically run on each query in ? 

Is there a standard way to write log messages in MySQL stored procedures? I can write log messages to a designated log table, but I prefer the standard log mechanism where each message is coupled with severity and sent to an external file. 

My problem Consider a table with many frequent updates from users, from which only the last few are relevant. In order to keep the table size reasonable, whenever a new row is inserted old rows from the same are deleted. In order to keep an archive, the row is also written to . Both and have the same schema, in which is a with a primary key constraint. Implementation Stored procedure 

This is clearly an RDS Bug, because these instructions should not be executed more than once. Perhaps this happened due to a database minor version upgrade. 

I am investigating high load on a PostgreSQL database on RDS. As a part of the investigation, I'm running the following query: 

The statements query the table. Why is my DB locked on the table? Was removing the numeric id the reason for that? What's the right way to fix it? 

I would like to add some fields to a table in all testing and production DBs, all of which are stored in PostgreSQL 9.3 on Amazon RDS. 

Current solution Currently, I am using and comparing the files. I wonder if there is a more idiomatic approach. 

The error The trigger works well, but when I run a few dozen insertions in a single transaction, I get the following error: 

Consider a file with a few selects and updates. I would like to run this file from a script using the utility: 

The lock After a few hours of work, the DB was in a complete lock - so bad that even a pg_dump on its schema was blocked. With some help from the excellent support team on AWS RDS, and this blog post, I was able to draw this locking schema - in short, everybody was blocking everybody. This has been going on for days, and only stops when I manually kill the listed processes on the calling machines. 

I am copying a schema from one PostgreSQL instance to another. I wonder if the SQL created by is good enough - will it create the geometry columns the same way AddGeometryColumn() does? 

There is something in the MySQL console that drives me nuts. When I hit ctrl+c to cancel the current command being typed, the terminal exits. In every terminal I know ( terminals, , ), ctrl+c cancels the current command and ctrl+d exits the terminal. This issue has been reported at 2003, and bumped several times since. Is there a way to: 

and that my MySQL version supports `SHOW PROCEDURE (SHOW PROCEDURE CODE was added in MySQL 5.0.17). How do I view the source SQL code of the procedure? 

I would like to store some protobuf objects in a MySQL database. The objects are created in a Java application. The object is accompanied with a textual type identifier and a timestamp. 

I've tried playing with the syntax, but could not get it to work. What's the right syntax to create a UNIQUE constraint using an existing UNIQUE index? 

Is there an official PostreSQL convention regarding capitalization in DB, Table and field names? The examples on the official site suggest a lowercase and word separation, and I wonder whether this policy is official. 

I would like to upgrade a PostgreSQL 8.3 server to PostrgreSQL 8.4. There are many software components that interact with the server over the network, and I am concerned with compatibility issues. Is there any interface change between the different versions of PostgreSQL, as far as an external component is concerned? 

And now the user can access the database. What does the stand for? Is there a wildcard for all hosts? 

What have I tried I made sure it was not installed using . Any idea which installation of is installed on my mac, and how to upgrade it? 

While recovering from a cloud failure, I found that some tables on a database are behaving strangely. These tables are indexed using a primary key, but a yielded duplicate fields, failing a on a backup server. I have tried to : 

Each update was written to the table, and then a trigger function would write the same update to . After the update, all updates except for the latest 10 for this would have been deleted. Therefore, the table contained the latest 10 updates for each car in a moving-window fashion, and the table had the entire history of it. The change I figured out that I only need the latest update for each car, not the latest 10, so I run the following: 

Is it possible that my user name is an empty string? How do I create users and grant privileges? Can I grant a user all the privileges on all entities within a database? 

I would like to add a unique constraint to a DB field in one of my production databases. Unfortunately, the following statement is blocking: