You know what your coworker is doing, but you don't know why. Is your boss interested in certain topics, and your coworker trying to keep him in the loop? Does your boss not know what your coworker does, so he's keeping the boss informed? Does the coworker think he's being ignored on stuff, and feel the need to cc the boss to get action? Are your coworker and boss in the middle of a tiff and coworker is following some rule you aren't aware of to the letter in order to get it changed? Is your coworker or their significant other with medical condition that has not been disclosed to the rest of the office, and coworker is keeping boss involved in everything in case of an emergency? Is it stuff that you think is trivial but that coworker thinks isn't? You really don't know what's going on. You should ask your coworker what's up. If you don't feel comfortable with this, ask your boss. There may be a cery good reason for your coworker's behavior. Whether or not to remove the boss from your reply is up to you. None of us know your relationship with your boss of how s/he will react. I've worked for bosses that are glad to be removed. I've worked for bosses who assume that I've dropped the ball if they don't see a reply and create a huge stink where it's not necessary. I've worked for managers who I bcc to let them know the issue is addressed but they're otherwise removed from the thread. Once you know why coworker is including the boss, you'll be in a far better position to know what to do about it. 

In general, 'junior' means less experience. This is not strictly related to any particular skill. As phyrfox put it, 

There are only so many ways to control project releases - only so many levers to pull. They are time/release date, features, quality and resources. 

First figure out what they're really asking for. Are they asking for a different appearance on the report? Are they looking for a bug to be fixed? Are they looking for altered functionality so that they can write custom code to interact with your application? The answer will determine how to react. If they are interested in the UI, mock a UI and ask, 'would this solve your request?'. When you get the UI right, build the report for them. If they are looking for a bug fix, ask them what their test cases are for the bug, to ensure you correctly reproduce and correctly fix, then fix the bug. Say 'thank you' for the suggestion and give them the real fix. If they want the view into the database so they can write their custom code, give them a new database view and show them how to select that view. 

There are many more. You may have amazing coding skills, but are all these skills really all that well practiced? 

It is true that unit testing up front has many advantages. However, the realities of software development will often include things that are less than ideal. First, you are working with people and people make mistakes. Sometimes less than ideal decisions are made, and sometimes tests are forgotten. Second, there are competing priorities for any project. Time available to build the product: quality of the product (and therefore testing of the product), resources available to build the product, and features required for the product. The code you're supposed to test could have been written when there was insufficient time to get in all the features perfectly, so they were done with lower quality. Third, that may simply not be the process at your company. Your company's version of the software development lifecycle may specifically put all testing at the end of the project. Most importantly, you have only been at your job for 1 year. You need to work with your mentor, team lead, and supervisor to learn how things are done there. If you come up with questions like, 'why wasn't this done during development?' then you should ask someone at your company to help you better understand the development process. We, on the internet, cannot tell you why a decision was made at your company. 

What matters most depends upon what the hiring manager is looking for. One position might require experience while the other might require education. There's really no way for anyone but the hiring manager (or someone who asks them) to know. But, you can look at the job description and see if there are any hints. What skills do the job descriptions stress? What do they mark as required and what do they indicate as nice to have? You can also research the company. Are you on linkedin? Are they? What does the manager's profile look like? Can you infer who they manage/work with based on their connections? What does the team seem to look like. What about glassdoor reviews? What do they indicate the company culture typically wants? Keep in mind that these are only hints, not authoritative answers, and are less useful if the company or team is larger. If you happen to know a recruiter at the company, you can ask them. Recruiters' jobs are to pair people with positions, so there is some incentive to help you. Or you could just cold call their HR department and ask 

All job estimates should have padding included for the unknown. It's not always enough but it's always needed. If you have identified sub-problems, also identify solutions. You can do the 'menu' style of a perfect solution, the worst possible solution that would result in a working product, and a reasonable compromise that would not be ideal but would be workable. If there are large features remaining, consider which of those can have alternate, less perfect solutions. Scope out all the solutions. See if there's a combination that gets you within the desired date. Prioritize the remaining, incomplete features. Which are things you can do manually for now? Which could be dropped entirely without impacting the user experience/the core value proposition of the product? Which are absolutely necessary for your manager to consider the product a 'win'? Look at available resources. What would happen if you added people to the project? What if people worked extra hours to finish, and do you have a bonus structure of some form to remunerate them for their extra work? Ask the team how much time they can shave off by doing a lower quality job. Look at the bug list and reprioritize 'must be fixed' issues. What can you remove and fix after release? How much time will that save? Finally, go back to your manager and relay the facts of the situation. Tell him/her the approach you want to take, what the impact will be, and that it is the best way you can see to reach the desired sate as closely as possible. Answer his/her questions with facts. Take the approach s/he suggests/accepts 

EDIT: after seeing your comment, Wesley Long's answer is correct. I am leaving my answer because it's appropriate for related questions. 

As you describe, you're starting from a weak position. The US administrators have learned to ignore requests from France, and requests from France are typically complaints. You need to understand how to make requests that will succeed when working with Americans rather than just retrying the old process that doesn't work. 

Your manager is your manager. Unless the company specifically doesn't allow your role to be set to fixed hours, or doesn't allow your manager to set fixed hours, or you have a contract controlling this, then your manager has the authority to do so. If you don't like it, you can tell your manager, but remember that this authority is often reserved to managers, not to employees. You might take the approach that this is a new policy and you, being used to the old policy, are going to need some time to adjust your non-work schedule to meet this new requirement, though that acquiesces and your question seems to want to fight. You could try and explain in terms of things that your manager cares about, such as, 'Boss, I know you prefer having regular hours, but when I'm able to use flex time, I end up doing extra work in the evenings, after I get home. If we stick to regular hours, this benefits to the company will go out the window and we'll need to re-estimate our deliverables.' You could try telling him/her that flex hours were advertised as a benefit when you took the job, and that this is an important benefit to you. You'd like to understand his/her process for re-obtaining that benefit. You could professionally tell your boss that removing the flex time benefit causes an equivalent reduction in your compensation, and that you feel that you are due increased compensation in some other form if they choose not to provide you with this particular compensation. Be careful with this, though, as it can be taken as very confrontational if not handled very carefully. If you really don't like it, you can try talking to HR, if you have an HR department, or you can always find a new job.