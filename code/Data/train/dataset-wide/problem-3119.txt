Where the width of #page would be device width. A responsive design cannot have a fixed width. A desktop responsive #page will have a max-width and a to center it in larger windows. For mobile the max width should be used in the viewport meta tag. If the max-width: is 60em, then the viewport is 16x or 60 x 16 = 960. 

Consider using an extension other than . Even html is easier than php for users to remember. You could use the extension for the user to select the response type. For Example: In the Apache config or .htaccess 

And their pages score a ZERO with the W3C. jQuery Lot's and lot's of sites use it. does that mean its great stuff? Not necessarily. This site uses jQuery. I just right clicked this page and went to the console tab where javaScript is monitored. This is what I see. 

preg_match_all() could provide error detection and correction (user typo) as will as doing the explode(). 

I think a good responsive design does not start with downloading 247,387 Bytes of jQuery and 67,546 Bytes of Bootstrap JS. It only requires some simple CSS. Instead of trying to decipher what Bootstrap is doing with jQuery, take that learning curve and use that time to learn CSS. Bootstrap is a band-aid. A band-aid that is not needed. And definitely a cure worse than the disease. When something is not working correctly how do you remedy the problem. It's a CSS problem. You didn't take the time to learn CSS but put on the Bootstrap Band-aid. Felt good at first. Now you have a problem. What to do? Is it a Bootstrap problem? A jQuery problem? A CSS problem? It's a CSS problem buried under 300+KB of Bootstrap and jQuery. Good luck with that. The only reason I know Bootstrap exists, is because so many issues are posted on Stackoverflow. Basically you will at some point have to put yourself at the mercy of others to fix your problem. Will someone be there for you? No it's not that bad. You just have to give up on that creative genius idea that got you stuck. Bootstrap, Mediocre at Best If you are going to use 3rd party tools use something designed by those that know what they are doing. Not Bootstrap Number One, I think a good design has no HTML or CSS errors. I have run bootstrap's pages through the W3C HTML, CSS and Mobile OK Validators. As I recall the page I ran had hundreds of CSS errors. I just now picked a page at random and 44 CSS and 14 HTML Errors. Their pages also score 0% (zero) on W3C MobileOK. Mobile experts? I think not. So when the CSS is not working correctly, what do you do? CSS can be difficult. Now add 300KB of JavaScript and you end up creating work arounds for Bootstrap and jQuery because they are too troublesome to figure out how they work. I find many (e.g. Bootstrap) associate responsive with mobile, which is not the case. Non-Responsive is when the text goes off the right side of the screen and you have to scroll over to read. The horizontal scroll bar will never appear in a response design. Whereas mobile is about font size and readability, viewport, and usability. If the buttons that need to be clicked are too close together and or too small, usability suffers. When on a mobile device have you ever had to zoom in on something to click it or read it? Ever need to zoom and the view port is set to not allow zoom? Why would anyone think they should take away zoom from the user? Keeping that answer to myself. Another requirement is the Web Server be configured correctly. Bootstrap has 9 JS files in their , these 6 are servered from their Server. 

JS I have two functions one for each the two EC methods. function ec() is for EC method 1 functions ecp() is for EC method 2, pairs the current selected section with the previous. Normally obe one of these functions is used on a web page. The div id="s999" is for the initial value for so there is no null value to prev. The reason I have var is for when the same section is selected as previously. I do not care if is expanded or contracted just contracting it is much quicker than an else if to check its display state. But I need to remember what I am doing with the passed . If the same section is clicked and I toggle the display state, if it is being expanded the toggle would contract it again. The line of code: 

Expand and Contract (ec) the one Section where multiple Sections can be Expanded or Contracted. Only one Section is Expanded at any given time. (ecp ec paired) 

I would rather see ENVIRONMENT equal to 0 instead of 'development' and 1 instead of 'production' This is so if it is undefined it will equate to zero with . 

I do not know python well enough to show examples. Fill in the blank questions will always require a human to check those marked wrong. As you find incorrectly answers marked wrong, you can tweak the code I developed this technique for submitted answers from a web page and adapted to your interactive input. When answers are submitted from a web page the score for many questions can be scored in a few milliseconds. So fast there is no perceptible delay in the user getting the results. is much quicker than should be avoided when possible which in many instances can be done with arrays create question answer, correction and score arrays this is for two questions one with true (1) or false (0) and one with 4 multiple choice answers. The arrays are made to evaluate to zero on wrong and one on correct. The arrays for output, incorrect on zero and correct on one. Or pad the array so the answers are 1,2.. rather than 0,1... Where is the question number and is number of the answer chosen. From multiple choice you just use an array with more elements [1,0,0,0], the marks array remains the same. questions[ `Is the answer 1. True or 0. False','Is the answer 1. points = [0,1][1,0] or if you don't want zero as a choice: initializations: 

Better Yet: Seeing you are using PHP to populate the CSS links, there is an even better method. Because each CSS file requires a round trip HTTP Request/Response, why not reduce it to one. This is especially beneficial on a mobile phone Browser. To conserve battery a smartphone will drop the radio signal between requests. It can take seconds for the phone to reestablish the radio connection. This is why it is important that each file loaded by the Browser contain in the Request Header. Furthermore because the Browser will not begin rendering until all the CSS is loaded, it is advantageous to bring it in with a single HTTP Request. 

Yahoo's YSlow Grade Perfect Score: 100% (gtmetrix.com) Page Speed Grade: 99% (gtmetrix.com) 1% loss due to bug in PageSpeed scoring Page Load time 0.250 seconds (gtmetrix.com) HTML CSS 

As far as optimization of two loops to one, it does not matter as these two loops would execute in less than a millisecond, I would guess about about 400 microseconds. 

Responsive Design 101: All, whenever possible, horizontal CSS widths should be instead of or a percentage. All font-size are specified in em. Height should not be specified, so when the width is reduced the height will auto increase. The basic structure of the page: 

And read the User/Source Coding Rules, search the document using this search phrase: "User/Source Coding Rule". 

My preference is over , although they are the same. In a test environment like this, instead of I use with a plain text header: 

And it's not because of all the unnecessary bandwidth wasting white space either. 100% of what? Just by the nature of HTML it is going to always expand to 100% of the content. 100% of the Browser window? Why? If there is not enough content to fill the window, why fill it with 100% of nothing? Your page no Bootstrap or jQuery: Basically I changed the #loginBox CSS from to 

At this point in your code Assert RTS and DTR Then Check Port Status by reading DSR and CTS If the device you are connected to does not support hardware handshaking they may have these signal set to an active state or they may be left unconnected. If these signal are not driven by the connected device, be sure your cable loops back your DSR and CTS to your DTR and RTS. Or use an RS-232 loop back adapter. Keeping in mind the PC is a DTE (Data Terminal Equipment) device not DCE (Data data Communication Equipment) When designing the original PC IBM perceived the PC to be a Terminal to their Big Iron so the logic of DTE and DCE are reversed. 

For Example: The W3C HTML Markup Validator puts the number of HTML errors in the header. There are much better HTTP Response Codes to use over 404. Better diagnostics reduces support and increases user satisfaction. 400 Bad Request The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications. 403 Forbidden The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead. 404 Not Found The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent. The 410 (Gone) status code SHOULD be used if the server knows, through some internally configurable mechanism, that an old resource is permanently unavailable and has no forwarding address. This status code is commonly used when the server does not wish to reveal exactly why the request has been refused, or when no other response is applicable. 405 Method Not Allowed The method specified in the Request-Line is not allowed for the resource identified by the Request-URI. The response MUST include an Allow header containing a list of valid methods for the requested resource. 406 Not Acceptable The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. 409 Conflict The request could not be completed due to a conflict with the current state of the resource. This code is only allowed in situations where it is expected that the user might be able to resolve the conflict and resubmit the request. The response body SHOULD include enough information for the user to recognize the source of the conflict. Ideally, the response entity would include enough information for the user or user agent to fix the problem; however, that might not be possible and is not required. Conflicts are most likely to occur in response to a PUT request. For example, if versioning were being used and the entity being PUT included changes to a resource which conflict with those made by an earlier (third-party) request, the server might use the 409 response to indicate that it can't complete the request. In this case, the response entity would likely contain a list of the differences between the two versions in a format defined by the response Content-Type. 410 Gone The requested resource is no longer available at the server and no forwarding address is known. This condition is expected to be considered permanent. Clients with link editing capabilities SHOULD delete references to the Request-URI after user approval. If the server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) SHOULD be used instead. This response is cacheable unless indicated otherwise. 410 response is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable and that the server owners desire that remote links to that resource be removed. Such an event is common for limited-time, promotional services and for resources belonging to individuals no longer working at the server's site. It is not necessary to mark all permanently unavailable resources as "gone" or to keep the mark for any length of time -- that is left to the discretion of the server owner.