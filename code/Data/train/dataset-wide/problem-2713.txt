As you said, if you need something in a pimpl class from another class, then something is wrong. If you can't abstract away the differences, then you can't hide the differences and shouldn't use this idiom. Don't you think it would be simpler to put in ? Each version (Linux/Windows) would have its own pimpl and there would be no need to try to find an abstraction or to try to access private data. Otherwise it gets a bit messy, since your Linux/Windows implementations of will need to accept only the correct implementation: I don't know how easy it is to do this at compile time. 

welcome to Code Review and thank you for your question. You need to profile the code to see for yourself where it is slow. Firebug and Chrome can do this. Only then will you be able to optimize your code. Side note: Be careful about variable names, some of them seem to be in French (dossier). 

Your code is hard to read, and a few test cases would be nice to know what this should handle. For example, to you want to allow multiple lines? Do you want to replace things that are not "amp", like ? Are you sure this will correctly sanitize your inputs? It seems to me that you only want to replace (ampersand + space) by . This version works 1/ for any kind of whitespace 2/ across multiple lines: 

Your algorithm is optimal for numbers that fit into a int, but a lot of multiplication algorithms exist for large inputs. By the way, is bit-shifting authorized? It looks a lot like a multiplication. Code comments 

This only makes sense if the view is a kind of GUI which can throw events at the controller. I don't think it's the case here. 

I don't know how well your trick is going to work on browsers. It might be perfect, but it might not work as you expect at all. If you really care about speech synthesis and make sure that your website really supports it (eg. do you follow the Web Content Accessibility Guidelines?), then go on with your solution as long as it doesn't hurt other users. (Also note that you're using a multiplication mark, why not using something like "BALLOT X" which I feel has better semantics and might be rendered in a way that might make it look better $URL$ ?) Update: added a title attribute, as ANeves proposed in comments. 

The determinates the object which has to be ran to start the . For example, for a MySQL connection, this could be the object with its parameters. 

I've been working on my own website, and decided to write an own framework for it. One of the items in the framework is a view/templating system, used to easily maintain presentation files (HTML, PHP) For this purpose, I used object-oriented PHP programming and tried to apply the SOLID principles. Explaination There is a class, which represents 1 website "page", full of elements (didn't that clear it up). The page class contains objects, which the user injects on the method`. The views are the actual HTML content, where you can put in variables aswell. The variable represents if all the views could be correctly loaded, if not, load an 404 page. The variable represents the directory where the views of this current page should be found. The variable represents the parents of the and element, which can be custom (think of element attributes such as and . 

This mostly speaks for itself, you initialize the credentials in the method. The determinates the object wich has to be instantiated to initialize a Database Connection. 

For the view files and instances, I've made a few validation classes, for also splitting the responsibility. ViewValidation.php 

For setting the correct variable names i used the array to map all variable names to specific classes. The camping car is also splitted by if the camping car is commercially rented or not. A class looks like this: 

I'm making a data parser for road tax data (costs) which parses a JSON file with all weird variable names, which the customer gave me. The costs are different on each vehicle type. The costs at some vehicles are also splitted over the provinces. 

The purpose of is to put standard content (e.g. style sheets or random information) inside the or tag. The purpose of is to put custom HTML parents around the or elements (by custom I mean with specific attributes). Questions 

I have a one function to calculate all the possible plus the for the gutters. In this same function, the grid extensions such as the , and functions are also calculated. 

This is only for getinng a value out of the database, for inserting something into the database i can just do: 

The class contains the directory of where the view file can be found, the actual filename and the variables. 

Blame the tool, but keep your code DRY. The best solution would be to find a way to launch the debugger whenever an ASSERT fails. You could then use the backtrace and select an upper stack frame. Even if it's not possible, you still have access to: 

See, the pattern mentioned above makes it seem like there's a difference between the two branchs, but they're really symmetrical. 

Okay, so let's forget about because using ifs is indeed slower and let's stop depending on Unix which makes things less portable and slightly more difficult to compile. 

You can replace whith . Your CSS will hide the text anyway, but it will be visible for people that don't see the logo (images disabled or screen reader). 

Simply use in the login method. is enough, since is the default redirect type. Since you're doing a , is probably "dead code" here. Use CodeIgniter's Flashdata instead. should be handled in the view, the controller only needs to say there's an error. For example: Trimming passwords is dangerous: what if my password starts with a space? Also, a space will look like a real character in an HTML password form, it makes no sense to trim it. When the validation fails, redirect to the login form and use flashdata to explain what got wrong. 

While it's possible to do handle each problem individually, I think it's much better to use something like Kubernetes, Docker Swarm or Mesos to do this. It's more complicated at first, and it forces you to do things as the authors of the tool consider they should be done, but it also avoids a number of headaches. In those cases, the configuration is done through environment variables, which works very well for static configuration across dev, test and production environments. (Also, receiving live configuration changes is something I've never heard about. Configuration does not change that often, and I believe it's simpler to start a new container when it changes. But it probably provides other benefits too.) Okay, now that I have said this, I'll consider in the rest of my answer that using Consul was indeed the right choice for reasons that are specific to your team. The code itself This will be shorter since the code is actually good, surprisingly so for someone who says to be new to Python. asyncio is well used, but that's less surprising if you come from C#! A few comments: