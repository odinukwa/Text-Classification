I know how to filter the list of tables - using the filter icon. However, this icon is disabled when the Databases node is selected. Still, I am wondering whether it is possible. 

And I am calling this code with various combinations of and to explore the behavior of the async database IO. Please, find below example outputs: 

There is also an export feature, which allows to export some data and here is the problem - it actually exports the database itself: 

I have a bunch of *.frm, *.myd and *.myi files, which are a MySQL database store. I need to extract the data kept in these files, but I do not have a MySQL database engine at my disposal. Is there a tool or library, which can do this? Please, do not suggest installing the database engine (be it MySQL or MariaDB or other MySQL forks). My question is specific about extracting the data without the full blown database engine. In essence, I am looking for an embedded database engine, which can be distributed with my code and which demands no installation. I am not looking into doing complex queries, I just need to fetch all the data from one or two particular tables. Thanks. EDIT I am aware of $URL$ but I do not understand how to download it. What is the licensing for commercial usage? Should I download and install the full blown database to get hold on the libmysqld files (headers, lib + dll)? Even though I do not need the full database? In short, it creates more questions than answers. I am still looking for an advice. 

I have a SQL Server with both TCP\IP and Named Pipes protocols enabled and configured. From the server itself I can connect to the database using either TCP or Named Pipes, by specifying the connection as However from another server I can only connect using TCP\IP using servername\instancename. Adding the prefix just causes a connection timeout failure. Do I need to open any specific ports in order to use Named Pipes? This is a named instance running on a dynamic port. The dynamic port is opened in the firewall. The reason I'm looking into this is because I'm experiencing intermittent issues with an ODBC connection - timeouts, connection dropouts etc. From what I've read these issues have in the past been resolved by enabling Named Pipes - which I've done, but then by default my connections are using TCP, and by force, I can't get it to connect from this server. 

I've never tried this but I'm reliably informed it is 100% not possible. It is certainly not supported by Microsoft, for good reason, so why would you do it? 

I have a SQL Server (2014 SP2) with a linked server to an Oracle 11 database. I have a very simple select statement to an Oracle view which I know should return around 140k rows. But here's the thing, when I run it in SQL Server I immediately see records in the results window, but all of a sudden, the query hangs when it has so far returned only around 2000 rows and it just sits there forever doing nothing else. Sometimes, another few thousands rows appear before it again hangs. The wait state on the query is on OLEDB which is to be expected. I'm thinking some sort of Network bottleneck...? Sometimes I do get an error after a while: Cannot fetch a row from OLE DB provider "OraOLEDB.Oracle" Before anyone suggests it, 'allow in process' is ticked on the provider settings. I'm looking for ideas to troubleshoot this at either the SQL Server side or the Oracle side to check that it's not a database config issue. 

All it does is fire a simple SQL query to a local Sql Server 2012 instance using async I/O API. Notice the Max Pool Size is set to 1000. This function is then called by the following code: 

At first I am starting 100 async IOs, each taking 16 seconds. And it works great, so I increase the count to 200, 300, ..., 700 - boom! A failure, which I have never encountered before. Now, I know the formal cause - the default is exactly 15 seconds. Indeed, increasing the connection timeout (in the connection string) or firing 700 IOs for 15 seconds, instead of 16 - works. But something bad happens - the overall time jumps by a factor of two. It is as if the database server refuses to accept that many concurrent IOs (the exact figure is between 600 and 700), but the client side does not know about it and attempts to open all of them. Anyway, through error and trial (using binary search) I have found that limit to be 648. My question is - where does this number come from? How to change it? The max user connections is 32768, but that is not the case in reality. Is this because this is a Development license of an otherwise Enterprise edition of Sql Server 2012? 

Note, that I do not need a super duper tool, which knows to do all the pairwise conversions. Until now I used $URL$ to convert SQLite to Sql Server CE, but besides having had to fix several bugs in their code, there is a deeper issue with their conversion - all the integral types become 64 bits long after the conversion, which is not good for me. Thanks. 

I am building a pto (paid time off) module for my company, and I'm not sure that my database schema is a sound one. I'm using MySQL. 

In this scenario, my system would process, let's say 5000 emails at once, and increment the counter 5000 times. On the other hand, I could just use an internal counter ($i) and when the process is complete, just add $i to the usage counter. But what if there's an error during processing? I could lose my counter half way through. Another way I could think to do this would be to save batch operations, so when we process 5000 emails at once, we just record that: 

Vacation time that spans from December to January can't be counted in both years, only one. There's no way to know if they "used" time that was going to expire. So excluding it from my calculation will just leave them with a negative balance if they did. Getting the "base hours" an employee gets will require selecting a specific balance sheet item that they system added at the beginning of the year. The system automatically inserts 96 hours for each employee at the start of the year. 

are employees, are the requests they make for time off, and is their time off balances in the form of a balance sheet with negative values for hours used and positive values for hours added. The user's pto balance is figured by summing their pto_balance records for the current . is basically Vacation, Sick, Compensation, etc. Balance line items could be spawned by a request the user made, a manual adjustment by an admin, or the system giving them the year's vacation hours. Compensation time needs to be used within 30 days, so I added an expires_on date. I've noticed a couple of problems so far: 

And this returns: 32 How can that value actually be contextualized? Is it an "average of 32 batch requests per second in the last minutes"? Or is it "in the last second there were 32 batch requests" 

To me that means the instance wants 4GB and can only consume 878MB. There are no other memory intensive processes running on this server. The output of dm_os_process_memory is as follows: 

You might be able to get a performance improvement by using OPENQUERY from the SQL Server side to the Oracle database set up as a linked server. Then you could use the SQL Server MERGE function to merge in any new rows from Oracle to SQL Server, that is, any rows that do not match, column for column, with what you already have in SQL Server. Something like this: 

I've just inherited about 20 instances of SQL Server, as part of a wider acquisition project. I'm in the process of assessing performance and I don't like the way maintenance plans have been implemented. I'm seeing daily blanket index rebuilds (I can deal with this one) and also daily manual updating of statistics. Around half of the databases have been set to Auto Update Statistics = False, for reasons which are not clear other than I am told it is to reduce 'Performance Issues'... I always thought, and worked to, best practice of setting this to True and felt the Manual Update was not necessary if this setting was True. Am I wrong? Can anyone explain what the benefit would be in having this set as False, but doing a daily manual update instead? I should mention that some of the databases are highly transactional (millions of Inserts, Deletes, Updates per day) Others are low in terms of transaction rates, and some are all but read-only. There is no rhyme or reason though as to which have the Auto Update setting set to False. It appears to be a lottery.