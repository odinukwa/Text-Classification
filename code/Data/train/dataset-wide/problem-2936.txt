I'm currently learning C with "The C Programming Language" by K&R. At the moment I'm at the chapter about pointers (since I come from Java, they are new to me). In the book is an example code for a method , which is supposed to read integers from input, but doesn't handle freestanding '+' and '-' correctly. 

I recently read K&R The C Programming Language and wanted to write a small program to count the occurrence of each word in the input (std-input - I piped a file with all shakespeare pieces in there). Since I wanted to learn how to split source files into multiple files with this project I pretty much outsources every function I could think of. This is the part I'm most unsure, whether its bad practice or not (I include multiple libraries from the std-lib multiple times. Is this a bad thing?). You'll see. find_words.c 

One of the K&R exercises is to write a small piece of software to compare two files and print the first line in which they differ. Here is my attempt: 

Unnecessary comments I don't know who else will read this code but comments like followed by this will just make the code more obscure, since the goal of the error message is pretty obvious. Calling strlen for no reason Also it's not really clear to me, why you need to call here 

I modified the version inside K&R quite a bit and was wondering if I did a good job at doing so. My is supposed to return EOF when end of file is reached, 0 if it failed to read the current character as an integer and 1 if it successfully wrote the into . The K&R code begins with the follwing lines: 

when you store assign a few lines above in the -condition. will just search for a , which you assign by yourself with ... Besides these points I can't see any major mistakes. You should just think about your comments a little more (Do I really need this information? Is this self explaining? Is a single line comment enough here?). As I already said: I can't say much about the networking part, maybe someone else will jump here. 

is appropriate and the code doesn't proceeds. Outsource I'm also not sure if it would be better to outsource this part (as : 

If is equal to . Could not create socket will be printed as well as Socket created, which is misleading. I think: 

I'm sorry for the long post (I'm not 100% sure if this is allowed - I'll delete the post immediately if it's not). 

Have a look at the function . It is vectorized so it can treat all your dates in a single (fast) call. Your code should look something like this: 

I would only have put the input directory in its own variable so you have more direct access to it if you decide to change it later. Also, you could have chosen to and used within . 

This can be handled using matrix multiplication. Under the hood, matrix multiplication contains a for loop just like your code does, but it is a lot faster since it is all implemented in pre-compiled code. So first compute a matrix of and where each row corresponds to a combination and each column corresponds to one of your variables: 

If you only want to work with the 3 closest stations, you can write a function that will only keep the three highest weights on each row and turn all other weights to zero: 

(I would even encourage you to drop the and keep a matrix of booleans). Also, since this is so easy to compute on the fly for any given threshold value, I would discourage you from storing the output in a file. You would only need to save the incidence matrix. This way, you will save disk space and read/write computation times. Next, 

With a few changes, you can write a more general function that will take one or more files and do the binding itself (like does) 

Next, from a performance point of view, you are wasting a good amount of time and memory by creating and storing a new vector at each iteration. Instead, you could keep the same initial vector and only pass around start and end indices: 

This code takes about 5~6 seconds on my machine with 19 variables. With 23 variables, it will have 16 times more combinations so it should still run in under 2 minutes. With many more variables, you will likely run out of memory trying to compute the weight matrix: you will have to adapt the code so it finds a good balance between memory usage and computation times. 

Notice how I improved your code regarding the use of , since you had not accounted for the possibility that your user does not have the package installed. If you want to make the package a requirement, then calling is prefered to , the blog here $URL$ offers a nice explanation. If you absolutely want your function to allow to pass "minutes", "days", etc. (though I would stay away from it), you can do: