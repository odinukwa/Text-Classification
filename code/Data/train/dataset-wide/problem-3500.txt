I have an ASP.Net project that's using the ClearScript.V8 library which relies on the Visual Studio 2012 C++ Redistributable to work. I'm faced with the prospect of having to install this on 50+ machines and I'm curious if I can get TFS to do it for me. I realize this straddles somewhere between Stack Overflow and Server Fault so I'm asking on both sites. 

After doing some fairly inconsequential set up of a new Windows 2008 server instance it will cease responding to any connection attempts after a reboot. RDP, HTTP, HTTPS, you name it. I am unsure if this is because the installation has become corrupt or if something in Windows 2008 is triggering security measures and simply blocking all inbound connections. 

Is your DNS server an authoritative name server for the domain? Then simply add an A or CNAME record to your DNS entries and point it to the IP address or an alternate fully qualified hostname of your server. Once you do that go into IIS, find the website and add the hostname to the website filter. 

If you have a static IP that doesn't belong to some colo it should just be a matter of contacting whichever mailserver responsible and requesting that they add your IP to their whitelist. Also do a Google search for SMTP whitelists and put your IP address on as many as you can find. I did this right when I started up my SMTP server and within a couple months I was getting mail through without an issue. Of course all of this assumes you're not sending out some kind of mass email in which case you're probably going to have to jump through some more complicated hoops. 

I need some education about the init.d system on Linux (Ubuntu 12.04, 64 bit, in my case), I have found hundreds of sites (no I didn't look at them all, but I did read some of them) that tell me how to write an init.d script and how to create the symlink in /etc/rc2.d. I still come up a little short on understanding and the ability to craft Google queries that can get me the answers I need. So, I know my init.d script launches. I have it echo log messages into a file, thus I know it is running e.g. before any user's .profile has run. Question is, what is the nature of the environment where it is executing. What happens to the output sent to STDOUT? Does it write to a virtual terminal somewhere? Does it effect anything? The "program" I actually want to launch from the init.d script is a shell scrip, my_shell_script, wrapped around my real program, my_program. The script sets up a bunch of environment variables including the PATH and LD_LIBRARY_PATH, then launches my_program. Should I modify the line that launches my_program to redirect its outputs to /dev/null? Ditto STDERR? Should the launch line have a NULL <1 (or is it NULL <&1 ?) so STDIN gets disconnected? In my init.d script, when I want to start the shell script, what is the proper way to call it? 

and should I use sh or bash. I guess use the one necessary to make the script function? i.e. bash if there is non-sh bash in there? When the init.d script tries to launch my_shell_script does it need to do the same redirection on STDIN, STDERR and STDOUT? Now, my_program was originally developed as a terminal launched program with one graphical window. The main program launches the graphical window, then launches two xterms with separate programs running in them (I have no idea why, I inherited it.) All three programs run forever, but are not daemons: just infinite loops. The main program watches to make sure the other two are running and will relaunch them if they do happen to stop. Should the progra,s I launch be daemons? Or are non-terminating applications ok? In the launch line in my_shell_script rmd with a & so the script can continue past the launch and return to the init.d script? my_program, detects that the graphical window could/did not launch (so I could telnet/ssh into the server where it runs and (re)launch it). If it didn't run a GUI window, it launches the other two daughter programs in the same terminal (telnet) window and all the graphical output is sent as non-graphical text output to that terminal and log files. When I would ssh/telnet into my development server the .profile would run, The .profile contains pretty much everything my_shell_script contains except it uses the screen program to launch my_program so that the logout from the telnet/ssh session would not terminate therunning my-program. Will I need the screen program wrapped around my_program in the init.d scheme. Will the init.d time environment look like a terminal? I assume it looks like a runlevel 1 environment and the GUI window can 't open and that "terminal" is the only output. Finally, what is the best way to stop my running applications? Right now, when they run as user apps, i use killall's to stop them having no way to tell them to shut themselves down. 

I think I can help with some of the differentiation. Full disclosure, I work for RightScale. You are making a good decision to abstract your configuration management from base images--it will preserve your future infrastructure choice. However, when you start adding cloud specific tools like CloudWatch+Autoscaling, you are beginning to lock yourself in. RightScale's dashboard, API and multi-cloud images are AWS-region and cloud agnostic, allowing you to preserve future choice and flexibility, and everything about your system definitions, the monitoring tools, and the RightLink server agent you put on your machines to enable them are open source. On average we see a 60% time savings getting started, 50% on ongoing maintenance of systems, and over 90% when reusing your existing assets for future projects as well admin:server ratios of up to 1:10,000+. Puppet+RightScale works fine and you may be interested in this support article: $URL$ There are still good reasons to create script based ServerTemplates for the PuppetMaster and PuppetClient (makes them easy to maintain later), however you can use manifestos for the configuration of the rest of your environment. You can also use standard scripts in compliment and it's sometimes easier to do that for operational actions. Clustering these server configurations into deployments will help you to better define, operate, clone, and track resources allocated to specific systems. RightScale's autoscaling is fundamentally different from AWS--which can be better defined as autolaunching since it will only trigger the AMI itself to spawn. Server Arrays (server definitions that scale horizontally), can be triggered in 3 ways. Monitoring, which includes over 60 metrics out of the box plus the ability to create your own (collectD), can trigger alert actions for system remediation including self healing (reboot/relaunch), script execution, or scaling. When scaling based on monitoring data we use a vote based trigger to prevent a single node in a cluster from provisioning or deprovisioning resources. This also means that nodes are not being watched as a cluster either so you can be notified when a single server is having a problem (CloudWatch looks at the aggregate). In compliment to load you can also schedule scaling if you have predictable patterns. Alternatively you can define an array to scale based on a job queue (good for embarrassingly parallel batch processing tasks). Aside for automation and asset management, there are many other reasons to use RightScale that generally are not apparent when considering using cloud infrastructure initially, but can end up being extremely important to an organization. Role based security permissioning for your account users, infrastructure security audit reports, managed SSH login rules, cost allocation/quotas and tracking, and multi-credential/enterprise group management are a few. Your software stack is not a problem. We have a lot of experience with MongoDB in other customers like GameTree.TV, although there are no prebuilt ServerTemplates in the library for it at this time like there are for other NoSQL solutions like Couchbase. Please try out some of these tools in the Developer Edition if you have not already, you can sign up at my.rightscale.com. You can also reach me at matt [at] rightscale or post further questions here for the group. There are also some interesting posts on Quora ($URL$ Best of success with your project.