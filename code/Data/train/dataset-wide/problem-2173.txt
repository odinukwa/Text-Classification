If you want something that will be useful for the future I would probably steer clear of trying to search the registry. The hives for SQL Server have changed a bit over the years and it can be troublesome to keep up with. The method with the is flaky at times and although I will use it, not concrete evidence that instances are on the network. I believe it depends on SQL Browser Service as well, which most of the time I find disabled. I will utilize the WMI class . I use this because it offers up more information about the service than cmdlet does. I write everything as functions generally because you can use this to actually just do daily check or verification of the service for troubleshooting. 

Upon loading of the setup wizard, you will select the instance for SQL Server 2012. The next screen you check the shared component you want to remove. 

The basic options for replication in SQL Server are available between AWS and on-premise...as long as you have the network access in place. I'm not sure what source you used to find it was not supported. AWS also offers the Database Migration Service which supports multiple RDBMS and various targets. You can find more information on that here. 

The easiest method would be to move it by restoring the database, and then just clean out the filestream table in the original. If you really need to move it, then it would be treated like any other situation where you want to move one table to another database. The additional steps involved would be repeating how you setup filestream on the original database. 

You could likely take what Chrissy did in this PowerShell script to import large CSV files into SQL Server, then either translate it into C# or have the C# code just call this script. Dump the data into a staging table, and then split out as needed. You do not state that you need to import into multiple tables. I would expect if you have to do this all from C# then getting the initial data into SQL Server table first will make it easier to manage. 

Currently does not support the ability to connect to a read-only secondary replica. The SQL Server, and some of the PowerShell community, however started working with the Program Manager at Microsoft to get and SSMS improvements organized. A Trello board was opened in the past month that we are showing by votes what priority we want Microsoft to take on the improvements. This has actually already gotten some things added to the SSMS March preview. I created a card for the Application Intent functionality so go vote it up and the connect item linked. Right now your only option is to call within PowerShell using the . 

You can review this MSSQLTip to get more information on what and mean in regards to SQL Server Clusters: SQL Server Clustering Active vs Passive In your situation, and based on your comments, the only thing you need to do is configure the dependencies for your resources. So if I have a cluster resource for the the SQL Server Cluster Name and it fails over, then all of the dependent resources will follow suite. I have not messed with or ever configured a SQL Server 2000 cluster so I do not know what how this was done during installation. I am aware that starting with SQL Server 2005 the installation did more of this for you: Failover cluster resource dependencies in SQL Server 

It appears you are trying to use the GUI interface to attach the database. In this instance you are going to have to write a T-SQL statement in order to attach it, and let SQL Server know where you put the filestream data as well. There is a write up here that provides a walk through on doing this, the command the author used in order to attach a database once he had moved the default location of the filestream data for the example database: 

You can explictily deny the permission to one mentioned above but understand that the level you deny it at may not take affect like you think. I recall reading a white paper that walked through how SQL Server goes about validating permissions of a user upon connection but cannot locate it right now. If I recall I may deny them connection to a database but the fact the user is part of the role takes precedence. I would look at auditing specifically for the command to be safe. 

What the vendor is suggesting is a common practice for large systems/applications that require database engine, ETL, and reporting. Each of those components will suck up resources based on their need, so trying to have those run on one system is not a good practice (but it does depend on workload). Each component can run on a dedicatd server, but do require each server to be licensed. The exception will be SSIS and will depend on what deployment module you are going to use. With project deployment module you will utlize SSIS Catalog, this requires a local database instance to run on the same server as SSIS binaries. With SSRS, you simply decide which server you want the SSRS databases to be created on, they do not have to be the same server as SSRS. I would likely put the SSRS databases on the server with SSIS instance (if you are going for project deployment model. Your comment notes AG configuration and setup. If you are referring to SSRS and SSIS databases being part of an AG you can refer to the documentation links below. If however, you are talking about these components interacting with user databases that are part of an AG, that is fully supported. You just need to ensure you are connecting to the listener name for your AG. 

The alternative would be to use WMI, or you can use SQL Server WMI (microsoft.sqlserver.management.smo.wmi namespace). In T-SQL there is no mechanism native that lets you interact with the services. Outside of just using and calling PowerShell or cmd commands. 

There is no tombstone in Availability Groups. However, one thing you need to consider is the mode your AG is in for the replica that is being taken down for 4 days, and how much log is going to need to be kept for that period. An AG syncs up other replicas by sending the data written to the log of the database, if you are going to stop a replica for 4 days that could be ALOT of log space needed. You are basically suspending data movement to that replica by taking it offline (or shutting it down). That is acceptable for a few hours on moderate loads, but when you get into days you need to remove that replica from the AG altogether. This is going to prevent the need to keep all the log data in the database log files for any database in that AG. 

You can see that the 20.0 is just dumped inside of the SqlServer module folder. I did get the error you did when I installed the module from the PSGallery, which is to be expected since the functions are the same name. Your option would be to remove the older version that came with SSMS 2016 or just use the , which will be fine.