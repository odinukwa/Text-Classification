The Post Date dimension has four attributes (with member key columns listed, some of which are calculated in the DSV): 

I have a user account - let's call it 'wordpress' - that I need to allow to access a few catalog tables in another e-commerce database on the same server. I've configured the user with three host masks it's allowed to connect from: 'localhost', the IP address of the web server, and the hostname of the web server. No problems there. The 'wordpress' user also has full access to its own database, granted via the Schema Privileges section in MySQL Workbench. Here, it shows the host is '%', which is what I want, since I don't want to manage three duplicate sets of privileges for the same user. If I look in mysql.db, I see these privileges, with '%' in the Host column. So now I want to grant SELECT permission on a handful of tables in another database - let's call it 'store'. So I try this: 

You'll probably want to do this with bcp, which is intended for this kind of thing. It would be something like this: 

You have to work from the inside out with function calls and parentheses. The first part evaluated will be... 

As others have said: don't use NOLOCK willy-nilly. There are certain times where it's appropriate, and 'every query from a specific user' probably isn't one of them. Use one of the better, safer options to deal with concurrency, or your favorite LART if you've got a DBA/developer routinely wedging up the production system with awful queries. Yes, you could adjust security so they can only select from views that select from base tables with NOLOCK hints, and I could imagine a few situations where that might be called for (operational support staff needing to occasionally examine production data in real-time, perhaps with some sensitive information/columns omitted as well). But consider this similar discussion: "How can I get my car up to the third floor?" "Why would you want to do that?" If the answer is "Because my business is on the third floor, and I need to display the car for a promo/giveaway", then you start looking at ways to get it up there. But if the answer is "Because I would like to go home to my third floor apartment," then the proper recommendation is "So park your car in the lot, get out, and take the elevator up to the third floor." Don't turn assumptions and biases into technical requirements, and don't latch on to your first attempt at a solution. Step back and reevaluate what you want to accomplish. 

I'm trying to get Apache installed on our main database/application server, and I'd like to give it its own IP address on a secondary NIC so I don't have to use a nonstandard port. This requires that I ensure everything else listening on port 80 is bound specifically to the primary IP address, rather than "all". This is no problem for the IIS sites, and I've already configured them appropriately. The Reporting Services Configuration Manager seems to only give you the option of binding to a hostname or IP address, but not both. Is there a way around this via command line tools or direct editing of the config data, or will I need to add a third IP address and dedicate it to Reporting Services? 

You'll have to grant them appropriate permissions at the database level to indicate what they should be able to do. Then grant ALTER permission (or make them the owner) on the schemas in which they can do these things. 

The issue you'll run into here comes from the fact that SQL Server doesn't have the "FOR EACH ROW" triggers that Oracle does. You have to write your triggers to handle multi-row changes, i.e. the INSERTED or DELETED virtual tables can have more than one row in them. If such an update were to happen, your trigger would fail, since would return multiple rows, and subqueries have to return a single value to be used in a direct comparison. The trigger would probably have to look something like this: 

Easiest option, if you aren't relying on features specific to MyISAM or other storage engines: change your tables to the InnoDB storage engine, and use the option with mysqldump. This tells mysqldump to perform all the work within a single transaction, causing InnoDB to give it a consistent point-in-time snapshot of the data, without blocking other data access (including writes). However, MySQL DDL operations are apparently not transactional, and altering table structures during a backup can cause them to be missing from the backup with this option. $URL$ 

If a package is using 32-bit components (e.g. OLEDB libraries), you will need to choose the "32-bit runtime" option on the Advanced tab when running the package on a 64-bit server. 

Whoops, should have been . Or better yet, name your identity columns descriptively, so it can be . Then if you accidentally use the wrong table alias somewhere, customer_id won't be a column in that table, and you'll get a nice compilation error, rather than empty results and subsequent code squinting. Granted, there are cases where this doesn't help, such as if you need multiple foreign key relationships from one table to another single table, but naming all the primary keys "id" doesn't help any there either. 

What account is SQL Server running as on VAIOE? That will be the one that needs permission to access the share on VAION. And if SQL Server isn't running as a domain account, that might be tricky to get it to authenticate correctly. 

Here's a totally different approach that seems to work for this case. Expand and customize it as needed. Change the value of @l to control the number of bits/questions in the output. 

Extra write overhead. Snapshots are copy-on-write, so this will obviously impact performance. A snapshot will share pages from the old database on disk, but it uses its own memory in the buffer pool. If you have a large table, it will end up consuming memory for both the OLTP database, and the snapshot, even for the unmodified pages. You can end up with a lot of additional memory usage because of this, which can lead to more disk I/O if your server doesn't have loads of free RAM. 

It sounds from your description like this Excel sheet will be used as a sort of interactive report. If that's the case, I encourage you to try out Reporting Services. It's included with every edition of SQL Server, ever since 2005. This way, accessing the report only requires connecting to the report server with a web browser, rather than going directly to the database server. You can also do fairly sophisticated reports without having to do all the crazy VBA coding you'd need to with Excel (trust me, I've been there). You can export the reports to Excel files, and it usually does a pretty good job with the formatting. I'd still recommend keeping the report server behind a VPN, however. 

I can't speak (much) for other platforms, but here's what such a function would look like in SQL Server. This is the same one we use on our production server in several places. (The pos column is there for cases where order needs to be preserved.) You could also implement this as a .NET CLR user-defined function, essentially acting as a wrapper to the String.Split() method. 

Is MySQL Workbench doing something horribly undocumented with schema/object privileges? Just for kicks, I granted some table privileges to one of the specific user@host combinations, then updated mysql.tables_priv to change the host to '%'. After running FLUSH PRIVILEGES, it worked perfectly. Weird. 

So despite the fact that the function technically returns varbinary(8000), you'll only ever get 16 bytes with MD5. If you are completely certain you only need MD5, then a binary(16) will do it. If you want to play it safe, and allow any possible algorithm (current or future) that HASHBYTES can handle, go with varbinary(8000). I definitely wouldn't recommend a char type, since that will involve string conversion overhead, and unnecessary storage overhead. 

I rather like SQL Pretty Printer for SSMS. $URL$ It doesn't format things 100% identically to how I would, but it certainly makes the awful 3rd-party code I have to debug a hell of a lot more readable.