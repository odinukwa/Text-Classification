I agree with Matt Simmons' answer. Please let me add that HyperThreading (the Pentium4-thingy) itself has never done any good to my systems. No performance gain, but sometimes even trouble. You're better off disabling it completely. 

It could possibly be any filtering device on the way between your VM and the FTP server. Most firewalls (including home routers) have a state table where idle TCP sessions are reset after certain timeout. You could change the VMs NIC to bridged mode (instead of NAT) to sort out the host OS. Then, make sure your FTP client sends NOOP commands periodically to keep the command channel open. There are firewalls around which close the data connection, if they see that the command session is closed. Regardless if the data connection is idle or carrying traffic... HTH, PEra 

You should start by reading the documentation and come back here to ask specific questions if you run into trouble. 

If you used a real firewall, it would be able look at the command inside the FTP control channel (TCP/21) and open the data port accordingly. Therefor, you only need to open TCP/21 and the firewall takes care of the rest. Of course, the usual SOHO routers (and software FWs) won't do this for you. In this case you should stick with a defined port range (~3 ports per concurrent user) like recommended. 

If it's just another service, set up a new server inside a DMZ (ask your networking guy), configure it with a public IP or let your firewall do some NAT. Name that new server whatever your service will be like, e.g. access.company.com and create a A-Record for it. 

Hmm not sure how one can analyze such a behavior when it's not occuring anymore. Maybe there was some kind of ARP messup. Could you post the sanitized relevant parts of your config? 

From 10.5 on, OS X comes with a new, application-oriented firewall instead of . But ipfw is still installed. If you have trouble with its syntax, check out graphical frontends like or . HTH, PEra 

Usually you need to bind maps/ACLs to an interface. In your case (L3-Switch), this interface should be a VLAN-pseudo-interface (conf t -> int vlan 111) rather than an actual ethernet port. Could you paste the relevant part of the config? 

I tried PHP-IP, it's a webapp with a MySQL backend. But its currently v4-only. Another tool I use is RackTables. It's not just an IPAM tool, rather a rack manager, where your can document your devices, store config details and so on. 

If you need a rather cheep plastic box, go for Netgear, LevelOne, 3Com, etc. They all have PoE models. Or take a few more bucks an get a "real" access point. Trapeze MP-71 or Cisco or something. 

I've seen a lot of PoE switches powering thin-accesspoints for managed WLAN solutions (like Trapeze or Ruckus). Works like a charm and you only have to get a cat5/6 cable to the point where the access point will be located - no need to bother with power cords and such. PoE itself (802.3af) is a well known standard and well implemented by the major networking hardware manufacturers. Never had any problems with it (speaking of several thousands of ports). 

Usually you keep the IDS on the inside of the firewall to keep the usual "noise" of the internet out of your IDS logs. There's no need to have an alarm for a normal portscan every firewall blocks. What you want so see with an IDS (and/or block with an IPS) is all that funny stuff that passes your firewall. 

If you need raw packet filtering for high-bandwidth traffic between your VLANs, use ACLs in your backbone. But if it comes to connecting your network to another, you may want to control more than layer 4. 

You could try to sync with an internal NTP server to sort out firewall problems (every Windoze Domain Controller is also an NTP server, or install using ). 

You could talk to Victor Munoz, who had an interesting talk about AES side channel attacks in 2007. I believe he could give you some interesting pointers. 

should work on any normal filesystem. What do you see with ? Is the symlink created? If it is, check if apache is allowed to open the directory and read the config files. To do so, enter and look for "x" and "r" bits in the permissions (beginning of line). Update after comment: The permissions are okay AFAIK. You should focus on apache then. Are there any errors in the logs? What does debug say? 

Please try to avoid the SMB share at first... Most errors in the middle of conversion come from network problems. If there are other problems with the source image, you'd have the error right at the beginning (< 5%) or at the end if there's a problem with the destination. Copy the machine to the local disk and start the conversion again - it should work. 

You need to set a higher metric on the LAN interface (or a lower one on the WLAN interface). Or just disable NetworkManager for the LAN interface and take it's IP away (). Don't worry, your VM will not be affected. Just make sure you don't shut down the interface (. 

Or you can grep (under Windows: ) for Host- and Domain from or or name and glue it together elsewhere. Edit: fixed Typo. Thanks Benoit Update: The variable is only available when logged on to a domain... The DNS suffix you get from a DHCP server is not put into a environment variable (as far as I could figure out). 

Have a look at the switches' CAM table and make sure the client's and the server's MACs are learned on the correct VLANs. One other quick thought: you are using a mixed setup with tagged/untagged port on the server side. Is the switch able to handle this? Maybe it's easier to set up eth0 (192.168.1.101) as a tagged port (eth0.x) aswell to prevent confusion on the switch side. What kind of switch are you using? 

From my experience, cheap hardware does cost a lot, too. I'm sure you do not need the high end model of a professional server to serve a few websites. But you don't want to miss 

You could restrict the level of recursion with the option, if that helps (not following a certain regex pattern). A level of "2" downloads index.html, its subsites/images/etc and the links on the subsite. 

Usually RAID controllers are shipped with a piece of software for exactly that purpose (and more - think of alerts via mail and SNMP). If the controller came with the server, it's likely that you find the software in the support/download area of your server vendor. 

If you installed Apache via , it should have installed an init-Script (have a look at ). Therefore, it should start automatically already. However, you can run to re-install the symlinks of the init-script. Here is a nice article describing what it's all about. 

Consider that a Systemstate Backup of a 2008 domain controller takes about 8,5 GB now. Don't know about other Roles... But go for 2008, don't set up deprecated Software... 

Don't you have some kind of firewall or at least a NAT router between the internet and your server? On this, you should configure a port forwarding for the ports your public webserver is listening on. And you should consider putting the server into a DMZ. This would eliminate the need to let the whole internet into you local network. 

You could use from another Domain-Server. Or leave out the and let it run as a scheduled job on the server itself. 

If it comes to bigger/wider spread networks where two core switches/-routers are not sufficient, the normal redundancy mechanisms like VRRP have lots of drawbacks (traffic passes uplinks multiple times, ...) OSPF doesn't have. There are probably a lot of other reasons to support the use-small-broadcast-domains-approach. 

Sure enough, a single DHCP server will not supply multiple addresses to one client and let it choose. But if you have more than one DHCP servers on your network (for redundancy in legacy windows (2003) environments?) a client will often get one from each DHCP server. Then, the client chooses one server to send his to. Usually the client takes the server which answered first. 

It would not be that wise to have the users and passwords inside the .htaccess file (or the apache-config itself) for min. two main reasons. See, the .htaccess lies inside a directory of your website. The password file should never lie there, because everyone could then download it and has a complete list of valid usernames. And can brute force their passwords offline. Another reason could be that you could have a large number of users/groups for a BASIC auth protected website. You do not want to mix server config and authentication database. 

You could configure a mirror (or "span") port on the switch. Almost every managed switch has such a feature. If it's your own home network and there are only unmanaged switches, get a hub and connect the "victim",the router and your sniffing pc to it. The "bad" way to get the traffic in a switched environment is called "ARP spoofing". Google for if you need a tool to help you out. Well... If it's not your own network and/or the person using the "victim" computer doesn't know and agree with what you're doing, just don't do it.