(This obviously isn't to scale, but the inner circle would be the actual earth, the black lines are the penumbral rays from the Sun, and the blue lines originate from the center of the sun but reach the plane of the moon (the little gray guy) at exactly the same point.) To test whether this actually works, I need to calculate the occultation of the moon and my imaginary Penumbral Earth (which is 8154.15km in radius), and compare those figures to Fred Espenak's calculations. I found this StackOverflow post on how to calculate the angle between two vectors in 3D space. What I can't figure out his how to determine the apparent width of that angle and whether it is greater than the sum of the apparent radii of the Earth and Moon. I thought the Law of Cosines would be sufficient, but it accounts for the distance between the Earth and Moon as well. Here's a to-scale simulation showing the path of the moon over 24-hours on Jan. 31, with the Sun way off-screen: 

I'm trying to simulate the lunar eclipse on Jan. 31, similar to this simulation I made of last year's solar eclipse, using Three.js. I have the minute-by-minute coordinates for the Sun and the Moon in the J2000 frame -- where Earth is always at [0,0,0] -- and need to calculate the degree of occultation at each moment. I'm treating the Sun as a point, since that's how 3D lighting works in Three.js, and came up with what I think is a clever solution to account for the penumbra: I calculated what size the Earth would have to be to create the penumbra from a point instead of a large spherical light source, like so: 

I'm trying to build a 3D model of the Sun, Earth and Moon in in Javascript (using Three.JS, which relies on x,y,z coordinates for all objects) in order to simulate the Aug. 21 eclipse. I've successfully figured this out using the Kepler method that NASA describes, but would like to use the HORIZON ephemeris data for greater accuracy, given how sensitive the timing of an eclipse can be. I've read up on celestial coordinates, but still can't quite figure out how to take the output of the HORIZON tool and convert RA, Dec, etc into 3D coordinates, the way the Kepler document outlines. Can anyone point me to an authoritative primer one how to get from celestial coordinates to geometric coordinates? Coordinates based on AU are just fine -- I've already figured out how to scale that in the simulator. Thank you! 

Einstein maintained that not only was a universal reference frame undetected, it was unnecessary, and Occam's razor should rule (i.e. that if something is unnecessary for the theory to work, then it shouldn't be included in the theory). It is interesting that both theories actually predict the same things, but in the end, Einstein won. Most physicists these days would state that a universal reference frame does not exist. Since that time, two key things have happened that impact this. First is the discovery of the expansion of the universe. This means that, even if we were to make an arbitrary universal zero position and time, other reference frames that start out at stationary compared to this reference frame will start to move away, even though any object there has undergone no acceleration. This greatly complicates any attempt to set a universal reference frame, an makes it much easier to consider that none exist. Tick one for Einstein. The second thing was the discovery of the CMBR. This is the relic of a change in the entire universe at around 380,000 years after the big bang. At that point, the universe went from opaque (where light couldn't travel very far without encountering some matter to interact) to transparent (where some light could travel consistently without interruption until someone like you measures it). Two interesting (and relevant) features were found about this CMBR - it comes from every direction (consequently it is universal, i.e. can be seen from anywhere), and it is very consistent in intensity from every direction (termed isotropic). This means that anyone, anywhere, can measure their speed relative to the local knowledge of the universe. Furthermore, this effective reference frame can be used to measure velocity irrespective of the expansion of the universe, if one considers certain interpretations about comoving reference frames. Although this is very different to a universal reference frame of an aether, it is certainly, in one sense, a universal reference frame. Tick one to Lorentz. So what does this mean? Does it mean that Einstein was wrong? No. Einstein was concerned with the physics of light and electrodynamics, of the relationship between time and position and velocity. The basis of Einstein's argument was that, no matter how fast you go relative to any other object, the physics of what you measure locally will be the same. The original concept of a universal frame implied otherwise, and Einstein has been proven experimentally correct over that original concept. However, the concept of using the CMBR to define a universal reference frame is a slightly different idea than the original concept (and more in line with Lorentz's final theory). It does not imply any change in the local physics due to relative speed. But it is, as suggested by Rob Jeffries above, a useful reference frame. I would argue it is a special reference frame, in a manner that science has created special zero points throughout history (e.g. sea level, 0 degrees latitude, binding energy etc). None of these zero points change the physics of what is measured locally, but they make it much easier to compare measurements at different locations etc. In the same way, the CMBR reference frame makes it easier to answer a range of questions about non-local physics. For example, what is the age of the universe? (The age is maximum at the CMBR reference frame.) So, in conclusion, when we see some arguments between physicists about whether the CMBR is an absolute or universal reference frame, it is usually because one side or the other is interpreting the term in the same manner as the original concept, with all its incorrect implications, rather than the lesser concept of a natural definer of the local speed to a universal feature of the universe. 

With the above result, I obtained three pixel diameters of Jupiter (one from each of the coloured circles), and with a little bit of calculation, realised that the yellow circle gave rise to the most accurate value of Jupiter's diameter (which was surprisingly off by less than one percent!). My questions are: 1) Why is my original image like that? Is it due to some form of light scattering? 2) Is there a better method of obtaining an accurate pixel diameter than posterising the image 3) Is the posterised result expected? Are there names that can be given to the three distinct spherical objects (which seem to resemble shadows, like the umbra, prenunbra, antumbra, etc.)? Is there a reason why the middle posterised object gives the most accurate value? 

As many of you may recognise, this is a picture of Jupiter and its four Galilean moons. Using these images, I am aiming to calculate the mass of Jupiter by finding the orbital distance and orbital period of each of these moons, and then plugging those values into Kepler's Third Law. However, this requires a seemingly tedious process of the following sort: 1) Locate the centre of mass of Jupiter 2) Measure the distance to each of the planets I have a lot of data (many, many pictures). I am hoping that there is a relatively easier (or even more accurate) method of doing all of the above than using software like Gimp to do everything for each image manually. Can anyone recommend anything? 

I wanted to measure the pixel diameter of Jupiter. As evident, the image is quite blurry, and thus, many value of equally justified pixel diameters can be obtained. To eliminate this I posterised the image (which is technically, quote from Gimp, "designed to intelligently weigh the pixel colors of the selection or active layer and reduce the number of colors while maintaining a semblance of the original image characteristics"): 

I found the diameter to be 135 pixels in my image. Here's what I did: \begin{align} f_e &= \text{Focal Length $\cdot$ Barlow Multiplier}\\ &= 1.2 \cdot 2\\ &= 2.4 \end{align} Then, to calculate the field of view: $$\text{Field of View} = \frac{\text{Sensor Size}}{f_e} \cdot \frac{180}{\pi}$$ Where the sensor size is the length in millimetres of the size of the camera CCD (I used the horizontal axis, or the longer side, to get the 135 pixels, meaning that I'd use 22.2 mm), and the second fraction is there solely to convert radians into degrees. Substituting my values, I got: \begin{align} \text{Field of View} &= \frac{0.0222}{2.4} \cdot \frac{180}{\pi}\\ &= 0.53^\circ \end{align} As my entire image is 4271.8 pixels wide, and I know the angular field of view, I used ratios to get the field of view of the 135-pixelled Jupiter to be $\theta = 0.017^\circ$. Then, using basic trigonometry, I was able to calculate the radius of jupiter: $$\tan \left(\frac{\theta}{2}\right) = \frac{\text{Radius of Jupiter}}{\text{Distance to Jupiter}}$$ The photo was taken on March 22, 2016 - Wolfram Alpha gives 667.6 million as the distance to Jupiter on that day: $$\tan \left(\frac{0.017^\circ}{2}\right) = \frac{\text{Radius of Jupiter}}{667.6 \cdot 10^6}$$ $$\therefore \text{Radius of Jupiter} = 97\ 577\ \mathrm{km}$$ Googling the radius of Jupiter gives $69\ 911\ \mathrm{km}$ as the result. Is there any reason why my value is so significantly off? Anything wrong with my procedure, anything I'm missing? I was not able to to upload this image I took as the file size was too large, however, the image does not lack clarity and I am completely stumped as to why my result is off by such a significant amount. Any help will be greatly appreciated, thanks in advance.