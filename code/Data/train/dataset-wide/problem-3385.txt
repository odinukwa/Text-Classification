I'd be tempted to time it- if it comes back quickly assume refused, otherwise timed out. You may get some edge cases where it is refused just before time out period, but at least you should get reasonable results. Using bash's time command will give you what you need. You'll need to figure out what the thresholds should be for a refused and a timeout, maybe through trial and error. 

One of the very interesting points talked about by one of the Cisco network leads at the Qualys stand at RSA was that the major difference is one of scale. I'll have to update this post when I get home and can source my notes, but he basically said the problem is that now the number of IP addresses he is responsible for is over 1 nonillion. That's a 1 with 30 zeros after it. Scanning a host for ports 1024-65535 can take some time, but assuming 1 minute per host, 1 nonillion hosts would take 1900 sextillion years. So the real change in security scanning between IPv4 and IPv6 is around how you target hosts or subnets; no more blanket scanning of a range! 

Wordpress on Windows 2008 IIS requires that you grant read permissons to the IUSR account and the IIS_IUSR account on the root folder. If you want to add attachments with your posts then you need to add write access to IUSR on the wp-content/upload folder. If you want to be able to dynamic updates to plugins and such then you need to grant write access to the wp-content folder. I would recommend only granting write permissions to the wp-content folder when you are performing upgrades, and then remove the permission when you have finished. I wrote an article about this on my blog after working through the same questions. 

Pardon, because I'm not super experienced with various Linux distros, but from the Active Directory side, this sounds like you may have a problem with your RID Master. If the pool is depleted and not being replenished, it may be that the other domain controllers cannot communicate with it for some reason. What happens under the hood is the RID master allocates a pool of (i think) 500 RIDs at a time for new objects, and when that gets to less than half a new request is made and a new block of RIDs is assigned. I would recommend trying a full dcdiag and looking through it for any errors (or asking your AD admin to do so) as a starting measure. 

Depending on the hardware, you shouldn't be able to get access to the private key (or for some devices you can through an administrative interface) That's the whole point. If an attacker could get the private key then the security is broken, so the private key will never be transmitted. Your pcap will not have it (or if it does, you'll want to go with different hardware as this isn't secure!) 

You could do something simple as a first check: go to one of the internet speed check websites - these let you determine upload and download speeds, and often the latency as well. You run it, and let the client run it - compare times. 

data 52e is the key, this means that the AD server is saying 'Invalid Credentials.'. I'm not readily familiar with JXplorer so I'm not sure how you set the credential for the session, but something is going awry there. 

Is the Windows 10 system part of a domain? When you load this module by default, it attempts to look at your service records, find an efficiently located domain controller and map it to the PSDrive "AD:\" so that you can navigate it within powershell and review records. It is possible to disable this: $URL$ 

App Pool crashes are usually because the AppPool Identity isn't a member of the IIS_WPG local security group... Additionally, the AppPool identity must have read access to the web content that is being displayed... 

While I am a little confused about this statement: Or is there a ... way ... to filter out ... RTMP to 80, but still allow RTMPT to 80 (where all four hostnames are identical)? I would think that you could also try and create an IPSec filter to block certain traffic to/from specific hosts and allow certain traffic to/from specific hosts... 

Your best solution to this problem is absolutely a conditional forwarder, although as someone pointed out above a delegation would probably work as well if your DC can route to it. Of course, if it can't you'd have bigger problems. Otherwise, just typical split-brain DNS scenario where you're answering most clients for what you have, but anything specifically to www.contoso.com you can forward to this other server. With the contoso.com it gets a wee bit hairier for kind for the same reason the other commenter mentioned. Your AD domain is using this. If your domain were instead a subdomain such as 'ad.contoso.com' you could also simply use a CF here. That, of course, assumes your dept1/dept examples are correct and not like dept1.ad.contoso.com If your servers are at least 2012 R2 I believe there is a new functionality for this: $URL$ Hope this helps. 

I notice you haven't distinguished any networks/computer types by risk or by quality of service. I would have a think about what machines on any of your networks may contain sensitive data (medical/personal/financial) and create separate VLANs for them so you can manage and audit access. Universities tend to have a culture of open and free access, but you need to look at locking down access where necessary to prevent fraud, blackmail, data destruction etc. Also look at where your VOIP kit sits - if it is all on purely logical VLANs then make sure the QoS is set for it, otherwise when the networks are busy you will find VOIP unusable. Update on VOIP : VOIP is much more sensitive to latency, jitter and other issues which TCP/IP is mostly immune to. Data packets can arrive at odd times, or even out of order and the TCP/IP stack rebuild the information stream pretty well. With voice traffic you notice jitter or missing packets very easily, and above a really low threshold voice traffic becomes unsuable. You can improve the quality by adding latency (to allow buffering of more packets) but this also annoys users. What QoS (Quality of Service) lets you do at the router level is prioritise time sensitive traffic at the expense of data traffic. Your data will still get through, but as it is more immune to time issues it doesn't tend to matter. But my main comments would be - seriously, get a professional in; that is not a small network, and good luck with it, hope it goes well. 

Sure. Create a GPO with a WMI filter scoped to Windows XP, and apply the deny logon interactively/locally rights to DOMAIN\Domain Users, that should prevent them from being able to logon. Although you might get some loud and rowdy responses, be careful of that if you have any concerns of more senior management frowning upon it. However, they cannot actually "hide" this from you. The operating system is included in the computer object and you can perform a powershell query to detect the systems that still report as that version of Windows. As I recall this value should update if they use install a new operating system. A powershell script that seeks out the values of each computer object's attributes called "OperatingSystem" and "OperatingSystemVersion" would tell you what you needed to know. For example on my workstation, these return: OperatingSystem: Windows 8.1 Enterprise OperatingSystemVersion: 6.3 (9600) (Major,minor and build#) Does that help?