Sender addresses frequently are different from the sending domain. I relay a domain which does not have its own servers with no penalty. SPF is appropriately set up for the domain. Prior to setting up my own server, I relayed via my ISPs servers, again with no penalty. Alternatively, you could arrange to relay via the clients server. 

Run fsck first to ensure the data is consistent. You may have to use sudo to gain the require privileges to repair. Then you can use to remove the file. You may want to use less or more to read the file first to see if you want to keep it first. There are a number of tools which allow you to browse and delete files. I use mc and emacs from the command line. If you use a graphical interface, the file browser will also handle the cleanup. 

You don't have an X display to export. Look for X*.log in /var/logs. This should show why x is not starting. Do you have a gmd configured to listen on TCP? If not it won't spawn a server for you. I found vnc4server worked best for me. I start it out of xinetd using differnt ports for different resulutions using configuration like. This gives me a login to gnome on my system. 

For a small network, I use a lightweight DNS server inside the LAN. works well on Linux based systems and also works for Mac. It can load addresses from a hosts file which makes it easy to configure. It can also act as a DHCP server and serve DNS records for the leased addresses as well. 

You can have all the services resolve to a single IP, then use port forwarding to direct the traffic to the appropriate server. This is a commonly used solution. If you are running an email server you should either get a fixed IP address, or use your provider's relay for outgoing email. You wouldn't need a DDNS solution in this case. Many providers dynamic IP addresses are listed in blacklists, and this can cause delivery problems. You may be able to use BGP to push routing for your IP block. You will need to redo this every time your dynamic address changes. This may not be stable. However, that appeared to be the solution used by one of my previous ISPs. 

The message should have been rejected based on the domain in the return path and/or the domain in the HELO command. Try to configure your server to reject mail based on these factors. I would consider accepting the message is a configuration issue for the mail server. I believe OpenDKIM behaved correctly signing a message from a local address despite the external IP address. This would be the behavior if you had authenticated from the internet before sending. 

There should a white list file you can add their IP address to. Look in the Exim configuration file for the the message. There should be lookup there. This will be the file you need to add the address to. Check your logs to see which servers you are blocking. Unfortunately, you are likely blocking banks, airlines, and governments among others. All organizations that should be capable of getting something this simple right. 

ubuntu-minimal depend on python. Therefore you can count on python being installed on Ubuntu. Debian shows python-minimal tagged as system boot. Therefore you should be able to count on python on Debian as well. As noted by others, a minimal Debian installation does not include python. 

If the message arrives in a single transmission, then Exim should removed duplicates in the process of delivery. This is unlikely to happen if the domains are different, or have been forwarded. Check your logs for the offending messages. If the messages arrive in separate deliveries with the same Message-Id it is fairly easy to remove duplicates using that header. Exim will deliver using which can do the deduplication during delivery. During testing the duplicates can be delivered to a separate mailbox so nothing is lost. I would encourage the user to unsubscribe from the duplicate addresses. A forward rule can be used to distribute to other addresses. 

Yess, if you want to have your server other domains you must add them as additional zones. This will require reconfiguring your bind server. The simplest configuration is where your server is a slave to another server where the master copy of the domain is maintained. In this case your server will be a secondary server. If your server is to be the master you will need to configure the entries for the zone, and ensure the zone is configured with at least one secondary server. If you only want to server content for them, they can configure their own DNS servers to point to your server. You will likely need to configure the services you are providing to be aware of the new domain(s) they are serving. 

Unless you have a high volume of email you shouldn't need a dedicated email server. It is common to dedicate a domain name like or to email. This can co-exist on the same server as the web service using the domain. Use of dedicated domains in this manner is a sign of professionalism. A few things you should consider: 

Your errors should be in /var/log/daemon.log. Comment out the include for /etc/bind/named.conf.default-zones in /etc/named/named.conf I have the zones defintions for my public zones in /etc/bind9/named.conf.zones. My external view (included in /etc/named/named.conf.local looks like: 

Spamassassin does not block spam, it merely identifies it. It is up to the calling program to deal appropriately with the results. The headers added are what I would expect if a message has been filtered through Spamassassin. In this case it appears ab X-Spam-Status: header was included in the spam. This will confuse filters that rely on the first header in the message. Existing spamassassin headers should be removed before the new headers are applied. The method to do this depends on the mail server software and how the headers are being added to the message. It is common for the mail server to call Spamassassin on all or most incoming messages. However, each mail server has its own way of configuring this. In addition, the messages can be filtered on a site basis (only once no matter how many recipients) or a per user basis (once per recipient). Some configurations require each user to set their own spam thresholds. It is also possible to filter messages on the client. This would be per user filtering, usually with per user settings. At this point the only appropriate action would be to filter the message and place it in the spam folder. 

The program's report will include errors in its output. You may want to run it against the rotated logs when they are rotated. It gives a good overview of how your mail is being handled. Looking at its code, it appears you mat be able to find errors by grepping for . The includes the most significant errors. The may be easier to scan as it includes only messages which were rejected. 

The guidelines may be rather old, but the setup process hasn't really changed. The Exim4 Specification includes a chapter on Content scanning at ACL time that should get you started. I believe you need to install for scanning to work. This is a an extact of my configuration. I've stripped some research functionality. Once you've installed you need to uncomment the line in the main configuration reading: 

Consider monitoring the system with a tool like or . This will give you information on which component are busiest. I like Munin for its graphical reporting, also the ability to set alerts. sar gives good details on disk and swap activity. Including the service time in the Apache log is useful. I usually change the remote logname (ident) field () with the time taken to serve the request () in the extended log format. 

There are a couple of Perl libraries which will call out the mail server and verify that the address will be accepted. This will allow you to prune any addresses which will fail during sending. Not all domains will fail invalid localparts (users) when you send out mail. Use a valid sender address to which they can deliver the bounce message. Also note that some domains will give you a temporary failure for non-existant users. Use a proper mailer on your end, and let it bounce the messages after delivery times out. You will need to parse your bounce messages to determine why the message bounce. A properly configured server sending properly formatted emails should not bounce. Follow the RFCS and make sure you stay off the blacklists. 

If you want both functions I believe you will need to use in at least one router, or combine both functionalities into a single router. 

The above options handle what the customer needs to do. On your side you need to configure your web server to handle requests for www.example.com. There are several options: 

Set up the pointer for each server to indicate the name of the server on that address. This should be the same as your mail server is using in its banner messages and when issuing HELO commands. PTR records are not significant for incoming messages as the remote server will trust your DNS MX records. You will want to configure two MX records one for each server with different priorities. The MX records must point to A records. If your SPF records specify MX in the list of permitted senders, you should have no problems with your server addresses. The PTR records you need are: 

This can be handled by setting up appropriate routing rules on the server in the middle and the two endpoints. The default method for routing is to use DNS MX and/or A records to locate the mail exchange for a domain. First an MX record is used, and if that is not available, the A record is used. Most MTAs (Mail Transfer Agents) allow manual rules to be configured. Manual rules are often required when acting as a relay server. In this case the DMZ server will act as a relay between the two domains. Configure the mail servers in each of the domains to route to the relay server. Bi-directional access between the DMZ and the internal mail servers will be required. Other than the manual routing, standard mail delivery rules will apply. 

AAAA records can be delivered by both IPv4 and IPv6 resolvers. You can add IPv6 addresses to your domain and they will be delivered. People with IPv6 only resolvers (which I believe would be relatively rare) won't be able to resolve your domain in any case. The standard work-around for DNSSEC is to use DLV (DNSSEC Lookaside Validation). This has been used for a long time and has been the only way to validate a number of TLDs for a long time. As TLD providers add DNSSEC support the requirement DLV disappears for those TLDs. Overall uptake on both IPv6 and DNSSEC has been very slow. Where I am, I still require an IPv4 tunnel to get IPv6 connectivity. 

This should be completely transparent to your users. Any problems you encounter should be restricted to servers which are non-compliant with standards. You can use the double A record technique for other services, but there will be delays when clients try the address which isn't responding and wait for it to timeout. 

If NUT is shutting down bases on a timer script, this is the kind of line I would expect to see in the log. It appears the UPS stops communicating after 5 minutes, and NUT is doing a last ditch FSD (forced shutdown). This is what I would want it to do. Five minutes should be long enough to indicate power is not likely to return quickly. 

The router on the 192.168.1.0/24 should have a route for 192.168.2.0.24 via 192.168.1.30. You could add this to individual devices on this network. The wireless router should be routing all traffic to 192.168.1.0/24 to the router with the address 192.168.1.1. However it may be Masquerading (NATing) traffic. Disable masquerading for traffic to 192.168.1.1/24 if you want devices on 192.168.1.0/24 to be able to connect to devices on 192.168.2.0/24. Add the route in the control panel of the router on 192.168.1.1, save and apply. This should make it persistent. Adding the route by executing a routing command will not be persistent. However, if you can add commands to run on reboot, that would also be persistent. 

Aptitude will automatically remove old versions when you install a new version. Dependencies are also automatically handled. The screen shot you are showing indicates the versions you are asking about are fully removed, or have never been installed. The versions show up on the list because they are available. Likely the oldest version was likely included in the initial distribution. The other two versions likely come from update and/or backports repositories. 

Add to the search list in . You should have your domain first so that it is checked first. If your domain was , the following search list might be appropriate. 

Try the command to see what your fully qualified name is. If you don't have a static address with the appropriate DNS entries use your ISP's relay to send email. If you are sending email as localhost or localhost.localdomain, it will run into problems with spam filters. Your mail server must use its FQDN (fully qualified domain name) to send to the Internet (not required for your ISP's relay server). Try sending email to an external email account you have access to and check the headers there. It is common to see email sent to the mail server from localhost or localhost.localdomain. The mail server must then use its name to forward the email. Normally, your email server should known its FQDN so you should get received lines like: