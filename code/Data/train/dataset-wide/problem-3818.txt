While I think that you could contact them again to say that you are physically available again, I don't think that you should propose a face-to-face interview. You don't have all the details of the hiring process. Maybe they don't need another interview. Maybe they are waiting for some budget, maybe they already have someone, etc. While you can be active to arrange details, the decision to have an interview or not lies with the hiring company. Not the candidate. 

The fact that it is a scolarship does not change the equation. And generally, it is recommended not to tell anything at your working place until you get something clear (job offer, contract... or scolarship acceptance). Your work probably includes a trial time (typically a few months) which is also for such cases. So for the time being, no need to tell them anything. But as soon as you get a positive confirmation (possibly in paper form), do tell them as soon as possible. You might want to check your contract to see how long you have to work when resigning. It's usually different during the trial, but both should be in your contract. 

We all love some gossip, but they can be harmful to the subject. While it's reasonable to ask some help to deal with it, I would recommend to avoid doing it in written form. She may behave like a 3-years old child, but she's a grown up, you're not her mother, if she decides to leave, let her do it. It might even be good for her, for all we know. Clarify with HR the whole situation. But you're 8. HR probably know how you behave usually, so I would not worry. Never, ever again, leave your computer unlock when you aren't working on it. Especially if you have potentially sensible documents on it. I have heard/read about people being fired for exactly this. (Even if, hopefully, rare). Don't use your professional mail for personal discussions. While often tolerated, it is usually not allowed. And your professional mails are often stored, meaning they might be fully accessible to your boss and/or the IT. 

Talk to your boss. Your boss can only manage when he gets the info. For whatever reason, he might not have realised the increase of workload, and the weariness you have. It's perfectly ok to tell them. If you don't want to be too abrupt about it, start by asking what are the perspective for the new hire. And if you don't want to appear as complaining, don't complain, simply keep to the fact: you have a lot of work for you to handle and you're not sure you'll make it. If you're really overloaded, your boss might prioritize things, or find other resources to, temporarily, take part of it off your shoulder. If you wait until the last moment, and don't make it, it would be much worse and take out any chance for your boss to think about an alternative solution. 

And that really depends on the audience you want to reach. People who would be familiar with the kind of work you've done would expect to see a certain amount of details. For those who aren't (HR?) would not appreciate, might misunderstand, and would essentially frown on that amount of information. So you should keep the name of the places, dates, research centres, etc. But try to see how that experience is relevant to finance. Why does that experience make you desirable in finance, compared to someone who did not have that experience? And, the best would be to get to layman's language... but financial language would be very good as well. It shows you are already projecting yourself on the job. Avoid: 

So you would consider something possibly illegal to retaliate for a situation that you misunderstood... That's probably going to come off worse on your professional image than having misunderstood the situation. Being fired isn't an easy thing, and working to the end of it, isn't much better. You might want to read your contract and all written documents (the only ones that count) to get a better grasp of the situation. Yet you have only few options: 

If your wife is unemployed, meaning that you have a need for her to get a job, you might consider asking your direct boss, or the person responsible for the new customer service hire, depending on the size of the company, and how familiar you are with people around. 

You're essentially down to the same path that anyone who wants to learn something in their free time. If there are no internal experts look for them elsewhere. The following are the best resources 

Though, from your description, Trish sounds to have some issues, I would venture to guess that the reason why she was a upset, was due to a breach of confidence. She might have felt that she could talk to you about anything, anytime and that you would be there to listen. But then she discovers that you don't keep her information to yourself but that you share it with other colleagues and/or friends. Confidence expectation are always something complex, often expected but rarely outspoken. From what you previously described of her, that realisation might have given her a feeling of treason. And she reacts impulsively. So now to your actions: 

Sharing code with an interviewer is a blatant violation of the Software Engineering Code of Ethics and Professional Practice: 

There are probably more benefits... How can I start a discussion within the company to migrate to a better workflow management tool? 

I am a freelance software developer and have three clients that I communicate with via email. I have mobile and desktop notifications set up for my several email accounts (work, personal, university). If I see an email notification, I will generally stop what I am doing in order to respond, even if the email is from a client that I am not currently doing work for (I stop/start my clock accordingly). My average response time is about 5 minutes if I am currently in a situation where I am able to respond to an email. I feel that I have given my employers the impression that I am always available. Should I be waiting an hour (or a few) in order to respond? 

This sheet is now about 75 lines long for the next version release of the app, with some duplicated information and no visual organization except "what's on top is most important". I've been testing out some free workflow/task management tools for the past few hours (on my own time) and I am convinced that it would be beneficial for all the employees of the company to use such tools. What benefits about employees and management can I use to convince him that it's actually a good idea? I've come up with the following: 

My boss, for the entire company's workflow, uses Google Sheets as a sort of feature-tracker/TODO-list. The company employs 7 people, aside from the CEO (my boss), who all work remotely. There are 2 software developers (myself included), 2 linguists, 2 marketing personnel and the CEO's son. I did once suggest to my boss that we at least move to a tool like Trello that functions similarly, but with much more flexibility. This was when he said that Trello would be a new tool that everyone has to learn, and he doesn't want to do that as everyone is already used to the "Google Sheet flow", and that it would be difficult for everyone to migrate. The problem is that if things are pushed into the backlog, as in "not important enough for this next release/campaign", they are often forgotten about. We will continue to add things to fix/add at the top of the list, and things that were low priority before become essentially non-existent. It's also hard to tell why we backlogged something because of the limited flexibility of Google Sheets, and having progress tracking is out the window. Here's an example from my Sheet (feature tracker) for a high-priority Android app fix that got mixed in with other work: 

Aside: You mention that you want to be able to gauge a candidate's ability to write code, assess its quality an cleanliness, etc., right? Well, have them do some simple programming task that requires a bit more thought that the typical FizzBuzz questions (which are designed to weed out non-programmers, or incompetent programmers). Personally, I would aim for a question about describing a real world system in code, and not some complex algorithmic "mathy" question, but of course what you ask is dependent on your industry. 

From your question, I'm guessing that the candidate did not get permission to share the code. Code is owned by the employer, and confidential, unless stated otherwise; so, in this case, this is unethical behavior and you absolutely not accept the code. In fact, dismiss the candidate immediately. Edit: To clarify, the ACM's SE Code of Ethics is not law. It is a simple set of guidelines as to the "do's and don'ts" of our industry. However, many universities and employers are adopting the code as our standard set of ethical guidelines, making sure that students and employees are aware of the code, and follow its practices. E.g. in my computer science degree, I've had at least 4 significant projects involving the SE Code. Many employers in my area also test candidates with ethical questions during interviews, expecting them to have knowledge of the SE Code and to employ it in their responses. 

The CEO of a startup that I work with has, unfortunately, grand ideas about software that we can build. It is in a field that I am interested in, so it excites me, but at the same time I am realistic - there are a dozen other companies that specialize in this software, and they have vastly more resources than we do (I would be the only software developer, and I work about 30 hours per month with this company). Let me be clear here: the software we're talking about has been in development by multi-national corporations for decades, incorporating bleeding-edge research and millions of users' data. We don't have employees, decades, nor experience enough to understand academic research in order to build and improve the system. How can I gently tell my boss/partner “dude, I really wish we could make this, but it’s literally impossible given our resources”? PS - I am on very good/informal terms with the CEO, so letting him down easy in a conversational way would be most logical here. However, I'm looking for a more diplomatic way to break this news to the CEO, especially considering how a manager/project lead would want to learn about the inevitable failure and potential damage to the company should such a project be persued. EDIT: this is clearly not a duplicate of the one proposed. Simply reading the question and answers shows that...