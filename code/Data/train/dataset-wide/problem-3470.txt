Wait... I figured it out, after realizing that you can use regular expressions. I ended up doing this as my single section: 

As you can see all I did there was pare it down to a single section instead of two, and I removed the variable from that section. But rather than responding to all requests like I hoped, it no longer responded to any. It would 404 on everything. How can I set up a generic server listener like I'm describing here? 

And the second was to select the new VPN connection entry, right-click, Properties, Security Tab, and change the Data encryption dropdown to "Require encryption." Neither of these worked. I am baffled why my Mac is able to connect from my network while my Windows machine is not. The Mac setup looks like this (there aren't any "special" settings - this is pretty much the default way of how you set up a VPN on Mac): 

I'm trying to debug a sporadic problem with some Dell tablets out in the field that crash intermittently. Looking at the Event Viewer logs, it seems that Windows automatically creates a memory dump file after the crash. But Windows also automatically deletes that memory dump file within 15 seconds of creating it because there's less than 25 GB of free space on the tablet's hard drive. (I think maybe there's 23 GB of free space, or something like that.) That's clearly still plenty of space, so I wish the threshold wasn't set so high. How can I change that? Or rather how can I disable that cleanup step altogether? I really need to get my hands on one of these memory dumps so I can better analyze what the real problem is. 

Presently the owner of that Registry Key is , and I'm trying to change it to . I am already running Powershell with Administrative privileges but that obviously doesn't seem sufficient... my guess is that I'm running into a bit of a chicken and egg problem here. If I manually edit the permissions of that key using , I'm allowed to do that without problems. What is that regedit is doing differently from my script here? How can I accomplish this programmatically? UPDATE: Per briantist's suggestion, I tried running these commands as SYSTEM using psexec. I saved the Powershell commands posted above into a file on my desktop called chowner.ps1 and then ran the following command: 

I'm using a 32-bit (aka x86) boot.wim file, but I've tried it the other way too by trying to add the amd64/ package. Same error in both cases. What am I missing? 

I ran into a bizarre issue when I upgraded some machines to Windows 10 where incorrect permissions on RuntimeBroker caused problems. I found a solution online that recommended changing permissions (first in the registry, then in DCOM configuration), and I'm trying to write a Powershell script to automate the process. I'm trying to execute the following Powershell script, which should (in theory) do what I need to do. However, at the last command (Set-Acl) I get a SecurityException saying "Requested registry access is not allowed." 

However, when I try to go to $URL$ from my own machine, or from a computer far away and not on my network, either way... I get nothing. It tries to connect for awhile (unsuccessfully) but eventually just gives up. Here's what I'm wondering: 

I've been packaging some proprietary software that runs on Raspbian into .deb files and hosting them in a private S3 bucket using a program called deb-s3. I also use a program called apt-transport-s3 which allows the individual devices to download the packages that I've published. But when I run I see the following warning: 

I'm hosting a private Debian repository for some custom Raspberry Pi code. I originally built the software on Raspbian Jessie (version 8), generated a GPG key which I use to sign the repository, and ran on all the devices, to ensure that they would be able to authenticate my repository. This worked fine, until lately I add some new devices running Raspbian Stretch (version 9). Even though I added the exact same GPG key to them, here is the output I see when I run : 

So I have to confess that I'm not a network admin so my knowledge of DNS is very limited, and I think I've screwed something up. I own a domain--let's call it . I had my hosting provider set it up so that forwards to (my Gmail account). This seemed to be working fine; when I would send an email to I would receive it in my Gmail inbox, and when friends would send to that address I would likewise receive it. When we originally set that up (and when it was working), I don't believe we had any MX records for at all. A little later I started using an email sending service. (Something along the lines of MailChimp, although it was not MailChimp.) Let's call it . I noticed that anytime I would try to send to using MySender, it wouldn't work. It would never go through. Using that service, sending to anybody else from worked perfectly! But when I tried to send mail from to using that same service, it would never come through. So I started doing a little digging trying to find out why that was, and one site I found suggested that I needed to set up MX records for the domain in the DNS. So I just did that yesterday, and now I'm afraid that I screwed things up, as no mail at all seems to be flowing through anymore. Now even when I send to from Hotmail or something like that, it no longer shows up in my Gmail inbox. These are the records I added. Can someone tell me what I did wrong, and what I need to do differently? 

I could install the GPG manually but I'd rather host it, so that I can just run and import it using the ID. Ideally, I'd love to just host that on S3 as well. The trouble is I have never set up a keyserver before so I don't know what sorts of files I'd need or what format they'd need to be in. If I were to have a barebones keyserver with my GPG key in it, what would the file structure look like? And do you think I could replicate that on S3 and it would still work? 

I'm already pretty far down an uncomfortable rabbit hole, chasing solutions to flash a WDS discover image to a bootable USB drive. I was following this tutorial which describes how to use the Windows ADK and the DISM utility to create a bootable USB flash drive with the Windows PE boot image reconfigured as a discovery image. Their "Step 5" instructs to run this command: 

The VPN server is running in Amazon EC2 using this VPN server from Foxpass. I have already taken two steps that I found in other Server Fault answers / guides online to try and remedy the problem. The first was to add a DWORD registry entry with the value of "2" at this path: 

Clearly it is not a fault of the VPN server as I can successfully connect from the Mac. What do I need to do to get it working on Windows? 

However, this only happens on the newer boxes. On the Pis that are still running Jessie, I can run all I want and it does not give me any authentication warnings. Why is that the Pis running Stretch think the GPG key is invalid, even though they're all sharing the same key? I could generate a new key on a box running Stretch, but I am hoping to avoid adding new GPG keys to every single Jessie box. (Right now I have only a handful of the new boxes running Stretch, whereas ~200 of the boxes are still running Jessie.) What can I do to convince the Stretch boxes that this GPG key is, in fact, valid? As requested, below is the output from the command, on both platforms: 

We use Amazon RDS for our databases at work. Recently we got an automated email from Amazon stating they'd be updating the SSL certificates and that if we didn't upgrade our database instances within X amount of time, they would cease to function. Thankfully, they provide instructions explaining how to do this in the AWS documentation. The instructions are pretty straight-forward, although I have to admit I'm a little confused. Step 1 and Step 2 describe how to download the SSL certificate and install it in client applications. Isn't it pretty unusual for a client application to need to install the server's SSL certificate in order to connect to it? I might be totally off-base here, but the analogy I was thinking of was that web browsers similarly don't need to be provided with a PKCS7 certificate file before accessing websites, right? They just access them. Likewise, I don't ever remember having to install a certificate file in MySQL WorkBench, for example, before connecting to a database instance. So I'm thinking that step 1 and step 2 of that linked document (above) are probably unnecessary in my situation, and perhaps in most people's situations. But then, like I said, I could be totally off base here. Can anyone enlighten me on when and why you would ever need to install an SSL cert in a client application accessing a database? 

I'm fairly new to the Imaging world, and I'm going to be imaging some Dell Venue tablets that don't support PXE booting. I've been reading up on WDS and see that I could potentially create something called a discover image in order to effectively find the WDS server, but I'm wondering if I can forgo that in favor of the old-school route. In other words, I'm wondering if I can make some kind of capture image, put it on a USB flash drive, and then transfer the captured image back via the same flash drive to finalize it on the WDS server machine, and then create whatever final image to, likewise, be put onto a flash drive. Basically, I want to know if I can create bootable media without involving my local network that will have the final image on it. I'm sure people will tell me all about how superior PXE booting is, but the only reason I shy away from doing that is honestly that my networking skills are not the best and I'm worried that if I start messing with DHCP it's going to bring down the network. Of course I recognize that doing things by flash drives is physically slower, but I'm wondering if it's technically possible.