If the distribution of "issues" is statistically normal, and 90% of the staff are minorities, then it stands to reason that you'll hear more about them getting write-ups than the others. But you don't have the actual numbers to prove what you perceive to be a pattern. If you cry wolf and you're wrong, you're DONE. You'd better have some facts. 

It's fluff. The language itself has a vast, vast function library that keeps growing with each release. The external libraries available to use with it are legion. (This is what I do) "Wizard" trivializes what a highly experienced developer on this platform might do in a day, which means the person who wrote the job requirement is probably clueless. It's like applying the same title to someone who's spent four years in undergrad and six more through med school... very demeaning. Usually with this type, what they wanna offer in salary is nothing magical! 

Obviously, there are consequences to each approach. Hopefully you'll make choices that are more mutually beneficial. 

Just because (in practical terms) they can allow you this sort of access doesn't mean that they should. All BS aside: there's a reason why companies make a distinction between "junior" and "senior". As a junior developer, you are expected to make a lot of mistakes and oversights. None, from the senior person you're describing, your lead, and their bosses, and their bosses' bosses are going to risk being able to pay their mortgages in exchange for making you feel more secure in your position there. With all due respect, any fool with FTP access can drop files on a server. It doesn't even take a technical user - just someone with a copy of Filezilla, a host name, user name, and password. Many a company has experienced outages due to junior developers itching to prove themselves. So they give you access to do a deployment "on record", but what's to stop you from trying to do "off the record" bug fixes -- things you may not know how to undo -- and making things go from bad to worse? Why should they trust you? It's only been four months, and it takes much longer than that to feel out a staff member's style of doing things. No one's really got time to explain this to you, which is why you haven't received a response. At this point, take a chill pill. Do the best you can at the duties you're assigned. Shine with what you have already. A year or so from now, you'll see more junior developers coming through the door behind you; and if you've paid attention well on the job in the cases where sh-- hits the fan and people are looking to keep negative attention away from them, you'll understand this paradigm much, much better. 

First, make sure you're using the right tool for the job. You haven't shared with us what conclusion you came to that convinced you that you should be using iTextSharp. Are you using a machete, when a pair of scissors would do the trick? This is a common pattern I've seen with junior developers. What does that mean? That means: 

Unfortunately all you can do is involve your local health department. The facility will be closed, though, until changes are made. And then you risk your job if you are found out. Sucks. 

CC: your manager on the e-mail (as verification that you've sent it), and leave the issue alone. Don't go back to check if it's done; don't "report" on compliance or not. Leave the managing to the manager. 

Let's overlook ethics for a second. Perhaps it was unwise for you to volunteer unlimited effort into a project without a definite scope. So the real issue here has nothing to do with money. Instead, it has everything to do with you failing to exercise healthy boundaries. Look, I joined the Army years ago; I'd never have signed a contract that read, "Work me for as long as you need me!" But it seems that's the type of situation you agreed to. So you're frustrated. Really, at this point, you have a few choices: 

If you are banking on company B raising the ante after company A makes a counteroffer, you may find yourself working for neither. Consider this scenario: 

If it's correspondence between the two of you, leave it alone. You're not being paid to be a language teacher, and you will cause a rift with your colleague and will start to be viewed as rather self-righteous. If it's a document that you are creating in collaboration with another colleague, then that's an entirely different case. You want such a document to be cohesive, but in the end you have to examine the tradeoff of try to make it perfect vs getting it done. 

You're wasting your time and potentially creating a situation to cause yourself undue stress with. The manager's "stuck". Other than by the issue of an explicit instruction from someone above that manager, this probably isn't going to change. The manager probably has issues with delegation, and a fear that a new technology isn't something he/she can roll up those sleeves and address personally in the absence of others. It's highly counter-productive, yes. I've been in your position. If you build something during off-hours, and then present it in a sweeping overture to said manager, what happens then? 

Even in the case of #2 above, the whole system is only as strong as the weakest administrator password used. Realistically, a large company isn't going to rush to make changes over something like you're describing. You're probably too far down the pecking order to make much of a difference unless you, by some token, discover a factual breach in the authentication. 

I think having folks contribute medications is a BAD BAD idea. Though it doesn't happen often, medication is contaminated from the source. If there were medical issues created by what gets shared in the office, it would be difficult to trace who brought what. I wouldn't want that many hands on or near anything I put in my body. Best to source this from an established supplier selling ONLY things packaged for single-use. 

I'd say that you leave it alone and mind your own business. She's complaining, but they're apparently still sending her paychecks. She could be using that time to brush up on her skills, or to improve herself; you know, the ol' When Life Gives You Lemons approach. You could suggest that, and it would put a positive spin on her career aspirations. The idea of Alice going back to wherever she's working at and raising a concern is a waste of time. There's no abuse, or anything unethical going on. Simultaneously, there's a ridiculous amount of competition in contract services of all types, and the account exec isn't going to be bothered with such a trifling complaint because as long as Alice is at the workplace, it's ALSO helping the account exec put food on the table. If Alice quits, everybody involved right now loses as John is not likely to replace her, or if he does, there's no guarantee that he'll get staff from the same firm. 

For companies that hire a few contract workers here and there, they are not really going to be concerned with the markup. For larger, institutional businesses, they are far more concerned with the markup because: 

Your boss is nervous because you're at the corporate office and she is not. If you were there hiding in a corner interacting only with your laptop, there'd be no issue at all. But it seems that she's really afraid that your contact with others will jeopardize her own position. Since you're the sole developer, I'm going to assume her technical know-how is limited. If you're there with the decision makers, there's not necessarily such a great need for them to relay requirements through your boss because you're sitting right across the hall. As such, it's making her feel very vulnerable. Interacting with others is really going to help your position there more than it could ever hurt. You can't accommodate this person's fears indefinitely, but you must handle this with tact and awareness. 

It seems that at the moment the OP discovered that the date of the deadline was in question, in the wake of having somewhat of a flaky boss, that human resources should have been consulted for an authoritative answer. This would have cut out the poor feedback loop between boss and employee. Why not just cut to the chase? 

I'd think the opposite, for someone interested in a development track. Someone with the former title "Accounting Developer II" would get sidelined against someone with former title "IT Developer II", because it'd be expected that the latter would have broader experience than someone only doing work for an accounting department. This actually happened to me, where the company wanted to take IT out of my title because I happened to support a non-IT department. For me, I felt such a change would be something I wouldn't want to have to ever explain (and justify) to someone reading from my resume. 

I think that given the fact that you've stated that it's a fast paced environment, the approach that they're taking to train you is not necessarily "condescending" as you put it but rather counterproductive. It's like having bullets flying at you and having someone demand that you keep your attention on a Sunday School lesson he or she is trying to teach you. I'd be very frustrated! You might have a conversation with your manager about being rushed to produce AND being trained at the same time. If you feel confident in your abilities, then it's perfectly fine to ask that the "training wheels" be removed and that your co-worker(s) back off a bit. If they insist on this approach and you remain uncomfortable, then maybe it's not the right fit for you. Don't take it personally. 

Saharsh, I think the greatest part of this internship won't be that you'll someday gloss over the code you wrote. I think it'll be the business skills you'll learn from understanding that people can tell you just about anything they want to get you to do some work for free, but as the other response here (as of right now) spells out, not much of that matters if it's not in writing. You don't have anything in writing - at least, that you've informed us about - that promises a specific payment amount, or a specific scope of work. You're guessing that you're halfway done. What if you get to 99% complete, and then these people decide to widely expand the scope of the work? Because you have no written scope of work, and no written anything on how much your payment is supposed to be, you'll be stuck. I'd suggest you draw up, sooner than later, a contract that gives specifics to these details. If you encounter resistance, QUIT. Someone concerned with treating you fairly will not have a problem with documenting what's expected from themselves and you. But right now, you're wide open to having your trusting nature being used against you. Let's suppose you took this in front of a court of law to argue for your stipend: what could you prove??? Don't believe me? Visit the Freelancing stack exchange and see how many questions are exactly like yours. Lastly: asking for a stipend on the work done thus far might be appropriate if you're generating a contract on paper at this point. 

My suggestion: move on. If you get a call back, great. Don't leave any more messages, because at this point it starts to reek of desperation on your part (meaning they'll offer you the lowest rate they can, if you're offered anything). I'd also recommend some training or reading on how to be a little more assertive.