There is no country on earth (maybe except North Korea) where you can be forced to work. Slavery was abolished a long time ago. Can your boss send you a piece of paper with whatever text he wants? Yes. Does that force you to turn up and work? No. However, there are legal ramifications you should discuss with a legal professional if you are unsure: contracts don't need to be in written form in all countries. In some countries there is a legal notice period that is specified in laws that are used when the notice period is not specified in the contract. If in doubt, ask a local legal expert. Some advice: your question raises a ton of red flags. You don't have a contract. You did not submit documents. You don't know the legal base of your employment. Get to know the legal base of your employment. Don't work for shady types without paperwork. Don't just drop out if you don't like it. Get a contract. Keep to the contract. 

I'll say this, from a personal experience being the newbie. If the senior dev (ie., your mentor) had time to walk you through it, he/she would have done the whole thing already! There's always a first time, and you need to figure it out. Part of the job of being a developer is to be able to read the code and understand it, and the other part is to RTFM/D and figure out what is asked of your project. 

I could be a completely ignorant person here, but that's exactly why I'm asking this. Why does an engineering team need a non-technical manager? What exactly is his job? I mean, I do understand the need for tech leads, which as far as I know, is all we need; that is, someone to provide technical guidance as to how to do certain things or someone to review my code, etc. But I don't see why we need a manager whom I only ever interact with in cases when he comes to me and asks what I'm doing and when I am going to finish my projects, etc, or if I need anything from him (which I usually don't because most if not all of my professional needs can only be fullfilled by someone who can actually code), all of which seems rather redundant given the availability of various project-tracking tools (jira, bugzilla, pivotal, confluence, etc) That seems like a rather waste of resource, does it not? (And I dont think a manager's salary is anywhere lower than 120k!) Edit (in response to answer below): - We already have a product manager whose job is to make sure the products being built will be useful to clients/users. 

It's not your %#@& job to. If you must, be very oblique. Just offer them a higher-productivity alternative, and privately walk them through it, only if they show interest. Then if they still insist on doing it themselves, then let it be. They may have some unresolved identity or competence crisis; if so, don't force it. 

Yes. As long as you supply the guidelines above about how to approach it and what is being looked for. Not just treat it like some binary pass/fail filter with undefined criteria. 

Err, they're not asking you for any follow-up ("Thank you for your thank you/rejection...?"). If you want to send a brief email or note is fine. Unless they're idiots they already totally got that you're able and interested in their consulting division, and after some deliberation they decided to pass on you for now. 

In general this is ok as long as company policy allows it, you pay all your separate leisure expenses, and you take any necessary PTO (although some or all of Friday(/Sunday in lieu) would already have been dedicated to traveling anyway). So, if your company culture and policy allow it, no it wouldn't look bad; if they don't, it would. Now from the cost point of view, if you need to make the case to management or the accounts dept for allowing this, one good technique used is to print off the airfares for a Friday and Sunday return and show them how much $$$ you're saving them. The Friday one will almost invariably be a lot higher, due to demand and the airline industry's trusty old Saturday-night-stay price structure. 

We have recently hired a new mid-level QA person, and the in the first few weeks, he did fine and seemed to catch up decently in training/learning of the product. When we finally assigned him "real" tasks, he did not seem to be able to do it himself. It has been the third month, and yet, he still needed people to tell him what to do in order to finish his assigned tasks or to sit through with him in a product-beta testing session and to tell him exactly if there is a bug despite the fact that we have presented him with docs detailing the expected behavior. "he's new and needs more time"?, fine, I can live with that. But things has gotten so frustrating to the point I honestly believe it's adding negative velocity. The first "major" mistake that got me to pay attention was when he resolved a merge conflict in the strangest way I had ever seen in my entire life. He was working on some tests in a fairly outdated revision of a branch. And for whatever reason, he modified some source files (ie., product code, not test), which itself was already a no-no. Inevitably, when he tried to merge his change back, it got a conflict. And what he did was, to check out a fresh version of the branch, then to COPY AND PASTE all the files in his directory into the new checkout and then committed the change WITHOUT telling anybody. (Now I can tell you how this is so wrong at so many levels, but you probably get the idea) Another similar incident is when an test suite wasn't passing on a specific machine for a branch, which turned out to have an older version of java that the branch no longer supported. And when the dev who owned that part of the product had specifically instructed him to upgrade to the required jdk. But he, instead, reverted the change the deprecated the version to get his test suite passing, and obviously we did not notice that until very recently. When we (another dev and I) confronted him about these, instead of acknowledging the mistakes, he claimed he "did not do it on purpose.", while pulling his manager into the conversation to defend him. (At our organization, devs and qa teams report to different managers) QUESTIONs (sorry for the long rapport) Should I bring this up again to my manager, given his manager was already informed? (I'm concerned it'd feel like "going behind his back" to retell the story to someone else) But if I don't, it just frightens me to think of any future damage that could take place. What is the most polite way of asking him directly "What else have you done? Please tell us now rather than later!" (I'm younger than him, which is why I've had some reservations) 

Below is my attempt to answer this as currently asked. It wastes a lot of everyone's time trying to identify what, if anything, specifically is being asked. I see a very vague title "How to approach a boss who doesn't take full responsibility for his mistake?", no statement on the first line of any specific question, two paragraphs, and still no statement of any specific question. After digging into this for 15+ minutes so far, my best guess is "Missed my contract renewal deadline due to boss misstating it in email, how to respond?" 

Depends on the culture, default towards no. By "shouldn't be mentioned" I presume you mean after you join. Observe the culture, observe what is considered ok, and who tells you what you can do (boss/management/IT/HR/handbook/etc), which of those depts bosses which around. As mentioned by others, Steam is different because it raises IT, IT security and legal issues about installation and frequent updates. So I'd default towards no, and don't ask, unless the culture seems permissive or other people already do similar. "Whether I should even bring the subject up altogether when you trying to explore your company's protocol" is really just something you have to observe and call. 

Writing inhouse software for companies rarely involves travel. It just does not grant any benefit to the company. Working for a consulting company writing software for other client companies may involve more travel because working on-site in the place where the client company is located has it's advantages. So look for consulting companies. They may even be willing to hire you at a place they are not located, because who cares if you live in one place and they are in a second place when they send you to a third place to work anyway. 

Software Engineering is not the scope of this site. However, considering the scope of this site, what you should do is grab both colleagues, get into one room and talk to them. Get a single working solution and then implement it. That's normal workplace behavior. If you get conflicting information, get them to the same table, talk about it until you are clear on your objectives. 

Last week, a coworker, my boss and I went on a 4-day business trip to China. It was fun, for the most part. However, things got rather awkward when our business partners took us out to dinner. They would take us to those karaoke places where they had many young women "serving" you(ie., they'd pour us wine, sing with us, etc) The whole thing made me extremely uncomfortable. I'm in my mid-twenties, but I personally don't think this sort of things are business-appropriate(not to mention I already have a girlfriend at home, who'd probably kill me if she knew!) Anyway, the business is on going, so we are expected to have these trips quite frequently in next few years! Should I tell my boss I do NOT want to attend these "social" events? How do I put it nicely, professionally and most importantly convincingly? I don't want to get pulled of the project as it is my first major project in my career! 

You get an answer to your question. Not bad for a start. You get to know a real life person. This way, you can direct your cover letter to a person, not to an unpersonal "dear sir or madam". Make sure you mention your call in the cover letter. You are known. You are no longer one of the 100 black-on-white letters that all say "I'm a good programmer, hire me please". You are different. You are the one who called. You are the one who cared! That sets you apart from the other 99 who are still faceless entities on a piece of paper. 

Assuming the situation is as described (still sounds fishy to me), you do have another option: stay with the job you have. Just "recently" it was good enough and hasn't changed. The grass is always greener on the other side of the fence. Meaning the other offer always looks better. Until you start there. And get another offer from yet another company. You signed a contract. Keep to it. Learn to deliver what you promised. Save enough money so you can eat the notice period and then start looking for the job you want. In the future, you may want to check more closely what you sign and vote for people that pass better labor laws in your country. No salary in the notice period seems very strange and would probably not hold up in court where I live. 

tl;dr not being challenged is not necessarily a disqualifying character flaw as the others seem to think. Depending on the circumstances, it could be a very good sign or a bad sign. Rather than use the b-word outright, which would come across as slightly unpolished, you should use the vernacular which is 'lack of challenge' (EDIT: in US resume/interview culture). Try to have a couple of specifics: did you want to build a product/ an API, lead a team, solve a specific problem...? And expect that they'll (explicitly or implicitly, at some point in the interview) counter with "Why should we expect you won't get bored here?", and be prepared and able to turn that around into a constructive and relevant list of things you can do for them, which is where you show you've done your homework; this is often a very good way to redirect the conversation back to learning what their priorities are (or aren't). (Caveat: don't do this when applying for a junior job or a genuinely boring job, obviously.) PS: I've also interviewed quite a few people. Like most technical types, I appreciate people being clear, honest and cutting the crap, just as long as they keep it upbeat, constructive and truthful. So, if you aren't challenged, don't be afraid to admit it. Sometimes you can tell just from the resume, or their personality, or their current employer and title, whether they're not being challenged, before you ever meet them in person. The last thing I want to hear is fluffy stuff like "your company will give me opportunities to grow". There are different types of boredom. If you are doing a task that is repetitive, I want to see if you can script it, automate it, parameterize it, generalize it, propagate that methodology to other people or tasks. Whereas if you want to move from level-1 customer support (email/phone) into presales AE, or testing/QA, or devops, or development, or whatever, most rational people can get why you would be bored. (Some roles even come with the expectation that you will learn everything there is to know about the role in 18 months; or burn out within 18 months; which is to say if you didn't get bored within 18 months, there's something wrong with you.)