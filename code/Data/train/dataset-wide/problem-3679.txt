If I remember correctly, just installing the postfix RPM on a CentOS box gives you a mail server that listens only on localhost. If you hit "netstat -ltnp" you should have a line like so: 

I'm trying to figure out how to assign IP addresses from an ippool to mobile units. Ideally, I would like a unit to receive the same IP at each request. There is no data source to use to populate static entries for each unit, so I would prefer each unit to get an IP assigned from a pool first time it connects and then keep that address. Currently, I have the following pool: 

Make sure that the failing users actually reaches the web server with wireshark or tcpdump. (My bet is they don't and you can hopefully blame someone else :) Check for spikes in load or other strange blocking in the server, e.g. do things like 'find / -type f' while the users fail. Maybe unmount any NFS volumes if there are any. Measure roundtrip in the webserver, either by turning on logging of roundtrip time (in Apache this would be LogFormat %D) or using wireshark to see if the time is consumed in the server or in the browser. Installing Firebug in a Firefox on a failing machine and look at its network traffic diagram to see what takes a long time (this is of course assuming that the previous steps have indicated that the browser actually talks to the server). 

First, I must ask: "shutdowns"? Do you mean that the machine reboots or does it actually halt? If it halts, it is either misconfigured (perhaps in BIOS) or something is actively shutting down the machine (i.e. init 0). If not, your primary candidate would be /var/log/syslog and /var/log/kern.log as your problem sounds like a kernel panic or a software-triggered hardware-fault. Of course, if the server runs some service (e.g. apache) may give you a clue too. Often, in situations like this, there are log entries generated, but because the machine is having difficulties, it won't manage to write the entries to disk. If the box is colocated, chances are that it is connected to a serial console by the colo partner. That is where I would look if I did not find anything suspicious in the above logs. If the machine is not connected to a serial console and there is nothing in the log, you may want to consider sending syslog to a different box via network. Perhaps the network interface survives a bit longer, and the log messages can be read on the syslog server. Have a look at rsyslog or syslog-ng. UPDATE: I agree with @Johann below. Most likely cause of halt is processor temperature watchdog. Try checking/plotting temperature in box via lmsensors or smartctl (usually the easiest). I find that collectd is unparalleled at keeping track of large number of variables over time. It can do both IPMI and lm-sensors and hddtemp. Also, some BIOS:es log temperature halt events. 

Don't know about the start scripts. The "master" apache process should run as root (you'll notice it's the one with pid 1 for parent). The entry in passwd looks correct. 

There are many ways to do this. Depending on circumstances, either may be preferable. I think the most straight-forward (if not the shortest) approach is simply something like: 

make sure you have a line saying "auto eth0" in your interfaces file. in order to activate the interface right away, do "ifup eth0". This that doesn't make your interface show up in ifconfig (or produce an error message) there is something more fundamental amiss. 

To be honest, I have not thoroughly pondered the details of your setup as I'm off to bed, but I see that there is a bridge active. The bridge nabs the packets at level 2 which may mean that your rules don't quite do what you expect. In my setup, I need to use the physdev module to do filtering based on inbound/outbound interface. Just wanted to mention this; may save you some frustration. 

Don't do a big bang implementation. Start with some users and work from there. End user equipment How are your users going to talk on the phone and how do you connect that equipment to Asterisk. Some users appreciate a headset connected to their PC, while others need a grey handset with analog dial pad or they will just be confused. Which will you provide and how will they connect to Asterisk? For so called softphones (i.e. a SIP client installed on your PC) not much need to be done. You need a mechanism to handle accounts for these users (e.g. LDAP) and they need decent headsets. For connecting traditional analog phones, there are various sorts of equipment. For small installation, you may be able to get your hands on Zyxel Prestige 2002s (2 ports each), but for larger installations you need rack-mountable equipment of some sort. Services In my experience it is very difficult to get users to actually tell what they expect from a phone system, but once you give them something, they start having all sorts of opinions. So you need to be very clear about what services you provide and require a somewhat anal change management process (more so than is normally required in a small company). Conclusion This sounds dangerous and ominous, but know that the reward is equally great. The advantage of being able to create dedicated phone services, with the same sort of detailed control that you have with other IT services can be very rewarding. It will take some time for your users to get used to the thought that they can actually request fancy features from their phones, but once they get started, you can make their work a lot easier. Some features my users found very useful: 

On an "ordinary" CentOS 5 machine, these work splendidly. On my virtual machine which has been built using "yum groupinstall core" and some minor adjustments, I get this when user myself logs in: 

Yes, this is a bit paranoid, but is typically a faster route to revovery than trying to study the problem and be smart. It seems from OP that this is a mail server. If so, you have an additional problem in that the box may be sending out contaminated mail. I would not release my mail queues until I was absolutely sure it was not being rewritten enroute. 

I'll wager a guess: the only reason the devel package is needed is because it creates a more general .so name, presumably named /usr/lib64/mysql/libmysqlclient.so pointing to the pertinent version. Simply creating this symlink by hand should prolly be sufficient. You should be able use: 

In the older versions of Windows, you could send messages to workstations that would be presented as popups on screens, using "net send". There seem to be a similar mechanism (msg.exe) in modern versions. Similar things can probably be achieved with a small daemon and an OSD library on Linux boxen. You could trigger such a message from e.g. Nagios, but just triggering it by hand will probably be enough. 

Note that since we have disabled most package verification, packages may fail installation at this step. Pay close attention to output: 

The first line tells the box to look in table "1" for info on packets that go out from IP 1.2.3.4. The second line creates table "1" saying that the default gateway in that table is 1.2.3.1. The last line ensures that this takes effect immediately. For more info, see e.g. $URL$ 

Well, if there is a reasonably long list of stuff you want to ignore, you may want to use grep -f for file. Since logs tend to rotate, --follow=name means the file is reopened when rotated. Like so: 

We have T2 instances (Linux 4.9.20-11.31.amzn1.x86_64) on AWS EC2 which exhaust their i/o credits due to disk reads. It may well be that we have excessive reads on these nodes, so nothing strange about this in itself, but the result on the processes on the node is rather peculiar. (v 1.27) captures a normal, expected flow of small reads until the i/o credits are exhausted, when starts looking like this for long periods on end: 

I thought that choosing a key that is unique for the requesting unit would do the trick, but apparently not. 1) Is it possible to achieve what I want? 2) Is there any good documentation that I should have read instead of pestering serverfault? I can't seem to find much useful documentation on FreeRadius beyond what is listed in the config files. 

Well, four machines make a cluster, no? See $URL$ in the documentation for an indication on how to create an "OR" check; one that notifies only when several conditions occur. 

From your description it sounds like the kernel actually believes something explicitly unmounted filesystem from /var. I have not known Linux to "forget" that it had a mount in recent years. My suspicion falls on some cronjob/script unmounting the partition or dbus or someone confusing it for a USB device that has been removed. If this was hardware failure, the kernel will insist that the partition is mounted and generate error messages on access. 

Rinse and repeat. Since core won't do any system setup, you may need to do any number of things before next step. I need to provide /mnt/etc/resolv.conf. We now have an environment that can be chrooted into for issue 3: 

As suggested by Mike Renfro above, idmap_rid is the central component. Below is a list of shell commands that get a box up and running, given a fresh RHEL5.5 box: client_packages: 

My ASA 5510 has the following configuration for an interface. My Ubuntu box (2.6.35) connected to this network will correctly autoconf an IPv6 address, but it will not set a default route. 

My understanding is thus: there is a message queue. A PHP script consumes messages from this queue. The action taken varies across disk access, network activity and CPU intensive tasks. (what coredump said on managing to utilize multiple processes at all.) Also, if there is latency in some tasks (e.g. talking across network links), you may even want more scripts than number of cores. Ultimately, only measurement can tell. Build a test system and hammer it with a realistic message mix. It does not matter so much what sort of system you test on, as long as it actually has multiple cores. A virtual machine is fine; you will still get a decent feeling of what happens as you increase number of consumers. 

If this is the case, you need to do something like this article suggests: $URL$ If it is indeed just a partition, fdisk complains like so: 

screen uses various terminal commands, so it places requirements on the terminal emulator you use to connect. A stupid terminal emulator may not cut it. screen is more bandwidth-intensive than an ordinary shell, mostly because switching between screens will redraw the whole screen. This may make a difference if your serial terminal is something like 9600 baud.