AS someone who has done a lot of hiring through the years, a skills list that took up the entire first page would turn me off. I know you have the skills I need officially listed or the resume would have never gotten to me. Yes, you need one in the resume somewhere to get past the automated filters in HR. But the person who will be making the final decision to interview you is more interested in what you have accomplished than what you know as long as what you know meets a certain minimum for the job. So my first priority in looking at your resume is accomplishments which are either presented in a separate accomplishments section or in the chronological part of the resume (please do not make this a simple listing of job responsibilities either, I am not interested in what you were responsible for, I am interested in what you did). This is what should always be first. 

To resolve this issue, you need to do several things. She is not making work-related noise, so this is something that can be dealt with by management. First, politely ask her to be quiet when she is being disruptive with non-work-related conversations. Ask her every time she gets on a personal phone call to move to the break room because she is disrupting work. Document the times you have asked her, her response and how long it was until the disruption started. Get others in the group to do the same and document when they did it as well. After two or three days of this, go to your manager with the log of what you have tried to do to resolve the problem and the evidence that shows how extensive the problem is (i.e. the number of times in a day or two that you had to ask her to not have a private or non-work-related conversation.) Ask you boss to discuss the issue with her boss and resolve the problem. If the issue is not resolved in a couple of days, you can take your log to HR and ask them to resolve the issue. Be aware, the only way this person may shut up is if she is fired for non-performance. But by showing your boss and hers how often you have to get her off the phone on private conversations, you are actually pointing out to them that she does not apparently have enough work to do or is not doing it. 

It doesn't really matter if you think or we think it was offensive if your boss does. Ask your boss to suggest better wording to you so you can learn how she wants things handled. We all have to adjust our communication style to suit our boss's wants. Maybe she would have preferred you to say, "Bob implemented that part of the site, I will forward your questions on to him." I'm not her, so I don't know what she wants. So ask how she would have wanted you to phrase it. Tell her that you didn't mean to insult Bob and wish to avoid inadvertent offense in the future. You can also directly ask Bob if he was offended (she might have had a complaint from him about being embarrassed by your email, after all) and if he was, apologize. 

In the US, leave of any sort can be disapproved. Employers can make someone come in when sick or lose their jobs or have some sort of HR write-up. It happens frequently in service industries. Employers can require a doctor's note if they think you are faking. Employers can refuse to pay you anything if you have no sick leave even if you have vacation time available (Most won't of course, but there are bad companies to work for). The rules could be drastically different depending on the country. 

Check your employee handbook. I haven't worked for a company since the 1980s that allowed people to take vacation during their notice period, even vacation previously scheduled. 

As a data specialist, I would be extremely annoyed if someone wanted to try to make me into an application dev for the bus factor. That is just shortsighted on the part of your management. It is like asking an accountant to train to do HR. I only bring this up because you are likely to face resistance from these people. I also bring it up because they are not unskilled, they have a completely different profession and if you treat them as being unskilled and stupid it will come across in your training which will create problems. I believe the first step is to identify what things they will most likely need to be able to do and document them in a Wiki. It is unlikely that they will want these people to create things from scratch but to troubleshoot and hold things together until you return or they hire a new application developer. If this is true, then triage what you want to tell them down to the most important things. Make a list of the most common production problems and then create a cheat sheet for each problem on what to do to fix it. Teach them things like how to interpret error messages and how to find information in whatever logging your system is doing and when to reboot the server and what will be affected if you do so. Teach them your coding standards. Teach them where the code is stored in source control and how to use that (while I think most database work should be in source control, it is not in many places, so they may not know how to use it.) Give them a list of any applicable server names and passwords and ensure they have the appropriate rights to work on those servers. Find a local contact for a place that has freelance devs available. Make sure your company knows that they can get support from these people if the problem is beyond the skills of the data people. You, the data people and ultimately your management will be happier if there is a fallback plan. The chances that you can turn these people into application developers in a short time is low. The best you can hope for is that they can fix simple problems and they know where everything is and can explain the business to a freelancer for complicated things. The document everything you can. The goal is that people can find what they need to do the work if you are not there. I would also suggest that you start a process of code review with these people. In this case, it is not so much to find code problems as to get them familiar with your most recent code and its requirement, your style of coding and your thought processes about your design. Along the way in explaining things to them, you will likely notice some bugs you hadn't noticed. When you have a common production problem to deal with after you have gone over the most common issues in a training session, have them shadow you and document every step you take. Make sure you make it clear to them that you encourage questions. If they do the documentation, they are going to be more likely to write it in the way that is best for them to understand. Different people have different learning styles and you are basically creating a Wiki that will be more useful to them than you. So let them decide how to organize it. If their duties keep them from shadowing you, then do the wiki entire yourself as you work on the problems while they are fresh in your mind. For some simple problems, after they have shadowed you and the steps have been documented, then you have them take the steps while you shadow them. This will give them more confidence that they can actually do the task. This is what we did when we converted some application devs recently to data specialists. The basic teaching philosophy should be 

If I had an out of town candidate who was going to be in town on a set date that was close enough to when I was doing interviewing, I would want to know about it. HR is another possibility to contact. They may be doing the intial interviews and scheduling, so letting them know of your in-town availability would also be something to consider. 

Your boss is not doing her job. She needs to step in and resolve this. She needs to make sure that non development tasks are assigned and performed by the person assigned to. She needs to remove task assignment from a peer and do it herself. She needs to write up a performance problem for the person who totally refuses to do assigned tasks that are not development and if he doesn't change, then fire him. That is simply unacceptable performance. She also needs to talk to the team about unacceptable workplace bullying and handle any complaints in that area through HR including firing the individuals who persist in such behavior even after being warned. Tell her more strongly that you need her help to resolve this. No hinting. Speak up about the issue and how the process is part of the problem (in no workplace should peers assign tasks, that is appalling!) If she chooses to not do her job, then your best recourse is to find another one where you are treated with respect and where your development skills are used. 

If you are presented by two different recruiters, they may pass on you because they might end up having to pay both. 

Never just scrap and rewrite the code for someone else. If the person works for you, sit down and explain what was wrong and what exactly you want and then force them to do the rewrite until they get it correct. Otherwise you will be doing both your job and theirs and they will remain not competent. Many people get frustrated when this happens because they don't see why it was rewritten and just assume that everything they do will be rewritten because Joe is a control freak, not because it has problems. They don't get any better when you do this and it does them a great disservice. It also means you aren't delegating correctly and that you will be overwhelmed and they will coast along happily thinking they are great and you are a jerk. It is harder to train someone than it is to rewrite. But once you have taken the time a couple of times. then you will get improvement because very few people enjoy having to redo their work. Now it might be that you need to sit with this person and pair program if they really have very little knowledge. But in this specific case, you make them come up with a solution and you just stop the intern when he starts to go in the wrong direction. You keep asking questions like "Why did you choose this method? Have you considered...library? What do you think the impact over time of doing this would be?", etc. And remember this is not just the intern's fault. If you were not clear in what you were asking for and if you didn't check on them every day and look at interim pieces of their code, then you were as much to blame as the intern. So don't make this a blame session, make it a productive, constructive criticism. 

Maybe she is using that vocabulary because that is her ordinary day-to-day vocabulary. If you have a large vocabulary, it often doesn't occur to you that others can be intimidated by it or find it condescending. I know it never occurred to me at that age and I have talked to many others who have said the same thing. Having learned those words when I was child, it never crossed my mind that everybody didn't use them until probably ten years into my professional career. I had to learn to tone it down, but it took years and years to succeed at it. My advice is to give her the benefit of the doubt that she is not trying to intimidate you and just work with her. 

Different companies operate differently. You need to ask more questions about the copmany culture when you interview to find a better fit for you. In many businesses the ability to interact with users and management is valued and i nmany places devs are expected to get together and brainstorm. Some places like total quiet and others like a lot of give and take. You might be happier in a place with an open office plan as there is typically more interaction and noise. You might also find that the type of atmosphere you prefer tends to happen more at places that do not specialize in software but where it is a cost center not a profit center. So ask about the culture when you loook for future jobs and find a place where intereaction with others is common and you will be happier. 

Three hours a week is hardly what I would consider to be a lot of meetings. Some of my managers spend 4-7 hours a day in meetings. Remember as you get promoted, the time you are expected to be in meeting will increase substantially. So attending and contributing to meetings is one of those things that can get you recognized as someone to promote. I suspect your boss is trying to get you noticed by having you attend these meetings. It could be a professional compliment not an undue obligation. Since your boss feels the meetings are important, they are important. So try to make them useful to you. First, make sure you brief your boss on anything that came up in a meeting he didn't attend that might be important to him. He might have you there because he can't attend or has another meeting. By considering his needs rather than just yours, you may find that there is information being passed that he needs to know about. Sometimes that information may be about your observations of the political alliances of other people. Consider working with others to get agendas for the meetings. Likely some of them would also prefer to have agendas, so they can spend less time and know in advance what will be discussed. It also helps people be prepared for what comes up. With agendas, you can talk to the boss about what he expects to get out of this specific meeting. That might help you get out of some of them. It might also help you understand why he wants you to attend the meetings and what he thinks you should be paying the most attention to. Contribute to the meetings. Meetings are a place for you to shine in front of people you don't work with daily. Just becasue the subject is not immediately useful to your department, it may be helpful to the company as a whole and having an input into solving a company problem is a good thing. Sometimes your outside perspective will help them see things differently. Don't just wait for the leaders to pull the meeting back into focus, you can say things like, "We've gone off into the weeds now, we really need to concentrate on XYZ. Maybe A and B could discuss this outside the meeting since the rest of us are not involved." You don't have to be the organizer of the meeting to get it back on track and get it ended sooner rather than later. If you aren't part of the solution, you are part of the problem of the unfocused meetings. Next use the meetings as a way to make connections to other departments. You say your group doesn't need those connections, but I have found that is rarely true. As a developer my connections to other departments are critical to the success of my projects, as an analyst, they were critical to being able to get things done fast (you know who to go to for what info), as an editor, they were critical to getting my changes respected and implemented. I can think of no department I have ever seen in any large or small organization that exists wholy outside of the need to deal with other departments occasionally. Clearly your boss thinks these connections are important, too, or he wouldn't make you attend. One way that the connections are important to yuou personally is in getting your performance recognized and in getting promoted. Typically high performance ratings are limited in number for budgetary reasons, so all the high performance ratings are discussed ina senior manager's meeting. Those people that these managers don't know or have never heard of have a 0% chance of getting the highest ratings and pay raises. Promotions often involve people beyond your immediate boss. Meetings are critical to these people getting to know you. Of course if you blow off the meeting by acting like a spoiled, bored child, you don't make points with these people either. So be professional and contribute. It could be rewarding financially.