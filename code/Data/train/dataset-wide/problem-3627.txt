After replacing these webservers with 2012 equivalents, this query always returns 0, even though my sites run ASP.Net 4. Does anyone know why this happens, and how to fix it ? 

We're running a Win 2008 R2 server with IIS 7.5 for serving image files. It's only used for static content, and file caching has been set up to cache files for 10 minutes. However the IIS frequently completely flushes the cache (seen by using Perfmon) It's not application pool recycling, it's not because the TTL has expired, so now I'm at a loss :-( I've included a screenshot of the perfmon graph where you can clearly see the issue. Is there anywhere I can see WHY it's doing these flushes ? (Note: I'm aware I could maybe detect it by attaching a debugger to the process, but that's not an option because it's a production server, and it cannot handle the slowdown a debugger would cause) 

We finally solved the issue. It was apparently caused by IIS checking for web.config changes in subdirectories. By setting allowSubDirConfig="false" in our applicationhost.config file, the problem stopped. This is somewhat weird though, as we haven't got any more than 1 web.config file, and it's in the root of the project - still if it works, why complain :-D 

CentOS 6.4 broke backwards compatibility in some library versions, and so latest Webtatic builds only support CentOS 6.4 for some packages (most of the PHP packages are unaffected). If you can update your CentOS 6.x version to 6.4, that would solve the issue. CentOS has in recent years started making it hard to fix to earlier releases to try to push users to the latest release. It's not an ideal situation for servers that can't be upgraded, but repositories would have to support each minor release to avoid this situation. 

Alternatively, if .htaccess files are enabled, get them to simply output their php error logs to a location they want, e.g.: /path/to/webroot/.htaccess: 

Don't say "y" to the results, but take note of all packages mentioned in "Removing for dependencies", e.g. 

However as for the switch to the hypothetical base php54, there will likely be no alternatives for some packages (e.g. there was no php53-pecl-memcache extension in CentOS 5) and Webtatic has packages that aren't available in CentOS base (e.g. php54w-pecl-zendopcache). If they are missing, then you usually don't have any other option than to use pecl directly to install them. 4 . Any PHP upgrade may introduce bugs, and websites should be retested. This is not specific to Webtatic, but the general idea that new features introduce new bugs. Unlike Remi's repository in the accepted answer, the Webtatic EL6 repository never uses the same package names as CentOS base repositories, so will not override installation/upgrade of packages you don't intend to switch to, and as such is enabled by default. Disclaimer: I'm the owner/maintainer of Webtatic 

For your second solution, I think you can simply use "#" in your .qmail file instead of piping through . 

From that, I was able to find out which VirtualHost was responsible, look closely at its logs, and figure out that there was an old osCommerce directory in the site's directory tree, which I ultimately removed. I've left the wrapped in there in case it can help me with any future attacks. 

And continues logging after the rotate -- it's just named (and possibly other services) that aren't connecting to correctly. Here's /var/log/messages-20120212: 

Maybe the line-ending conversions in vsftpd were written inefficiently, and since binary mode is most commonly used, no one has bothered to improve the algorithm used in vsftpd. Or, it could just be that passing data from a tcp socket out to disk really is a lot faster than having to check every character for CR and LF. The check could introduce enough latency in the connection to reduce your transfer speed. Are you running tests locally on Ethernet (low latency, would be affected greatly by additional latency) or across the Internet? 

For one-shot deals, scp is handy. If it's a lot of files, then rsync is a good idea. If a connection is dropped, rsync can pick up where it left off. I knew that rsync had compression (), and have just learned that scp does as well (). 

Since you've already upgraded PHP however, it may be easiest to either compile eAccelerator yourself (its not available via pecl): $URL$ or switch to a repository that supplies eAccelerator rpm for the PHP version installed. I provide eaccelerator for PHP 5.3, along with PHP 5.3 itself if you need it. I don't supply eaccelerator for PHP 5.2 though. $URL$ then 

Actually, I probably wouldn't use my other answer in some situations, but I'll keep it there for reference. If your colleague has been given their own VirtualHost, I would set that virtualhost to output their logs to a different directory, so that they would only see errors for their system: 

2 . You need to first see what existing installed packages need replacing, you can do this by using yum shell to combine removing php-common and installing php54w-common in one transaction (so shared dependencies aren't removed) 

Have you set up yum priorities? RPMForge has subversion and mod_dav_svn 1.6.13, so they should be listed in installations and updates. Yum priorities will hide them if another higher priority repo has the same package names. If so, you will need to add exclude patterns to your /etc/yum.repos.d/CentOS-Base.repo file, by adding to the [base] section: 

After changing this to false the IIS stopped doing these full flushes. It still flushes some files regurlarly, but it's no longer a complete flush (around 50k files stay in cache) Our file cache hit % has increased from 5% to 33%, so this definately helps a lot. Not sure why kernel caching causes this behaviour, but I can live with the slight overhead of caching in usermode. Thought I'd add this as an answer to help others with similar issues. 

We're having a few issues with our image server. It's a Win 2008 running IIS 7.5 and it only serves static content: images. It has run without issues for quite a while, until recently when we disabled Output Caching, as we noticed having it enabled meant it sent no-cache host-headers to the clients (forcing them to fetch the images from the server every time) We've read quite a bit about it, and it seems IIS just works that way - either you use Output Caching or you get to use cache host-headers. Anyway having disabled the Output Cache, we now experience random 5 minutes intervals, where all requests just get a 503 Service Unavailable. During this period the "Files cached" performance counter staggers (neither increased nor decreased) and after the period all caches are flushed. You might find it weird I talk about caching, since we disabled Output Caching. The thing is we changed the ObjectTTL parameter in registry, so we cache files for 3 minutes (which has worked very well, our Disk I/O dropped significantly) So even with Output Caching disabled, we're still caching plenty of files - if we could just get rid of the random 503 it'd be perfect :-D We don't get any messages in the Windows event log during these 503 intervals, so we're pretty stumped as to what to do. Any ideas are very welcome :-) 

CentOS 6.2, bind 9.7.3, rsyslog 4.6.2 I recently set up a server, and I noticed that named had stopped logging to after the logs had rotated. I thought that was odd, since all logging happens through and doesn't write directly to the log file. It was even more odd because I had HUPed after updating a zone file, and it still wasn't logging. After I stopped and restarted named, logging resumed. What's going on here? The syslog PID hasn't changed (/var/run/syslogd.pid matches the PID shown in ps). Is rsyslog opening a new socket when logrotate rotates its logs and HUPs it? /etc/logrotate.d/syslog: 

Even though VirtualHosts log to their own error_log files, I found output from in . I ended up wrapping with the following shell script: 

Two weeks ago, I was notified by my VPS provider that my server (CentOS 5.5, yum is up to date) had originated "NULL byte/Directory Traversal" attacks agains some servers at DreamHost. I spent a few hours going over the server with a fine toothed comb and didn't find anything. Before logging in, I retrieved a copy of the sshd binary and confirmed that it hadn't been modified. I installed a rootkit checker (chkrootkit-0.49) that found nothing. I checked the web logs of the websites I host, looking for a hit that may have triggered a script on my server to initiate the attacks but found nothing. Checked /var/log/secure and /var/log/messages around the times of the attack but found nothing. Checked , but found nothing. Did a on key directories looking for files modified in the past 3 days, but nothing. What else can I do to to find the cause of the attacks? I wrote a script to check for outbound TCP connections on port 80, but only came up with legitimate connections (SpamAssassin and ClamAV downloading updates, Joomla checking its site for updates, etc.). Even if I did see an active outbound connection, would I even be able to dump data from the process (in the directory) to show me the account originating the attack? After watching the server for a few days, I gave up. Now I've received another complaint from DreamHost, so it's happened again. I've requested detailed logs from DreamHost, but then what? Where else can I look? If I can't find the source, is there something I can install to monitor the server and log data when it starts making outbound connections to tcp/80 in the DreamHost IP space? What would I log? Just get a of all traffic in that timeframe and try to sift through it manually? Update See my accepted answer for the solution I came up with. I'm still interested in options for logging the source of all outbound port 80 traffic -- a way to know what the source process is and perhaps its parent process (and the parent's parent). 

We're running 4 webservers through NLB, however every once in a while a single IIS dies on us (not the Windows, it still works, it's just the IIS returns 503 Service unavailable) Is it somehow possible to setup NLB to detect this, and stop sending traffic to that particular server ? Furthermore it'd be preferable if it could notify someone when this happens. 

Finally found the answer to the problem. We had this in our web.config for the site (despite not running any managed code on the site) 

I've been using the following WMI query to check how many IIS sites are currently running on my Windows 2008 webservers: 

We're running a somewhat large site and have recently started have performance issues. If I open FireBug in FireFox and loads up a page, it'll sometimes wait for 6-7 seconds, before receiving the initial page. Then it'll start requesting javascripts, and they'll wait 6-7 seconds as well. After maybe 6-8 requests, it'll start serving them with a minimum of wait time (10-20 ms) We're hosting the site on Windows 2008 R2 running IIS 7.5. The site is in asp.net 3.5. We're also logging the time from PreInit to PreRender, and it's seldomly above 100ms, so it's not the code or database, which causes the initial wait of 6-7 seconds. And the code/database obviously have no effect on the javascripts (or images), which wait for 6-7 seconds as well. We're at a loss here, so any help is highly appreciated. EDIT: We've just discovered that it is in fact the DB, which is causing the trouble. Every 3 minutes a single core peaks in kernel time, and this corresponds with when the site is slow. Next step is to figure out whether it's a driver or whatnot. (It's the system process) 

Yum does a check on /etc/yum.repos.d/webtatic.repo to see if it has changed, but this appears to not be happening when this file is installed by the second rpm -Uvh command, and yum clean all does not stop this Webtatic EL6: 

I'm taking a leap of faith assuming you are talking about a Debian/Ubuntu server here, as Redhat/Fedora/Centos have it installed and enabled as part of the default httpd installation. On Debian/Ubuntu, you can enable mod_headers (it should be already installed as part of the apache2 installation), by running: 

There is no APC extension for PHP 5.5, you should switch to Zend Opcache instead. I'm submitting a Webtatic answer as I'm the maintainer of it, and I dislike the lack of package pinning of Remi repository older RPMs, and the SCL new rpms. The former's way would have made this issue clearer as well. As you have the Webtatic repo already installed, you can run: 

You can resolve it by switching the mysql-libs package to mysql55w-libs. This needs to be done in one transaction to avoid it uninstalling the other dependencies: 

If you are able to get more than one IP address added to the virtualhost, then you can use two SSL virtualhosts, with each using one of two SSL certificates. The virtualhosts would each need to identify which IP address they should be using e.g. in Apache Httpd: