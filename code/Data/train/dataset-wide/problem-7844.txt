Let's call this class of functions $\operatorname{PR}(\emptyset)$. For any set $A$ of number theoretic functions, we can define a more general class $\operatorname{PR}(A)$ as the smallest class of functions that satisfies the above properties and also includes every function in $A$. If every function in $A$ is computable, then every function in $\operatorname{PR}(A)$ is computable. Moreover, if every function in $A$ is total then every function in $\operatorname{PR}(A)$ is total. It would be trivial, assuming $A$ is finite (or, more generally just explicitly enumerated), to create a programming language such that every program in the language computes a function in $\operatorname{PA}(A)$ and every such function has a program in the language. The language simply has primitives for all the functions in $A$ and for the basic primitive recursive functions, along with operators for composition and primitive recursion. Therefore, one answer to "I'm curious about how "much" we can compute with a formalism that guarantees halting." is "For any total computable function there is such a formalism" and more generally this is true for any effective sequence of total computable functions. The main thing that such a system cannot have is a universal function, provided the system has some basic closure properties. Addendum Since several people pointed out the same thing, I may as well add some value to the answer by including the standard proof of my remark about universal functions. A universal two-place function, for some system, is a function $g(i,k)$ such that for every one-place function $f(k)$ in the system there is some natural number $e$ with $\lambda k .f(k) = \lambda k. g(e,k)$. Suppose that $g$ is such a function; define a function $h$ as $h(k) = g(k,k) + 1$. Then $h$ has some index $e$. Thus $g(e,e) = h(e)$ by the definition of $g$ and $e$, and $h(e) = g(e,e) + 1$ by construction of $h$. This is impossible, so any system of total functions that allows me to form the functions like $h$ cannot have a universal function $g$. In particular, for any class of functions $A$ and any function $g(j,i)$ in $\operatorname{PA}(A)$, the function $h(n) = g(n,n)+1$ is in $\operatorname{PR}(A)$. So this class will not have a universal function provided that every function in $A$ is total. Of course if you let $A$ be the set of all partial computable functions then $\operatorname{PR}(A)$ is also the set of all partial computable functions and so it does contain a universal function (which is not total). From this point of view, the limitation is not on whether particular computable functions can be included; the limitation is on the internal structure of any particular effective class of functions. 

Extending the answer by Stefan Geschke, another example is the enveloping semigroup of a compact dynamical system. Let $G$ be a topological group that acts continuously on a compact Hausdorff space $X$. Then each element of $G$ can be identified with an element of the function space $X^X$. The closure of $G$ in this space (under the product topology) is the enveloping semigroup of $(X,G)$. These are well studied in the theory of dynamical systems, for example they can be used to prove the Auslander-Ellis theorem. The paper "On metrizable enveloping semigroups" by Glasner, Megrelishvili, and Uspenski (Israel J. Math 2008) gives some background and restates an explicit cardinality dichotomy between $2^{\aleph_0}$ and $2^{2^{\aleph_0}}$ in Theorem 6.1. That result is related to the group $\beta\mathbb{N}$ mentioned by Stefan Geschke and by alephomega. Their preprint is at $URL$ . 

So if $B$ is determined, in the usual sense, then $A$ is determined in the opposite sense. The nice thing about this construction is that $B$ has the same classification as $A$ in the arithmetical and analytical hierarchies. So if we have a typical fragment of determinacy that shows $G(A)$ is determined, that same fragment will show that $G(B)$ is determined, and then the strategy translation above will show that $G'(A)$ is determined. As Oliver pointed out, the game $G'(A)$ is also the same as the game $G(A^c)$. The construction I sketched here is better known in that light. It lets us prove that determinacy for closed sets is equivalent to determinacy for open sets, that determinacy for $\Pi^1_1$ sets is equivalent to determinacy for $\Sigma^1_1$ sets, etc., relative to very weak axiom systems. Justin Palumbo's answer shows that if you look at games one set at a time, instead of looking at determinacy for reasonable pointclasses, then things are much more messy. 

For comparison, Enderton's textbook uses a Hilbert-style system. He derives EI in a form that is essentially what Emil Jeřábek calls Lemma 1', but as a metatheorem: 

The answer depends utterly and completely on the description language. Rogers called a description language "acceptable" if there is a pair of effective methods, one to convert standard programs to programs in the language D, and one to convert programs in D to standard programs. (More precisely, these description languages are just numberings of the set of partial computable functions.) Now for any program whatsoever, there is an acceptable description language which assigns that program to index 0. So any program you like can be the shortest example, if you pick the right acceptable numbering. This is the same kind of reason that, for any string of length 2 or more, there is a universal prefix-free machine that makes the string Kolmogorov random, and another universal prefix-free machine that makes the string not Kolmogorov random. 

Edit: I have expanded my original post somewhat. It's still marked as community wiki. The question can be read in several ways, depending on the order in which the quantifiers are ordered. The answer by Emil Jeřábek addresses the following interpretation: 

That is one reasonable interpretation of the question. But it is not the interpretation I had in mind when I read the question, because the formula $\phi$ is chosen before any mention of ZFC. This is an particularly common issue in proof theory: there is an important difference between "if $\phi(A)$ is a true formula of second-order arithmetic, then ZFC proves ..." and "ZFC proves that if $\phi(A)$ is true a formula of second-order arithmetic, then ...". When I read the question, it struck me as asking about something like the witness property that is commonly considered in constructive mathematics. The witness property theory for a theory with a particular language of formulas $L$ and a particular language of terms $T$ says that if the theory proves $(\exists X) \phi(X)$ for some $\phi(X) \in L$ then the theory proves $\phi(t)$ for some term $t \in T$. For example, higher-order Heyting arithmetic has the term existence property for formulas with one free natural number variable and terms of the form $S(S(S(\cdots S(0)\cdots)))$ from the language of arithmetic. I will explain my reading of the question, and then I will explain why it has a negative answer (with no additional set theoretic hypotheses in the metatheory). If this was not the question that was intended, it is still an interesting (although somewhat trivial) result, in my opinion. It fits with the general intuition that classical theories are not likely to have strong witness properties. An alternative reading of the question My first thought about the meaning of the quote from the question is that we want to prove: 

I have taught an undergrad course out of Enderton's "A Mathematical Introduction to Logic". I thought it was very accessible and was relatively modern in its viewpoint. I chose it somewhat by default, and at first I wasn't sure about it, but it grew on me during the semester. It's certainly worth looking into. 

BISH famously includes the full axiom of choice scheme (in the functional language of second-order arithmetic), which is utterly weak in that context but very strong when combined with the law of the excluded middle. This is precisely the context in which Bishop wrote that the axiom of choice follows from "the very meaning of existence". Thus there are formulas of second-order arithmetic provable in BISH that are not even provable in $Z_2$, the system of clasical second-order arithmetic with full induction and comprehension. 

Joel Hamkins points out that the decision procedure for any reasonable notion of "computability" is not going to be solvable by a function that is "computable" within that notion. Here is a contrasting example of a nontrivial model of computation in which the halting problem is solvable in the usual sense of computation. An index $e$ in our new system is a pair $(e_1, p)$ where $e_1$ is an index for a Turing machine and $p$ is a code for a polynomial over $\mathbb{N}$. In our new system, program $e$ is said to compute output $o$ on input $n$ (write $P_e(n) = o$) if and only if Turing machine $e_1$ computes $o$ on input $n$ in less than $p(|n|)$ steps. If $e_1$ runs for more then $p(|n|)$ steps then we say the computation of $P_e(n)$ is undefined (i.e. does not halt). Here we assume the Turing machine uses binary coding for numbers and we let $|n|$ be the number of bits required to express $n$ in binary notation. This restricted model of computation is relatively common in the study of polynomial-time computability, where an index of the form $e = (e_1, p)$ is called a "polynomially clocked Turing machine". It's immediate from the definitions that a function is computable in the restricted model if and only if it is computable in polynomial time. Thus the model includes a very wide class of functions. However, because the time bound for index $e$ is already included in $e$, we can solve the halting problem for this model of computation with a normal Turing machine. (We cannot solve it with any polynomially clocked machine, of course.)