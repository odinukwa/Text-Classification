I ran some queries like on the results you provided. It appears you have not configured SPF for to allow google to deliver email for that domain. That explains the SPF failures for deliveries from Google. The query above is based on the domains listed in the record. There are some records that do appear to be Spam, so they should be in the list. You may have similar problems with email not having appropriate DKIM signatures. Some may be Spam, or you may have delivery paths that do not sign the email with an expected signature. 

Unless you enable reporting or use addresses matching the policy domain, neither nor should do anything. See the RFC section 7.1 for details. You should have at least a working address while configuring . It will allow you to verify that your DMARC configuration is working as expected. The address is the address to which aggregate reports are sent by domains that have received mail claiming to be from your domain. I've only received reports from Gmail, Yahoo and Microsoft. The report is in XML contained in a zip file. I process the reports with a script that loads the data into a database for review. Reports are sent periodically by the receiving domain only if you have sent them mail within the report period. Most smaller domains do not support DMARC, but the major domains do. Correctly configuring SPF, DKIM an DMARC will improve the credibility of your mail server. Baring other issues, your email should avoid the spam folder. The address is the address to which you want forensic data sent when messages that do not comply with your policy are received. I've received one report of this type. These records may help you determine whether your domain is being spoofed or if you have a configuration issue. I find the reports are sufficient for my needs. None of the above domains have sent me a forensic report. 

Encrypting the password is marginally better than having it plan text. CVS does a character replacement of its plain text password to protect against accidental disclosure when browsing files. The file containing the password needs to be properly secured no matter what the form. A standard encryption method is marginally better than a plain-text password. This is a well recognized security risk. A simple method such as CVS uses does protect against accidental disclosure to administrators who have access to the file. MySQL allows restrictions based on the originating host which I would implement if that is your database. Database servers of any sort should have limited access. Once someone gains access to your host, the battle is pretty well lost. 

The purge option in will remove all the files installed during the installation. In some cases it will ask to confirm if you want to keep some of the data used by the package. Directories which are no longer empty will be reported. The directory /var/lib/dpkg/info has the installation files. The file name is the name of the package, with a variety of extensions for different purposes. The file with a .list extension lists the files and directories which make up the package. Installations often involve dependencies which are automatically installed. Some tools will mark these files as automatically installed. The initial installation does not do this marking. Automatically removed packes are not purged, so some configuration is left behind. The command 'aptitude purge ~c' will purge any packages which are configured but uninstalled. To list these packages use the command 'aptitude search ~c'. Using the file limit '!~M' will limit the package display to packages which are not installed as a result of a dependency. With few exceptions all libraries should be installed a a result of a dependency. It you believe a package is installed to support a dependency, you can manally mark it using the 'M' command in aptitude. If it is not require for a package, it will be marked for removal. The undo command 'ctrl-u' will undo this if you really want to keep it. There are also tools such as deb-orphan which help in removing packages which are a result of dependencies. 

The system I am on uses for certificates and for keys. Protection on the directory is 710. Root owns the directory and the group can only access keys if it knows their name. Careful use of groups and permissions can provide finer grain access to the keys by non-root users. EDIT: As @UtahJarhead pointed out SSH is not SSL(TLS). SSH doesn't normally have any issues about key placement as they are placed by the tools. Both methods can be used to secure access. SSL/TLS uses CA (Certficate Authority) signed certificates stored as specified above. SSH uses unsigned certificates. The server's (host's) keys are stored in /etc/ssh and the key has 600 permission allowing only root read access. These are generated and installed when the daemon is installed . Client/user keys are stored in ~/ssh (aka $HOME/ssh) and all the standard tools will place them accordingly. When a public key is copied for passwordless access it also is stored in ~/ssh for the target user on the target system. 

I get a lot of mass mailings which score high on antispam filtering. Mostly these are a result of violating standards applicable to email messaging. These include: Lines exceeding size limit; missing headers (usually message_id); invalid sender address; failure to encode data correctly; and incorrect DNS setup. I would expect these factors are considered by Hotmail. DNS problems may result in rejection during when specifyinf the recipient. This could be interpreted as no such recipient. 

Try sending an email to mailercheck-auth@port25.com (reported no longer in service) to see how well your server is configured. Other options are listed in my article on Detecting Email Server Forgery. 

If you want to port forward, then you should assign the virtual machine a fixed IP address. For Ubuntu this can be done in the file . Consult the documentation presented by the command Choose an IP address on your subnet not served by DHCP. Alternatively, you can configure your DHCP to serve the virtual machine a static IP address. Depending on your virtualization container, you may be able to configure it in the virtual machine definition. 

Don't have a password on the key, and protect it so that only services that need it can access it. Store the password in plain text or a plain text equivalent on the server so that services which need it can provide the password. (You may end up with multiple copies of the password in poorly secured configuration files.) 

Utilization is in reference to a processor. Single threaded processes can not exceed 100%. However, if top can report some samples as over 100%. Multi-threaded processes should be able to exceed 100% given multiple processors. It would appear you have a lot of CPU bound processes. This is normal for some processes such as the Seti program. Interactive processes normally don't use much CPU. Based on your report you must have at least 4 processors. 

Your VPS hosting company may act as your secondary DNS servers, but for a small domain it may be just as well to use your domain registrar. This can make lookups a little faster for those servers that need to look up you address. 

Squirrelmail doesn't read from the Maildir directly. It reads from and IMAP server. It appears you may not be connecting to the IMAP server. I use Dovecot as an IMAP server. You can connect to the IMAP server using Telnet and test out connectivity. Once you have IMAP working, then you can move on to getting Squirrelmail working. With IMAP you can also use other clients like Thunderbird to connect and read mail. EDIT: Check your log files. Dovecot actions should be logging to mail.log and syslog. You may also find information in the apache error.log. Also check the logs of your IMAP server to see what it reveals. Try setting the default folder prefix to an empty string (). 

From the Domain-based Message Authentication, Reporting, and Conformance (DMARC) RFC section 11.4 (DMARC Tag Registry): 

If you have high numbers from a few IP addresses it will be easier to limit the connections. You can then add deny rules or rate-limit rules to to limit access from these addresses. If you are under attack you may want to get your ISP involved as they can limit connections before they reach you. 

Problem would most likely occur if unregistered ports are missing. Connection will likely fail if HTTPS is being used on the port. 

You need a fixed IP address if you want to reliably sent to the Internet. You will have much better success if you get the record set to return the DNS name of you mail server. If you can't get a fixed IP address, use your Provider's relay server to send email. Typically if your domain is then then you mail host would be configured as or . This would be the for . Postfix should be setup to identify itself with this domain name, not . will not have an MX on the Internet and many servers will refuse email or file it as spam. You should consider setting up SPF (Sender Policy Framework) DNS records for your domain. Alternative approaches: - You can configure the server to authenticate to your developer's and deliver over an authenticated connection. - You can get your host configured as a local server on the developer's server. This requires that you can identify the mail administrator for the . They will likely require that you have a fixed IP address.