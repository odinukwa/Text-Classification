Then as the author suggests prune it every 3 months for 20-30 minutes (that's for later in your case). I liked how in the sample resume a 20 year career is summarized into one page. 

Treating it as a lesser of two evils: all way in better employed somewhere else. Suppose you are in 2018 interviewing for a position on the desired field and you have two candidates: Candidate A that graduated in 2017 and is unemployed for a year and Candidate B that has just graduated. A is suspicious (is he lazy, has he worked somewhere and they fired him? is he hiding something), while B is blank (I would say "no criminal record") - he just graduated. This argument was from a UK newspaper on research about how our graduation year affects our salary. Now as a hypothetical interviewer think of Candidate A: graduated in 2016 and has one year of experience on something else or one year of charity work overseas or something from which he has gained working experience vs Candidate B who has just graduated. Whom would you prefer all things equal? By working anywhere you get some skills that cannot be taught in academia mostly the so called soft skills and also experiences in the workplace. For all that I would advice to prefer to get to a job, a one-year contract better on anything else and then go back to the job market for your field. Another (last) food for thought: what if the field of study never picks up again? What if only 80% of the graduates will have the chance to work on that because it is shrinking? 

Are you interested to pursue this inside the company that you are now or generally? Generally for IT (because you can experiment/learn at home): 

"authoritative source": I could point you to "Peopleware: Productive Projects and Teams", an amazon.co.uk link here. Something more recent/popular that many people are talking about is the lean movement so you might want to check "The Lean Startup". I suppose that you are interested in the dissection of IT manager minus "generic" manager. From my experience: 

From my experience up to now, mainly in UK: Many companies will want to parse your CV using an automated tool. Almost all tools are written to use Microsoft word format, this is the reason I have a .doc version of my CV and not a latex one. Europass format is too verbose for most cases in UK (and maybe other places) so you might consider to check where you apply first. If many organizations would want a Eurpoass format one, you might prefer to have two versions. 

I agree that they should be placed, in order to demonstrate on what you were working on, as well as to help people or automated tools that search for someone that knows Unit Testing (for example). In my opinion the skills should not be too vague (such as "Object Oriented programming", "Java") so that there won't be the impression that they are there in order to inflate the CV with extra buzzwords. Best place to put them, would be within the description of the job position and the work being done there. 

Some random thoughts, based on similar experiences: Some wrong reasons for hiring you in that company, that might result to the behaviour you describe: 

and every now and then apply. Generally IT has less people than required (demand >> supply) so it is easier to find someone who will give you a chance. A talk from a person working on the company whose application you are using to read this: "How to be awesome" is related to your case. 

I was working for such a company. The problem is that it is very difficult to disrupt and/or kill the cash cow. What I had also observed is that most people had no problem working in a 90s environment being in the 00s or 10s (An interesting question: "Why was this so important for me and not for the rest of the employees there?"). I believe that most of the people in the organisation would say that: "There is a cash flow, the system somehow sells, no-one would want to refactor it in order to make it more modern." Reason is that your boss, over the years has started hiring people that would agree with him (vs the current practices, "hiring yourself" mentality). By now they should be so many that they are the majority. People that cared over the years have probably moved somewhere else, or they have chosen to remain silent. I disagree with @Preet Sanga, if the owner cared about any metrics, he would have cared in 2010 or in 2005, not allowing the situation to slip in the first place. When I started complaining about the situation described in the first paragraph, a backstabbing chain of events started which eventually led me out of the company, a good outcome both for me and the company. Based on my personal experience, my advice would be to... leave. :-(. 

I believe that according to USA law, but as well as in other countries, such as UK, what you in the company's premises belongs to the company. In cases the law is vague, many companies state this in their sign up contract (I have signed this with my current employer). You would not want to jeopardise the ownership of a project if it has to be sold etc, or of the charity you contribute, because you did something within working hours. I believe I have read in a Spolsky article a case when the company owns even what you do outside working hours, but that's another story and I could not find a link. I suggest you to read the Dropbox Y-Combinator application, where they explain how they own all their code, including what was written in another company's premisses. Quoting: 

I had similar endeavours; my take is this: If you want something concrete to read I would suggest Robert Greene's "Mastery". What you describe is a situation where you have achieved mastery in a specific field and want to transcend to a different one. The optimal way to do it is by using your current skill-set as a leverage. I am sure there would be many companies in the field you are interested in that could use a good developer. While there you will be able to get domain knowledge in an accelerating pace and also interface with the related people. As time goes by you will be able to do the switch. But what you can bring right now to the table in order to start this slow process is your concrete IT skills. It would be great to have an RDBMS administrator for example that understands the domain and can elevate to see the bigger picture versus someone who is just interested in maintaining a database and adding DB experience only. Based on that I would suggest approaching companies established on the domain you are interested having your intentions in the cover letter. If there are startups on the field even better: they will moreover need a CS person and you will be able to get the domain knowledge and workloads faster.