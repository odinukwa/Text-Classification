When you ssh to your server, you need to pass either the or option to allow for X11 forwarding from the server to your local workstation. 

(If not, you'll need to remove the rpmdb entries for the rest of the packages, and then try again.) If the packages for which rpmdb entries were removed aren't reinstalled or updated by , reinstall them. 

The people suggesting a TAP device were on the right track, but you need something else as well: First, create a veth pair. This is a pair of virtual interfaces, each of which simply passes any traffic it receives to the other. Next, attach one of your two VMs via macvtap to one of the veth interfaces in the pair, and attach the other VM to the other veth interface. Finally, send some traffic. 

Make the files owned by your user account, and group owned by apache. Then make them group writable, so that both you and apache can write to them. 

Projects usually include a script that generates the necessary GNU autoconf environment. These files aren't checked into git, so you'll need to run the script to generate them yourself. Unfortunately this particular project includes no such script, so you'll have to do it yourself. These items need to be run to generate and its necessary friends: 

To avoid caching a request, you should use and together. The first one tells nginx not to cache a response, and the second one tells nginx to not try to find the document in the cache. For instance, to avoid caching any request with a query string: 

This is because Server 2012 can be freely converted between "Server Core" and "full" installation simply by adding or removing the appropriate features. You will want to check for the presence or absence of those features (e.g. Server-Gui-Mgmt-Infra, Server-Gui-Shell, Desktop-Experience). 

The symptoms you describe are a classic case of your DNS servers not responding. When none of the DNS servers are available, then hostnames cannot be resolved to IP addresses, and you can't reasonably connect to anywhere (at least by name). It appears that you're using DNS servers given to you by the datacenter where your server resides. The reliability of such servers is often questionable. Try using known-good servers such as Google Public DNS instead. 

This is actually the preferred way to build RPMs, precisely because it isolates the process from the system so that unexpected dependencies don't get pulled in. You can modify the files in to have it pull in your own packages, private repo, etc., or check the docs for info on how to add packages to the chroot environment manually. Note that users should be added to the group to be allowed to use . Not coincidentally, the build server that Red Hat uses calls to build each individual package. If you have to build a lot of packages all the time, it may be worth looking into setting up a build server. 

It first lays out what the perceived benefits of NAT are (and debunks them when appropriate), then describes the features of IPv6 which can be used to provide those same benefits. It also provides implementation notes and case studies. While it's too long to reprint here, the benefits discussed are: 

The files are owned by , not . You probably are getting hit by SELinux denials (you didn't post anything from your though). 

In Server 2012 R2, the option is also in Server Manager. Click on Local Server (or a specific server). Click on the word On or Off next to Windows Error Reporting. Then your choices are the same as above. 

The log entry makes it pretty obvious. You don't actually have a file . Try providing a filename that exists. 

The site you're linking to has been compromised. It is redirecting visitors to a page which distributes malware (though the page appears to have been taken down). If you know the owner of the site, you may wish to inform them of the problem. 

Long term solution: Mobile IPv6 on the laptop. The client will then always have the same IP address when connecting to the internal resource. Short term solution: VPN on the laptop. The client will then have an IP address when within the internal network, and be able to obtain an IP address on the internal network when outside. 

I don't know whose instructions you were following, but either the instructions were wrong, or they were the wrong instructions. On a clean CentOS 7 system you can install Varnish 4 simply by: 

Though, I see you mentioned being on a VPS from GoDaddy. Unfortunately they give you a "CentOS" which GoDaddy themselves have modified in various ways and may not be built correctly. I suggest moving away from there, if you haven't already done so. 

Your output from indicated that there was a syntax error in , the only file you didn't actually post. Check the file and fix any errors in it. 

You can easily fit all that into a "micro" EC2 instance. I recommend against Amazon Linux, though; it often has bizarre problems caused by a lack of quality control in packaging. Choose something more stable, such as CentOS, Debian, Fedora or Ubuntu, depending on your specific needs. Also keep in mind that it's only free for a year. After that, you'll be paying around $17-$20 per month, give or take, depending on how much bandwidth you consume. (And remember they charge per gigabyte, so you could pay a lot more...) When your time is up, you may want to go shopping elsewhere. One of my favorite places is Low End Box. 

You've used in more than one block. This is only meant to be used to define the default virtual host for a given IP address/port combination. So it should appear only once per IP/port pair in your entire configuration. Which host should be the default virtual host is up to you. (Or you did, until you edited this part out.) Also, can appear only once in the entire configuration. Since its default in 1.4 and higher is , you can safely omit it entirely. 

That "works" for nginx not because you created the repository, but because nginx did. In the case of Node.js, they also have created repositories and posted instructions on their web site. 

The ssh INPUT rule only allows connections if they arrive via the local host, i.e. a Tor hidden service. If you also want to permit incoming ssh connections via clearnet, remove . The corresponding file is: 

You don't do it that way. First, you automate your Ubuntu installation using preseeding. Then, you use a configuration management tool such as puppet or chef to manage the machines on an ongoing basis. As for deploying the web application itself, doing this right tends to be highly app-specific, and you really haven't given enough detail to give a good recommendation. 

This example is incomplete and may be insecure; it only demonstrates how your issue may be resolved. Be sure to secure your web server properly. 

By doing this you explicitly told it to redirect to . A trailing in a means to try the value of the directive. In a PHP-FPM this should instead be: 

If that doesn't get you any farther, you'll have to stop some services to free up memory. If you still can't get anywhere, you'll have to upgrade your VPS package. 

It looks like nginx isn't quite sure what index file to load for your site. Since it's a PHP-based site (WordPress), this should be . But your directive reads: 

Apple's documentation explains three ways to do this, depending on your AirPort Extreme model and physical facility requirements. You will need to configure the devices with AirPort Utility (and probably with a Mac), but you likely already have one. 

It might be easiest if you just make a new kickstart file. Do the installation manually from the USB stick. The installed system will have a generated which you can then add your own customizations to. Customize and copy that kickstart file back to the USB stick and then run it. 

I don't think this will fix all your problems, though. I suspect you haven't carefully enough considered the actual dependencies between your two services, and will need to do some more thinking (and be able to express yourself) before you can make these units do what they need to do. 

You can set memcached (or most other services with an init script) to start at boot with a command such as: 

Looking for "OK" (or indeed, anything beyond the number) is a logic error in the program. The ABNF grammar makes clear that the Reason-Phrase may be empty: 

Note that SELinux itself is not namespaced, so you can't have separate SELinux policies within containers, as if they were independent OS installations. This also doesn't appear to be as well-developed (yet) as SELinux for containers managed by libvirt. But in general it shouldn't be something you need to worry much about. 

You bridged your VMs to the wrong interface. They should be bridged to the network interface that connects to the outside world ( in your case). Keep in mind that each VM should also have its IP address set in the guest, not on the host. 

You can set the parameter to set the error conditions when nginx will retry a request on another upstream proxy server. For example: 

If you run then the prompt for your password will also be niced, but since you'll spend far more time typing it, it really doesn't matter much. As ThoriumBR noted, if you are lowering the priority, then the order is irrelevant, but if you want to raise the priority, then (since this must be done as root) you must use . Otherwise I can't imagine any real difference. 

pmount allows users to mount filesystems without root access or an entry. It is available in the EPEL repository. I don't think it's a complete solution for you, but it may get you at least part of the way there. 

The file you want to create is , in each user's home directory, from which the MySQL client will read configuration directives for each corresponding user. 

Because you're booting into runlevel 3, not runlevel 2. If you want to start the service at boot, enable it: 

Right-click on the TCP stream, then select Decode as.... Go to the Transport tab, if you aren't already on it. From the list, select HTTP. Click OK and enjoy. 

Actually, you do not want to open port 11211 in your firewall. In your setup, memcached is running on the same machine, and localhost is rarely or never firewalled from itself since this causes the universe to implode. Thus processes on the same machine can talk to each other (e.g. PHP to memcached) without any other special firewall rules. But, until very recently memcached had no built-in access control, and even if present it's typically off by default, so anybody who can reach it on port 11211 can read or write anything to the cache. Definitely not what you want! Thus the firewall port needs to stay closed. 

To begin, thermal sensor values are normally reported in Celsius, not Fahrenheit, so you seem to have something converting the values for you. 261 F is 127 C. This also happens to be the maximum value of an 8-bit signed integer. Normally, sensor values reported as 127 (or as -128, the minimum value of an 8-bit signed integer) refer to sensors which do not actually exist in the hardware, or sometimes sensors which exist but are not functioning. Indeed, some firmware release notes found on the Internet indicate that these VRD1 and VRD2 sensors were removed in a firmware update, which strongly suggests they never existed. Try updating your IPMI firmware. Or you can just ignore them. 

Nothing is blocking port 80. You just have firewall NAT rules which are redirecting connections to that port to other ports, which aren't open. 

When using a UNIX socket, the path specified in must be the path to the actual UWSGI socket. That is: 

"No, of course not. What were you thinking?" The mdadm RAID 0 stripes data across all four volumes in small (here, 256KB) chunks, giving you the performance improvement you expect from RAID 0. The LVM approach you listed here also does the same striping, making it functionally equivalent to RAID 0. (This is not the default behavior for LVM.) You could use either approach, but the LVM approach actually limits you here since you won't be able to add volumes later without completely recreating the logical device. 

You can use proftpd's configuration option to run a command whenever a STOR completes successfully. (STOR is the FTP protocol command used to upload a file.) The command will not run if the transfer is aborted. See the documentation for further details. 

Because, the checksum is being calculated by the NIC, and not by the operating system. The wiki page you linked to did explain this: 

It looks like they are trying to have you set your outgoing Caller ID string to that sequence of digits (which you should probably obscure). It should be sufficient to set your outgoing Caller ID for the outgoing SIP trunk to that value. 

The LAN interface of your gateway VM should not have a defined in . The gateway represents the default route to the Internet, and you have only one such route (via WAN, not LAN). Remove it, and then restart networking. 

Everyone else is right: You will ultimately come to regret the day you ever thought of installing a telnet server on your Windows computer. When that day comes, please remember that you were thoroughly warned. Now with that out of the way, if you're absolutely certain you want to hang yourself, here's the rope. You can install the telnet server in the Add Roles and Features Wizard, accessible from Server Manager. (You can also install the telnet client.) 

That looks like a 1/4" QIC minicartridge. This particular form factor was apparently common in desktop computers. Look for a QIC tape reader which was pulled out of somebody's desktop machine, and you may get lucky. I see several of them on eBay under $20. 

If you haven't explicitly set up nginx as a caching proxy, then it will not cache your images or other static content, but merely serve it from the filesystem. 

You need to tell SELinux about the custom port you want to use for memcached. First let's see what the correct type is: 

(And since you probably don't have networking, you'll probably have to manually find the .deb and copy it to the server via some other means.) The switch isn't going to see anything from your NIC or be aware of it in any way until it sends some traffic. Which won't happen until you get it working by installing the firmware... 

Place this directive at the top of instead of in . The directive is valid only at the top level of the configuration. The same applies to all the other directives you've used. 

Volume groups are separate and distinct from each other, and it is not possible to have a single logical volume in more than one volume group. Volume groups are comprised of one or more physical volumes; it is physical volumes that a volume group is a group of. In order to gain more space in one volume group, you will need to either enlarge one of its physical volumes, or add another physical volume to it. In order to reduce space used by one volume group, you will need to either remove a physical volume from it, or shrink one of its physical volumes. Both of these operations must be performed carefully in order to avoid data loss. Given your circumstances, it is probably not possible to do what you want. You might describe your storage setup in more detail, though, and it may be possible to find a solution. 

Single quote the whole parameter (don't double quote it because is treated specially in double quoted items): 

This has nothing to do with FTP. The packages you requested simply aren't on the repository server. A common 404 error. Make sure you run before attempting to install anything. 

nginx doesn't support abstract sockets (as of today). However an unofficial patch exists which provides this support. Once applied, you can refer to an abstract socket as . If you use this patch, be sure to read the entire nginx forum thread regarding it, as it refers to various changes made to the patch.