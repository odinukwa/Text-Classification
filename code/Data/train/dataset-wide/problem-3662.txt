A nicer way to fix this (to have your cake and eat it) with regards to SELinux is to run this command to make httpd_t types aware of the port you are using.. 

Some denials in SELinux (sometimes frustratingly) are not audited in the audit log. I would be interested to know if you also experience this issue of no data occuring if you run . This will change the rules of SELinux to even audit rules. Note it can be very chatty keeping this on. Also note that DAC (traditional filesystem permissions) are checked before MAC (SELinux, in this case), so if the problem is the path is not permitted, or a directory in the path tree does not permit it because of file ownerships or modes, then you will not get a logged report about it. Additionally, when searching the audit log, use . A rule that should encompass all results attributed to SELinux would be: 

This might be cheaper than getting a wildcard certificate, but a wildcard certificate if you're willing to pay for, is the easiest to set up. SNI (Server Name Indication) isn't supported on all browsers, so although this would allow you to serve multiple certificates using only one IP address, if they both need to be accessible in these browsers, it's not suitable. If only www.domain.com only needed to support older browsers, then you could still do this, as if the www.domain.com SSL certificate is the first one loaded, then users without SNI browser support can still get that certificate. SNI in Apache Httpd only works on some more recent versions, e.g. not available in CentOS 5. UCC Certificates are beyond your needs, and are usually very expensive, so I'd not recommend that over wildcard certificates. 

Alternatively, if .htaccess files are enabled, get them to simply output their php error logs to a location they want, e.g.: /path/to/webroot/.htaccess: 

I imagine you are not using user namespaces, in which case the capability CAP_SETGID isn't permitted in the docker container. You'll need to alter the containers capability sets to fix it. 

For the first point, personally if the users are nothing more than service users I would have their home directories point to a proper location for the document root of their website. As for mod_userdir, this implies that it is a real user whom as a periphery has a web folder, so I would keep that web content in . Speaking from a 'sysadmin team' perspective; I think this kind of setup looks sloppy and disorganized at best, or lacking in competence at worst. You need to have good reasons to do something like this. Purely as a matter of pride in your systems -- set them up to use paths that make some sense (and are not already pre-loaded with function). I think putting stuff in out-of-context locations is not a good way to organize your services. 

It seems rpmforge has removed its subversion packages for some reason. I provide the same packages (unchanged, other than signing with the webtatic pgp key) in my Webtatic repository. See about setting up the repo here: $URL$ then you should be able to install mod_dav_svn. It will also upgrade subversion to 1.6.13 in the process. 

Perhaps this is because the Webtatic 5 package was built earlier than 6. I could add to the build process something that would update the timestamp, however there was never any plan to have Webtatic 5 support CentOS 6, so you may get other unexpected results if you try to use it on that version. A workaround for now would be to force Yum to spot the file has changed: 

2 . You need to first see what existing installed packages need replacing, you can do this by using yum shell to combine removing php-common and installing php54w-common in one transaction (so shared dependencies aren't removed) 

If you continue to receive errors it would seem as though there has been some underlying filesystem corruption or the underlying block device in the virtual machine is thin provisioned without enough actual filesystem space on the hypervisor to support that much space. 

Lazy Copying This C program demonstrates lazy copying occurring, in this scenario, all processes map to the same region of memory, but the children have overwritten the contents. In the background the kernel has remapped these pages to different locations in real memory, but show the same virtual address space. Now, each instance actually does take up memory but the RSS value remains constant. 

The output should be pretty self explanatory. Note that you need to be running a kernel that came with at least CentOS 5.4. Frankly if your not update anyway, there are numerous security reasons to do so and CentOS 5.6 was released very recently. 

Now, it could be that something is wrong with the process, such as the other end is expecting a response from you first before sending more data, or a previous response from the other end anticipates SVN to do something else before requesting more data. Suppose for example an error response came back which should force the client to resend some information. You cannot fix this gracefully because its impossible from the information you have to determine what the sender of this data is expecting you to do. However there are a few possible ways to avoid the problem and report it. 

This should be put above any conflicting RewriteCond/Rule's, so they wont interfere with the redirection. Any .htaccess files in subdirectories will by default remove this rule and not do the redirect. To fix them, you must add either the rule again to them, or set them to inherit from parent .htaccess files, e.g.: 

For PHP 5.1 the json extension is available via pecl. No need to upgrade PHP just for this (although now both PHP 5.1 and 5.2 are end of line) You need both php-devel and php-pear installed: 

If there are other packages than php* in this list then you can't seamlessly switch to Webtatic PHP 5.4, but will have to investigate alternatives. Webtatic has replacement packages for all base php packages (see the packages listed on the page linked to in 1. for confirmation), so there should be no issues, unless you use other 3rd party repositories that have packages installed dependent on the specific php version installed. For the rest of the installation (still in yum shell), you just remove these packages and install their php54w-* counterparts: 

Turn off selinux (wouldnt recommend that) - setenforce 0 Make httpd not use selinux (not recommend that either because httpd is a likely attack vector) setsebool -P httpd_disable_trans = 1. Restart httpd. Change the policy to permit seeing processes in /proc. 

Bring this up on the kernel mailing lists to see if this really is a bug, behaviour expected or nothing at all to do with what I'm saying. Request that linode set the 'available memory' on the system to be the same 1GiB assignment as the 'current memory'. Thus the system never balloons and never gets a Normal zone at boot, keeping the flag clear. Good luck getting them to do that! 

This will setup a watch on this file, whenever it is modified by a write the change will be logged, and be logged quite extensively. You can check the logs doing: 

You are on the right track, uses this file for this purpose. But you need to read it more than once. Utilization is a is a measure of use over time. You can read it once providing you know the uptime in seconds of the host, then divide by that, but that would give you a utility rate of the host since the machine was booted. If you want a rate over 5 seconds, you would read the file once, sleep for 5 seconds, read it again, obtain the difference of the calculations and divide by 5. 

There is no APC extension for PHP 5.5, you should switch to Zend Opcache instead. I'm submitting a Webtatic answer as I'm the maintainer of it, and I dislike the lack of package pinning of Remi repository older RPMs, and the SCL new rpms. The former's way would have made this issue clearer as well. As you have the Webtatic repo already installed, you can run: 

proxy_redirect will only rewrite redirect headers, not the HTML content needed for this to work. There is no easy way to rewrite the HTML content in Nginx. There is the HttpSubModule, which you can manually add text substitutions, but is lengthly to set up each substitution: $URL$ It is easliest if possible to just update the content at $URL$ to have the redirected path in instead. 

I supply a yum repository with PHP 5.3 in, which fits in with existing PHP setups when upgrading. I can't guarantee that Plesk will be happy with it though unless they've updated it to support PHP 5.3 $URL$ There is also the Zend Server Community Edition, which you may find more suitable, however it doesn't provide packages under the same naming conventions, so you would have to switch between packages. $URL$