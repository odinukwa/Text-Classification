flexible hours casual environment maximize time spent on coding and not in meetings and other distractors having a voice in decision making 

Make a phone call if possible. Most communications during the interview process are setting up interviews and asking/answering questions. You have a number and an invitation to call, take advantage of it. Finding time to contact people during business hours can be difficult by phone, so follow their lead, and respond by email. 

Understand what the company needs first. Logistics, on boarding, training, evaluations, security, trust and how the team works/communicates need to be understood before you can make a proposal on why working remotely will not only interfere with their operation, but be more conducive to your personal productivity. You may need to be onsight for several months to get you up to speed in their eyes. Working remotely is not the same as flex-time/schedule. There are people who work remotely but are still expected to attend meetings and be available to others that are working regular hours. Some places evaluating you on just getting work done and don't care when. Others are only comfortable when you demonstrate you are available when needed. Many programming jobs have requirements besides sitting alone at the computer. You may not be in a position to hop on a plane when you feel like it especially if you go somewhere in a different time zone. Your girlfriend and family won't really benefit from your visit if you sleep all day and are up all night and they're not. Offer to do a trial period and know how you're evaluated. Many companies/managers are hesitant to offer what they see as a perk to a new hire or anyone else if they think it won't work and can't take it back. Even if you don't work remotely, it is important for you to know how well of a job they think you're doing. That involves knowing the criteria, level of expectations, how you're evaluated and what are the time-frames. You don't want to find out on a Friday afternoon that the boss isn't comfortable with you working remotely and expects you to be in the office first thing Monday morning. 

First, find out why they're hiring more black suites and don't assume it's because they don't know what they're doing. I understand your plight as a technologist, but if they're trying to look more attractive to investors or some other reason, your argument is pointless. Second, it's hard for managers to understand you don't have enough people to get the work done, when the work, is in fact, getting done. There should be clear communication about what everyone is expected to do and how that relates to fulfilling the company's goals. It's difficult to find out who isn't doing their job when someone else does it for them. Clarify your expectations and get your personal job situation corrected before making any recommendations on how to fix the entire company. 

Will someone else be doing your devops work? Is there not enough devops work for you to do on a full-time basis? Will you have to do both, i.e. work additional hours? 

Just ask you manager to "throw you a bone" once in awhile and let you spend an hour or two a week working on some of the old stuff. It will probably allow you to focus more on the difficult R&D work in the long-run. One of the reasons managers are reluctant to allow people to try certain things, is they feel they won't be able to take them back if things don't work out. Ask for a trial-period of a couple of weeks and let the company know that if your other work falls too far behind, you'll stop and work on the difficult stuff full-time. 

The problem is whether or not the recruiter is being up-front, open and honest with their client (Which by the way, isn't you.). If the recruiter discovers that the client has a very traditional professional office and tells all her candidates to wear a suite, tie, dress, etc., is that unethical since those candidates who "come in off the street" don't have that kind of information? I don't think clients would object. Testing is a little different. Knowing the nature of the test is one thing, but giving specific questions and especially answers would be another. Personally, I would want candidates to know that I expect them to understand object-oriented programming, but would prefer they not tell the candidate I'm gong to ask for an example of polymorphism. Providing answers, is just plain wrong. There are websites where questions and answers for certifications and job applications are posted for all to see, so I don't know how I feel about this being "fair" to other candidates. There is a risk in hiring and if a recruiter is short-sighted and is willing to risk a long-term relationship with a client just to fill one position, that's there problem. Theoretically, a recruiter could provide the answers to a test, but that doesn't mean the candidate wouldn't be the best choice anyway. 

Recruiters don't get paid to lower anyone's qualifications. He gets paid by filling positions with his candidates. He may have felt like you thought you were too good for the positions he has available. That would be a logical reason to take you down a peg or two. A recruiter may know nothing about software development or developers, but the do know what their clients want. Even the worse recruiter has an advantage over you because of their client knowledge. Filling a job with one of their clients is all they care about. The next priority is develop/maintain their reputation by placing a candidate that is successful, so the client will use their services the next time a spot is available. And if you're successful, they can place you in another job and make even more money (It's called churning.). You're not going to teach this person any professional lessons, but you can learn from it. What are you going to do when your boss disagrees with you and doesn't use your recommendations? It sounds like you would try to make it your mission to prove you're right. That would be wrong because you'll end up taking it too far. Pick your battles. Learn some tact. It's not all about you. 

The types of positions being applied for should drive the content of your cover letter and resume. There may be customer facing positions that don't require any of the technical background you have, but you more than likely are a better fit for those that do. It's important to show that dual-role you're able to play. The personal training experience may be more relevant, so don't hide it in the "other" section and focus on it in the cover-letter. Help the hiring person make this connection right away. If you have a lengthy list of experiences, you don't have to list them all. Just make sure you don't leave any gaps for the last 10 years. 

Don't stop asking and suggesting the company look into new things and provide training. If your boss does any type of performance review or wants feedback on how to make things better, don't give up on this issue. Don't leave your colleagues out of this solution. You're improving your skills and that is good, but be willing to share with others and encourage them to look into new things as well. Don't assume new is always better. Try to learn enough about new technologies to be objective when evaluating them AND make sure they are a good fit for your situation. Hardware may be cheaper than developers in some areas, but embedded isn't always one of them. You have to realistically consider the constraints.