Using the chess.com API, I take in a list of players and return their ratings based on a certain criteria -for instance, they have to be a member of a certain club, they have to had played a number of certain games, and they should have played a certain number of games within a certain number of months among other things. If a player meets all the criteria, their username, rating, and the rating type is returned in a 3-tuple. Two other possible returns are also provided, 1 is a different rating type which is also a 3-tuple or if they had closed their accounts -for example- it returns a 2-tuple -containing their username and a string mentioning they closed their accounts. I have 5 classes and they are the following: : Contains methods that just issues certain warnings that will be used later on. : Mainly methods that are general requests to endpoints for a player. Such as getting the account status of the player or getting their stats. : Contains methods that focus on defining way so of getting a players games and general "game criteria". : As the name suggests, the methods define the criteria for a player that will later be used when fetching a player's rating. : Focuses on fetching the rating. 

This should be enough for now, you can always add more. Secondly when using comments they should be like this 

Python style Style is important! Will you be able to read this code after a few months? I have a really hard time understanding this at first sight. 

You don't need parenthesis around the conditions in your if statements is the same as Use list comprehensions when possible see PEP8#202 Use intersection of sets to get how many elements occur in both tuples If duplicated don't matter (as they do not in your code) it is possible to convert the tuples into and check if the intersection between the sets are (Meaning there is only 1 element that occurs in both) Like @Maarten Fabr√© suggested 

A small thing to note is that the convention for class names -as defined in the aforementioned PEP 8- is that they are . I definitely recommend somehow splitting up your code. You could put it into a package along the lines of the following: 

I do have plans on just making a package and separating the classes into individual files. As well as putting the authorship information in an . Currently, the above code works, however, I feel it could be better. I am open to anything that can help me improve it. Use Cases: When writing this script, I had wanted it to be generic -general? not sure the right term to use here- enough for multiple use cases. The idea for this "script" was to use it -and parts of it- in more specific tools. The main use case I had in mind when writing this script was getting the rating for a list of users. Currently the data could be fed in via CSV or maybe even getting it straight from a Google sheet, and then the rating and other information would be given back in either formats -CSV or just writing directly to a Google Sheet. This script would not be handling all of that, but rather it would be used in a tool that would. Now, there are plans to go beyond a simple CSV / Google Sheet and automate player signups. The idea for this script in that case would be to automatically get a player's rating at sign up according to the criteria -in this case, it would make some of the criteria checks, like the checks for the closed account status unnecessary, however, the idea was to fit other cases like the first mentioned as well as this. Basically, I was trying to aim for abstract and flexible. 

I wonder if I use the correct syntax in bash? Further I think my scanning function is not all that good, I bet there are more pretty ways to check. Lastly maybe checking wifi's near me with instead of iwlist scanning would be a better way of handling this? 

PEP8 and Readability When coding it is nice to uphold a standard, it makes your code more readable for others and yourself. In python we have PEP8. Your code has a few PEP8 violations and other readability issues. 

I think this code is very straightforward and easy to read. Good job! Some nitpicks are, You have a few PEP8 violations none all that concerning. 

But this exception handling seems strage for me. I would simply throw it in and handle when this method is invoked. 

I would like to ask those of you, who are a little bit more expirienced in development. I would like to ask about method usage. In what situations do you use it? I've found some info about it, for example here, but it's not what I'm looking for. Is there any convension which says when should I use it for my custom objects? In model layer or in view? Let me show a simple example... I've got a class called "". has some name, values etc... One of the fields can be a perfect information for the user about object's state. The rest is also important, but not nessesary to display on the screen (in a view layer). Moreover, this field is a and should be translated depending on the language settings. It's also required to present this field as an . So, the question is: Should I put all the logic connected with forming a "user-friendly" string (locals, upperCase...) in a method? Or maybe I should create a method instead and use , for instance, for debugging (so in model). So, should method have any influence on what the end user can see on the screen? 

Your multiplexer class and everything to do with it could go into . into and the and class could go into -which I am sure could have a better name .... You might even be able to get by with just putting , , and in with instead of in a separate package. 

Well, I shall start from the top. According to the style guide, PEP 8 imports should be in the following order: 

I currently have a module with Class / Methods I want to use in other scripts. Recently chess.com released a read-only REST API for beta-testing. The methods in my class build a URL for the API endpoints I am interested in and get the JSON data for me to work with in other scripts. It is worth noting that I am fairly unused to using classes in the way I am in my code below - or at all really. Here is my working code: 

Profile You can use the cProfiler to check where your program takes up the most amount of time Example Code 

If you need to add alot of corner cases, your algorithm is likely off somewhere else. Consider adding Testcases, Docstrings, or both in the form of Doctest. To make it easier to Test your algorithm. 

To learn some PowerShell I made a tool, I've made before in bash. It pings the subnet for arp values and checks if there is no weird behaviour. 

naming It has been mentioned in the comments by @mast, naming is a very important part of coding. Would you still understand this code after a hiatus of a few months? I have a hard time understanding the code as is. I would have been able to give a better review if your code was more readable. Good code should be readable at first glance, the below variables have no meaning for me...