If you execute this from and using the flag to supress headers, and flag to redirect output to a file, it will build a script that can then be executed directly. 

Sybase ASE retrieves port numbers for the listeners from the file. On *nix systems, this is typically in the Sybase Home directory ($SYBASE/interfaces) On Windows systems it's called and can be found in %SYBASE%, which is likely to be c:\sybase (I think..been a while since I've run on Windows). I believe you can launch the GUI interfaces editor through Sybase Central, if you are using that to manage your ASE databases. and are the two utilities that can be used to edit the interfaces file. You can also manually edit the interfaces file using a text editor such as but be sure to pay attention to the format of the entries and permissions, so as not to accidentally muck it up. 

No, sorry. Once the log chain was broken the following differential cannot be restored because there are at least a few transactions that would be lost. You may feel that those 'unimportant' changes could just be ignored. But SQL Server insists on a complete restore chain. Though there are certainly some companies that will try to reconstitute a database for you. Not for free, of course. 

Of course, the correct answer depends on your data, the cardinality of each column, and which index columns give the best result. 

A default instance running under Local System should run under NT Service\MSSQLServer, then NT Authority\System has role to the “master” database. A named instance running under Local System should run under NT Service\MSSQLServer or NT Service\MSSQL$ServerXInstanceX, then ONLY NT Authority\System has role to the “master” database. If running under Domain or Local user account the instance should run under Mydomain\MyUser, then Mydomain\MyUser has “db_datareader” role to the “master” database 

Without an ORDER BY clause, the order the values are returned in will be unreliable, as they can be influenced by indexes and the data pages the individual rows are stored on. If you require the data to be in a particular order, use the ORDER BY clause. 

The first name is the table name and the second name is the column name. You can use '%' as a wild card if you don't know the exact name you are looking for. 

Your DB files are SQLAnywhere files, so first you will need to get SQLAnywhere. Sybase has some documentation on upgrading databases from earlier versions here. 

The work being done on the readable secondary should NOT affect the primary server. It is a readable but not writeable secondary, so the query ('R', 'TSQL', etc.) cannot leak back up to the primary server. Do you have any reason to expect otherwise? 

It is certainly possible to use a Maintenance Plan to handle the fragmentation issues. However, many people use the free scripts at: $URL$ I am part of the 'many people'. These scripts by default implement the suggested standards for reducing the fragmentation of indexes. So, if you implement the script with one of the many sample settings further down the page, it should bring your indexes into better order. Your database is not particularly huge, so scheduling an online index rebuild on a relatively quiet time, perhaps Saturday night if that is a low use time, and let it run. If you link to the home page ($URL$ you will also find scripts for database backups and integrity checking. It seems that you have a good backup schedule overall, though I do not know your retention period, so you do not need to change unless you personal see the need. Second, regarding the large LOG file, you can look into the DBCC SHRINKFILE() command to reset the size of the log file. On the other hand why bother unless you need the space. DBCC SHRINKFILE ('LogFileName', ); If it does not shrink the first time, run CHECKPOINT, backup the log again, and try to shrink the file again. Once the high order portion of the log is empty (through the log backups) the file will be able to shrink. 

Now login to each database, and run the sp_checkreswords command to make sure none of your DDL is using words reserved for the system. If reserved words are found, you will need to alter the code, and remove/change the reserved words. Use the ddlgen utility to export your full database structure (Tables, indexes, stored procedures, defaults, user defined datatypes, etc.) At this time, you may want to review the code generated by ddlgen, to make sure it makes sense in your new environment. You may want to make changes to device locations, device names and device sizes. For example, ASE versions prior to 12.5 had a device size max of 2 Gb, so if your database was 10 Gb, you were forced to have 5 devices. ASE 15 will allow device sizes of up to 1 Tb (on a server with a 2k page size), so you would only need one device to store the entire database. You may also want to seperate the index and trigger creation scripts from the rest of the DDL, to allow you to run those independantly. This comes in handy when you import data into the new server. Once you are satisfied with the scripts, you can run them against the new server, and it will create all of your database structure on the new server. At this point it's a matter of transitioning the database, using the bcp utility, you will need to export your data on a Table by Table basis. Depending on the size of your databases, and the number of tables in each database, this can take a while. I would recommend trying the -n (native) version of bcp instead of the -c (character) if it's possible. To import the data into your new database, you will also want to use the bcp utility, but you will likely want to make sure that your databases do not have triggers or indexes as this will enable the 'unlogged' version of bcp to run, allowing it to run faster and not fill the transaction log as it runs. If you can not run the unlogged bcp then you will want to make sure you have the appropriate database options ('truncate log on checkpoint', 'abort tran on log full') and set the batch size for your import to a reasonable value. At this point, you can create in indexes and triggers (if they haven't been created up to this point), and start testing the server. I would also recommend reviewing Sybase's Migration Guide, as it will likely go more in depth, and cover things I may have forgotten/skipped over. A lot of the details will depend on the migration environement, so planning and preparation are key. 

There is no SQL Server 2008 R2 Enterprise Manager. The SQL Server Management Studio plays the same role as Enterprise Manager once played in earlier versions of SQL Server. It appears that you can download SQL Server Management Studio (SSMS) at: $URL$ 

From at least SQL Server 2008 R2 SQL Server comes with an understanding of HTML. $URL$ says: " SQL Server installs its own XML and HTML filters. In addition, any filters for Microsoft proprietary formats (.doc, .xdoc, .ppt and so on) that are already installed on the operating system are also loaded by SQL Server." You mention umlauts, but not what you want to do with them. Umlauts and other characters that may seem unusual to English readers, can be managed by choosing the proper collation for the Index. Also the chosen Word Breaker (Neutral, English, French, etc) will affect your results. 

Sybase ASE does not support a direct upgrade from version 11.5 to version 15, so you will have to export your database from the ASE 11.5, and import it to ASE 15. From the $SYBASE/$SYBASE_ASE/scripts/ directory in your ASE 15 installation, run the installupgrade file into your ASE 11.5 installation, to install some utility stored procedures to assist with the migration. 

In the above query is the flag for User defined tables. Also because is a single character wild card in T-SQL, we have to escape it to find the literal . T-SQL allows almost any character to act as the escape, but it must be defined after the clause. Finally is the multi-character wild card, the T-SQL equivalent to in *nix and DOS. It would also be possible to use the above query to build a sql script. We start by telling the server not to print out the number of rows affected by the query using . This allows us to create a script that will run error-free, without needing additional editing. 

$URL$ The stored procedure only changes the name and does not manipulate the data. EDIT: Code corrected per shadonar. 

If we are talking about a currently supported version of Microsoft SQL Server, a non-clustered index does indeed contain a copy of the clustered index key. This is one reason that there is emphasis on keeping keys as narrow as practical. Obviously a clustered key consisting of an would take much less space in the non-clustered index and therefore also require less I/O than if the key was . Note: If you have a clustered index that is "not unique", SQL Server will insert a hidden integer into the key so as to make it unique. By definition, a clustered index must be unique. This hidden number would also be included in the non-clustered indexes, of course. If you are using some other implementation of SQL the details may be different. EDIT: [Re question in comment} If you have: on column and a on column , these are two separate indexes. 

In ASE, a cluster is multiple physical Database Servers working as a single logical Database Server. There is no separate designation if a Database Server (single or cluster) is running multiple databases, since that is the expected operation. Database is the collection of related objects (Tables, views, triggers, users, etc). Schemas: In ASE a user can own objects, and set permissions on those objects independently, which satisfies some of the same use cases for schemas BUT a user can not be dropped from the database if they own any objects. So for practical purposes, most sites don't use user level objects. The lowest granularity storage object in ASE is a (other databases call this a ) the size of which is set when the server is installed, but can be 2k, 4k, 8k or 16k. This means that the database allocates pages in chunks equivalent to the page size setting. Referential integrity can cross database (schema) boundaries. I highly recommend checking out sypron.nl. Rob Verschoor is an SAP VP & Engineer and his site is packed with good information, tips, tricks and scripts. His quick reference books are also VERY good, and I would recommend them to anyone needing to work with ASE, Replication Server or IQ. 

Basically if you manage the contents of the files you select from and include the file size, it should not be too hard to do. (But there are issues.) Here is a greatly edited script that may help you. 

Regarding Data Collation Issues: If you also have to resolve collation problems on the data by using . Likely your two databases have the same collation for the data. But if not, you can use the following technique: 

Making things simpler and well-designed should be a first goal. But, if that is not sufficient then you should add layers as they are needed. Keeping performance statistics will help you measure the benefits. There are plenty of web sites with help. Here is one set of queries by Glenn Berry: $URL$