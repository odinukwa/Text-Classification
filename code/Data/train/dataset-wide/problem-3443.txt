It's because it's going to enclose the ~george within singlequotes when set as a variable. is useful for debugging. Remove the quoting when setting and the shell will expand when setting the variable, which will give you your desired performance. 

is typically the latest version and is usually a symlink but it depends on a mirror. We use this for our local mirror: 

If I understand correctly, you have mod_ssl installed and operational with the configuration but still receive an error when running configtest. Are you using the appropriate to your installation? If you have a package installed and it compiled from source as well, you may be running apachectl with a binary that isn't mod_ssl aware. 

It depends on your end goal: consistency, availability, or partition tolerance. Compromises will likely be necessary. This is an expansive subject, where you would benefit from reading a book such as High Performance MySQL. Common options: 

Background: I have a Windows 7 workstation and use PuTTY for SSH connectivity to Linux servers with session logging enabled. I previously used the option but that has the benefit of no escape characters but the drawback of making commands I've typed unsearchable if I used to autocomplete or because I corrected a typo (or 3) as I was typing the command. NOTE: I have installed for additional command-line tool support (i.e. , , etc.). Recently, I had to go back and find some commands to set the record straight with a coworker about something that happened on a server and the inability to see the final commands I issued is problematic and makes it more difficult to search the logs as well as being much more difficult to readily demonstrate what actually happened for my coworker. Example #1: This is an actual PuTTY log file of the 'pwd' command initially misspelled as 'pdw' and then corrected to 'pwd' with enabled when viewed with or in . NOTE: There is no difference between and in this case because there are no codes and only printable output was captured. 

There is a solution without another device: using a short TTL in your DNS zone, you could migrate to another IP (like 1.1.1.1) when 2.2.2.2 is not answering. To achieve that, you'll need a service (that could be hosted on 1.1.1.1) which will do that : 

regarding your login issue, it's likely a cookie problem. If your application is setting a cookie to authenticate your user, this cookie is limited to a fully qualified domain name or a wildcard. 

First and foremost, it's usually recommended that you replace your "domain.com" hosting to be a permanent and visible redirect to "www.domain.com". Usually, it's done either inside your web panel or in your webserver's configuration file with something similar to that (apache2 example) : 

any error when connecting to an sshd is logged into /var/log/auth.log (in debian-based OS, or security in redhat-based systems) If it's not, set in and reload sshd. This will show you why sshd is refusing your connection next. That said, back to your fork-bomb limiter: docker machines are based on LXC, a container system for Linux. LXC are using CGROUPS to manage resource limits for each container. in /sys/fs/cgroups, you can setup any limit for a running LXC, and in /Var/lib/lxc/vmname/config, you can setup the limits that will be enforced at boottime. Limiting the number of processes in a cgroup is done by the task counter subsystem (added in the Linux kernel in 2011 $URL$ ) With a recent enough linux kernel, limiting the number of allowed processes for a cgroup is therefore done by adding this kind of line into your lxc's config file : 

I'd probably write a quick script and run it with . Without nohup, your loss of connection would cause the script to quit running due to bash's SIGHUP on exit. will make the script immune to sighups. 

Edit 1 Thanks for the update and diagrams. Good stuff. I'm not certain that I understand the difference in performance between the IIS and Apache server. Can both be contacted via the gateway on port 80? Have you added the logging statements? That will help. I will review everything in detail again later this evening. Edit 2 Oh, it sounds like the DNAT doesn't work. Previously, it read like you were having trouble communicating internally between your gateway and your Web servers as well. Try replacing: 

You may have a difficult time finding a book comparing these practices directly. I am not aware of any. The software development life cycle and IT are often directly intertwined. IT is often responsible for the production environments, which enables proper separation of duties. As such, you should already have some existing external perspective although probably limited. Typically, change control or change management between development and IT are nearly identical, at least when the changes are applied to the system. The differences are in the details, as an Apache upgrade is not going to be deployed the same way as a proprietary application. Nevertheless, all changes deployed to production should follow the same fundamental requirements. Typically, I think of change control as the documentation and audit trail for the following key points in a plan format: 

In essence, I just want the PuTTY log equivalent of a copy/paste of a web page into notepad. The web page source has lots of tags but the user doesn't see any of this and if they highlight the page, click and into Notepad, all they get is the text they saw on the page. I want to be able to programmatically create the Notepad equivalent of all these PuTTY log files for effective searching (i.e. using ). NOTE: If it isn't obvious from my total StackExchange reputation of 1, this is my first question or post on StackExchange sites. I'm looking for helpful answers and not responses like "Switch to Linux" or "RTFM". 

Ok, so I'm almost to the actual problem. If I use with option enabled, it looks perfect. It is exactly what I want to see and work with. Example #3: This is an actual PuTTY log file of the 'pwd' command initially misspelled as 'pdw' and then corrected to 'pwd' with enabled when viewed using . NOTE: This is the exact same log file as above. This is also the exact visible output and format that I want to be able to search. 

Snapshot functionality is going to depend on the architecture utilized by the host for the virtual server. VMWare has the ability to snapshot as does Xen and KVM. A popular solution is to use disk snapshots as well be it via LVM or a more expensive hardware storage solution. This solution would likely be the quickest and least painful way to restore quickly in case of error. Godaddy archiving to a remote site via FTP or network protocol is likely to be less comprehensive and may require manual action in case of issue. This sounds more like a classic backup solution. Unencrypted transfer could risk your data as well. Ultimately, the provider will need to detail exactly what feature-set is provided by their backup solutions. 

I don't run an ident daemon ever anymore. I wouldn't consider it part of any e-Mail delivery best practices. IRC networks sometimes require it, which is why many IRC clients have a daemon built in. It might be worth weighing the benefit of running on a multi-user system where the users have system level access but wouldn't by default due to information disclosure. 

That said, your users will have "no answer at all" (not even a 503) during TTL seconds when switching. If your planned downtime of 2.2.2.2 are big, this is a solution. If you want immediate switch, you'll need another device (called a failover / load-balancer) 

for a maximum of 1024 processes (disclaimer: information not checked on a real machine though, to be confirmed) 

If you set your application to send a cookie with .domain.com as a domain limiter, it will work both on domain.com and www.domain.com 

If you launch kvm with -vnc passwd parameter, it has no vnc password, but will require one ! You should connect to the KVM's terminal (eg by using screen /dev/pts/something) and type "change vnc password" to set the password of your KVM's instance VNC Server. Also, KVM is creating VNC listening sockets not on port 5900, but usually 5901, 5902 etc. As a result, your VNC client shall connect to the physical machine on screen 1 or 2, like 192.184.148.52:1 KVM is usually telling you on which screen VNC is listening at startup time, and on which PTS you can join his console too. see man kvm section "-vnc display" 

As you can see, if you were to search for you would get no matching results. I have used iTerm on Mac and know that it can automatically replay logs and it just seems like there should be a way to see the end result of what I eventually used. Enter the PuTTY logging option. Ok, so here is the deal, with option enabled, the log file gets inundated with codes for terminal color and non-printable characters like . Example #2: This is an actual PuTTY log file of the 'pwd' command initially misspelled as 'pdw' and then corrected to 'pwd' with enabled when viewed in . 

The Real Problem I Need to Solve: How can I programmatically translate, convert, or update the content of these log files so that they only show what is actually visible to the user after processing the log file through command with enabled in PuTTY session logging? For the record, I have spent more than a few hours researching and testing possible solutions. Things I have tried which have not worked suitably (or at all):