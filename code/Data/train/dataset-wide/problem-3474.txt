When you need to clean a system infected with malicious code: 1) Archive the user data 2) Some some other system, or at least some kind of rescue CD, to scan the data for traces of malicious code. 3) Clean install the system, including MBR on the disk. For the paranoid, re-flash BIOS code on all components. 4) Restore the scanned/cleaned user data to the rebuilt system. In my opinion, do not waste time trying to clean a compromised system in place - with today's malicious code, e.g., root kits, this is impossible. 

While I agree with the sentiment that curl/wget and scripting can get the job done well, if you are really looking for another way, consider penetration testing tools. Especially if you need to interact with the site, for example to log in to the site, these tools will allow you to automate your testing. Of course, you will still need to do a little work to configure/script the tool to do what you need. 

Find a known plaintext and ciphertext block pair for a given key you want to crack. Compute the first encryption step (i.e. one DES encrypt operation) on the plaintext block for all possible 56-bit keys. Store all of the resulting 64-bit blocks in a big lookup table. For each possible remaining 112-bit part of the key, perform the other two operations (decrypt, encrypt) on the ciphertext. If the result of the two operations matches any block in your lookup table, you've found the key. Otherwise try the next 112-bit key. 

I'm in the middle of doing some testing on a mobile device, and want to test it from the network. The mobile device will only connect to networks via WiFi, and doesn't support ad-hoc mode, so I've set up an old WiFi router as an AP, which is connected via ethernet to a port on my laptop. The router operates under 192.168.0.0/24. My laptop is also connected to our normal network via another ethernet port. This network operates under 10.0.2.0/24, and provides internet connectivity. My laptop is running a VM which has two NICs, each bridged onto the two respective physical NICs. The 10.0.2.0 network is reachable via eth0, and the 192.168.0.0 network is reachable via eth1. The problem I'm having is that all connectivity drops as soon as I run . I've tried changing routing tables and adapter metrics, but have had no luck. Here's the output from : 

As others have mentioned, you need to have a Recovery Plan, not just a backup plan. You need to verify periodically that you can restore a system from your current backups. You need to know how long it will take. 

I installed Centos 5.5 on a headless server. The BIOS supports console redirection, so all I needed to do was: 1) Connect over a serial cable, 2) adjust the BIOS, 3) put the CD in, and 4) at the boot prompt, type: 

I found Ubuntu easier to use that Debian, because more attention was spent organizing Menu panel applet. In Ubuntu, pretty much every application seems to install a Menu launcher. In Debian, it seemed that every 3rd or 4th package installed without a menu option. In Ubuntu, I feel that I can find the menu launcher - I have an expectation where the launcher will show up. With Debian, I would need to hunt for a while, and then I would sometimes find the same launcher in multiple places - expect 33% - 25% of the time when I couldn't find any launcher. 

I recently noticed that my ISP doesn't like routing native SCTP traffic over the Internet, unless it's tunnelled through UDP. A bit of a pain, but I solved the issue by using tunelling. This issue got me thinking - other than TCP and UDP, which transport layer protocols are (generally) allowed to be routed properly across the Internet, over IPv4? Is the "normal" policy to allow all forms of IPv4 traffic, regardless of the protocol? 

I'm getting really slow queries in MS SQL Server 2008 R2 on my dev machine. This problem has been plaguing me for about a month. Other developers don't have the same problem, but we all run the same code. It seems to be that any query that includes a takes >20s, some taking up to a minute. Inserts and updates are fast. The total database size is about 30MB, so it's hardly huge. During the laggy queries, the CPU usage stays flat, the IO rates stay low, and the pagefault delta stays low too. I've not tweaked any performance settings in the db config - it's all stock from the setup. The software that connects to the SQL server is running on the same machine as it. I've tried multiple dev database copies, and customer databases that are known to be fine, all to no avail. Any ideas what might be causing this? 

I think you could add the disks to the array and then use something like Partition Magic (or Partimage) to increase the size of the partition on the array of disks. Regardless, you need a backup. RAID is not a backup strategy (as has been written many times in this site). Schedule the system downtime for immediately after the backup has completed, and be ready to restore. 

to figure out what options the [command] you're interested in has on your system. I am also suspecting that you have a typo. Do you really mean "topstop"? This does not seem to be a valid option. 

First, you need a network design that allows for network monitoring. One could use lots of monitor ports. Alternatively, use network hubs instead of layer 2 bridges or switches. Then install IDS (Intrusion Detection System) on every network segment. 

Before you go changing your SSL config, it might be worth understanding exactly what the vulnerability is here. When 3DES was introduced, there was a requirement that it was interoperable with legacy single-DES systems. The idea behind 3DES is that you can multiply the security by performing multiple DES operations with different keys. In order to provide compatibility, they used an EDE construction: 3 DES operations in sequence - Encrypt, Decrypt, Encrypt - or EDE for short. It turns out that a DES decrypt operation is basically interchangeable with an encrypt operation in terms of security, so this works quite well. When you use three independent keys for each operation (known as keying option 1) you essentially have a 168-bit key. If you want to go back to old single-DES mode, you use a different keying option (3) which has all three subkeys set to the same value, i.e. k1 = k2 = k3, so that two of the operations cancel out and only a single DES operation actually matters. There's also another keying option which has two of the keys with the same value but one different, producing a 112-bit key, but this isn't really used in reality and (somewhat confusingly) is completely unrelated to why you're seeing 3DES reported as 112-bit. To make things even more confusing, you'll sometimes hear people talk about 64-bit DES or 192-bit 3DES. These are, from a cryptographic perspective, identical to 56-bit DES or 168-bit 3DES. DES specifies a key padding system whereby 8 padding bits can be added to a 56-bit key to produce a 64-bit padded key. This was for use in some old systems and it's not really important, but the 8 bits can be ignored and only 56 bits are actually key material. In 192-bit 3DES the same thing happens, where each 56-bit subkey is padded with 8 padding bits, but again the real cryptographic key is only 168 bits long. Now, what's the 112-bit thing all about? 3DES suffers from a problem called a meet-in-the-middle attack. The approach is as follows: 

How can I test passwords against a dictionary / word list, where the entries have been fuzzed to some degree? By "fuzzed", I mean variants of words with "l33t" conversions and other character conversions are included in the check. Ideally, I would like to pass in a password value, have the utility check the password, and return a yes/no value. 

I've been catching up on my security podcast backlog, and I've been hearing about cloudburst attacks on virtual machines. While Google returns info about the Black Hat related press releases, I can't find info about how to defend against this attack. How does one defend against the cloudburst, and similar, attacks? 

and that worked What I would really like is a way to have GRUB call syslinux/isolinux bootloader. Then syslinux could load its own menu and whatnot. Anyone know how to do this? 

This is a time/space tradeoff that allows you to reduce the number of computations from 2168 down to 2112 with a space cost of 256 64-bit blocks (512 petabytes). Now, for some bizarre reason, all security tools seem to report 3DES-EDE as 112-bit without actually qualifying why. 3DES-EDE does not have a 112-bit key length, nor does it really even have a 112-bit effective key length unless you specify that your attacker has 512PiB of lightning-fast storage available alongside their massive array of DES-cracking ASICs. The practice of reporting it as 112-bit appears to have started with the "sslscan" tool, and has been copied by various other tools since then, leading to all sorts of confusion and misconceptions (I even saw this incorrectly marked in a security exam!) This isn't to say you shouldn't disable 3DES - it's an old algorithm now and there are problems with it, so it's probably worth moving away from it. It's just worth knowing why. If you want to do so, add and to your list of disabled algorithms. These names are defined in the cryptographic providers documentation, in case you want to disable any others. 

Start the capture running, filtering on a windows box. Launch thunderbird. See what comes up. Start a new capture running, filtering on the linux box. Launch thunderbird. See what comes up. Iterate, filtering out stuff that seems obviously not related to the differences between the IMAP connection between the two machines. 

The Nokia E series will full keyboards are very nice. There is a solid SSH client for Symbian 3rd edition. Your organization will need to purchase Mail For Exchange from Microsoft in order to sync the phone with your Exchange server. Mail For Exchange is a solid product - solid enough that Nokia dropped its own product in favor of supporting Mail For Exchange. 

First, check the Check Point knowledgebase. In the past, the answer was no, but there may have been a product enhancement. There are tools / procedures for recovering a policy from a firewall and making it available for management on the Management Server. These tools were developed by various support organizations to help customers who had suffered a catastrophic loss of the Management Server and related back-ups. The procedures are somewhat involved and can be a little tricky. Again, this information would only be available from your support organization.