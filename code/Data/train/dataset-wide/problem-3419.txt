You can add new AAM collections using the "map to external resource" link in the AAM page in Central Admin. You shouldn't be able to have one of these new collections point to an existing web application though, that throws errors when you try to do it. Can you maybe post a screenshot of your AAM page (with the "show all" view) so we can see what you are talking about? Also, the best source for learning about how AAM works is: $URL$ 

Here are 2 documents that should be helpful. The first is a general IIS "Suggested Performance Counters to Watch" list that includes baseline ideal values. The second adds some suggested counters for monitoring ASP.Net performance. $URL$ $URL$ 

Here is the Microsoft licensing information for Web edition: $URL$ And here is the list of technical limitations (compared to other editions): $URL$ I'm certainly no licensing expert but your use case seems to fit into the web edition model. 

While I agree with what Robert says - STSADM should still run on 2010, it is just deprecated. (This is to help with the migration from STSADM stuff to Powershell based stuff.) My guess is that you are still running the 2007 version of STSADM. I copied a 2007 version of STSADM to a (fresh) 2010 server, and got the exact same error as you. Are you going directly to to run STSADM? Or do you have the hive setup in your environment variable (or in a batch script, or something else that would set it automatically?) Check to make sure that you are going to and not 

If you actually mean you are just rebooting the server then yes, the device name will remain. This is because you do the attach to the instance, and during a reboot everything about the instance stays the same. (Even data on the non-persistent instance disk.) If on the other hand what you mean by "reboot" is you terminate the instance, and restart the AMI as a new instance, then technically the answer is no - but you can just re-attach the EBS drive to the instance, and use the same device name, so the effect is the same. 

IIS can't directly import PEM files. Instead you need to convert it to an IIS compatible format, and import that. OpenSSL will let you do this conversion. The command line would be something like: 

It really just seems like your IIS installation (or at least the IIS dlls...) are corrupted. I would perform the following steps to try and get a "clean" reinstall: 

I did some testing on this, and it does seem to be a bug - but only related to views that filter on blank/empty fields. I setup 2 views with alerts based on them: 

You can do this - when adding a server to the farm, click the "Advanced settings..." link, in there both the HTTP and HTTPS ports are configurable to whatever you want. In the file, the server entry would look something like this: 

Here is a pretty good forum topic over on IIS.Net that goes through a similar scenario. Basically, the best recommendation is to reinstall IIS. This is due to the fact that even after you fix/implement a workaround, you will most likely have some other problems with your installation. 

According to this article, yes it does. The combination of Indexing Server and NTFS should make it so that any change to the file (including ACL) is indexed pretty instantaneously though, so they should never be out of date. Even if they are out of sync - if the actual file on the file system is more restrictive than what is indexed, the user will still not be able to view it. The worst that happens is they can see that the file exists (and any abstract/other properties you have setup.) 

Authentication methods for Reporting Services in 2008 are all handled by a file called RSReportServer.config. See: $URL$ for details. 

You didn't really say what is failing or provide error messages - but I am going to go out on a limb and take a guess. My guess is that when you are doing the within modules you are getting a "Lock Violation" error. This is because at the higher level of the IIS7 settings hierarchy, the modules section (and individual modules themselves) are set as locked so that you cannot override/remove them within a web.config file. This is by design, since the modules are really what make up a running IIS system. To be able to do a of modules in web.config, you need to do the following: 

What about something simple like setting up a perfmon blackbox and zipping/emailng the log files out once a day? You could then analyze the data in perfmon or Excel/etc. on your local system. It would take a little scripting to stop/email/restart the logging once a day, but it would be fairly simple. 

Check out the IIS Web Deployment Tool, particularly the documentation on migrating from IIS6 to IIS7. For migrating all sites, you would change the parameter to be instead of the metabase path. Then after you move the package, the destination for the import would be . Here is a link to the web deploy command line documentation, it goes over all the different options that allow a migration like this to happen. 

This is a guess, but I'm going to say that this was an in-place upgrade from WSS2 to WSS3, and the one in the 60 hive is a remnant from WSS2. Since this isn't a common thing - I would probably stop that one during off hours and see if anything complains. 

I would try using procmon and filtering on the userid. That should turn up anything that is sporadically running as that user. 

For most software, yes you can continue to use it. See the third paragraph here: $URL$ As pointed out in the comments - this link mentions MSDN and not Technet, even though it is linked from the Technet page and hosted on the Technet domain. Here is another link that talks about what happens when your Technet subscription expires: $URL$ Basically, you are able to login and view previously claimed keys, but not download software or generate more keys. This implies that you can continue using any software you downloaded and got a key for while your subscription was active. 

This is built into Windows 2008 and Windows 7. Shift+Right Click on a file/folder and choose "Copy as Path". 

HTTP Redirection is not installed by default in IIS7. You need to add the Web Server role "HTTP Redirection" (in Server Manager.) After that is complete, go into IIS manager and when you are in Features view for the site, you should see the "HTTP Redirect" module. $URL$ 

Yes, they definitely get their data from different sources. IIS7 uses a new "configuration path" approach to store everything. ADSUTIL is based on the Metabase, which is no longer used by default. You can enable it though by enabling the Web Server role service "IIS 6.0 Metabase Compatibility". There are some known problems with the metabase integation stuff, so that might explain the problem you are seeing. See the following 2 links for explanations: $URL$ $URL$ 

The easiest way I can think of right now is through a code-based solution, not web.config. In the global.asax file for your application, you can add an Application_Error event handler. In this, you can do whatever you want to do to log the error (or not...) and then redirect to an appropriate error page. Call before redirecting, and none of the standard ASP.Net unhandled excpetion stuff will kick in. This is not a pretty way to handle this though, so hopefully somebody else has a better answer. A simple global.asax that does only this functionality would look like: 

Sysinternals has a utility called psloggedon that will list who is logged onto a remote computer. It probably isn't much better than your qwinsta based stuff though. 

What are you trying to achieve by using web gardens? If it is increased performance, then definitely do NOT do this. Web gardens, while advertised by Microsoft documentation and books as increasing performance, typically tend to decrease it - especially if the bottleneck in your application is the cpu. What they are used for is if you are having reliability problems (your application pools keep crashing) - the web garden can make your application more reliable, but you will probably take a performance penalty for that. Here is a great blog post that walks through whether you should use web gardens or not: $URL$ Also, here is Microsoft's documentation on when it could make sense to use a web garden for performance reasons - but maybe take it with a grain of salt: $URL$ 

You can have IIS and Apache living on the same port - if they are on different IP addresses. There is some special configuration you need to do for IIS though, as it typically binds all ports to all IPs. Here is documentation for how to configure IIS to only listen on certain ports/IPs: $URL$ 

Windows DFS works pretty well for this scenario - but you probably will want to be on Windows 2003 R2. 

Be sure to check out this technet article as well. note: I didn't test this, I'm assuming your statements are correct here... 

Did you see this blog article? Seems very similar to your issue. The mscluster namespace requires encryption, so to connect to it you need to have a PacketPrivacy authentication level on your query. 

It looks like the ReportServer virtual directory is being processed by SharePoint still. You need to set it up as an exclusion in SharePoint. To do this, switch to the SharePoint 12 hive (C:\Program Files\Common Files\Microsoft Shared\Web Server Extensions\12\bin) and run the command: 

You need to "pass" the parameters into your script block using the parameter on . This should do it for you: 

Most likely you need to allow your application pool to run 32-bit applications. The way to do this is to right click your app pool, click Advanced Settings and change the "Enable 32 bit applications" setting to True. 

My guess is that you are logging in one of the "Text File" formats. These cannot be used if you want dynamic activity (new processes, etc.) to be captured. Instead, use the "Binary File" format to capture your data. This will allow perfmon to capture any dynamic activity for the counters that you assign. Once you collection is completed, if you wish to open the log in Excel/etc., you can use the program (included with Windows...) to convert the binary file into a text file. The syntax is: 

Disabling Javascript within Reader will help a bit. Also, enable the "Enhanced Security" feature (it is on by default in Reader 9.3 and 8.2). 

The second sentence in your question has a faulty assumption, which means you are trying to solve a problem that doesn't really exist. There is no need to worry about "keeping the servers in sync". You can shut down the servers in your farm in any order (and bring them back up in any order). You don't even need to worry about stopping individual services - just shut down the system. The worst that will happen is that you will get a lot of errors in your ULS and Event logs (if, for example the WFE comes up before the database). The absolute cleanest way to do it would be in the following order: 

Is it possible Client Integration got turned off? In Central Admin/App Management/Authentication Providers, click on your provider. There is an option for "Enable Client Integration". If it is set to no Connect to Outlook does not work. 

You can add a new (DateTime typed) field to your CSV in-line using the value from Hire Date to seed it, and then use that for your sorting. You can still print the standard Hire Date though. This should work for you: 

Go into IIS manager, and choose the folder you want to add the restriction to Double click "IP Address and Domain Restrictions" Click the "Add Allow Entry" action, and add the entry for 127.0.0.1 Click "Edit Feature Settings" and change the "Access for Unspecified clients" to be denied 

Passive FTP ports are being blocked by a firewall on the server side. There is a metabase property called PassivePortRange that allows you to specify the range of ports used for passive FTP, to match what is allowed through your firewall. See these references: $URL$ $URL$ 

The end result of substitute is the same as replace, but it works a bit differently. You can't just do: 

You need to change the rule to use regular expressions instead of wildcards. This is because the R:1 is a regexp backreference. Also - you probably want your pattern to be (.*) for it to be R:1 (most likely it will be R:0 without the parens - R:0 is the backreference for "the entire match") Check out $URL$ for lots of info on the user friendly URL portion of URL Rewrite. 

Under SQL Server Agent, you need to go to the Operators category and add a new Operator (with an email address). You will then be able to select it in the notifications drop down. 

This is due to the export-clixml/import-clixml. It actually changes the type of each file object from System.IO.FileSystemInfo to Deserialized.System.IO.FileInfo. Have your second ls command export-clixml to a temporary file, then import and compare against that and it should fix the problem. 

SQL Ping 3 is very similar to SQL Recon, but gives the extended information you are looking for. If you run it on Vista/Win7/2008, make sure to run it as admin or it may not work properly. 

IPSec policies can be managed through the command line. In particular, you can export and import policies in bulk using and . 

So in a 2 node cluster setup as node1: 100 and node2: 0, general operation will put all traffic to node1, and the failure of node1 will cause a failure of the cluster. In a 2 node cluster setup as node1: 100 and node2: 50, the general operation will put 66% of the traffic to node1 and 33% to node2. In the event of a failure of node1, 100% of traffic will go to node2, and vice-versa if node2 fails. 

Agree with Jim B and Chris S that it is in use, and that is (usually) a good thing on servers. If however you wanted to pursue the "what exactly is using the disk" question, then ProcMon with a filter on PATH should get you the information you need. 

No - the Time_ConnectionIdle event really is benign. If your application takes too long to respond, it will show up in your normal HTTP log as a 500 error. 

Before attempting to do anything with the IIS provider, check to ensure that is true, and you should be good to go. 

The RDA Collaboration redirector is a SharePoint solution, so the underlying IIS version doesn't matter. 

The "memory" graph in Task Manager is the amount of total physical memory in your machine, minus the available physical memory. The process working set counter also looks at physical memory - but shared DLLs which only use one physical memory location are counted toward the working set of each process that uses it - therefore, the working set overcounts memory. If a process pages memory out to disk, this is not included in the working set counter, and can therefore cause the working set to undercount the amount of memory used. Here is a listing of what all of the counters map to: $URL$ And here is a pretty good blog post that goes into some details: $URL$ 

Here is a link to the SharePoint 2010 upgrade center on TechNet. This will be your best starting point. Some highlights you'll need to keep in mind: 

Based on the log file, you are getting a 404.2 error message. This typically means "web service extension lockdown policy blocked the request". Since you are trying to load an ASPX page, go into IIS manager and go to the "Web Service Extensions" category. Ensure that the ASP.Net extensions are Allowed. 

It sounds like your environment is a little messed up. Here are a couple of extra troubleshooting steps, hopefully one of them will give more useful information: Try to run the command using the full path: c:\windows\system32\ipconfig.exe Try the invoke-expression cmdlet: 

401.2 typically means that IIS isn't supporting the type of authentication that you are trying to use. Are you sure Windows Integrated Auth is enabled? Check out the IIS settings on your STAGING machines - the User Authentication/Logon setting in Security setttings (for the zone your SharePoint site is in...) should be set to "automatic logon with current user name and password" - or, if you SharePoint site is in the intranet zone you could use "automatic logon only in intranet zone" Check out AuthDiag - it is built to help diagnose authentication errors. 

According to this thread, it is not possible to disable byte-range processing (therefore the Accept-Ranges header) in IIS using the standard handlers. If you were to develop a custom handler, you could of course disable the header. 

Can you give more details about the error you are getting? My first guess is that the StaticFile handler mapping is not present (or not configured properly). In the Handler Mappings setup, you should have a Module Mapping with the following settings: name: StaticFile path: * type: StaticFileModule,DefaultDocumentModule,DirectoryListingModule Request Restrictions: mapping: invoke on file or folder verbs: all access: read If this is the problem, you would be getting a 404.4/not found error, with sub error "the resource you are looking for does not have a handler associated with it" 

Add a new DWORD value named DisableLoopbackCheck and give it a value of 1. After setting the value reboot your server. For further details, check out this KB article: $URL$