All the receiving system needs to do is issue ATA (attention, Answer) to the modem to make it pick up and start trying to handshake. Then, it's just a matter of the connection being passed to a PPP-speaking service to relay the connection as needed. If you can get your equipment to dial into a plain line, and type ATA on an answering computer in a terminal program, get CONNECTED to display on both ends, and see text going back and forth over that connection, you would be able to leave the telephone company out of it entirely. When I was testing with dry lines and needed to have my connection picked up, I just configured my server to pick up the line with ATA in a loop, which will try to handshake with the dialing modem until the modem's timeout value (usually 60 seconds), drop the line and display a message (I THINK it was NO CARRIER, same as when you hung up, but I may be wrong - this WAS ages ago). 

But the code that now errors has been working for so long, no updates have been ran and no AD changes other than I changed my password last week. But this also happens to all existing AD accounts and even for a new administrator account. I can RDP into the server fine, Also tried restarting with no effect. I'm on a separate domain from the server's that I execute the code on. Any ideas as at the minute I've tried adding get credentials to my app but as powershell is called from within a Windows Forms .NET application the Get-Credentials popup doesn't appear to allow the workaround of asking for credentials each time. Regards Liam 

Surely this shouldn't be allowed as even although it isn't allowing full open relay e.g. sending to name@gmail.com. It is allowing me to spoof emails from internal sophos.com users to other internal sophos.com users, just the same as it does for my organisation? gmail blocks this as expected: 

AT - Attention, prefixes any modem command. X3 - Sets modem to ignore dialtone. DT - dial with DTMF touch tones (DP would dial with pulse, like a rotary phone). 0 (zero) just sends the digit 0 as the chosen dial type, sometimes needed to actually pick up the line and do something, on some modems. 

There are a few possible solutions to this, depending on just how picky the hardware in question is and how much control the embedded systems give you. My experience here comes from running a Worldgroup BBS on Windows for awhile, and from time working with TDD (as in Telecommunications Device for the Deaf)-compatible modems. I can help you on the hardware side, software-side's a little out of my league, but actually the easier part probably. A couple key concepts here: 

has all the information you need. You need the command and have to change so that tom is allowed to execute this without having to enter a passwort. is your key word. 

Please note: If server1 has more than one interface and the DNATed packets are routed from one interface to another (like it turned out in this case) then the destination match IP and the SNAT IP are different. "-p tcp" should not be necessary in the second line but iptables or Netfilter requires it. It may be useful to add e.g. in all lines to make the optput of easier to understand. 

is invalid, must be . The network addresses of the interfaces don't change, do they? So it doesn't matter what IP you get. Another option may be (I have no personal experience with that) to create two virtual interfaces with a static address, have two sshd instances, each bound to one of these addresses only and make DNAT from the DHCP interface to the virtual one. 

Other modems may require voltage on the line, which isn't difficult to do, but does raise the difficulty from "just plug it in" to "make a thing that provides voltage, and plug it in". I believe this thing (called a line simulator, for the purpose of Googling it) needs to put out 24V at about 24ma, but my electronics skills are hilariously rusty, and this link has all the details with the added advantage of not being my guesswork: $URL$ The modem dial string doesn't typically change here, but you may need to try something like "X3" in the init string to make the modem ignore dial tone state. For this, ATX3DT0 is a perfectly viable dial string if you can't change the actual init string, but can change the dial string instead. 

I would have thought AWS had something in place to link regions but from a lot of Google yesterday, I've only found ways using linux systems to route the traffic. I'm fine with that if it's the only way, but part of me thinks there must be another simpler way? Regards Liam 

Sorry for the long title. My parent organisation that owns the company I work for accepts emails to be sent from test@org.com to test@org.com when connecting via port 25 telnet externally. I'm connecting from a static AWS EC2 Instance IP. I think this opens up a can of worms in the way that the organisation already gets emails from copier@org.com to other users within the business with viruses and these come through from external IP addresses, so assuming they use this exact hole to send them... I was writing an email for a network admin at our parent organisation to send to Sophos and thought I'd show a telnet session to Sophos's mail server (telnet mx1.sophos.com 25) to show how they deny it themselves but our Sophos Email Appliance server doesn't. However this "issue" exists on their server too?