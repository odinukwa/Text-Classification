Despite the visual resemblence between gravity waves and boundary layer rolls and possible interactions reported in the literature, it is my opinion that stating that boundary layer rolls are a form of gravity waves is incorrect and misleading. It is clear based on the satellite picture that the wind is northwesterly because of the distance from land that the convection occurs over the ocean, which is approximately 50 km from the coast uniformly in the SW-NE direction. As the cold and dry air moves over (relatively) warm water, air rises and saturates with water vapor, forming clouds downwind from the coast. For these to be gravity waves, wind would have to be perpendicular to the wave crest, i.e. in the SW-NE direction, which is not the case. Now that we agree that the wind is northwesterly, we see that the convective lines, the so-called "cloud streets", are aligned with the wind. They are long rolls of counter-rotating air that stretch the depth of the atmospheric boundary layer in height (~1 km) and are of width between 1 and 10 km. Water vapor condensation and cloud formation happens on the upward side of the roll, and evaporation happens on the downward side of the roll. Notice that in this particular example, they start off very thin, and become wider downwind. While these rolls are still not very well understood, the main mechanism for formation is likely to be a combination of rotation and friction (Ekman spirals) in presence of thermally unstable bottom boundary layer, and stable boundary layer cap, thus constraining the circulation into organized cells. A review paper on boundary layer rolls by Etling and Brown (1993) can be found here. 

Wind speed relative to the ocean surface As you describe in your question, wind speed relative to the ocean surface varies depending on the current orientation and magnitude. The rate of wave growth is proportional to the wind speed $U$ in direction of the wave relative to the phase speed of the wave $c_p$, squared: $$ S_{in} \sim \left( U - c_p \right)^2 $$ However, the wave phase speed is modulated by the current: $$ c_p = c_{p0} + u $$ where $c_{p0}$ is the intrinsic phase speed (phase speed in absence of currents) and $u$ is in the direction of the wave. Negative value of $u$ is then an opposing current. Wave growth is then: $$ S_{in} \sim \left( U - c_{p0} - u \right)^2 $$ Let's plug in some numbers here. Let's say $U = 10\ m/s$, $c_{p0} = 3\ m/s$, and $u = \pm 1\ m/s$: 

Yes. Nearly global satellite and radar derived rainfall data are hosted by NASA Goddard Space Flight Center, namely: 

These buoys provide directional energy spectrum data, as well as integrated quantities like significant wave height and mean and dominant wave period. I've written a Python library that lets you parse NDBC server and access data from buoys from command line or your Python programs. Once I tidy it up and make it public, I will update this answer so that other people can use it. Your other option, as suggested by @DeerHunter, is to use altimetry data from polar-orbiting satellites. Although these are sparse and provide only wave heights (no period or direction information), they may be your only bet depending on the region of interest. 

Any numerical model solution is inherently constrained by the equations being solved. You are probably aware that the inverse turbulence energy cascade exists in predominantly 2D flows. In oceans and atmospheres, this happens at approximate scale of Rossby radius of deformation and larger. Whether or not a numerical model is able to represent a physical process (i.e. 3D turbulence) really depends on the terms in the model equations. Take for example the simplest 2D model representative of ocean and atmosphere, shallow water equations (SWE, writing non-conservative form for brevity here so don't give me a hard time): $$ \dfrac{\partial \mathbf{v}}{\partial t} = -\mathbf{v}\cdot\nabla\mathbf{v} - f\mathbf{k}\times\mathbf{v} -g\nabla h $$ $$ \dfrac{\partial h}{\partial t} = -\nabla(h\mathbf{v}) $$ where $\mathbf{v}$ is the 2D velocity, $f$ is Coriolis frequency, $g$ is gravitational acceleration and $h$ is the fluid depth. The linearized form of the SWE, i.e. $\mathbf{v}\cdot\nabla\mathbf{v}\approx0$ and $\nabla(h\mathbf{v})\approx H\nabla\cdot\mathbf{v}$, where $H$ is the mean fluid depth, has an analytical solution and is well known. The non-linear term $\mathbf{v}\cdot\nabla\mathbf{v}$ allows for the fast growth of small perturbations, eventually resulting in eddy formation. In this model, the only dissipation is of numerical kind, and the only turbulence is of the 2D kind, supporting inverse energy cascade. In order to allow for 3D turbulence, a prognostic equation for vertical velocity $w$, including non-linear terms $\mathbf{v}\cdot\nabla w$ must be introduced to the model. 

The time-averaged material transport by water waves is quantified by Stokes drift, which is the residual Lagrangian drift due to sub-surface orbits not being closed: $$ u_{St} = \dfrac{\omega k^2 a \cosh[2k(z+d)]}{2\sinh(kd)^2} $$ where $\omega$ is the angular frequency, $k$ is the wavenumber, $a$ is the wave amplitude, $d$ is mean water depth, and $z$ is the displacement from water surface, positive upward. Because the cave is closed, there is build-up of water in the cave which results in pressure gradient-induced Eulerian backflow which opposes the Stokes drift. This backflow is barotropic in nature and equals: $$ u_E = -\dfrac{1}{d}\int_{-d}^{0}u_{St}(z)dz $$ The transport velocity is the sum of mean Eulerian velocity and Stokes drift: $$ u_L = u_E + u_{St} $$ For the case of $T = 12\ s$, $a = 1\ m$, and $d = 5\ m$, the resulting transport looks like this: 

It is helpful to understand the meaning of Fourier coefficients in the directional wave spectrum analysis. A pitch-and-roll buoy measures time series of water elevation $\eta$, and slopes in both Cartesian directions, $\eta_x$ and $\eta_y$. The Fourier components $a_0$, $a_1$, $b_1$, $a_2$, $b_2$, are related to cross-spectra of elevation and slope time series (introduced by Longuet-Higgins 1963): $$ a_0 = \dfrac{C_{11}}{\pi} $$ $$ a_1 = \dfrac{Q_{12}}{\pi} $$ $$ b_1 = \dfrac{Q_{13}}{\pi} $$ $$ a_2 = \dfrac{C_{22}-C_{33}}{k^2\pi} $$ $$ b_2 = \dfrac{2C_{23}}{k^2\pi} $$ where the cross-spectra are: $$ C_{11}(f) = C[\eta(f)\eta(f)] = \int_0^{2\pi} E(f,\theta)d\theta $$ $$ Q_{12}(f) = -Q[\eta(f)\eta_x(f)]k^{-1} = -\int_0^{2\pi} E(f,\theta)\cos{\theta}d\theta $$ $$ Q_{13}(f) = -Q[\eta(f)\eta_y(f)]k^{-1} = -\int_0^{2\pi} E(f,\theta)\sin{\theta}d\theta $$ $$ C_{22}(f) = C[\eta_x(f)\eta_x(f)]k^{-2} = \int_0^{2\pi} E(f,\theta)\cos^2{\theta} d\theta $$ $$ C_{23}(f) = C[\eta_x(f)\eta_y(f)]k^{-2} = \int_0^{2\pi} E(f,\theta)\sin{\theta}\cos{\theta} d\theta $$ $$ C_{33}(f) = C[\eta_y(f)\eta_y(f)]k^{-2} = \int_0^{2\pi} E(f,\theta)\sin^2{\theta} d\theta $$ From here you can see that the mean direction, as defined in the paper that you cite, is: $$ \theta_0 = \arctan\left({\dfrac{b_1}{a_1}}\right) = \arctan\left({\dfrac{Q_{13}}{Q_{12}}}\right) = \arctan\left({\dfrac{\int_0^{2\pi}E(f,\theta)\sin{\theta}d\theta}{\int_0^{2\pi}E(f,\theta)\cos{\theta}d\theta}}\right) $$ Because $Q_{12}$ and $Q_{13}$ are proportional to the integrated energy in the zonal and meridional directions, respectively, the arctangent of their ratio yields mean wave direction. The authors could use higher moments to calculate direction, but this would have different physical meaning. In this specific case, using $\theta = \arctan\left({b_2/a_2}\right)$ would yield peak (dominant) wave direction in the context of pitch-and-roll buoys. You see that the above analysis is inherently limited by the quantities that are measured, specifically $\eta$, $\eta_x$, and $\eta_y$. If higher order quantities, say $\eta_{xx}$, $\eta_{xy}$, $\eta_{yy}$ were available, the directional spectrum could be described at a higher accuracy even using just Fourier decomposition. Further reading: 

In water wave physics, when we say that the wave "feels" the bottom, we mean that the water depth affects the properties of the wave. The dispersion relationship for water waves is: $$ \omega^2 = gk \tanh{(kd)} $$ where $\omega$ is the wave frequency, $k$ is the wavenumber, $d$ is the mean water depth, and $g$ is gravitational acceleration. We distinguish "shallow" and "deep" water waves by the value of $kd$, which includes both the wavenumber and the water depth: 

I have adapted the code from this routine to a Python function below, which you can use for your purposes: 

In a 3:1 nesting ratio however, both the velocity and mass points overlap, and a simple copy is feasible: 

For deep water waves, $kd$ is very large, so $\tanh{(kd)} \rightarrow 1$. The dispersion relationship then reduces to: $$ \omega^2 = gk $$ Phase and group speeds are then: $$ C_p = \dfrac{\omega}{k} = \sqrt{\dfrac{g}{k}} $$ $$ C_g = \dfrac{\partial \omega}{\partial k} = \dfrac{1}{2}\sqrt{\dfrac{g}{k}} $$ Notice that $C_p$ and $C_g$ are not a function of water depth, thus it is said that deep water waves don't "feel" the bottom. On the other hand, for shallow water waves, $kd$ is small (approximately 0.3 or less), and $\tanh{(kd)} \rightarrow kd$. The dispersion relationship is now: $$ \omega^2 = gk^2d $$ and phase and group speeds are functions of water depth: $$ C_p = \dfrac{\omega}{k} = \sqrt{gd} $$ $$ C_g = \dfrac{\partial \omega}{\partial k} = \sqrt{gd} $$ So, why is it said that the waves "feel" the bottom at the water depth of half wavelength? $$ kd = k \dfrac{\lambda}{2} = k \dfrac{2\pi}{2k} = \pi $$ and this is approximately the value below which the regime transitions from deep water to intermediate water, i.e. $\tanh{(kd)} \approx 1$ does not hold anymore. 

On the other side, offline particle tracking can only use the Eulerian fields as often as they are output. Thus, there will be an error in the calculated trajectory depending on the frequency of the output. On the other side, the main advantage of offline calculation is that the user can experiment and play around with deployment locations, times, area of coverage etc., because trajectory calculation typically takes much less computational effort than the actual model. There are several options here: 

Yes, there were many model coupling projects in the past, as well as many ongoing coupling projects in the present and near future. The main motivation behind model coupling is the need for the interactive feedback processes between two or more separate physical systems, for example, atmosphere and ocean. Historically, these models have been developed independently of each other, i.e. they were uncoupled - unaware of each other. Given past and current technology and knowledge, modifying the models' source code so that they can exchange information in a consistent manner was a much smaller effort (typically few years) than it would take to develop a unified system model from scratch (i.e. atmosphere-ocean as a single dynamical core). Another advantage to the coupling approach is that different physical systems often describe processes that operate on very different spatial and time scales. Thus, it is often computationally advantageous to let physical systems have distinct models that are "coupled" through an intermediate layer. The vast number of coupling projects throughout the 1990s and 2000s have demonstrated the need for more standardized coupling libraries or frameworks that would cut down on duplication of effort, software bugs and development time. @BHF's answer mentions a few of those. Probably the most mature and feature-rich framework at this point is the Earth System Modeling Framework (ESMF). ESMF provides data abstraction for geophysical models, field regridding, parallel computation capabilities and many others. ESMF provides Fortran, C and Python (limited) APIs. Many atmosphere, wave, ocean, land and sea-ice models are now ESMF-compliant, so coupling of these models is more feasible than ever. Indeed, there are also efforts toward a standard and software design convention that would facilitate model development and coupling. Such standard is the NUOPC layer and is supported by the ESMF library. NUOPC sets the guidelines for software design and field naming conventions that promotes model interoperability. Any models following the NUOPC design conventions will be interoperable with each other out of the box, so the burdain is now moved to the actual model developers to make sure that their packages follow the new standards. (My PhD thesis in progress uses ESMF to develop a coupled atmosphere-wave-ocean-model.) 

Yes, NOAA's Storm Prediction Center's soundings page is a great source for the information you are looking for, especially the skew-T diagrams and wind hodographs. This site provides current soundings as well as a past archive of 1 week. For the explanation of the soundings diagrams and numbers provided, see the soundings help page. 

Thus, a long swell wave may act as a shallow water wave in depths of 10 m, but also a very short wave may act as a deep water wave in depths of 1 m. How are these limits for $kd$ obtained? The tangent hyperbolic function has some convenient properties for the limiting values of its argument: 

Notice also the argument to . Besides , this can also be or . I suggest you play with each to see what yields the best result for your dataset. 

To understand why the nesting ratio of 3 is preferred to the nesting ratio of 2, it is important to understand the following two features of WRF: 1) Grids are Arakawa C-staggered: mass points are at cell centers, u-velocities are at east-west cell edges, v-velocities are at north-south cell edges. See Mesinger and Arakawa 1976, Chapter 4 for a good description and explanation of Arakawa staggering. WRF's grid in computer memory looks like this: 

In meteorology, wind refers to the velocity of air. Its magnitude is called wind speed and has units of m s$^{-1}$. Related quantities are momentum (mass times wind) and kinetic energy (wind times half momentum), but they are not wind. Air has mass and thus it has weight as well. Wind does not. 

For fundamentals on numerical methods applied in atmosphere and ocean modeling, see the GARP publication by Mesinger and Arakawa: Numerical Methods Used in Atmospheric Models. This old, but certainly not outdated text provides the basics on time and space discretization and stability, with particular focus on solving advection equations, and gravity-inertia wave (read: shallow water) equations, and is relatively easy to digest. A must read for any meteorologist or oceanographer using or developing numerical models. Then, an excellent textbook by Dale Durran, Numerical Methods for Fluid Dynamics: with Applications in Geophysics maintains similar application focus as Mesinger and Arakawa, but expanded with more numerical algorithms and in-depth analysis. It covers the basics as well, so it can be used as a stand-alone text. There are many other more general CFD textbooks that contain material applicable to ocean and atmosphere modeling. The majority are more geared towards mechanical engineering applications, so you may need to apply a filter (hur hur). On the other hand, if you are more interested in physics parameterization schemes used in atmosphere models, such as cumulus convection, microphysics, or boundary layer parameterization schemes, a book by David Stensrud, Parameterization Schemes: Keys to Understanding Numerical Weather Prediction Models, is an excellent summary of current state-of-the-art. It covers a wide area of unresolved physical processes in the atmosphere, so it does not go into too many details - if you are interested in fully understanding a particular scheme, you will need to follow the reference chain and read the particular papers on the topic. I highly recommend this one if you are interested in gaining an overall understanding of parameterizing atmospheric physics processes.