It's not clear why you have done this, as this is not what you said you want. Perhaps it came from an erroneous Internet tutorial? In any case, you should be able to remove this line to cause the warning to go away. 

means that nothing is listening on that port (8983 in your case). Start the service which is supposed to listen for connections on that port. 

It sounds like ntpd has an incorrect idea of the virtual machine's clock drift, and is incorrectly compensating for drift. Stop ntpd, delete the and restart ntpd. If this doesn't fix the issue, consider switching to chrony. This is the default NTP client in EL 7, and is available in EPEL for EL 6. 

As far as I know, the Java iKVM console will show graphics only from the built-in GPU, and not from any add-in graphics cards you may install. Keep in mind that its purpose is for remote management of the system, especially in the pre-boot environment or when the operating system fails to boot properly, not for normal day-to-day usage. Use whatever facilities your operating system provides instead, if you need remote access to the screen during normal operation. 

Your rewrites are using regular expressions, and interestingly, they are set to match only specific URLs. 

For people running PHP-based web sites, it's almost always required to track bug fix changes as well as the security fixes that Red Hat might provide. As you know they rarely provide bug fix updates, due to "enterprise" version locking, even for something like PHP where you really need them. On my production web servers I have used the remi repository for many years. It provides current versions of PHP, MySQL, Symfony, and many related packages that need such updates on a regular basis. As of this writing, it provides PHP 5.4.33 and MySQL 5.5.40. (PHP 5.5 is available in remi-php55.) The main difference you will notice is that your PHP bugs start going away... :) 

The default CentOS 6.4 kernel can't be installed because the OpenVZ kernel is blocking it. This is expected, since you probably don't want the OpenVZ kernel to be replaced with the CentOS kernel. If you have other packages to update, use as it suggested. This issue will be resolved when OpenVZ updates its kernel packages. 

Of course, you only do this once, on first installation, to set up the initial data directory. You would not do it again unless you were creating a completely new installation or restoring from a disaster. 

Routers are supposed to decrement the time to live field by 1 for each second spent processing the packet, but in no case should it decrement by less than 1. So if a router spends more than a second processing a packet, it should decrement the TTL by more than one. However, it's exceedingly rare that a router would spend more than a second processing a packet, unless it was terribly bogged down. Barring router implementation bugs, that's about the only thing I can think of that would explain this. 

I see that you are located in Iran. Due to US law, companies in the US are prohibited from doing business with Iran, and sometimes this gets enforced rather aggressively (for instance, simply downloading free software from a web site might be blocked). If your VPS is also in Iran, this might be the cause of the issue. To find out whether this is an issue, try connecting to a mail server in a country which is more friendly to Iran, such as Russia: 

I presume you are reading or have read the Zabbix documentation. If you have not, you should keep it handy and refer to it. First, Zabbix passive checks can only read one value at a time, so for performance reasons I'd use a custom written active check with zabbix_sender if you are going to be sending a lot of data. zabbix_sender can send as many values at a time as you have. So as you can see from the zabbix_sender documentation, it simply accepts a plain text file with space-delimited values. It sounds like you can manage that part. You pass a number of key-value pairs (e.g. , ) along with their values. On the Zabbix side, you'll create a template for your application, add items to it corresponding to each statistic you're monitoring, and then define graphs and triggers if you want to alert on any of them. The Zabbix documentation really does cover each of these in sufficient depth, though if it's your first time through you may want to slow down and search more carefully. The 2.0 documentation was reorganized to make things easier to find, so you may want to use that even if you're on a prior version of Zabbix; most things are still the same. 

The problem is that you are not sending CORS headers in your . You only send these in the block, for any other location. The reason for this is that directives in lower level blocks completely override those in higher level blocks. So, because you have used in your , you must also include all the other directives again. To keep your configuration DRY, you should consider making an file which contains the common directives, and then it at each relevant point in the configuration. 

If you used a partition as an LVM PV then it doesn't matter whether the disk was partitioned as MSDOS or GPT. LVM does not operate at this level; it doesn't care at all where the block device came from. 

You're not missing anything; you configured nginx correctly. The problem here is that WordPress thinks it should be generating HTTP links. When you try to access it via HTTPS, it still generates all of its links with and thus they can't be loaded (without explicitly loading insecure content in the browser). There are WordPress plugins that will convert your admin console to https, if that is what you are trying to do. You could also edit your blog's General Settings and convert the entire site to https quickly and easily, without a plugin. 

This does exactly what you think it does: it turns off display for the entire document. If you didn't put that in there, seek help from whoever did. 

It appears you've created a new directory outside the standard filesystem hierarchy to hold your web documents. When you do this, SELinux is not aware of your custom directory structure, and doesn't know that Apache (httpd) should have access to it. You will see messages in showing denials in this case. To actually fix the problem, you need to tell SELinux that Apache can access the directory. Do this using the semanage fcontext command: 

You are probably running your Rails server in production mode. In this mode, most Rails servers do caching, which prevents your changes from being read. If this is the actual production website and you've just cap deployed a new version of the app, you'd signal or restart the Rails server. If this is for development, run the Rails server in development mode instead. In this mode, caching is off and files will always be read from the disk on each request. 

On my Linux box, I have various daemons which can bind to all IPv6-enabled interfaces on . When they do so, Linux sends IPv4 requests to that daemon mapped as, for instance, . I would instead like IPv4 connections to be refused and only IPv6 connections accepted when a daemon binds to . To receive IPv4 connections, I want the daemon to have to explicitly bind to (as well as ). In other words, I want to run a service exclusively on IPv6, and not on IPv4. Is there a way to accomplish this? 

You need to specify the absolute path to the document you want to serve. Otherwise it is treated as a path relative to the URL that was originally requested. 

Get rid of the DROP rule in the INPUT chain. It's dropping virtually all traffic coming in to the machine, including responses to any traffic you send out. 

Note that making this change requires specifying a URL to serve, so you'll have to make something up. 

Why do you call the ARP reply "wrong"? The system's IP address can certainly be reached via that interface. This is why the ARP reply is sent to begin with. Not doing so might cause some traffic to flow via less optimal paths, or not at all. For example, tap0 might be a VPN connection, and this ARP reply helps to ensure that traffic to the other IP address will flow correctly through the VPN. If you really want to do this, you can set the sysctls and to desired values. 

This network card is ancient and the sundance driver is no longer supported in EL7. The drivers given by the network card vendor are for a much older version of the kernel and are unlikely to work on modern systems. Just go get a $10 gigabit NIC, before you have spent much more than $10 in labor costs trying to make this work. 

That's happening because you don't have a file named . Since you put it in quotes, the entire string is being treated as the argument. Try removing the quotes. 

All of the "extra" rules you are seeing were added by the libvirt daemon to support (and secure) virtual networking for your virtual machine guests. You generally do not need to worry about these rules (and should not try to persist them, as then they would be duplicated at next boot). It's also clear that all of your persistent firewall rules were added to the firewall. It was between difficult and impossible to discern either of these facts without that critical switch for the `iptables command. 

I would suggest that you reinstall the mail program. Because Debian ships several alternatives, you can find the one you have installed with: 

(They mean that no single VM will be allowed to have more virtual CPU cores than physical CPU cores. But several VMs added together may have a total of more virtual CPU cores than physical CPU cores.) Keep in mind that web server loads usually aren't CPU bound, so you probably will have a lot of idle CPU anyway. 

You can change the Server header if you want, but don't count on this for security. Only keeping up to date will do that, since an attacker can just ignore your Server header and try every known exploit from the beginning of time. RFC 2616 states, in part: 

It depends entirely on how fast the registrar processes the transfer. An hour or less is typical, though if they want to be obstructionist they can drag it on for weeks. Though your choice of GoDaddy is kind of odd... 

I think the right answer here is going to be driven by business considerations, not technical ones. In general, my advice is: If the developers maintain this file as part of the application, then they should package and ship it as part of the application. But they also have to have the responsibility if their changes break production. If you maintain this file, or if they aren't responsible if they break production, then you should maintain the file and put it in puppet. 

Since people are still coming here, I'm going to throw in an answer I haven't seen yet. I run CentOS but I also need to keep current with PHP and MySQL, with later versions than Red Hat chooses to provide. To solve this problem, I use the remi repository, which provides current packages of PHP, MySQL, Symfony and a few other things for CentOS. (And I just decommissioned the last CentOS 5 box less than an hour ago, hooray!) 

Hmm. A careful examination of my EPEL mirror shows that the package is now named beginning with EPEL 7. 

You only ped traffic coming in on . But the unwanted traffic is almost certainly coming in via a different interface. Remove that qualifier from the final rule, and better yet set the table's policy to . 

Your cron job is running, but the job is having a problem. You normally should get an email with the output (and errors!) but you do not get email because: 

With a 32-bit kernel, you only have 4GB of available address space. Some of this address space has to be used by the (virtual or physical) hardware in the system, such as video cards, NICs, etc., for their own purposes. This usage is usually between 256MB-1GB depending on how much address space the particular hardware needs. Since that address space is used by hardware, the corresponding RAM is generally inaccessible to a 32-bit system. You have a couple of options: 

You're showing a remote alarm, for that you may find Cisco's troubleshooting guide useful. Assuming the hardware is good... I'd check the cabling between your router and the demarc, make sure it's plugged in, not damaged, not a bad cable, etc. Then I'd call the ISP and ask them why it isn't working. Last time I had this happen, it was because AT&T had screwed up and gave me the wrong DLCI, which took a six hour conference call to figure out... 

RDS looks like the better choice for you, since it's fully managed by Amazon and you don't have to worry about becoming a DBA in order to deploy your application. That said, you should still keep your own database backups (e.g. with mysqldump). While it's exceedingly rare, Amazon has lost customer data in the past. You may never be that 0.007% (or whatever the actual number was), but you also want to have some sort of plan in place in case you are. 

This is a problem because some clients don't yet speak TLSv1.1/TLSv1.2, your only remaining choices. Try not disabling TLSv1.0 and see if you get any farther. 

ImageMagick was built with X11 and Gtk+ support, and so it pulls in a lot of dependencies. Some of the graphics libraries that ImageMagick uses also depend on parts of the windowing system. None of these will automatically start a graphical login on your system or break the boot process. So it's safe to install, but will use some disk space. 

The virtual disks are mapped in the order you created them in the command line. To see the exact mapping, inspect the nodes in the XML definition for the guest: 

Note in particular that, despite what you will read in outdated Internet guides, you should not use for the second IP address. This form is deprecated and has been for years (which means it is likely to be removed from Linux at any time). 

You're pretty close. But you need to match the trailing characters for and its corresponding . You also need to add a in that block to refer to the correct , which is probably . 

Many EC2 AMIs, especially Ubuntu's, have SSH password authentication disabled by default. So if you don't have a key in place, you can't log in, at all. If you only just created the instance, then delete it and start over. 

For Digital Ocean in particular, you can boot the droplet into a rescue image. For older distributions that boot from an external kernel, you can select to boot it into a rescue image yourself. For newer distributions that boot from a kernel inside the droplet, you can file a support ticket to have the rescue image mounted as an ISO. Once you are done with your operations, update the support ticket to have the rescue image removed, and reboot. 

Anyone can set the PTR record to whatever they want. It doesn't have to be valid, or it could be valid and later become invalid. If you really want to know about an IP address, use whois on it. (This example uses GNU jwhois, which most Linux distributions ship.) 

Change the server's mailer so that its outgoing mail uses a domain you expect. Set up an SPF record for prod.xxx.com. 

It's possible that you've found a bug. But in general you want both files anyway, for three reasons: 

Note that refers to qemu's idea of the drive, which will vary depending on the driver in use (e.g. virtio or virtio-scsi) and which virtual drive it is in order (the 0 will change to a 1, 2, etc.). For a SCSI drive, you would have something like where the numbers refer to the virtual controller, bus, target and LUN as defined in the libvirt XML.