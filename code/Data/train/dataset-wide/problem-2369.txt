I realize that granting root access from % is not a great idea, but at this point, I'm trying to figure out why I can't connect to the MySQL server, and when I solve that, I will restrict access. 

In my /etc/mysql/my.cnf, I made sure that bind-address is set to the real IP address of the server. I can connect to the server from my laptop using sftp and ssh Yet, it refuses to connect me when I try to connect using mysqlbench error: can't connect to MySQL server on 'xxxxxxx' 10061 I can also access the web server fine from a browser, it displays the default ubuntu page. What am I missing? Update: I was able to connect when I did: bind-addess=0.0.0.0 This obviously creates a security risk, as you can connect from any IP address, but there was an issue with the way Amazon EC2 assigns internal and external IP addresses, so I have to figure out the correct IP address to bind to. 

Run query 1, and then query 2. DMV shows exclusive lock incurred by query 1. Query 2 appears to be waiting for query 1 to complete. Turning ALLOW_SNAPSHOT_ISOLATION ON doesn't appear to enable READ COMMITTED row versioning. Adding to both query 1 and query 2. Run query 1 and then query 2. While DMV shows query 1 incur exclusive lock, query 2 return details with 'Original'. Snapshot isolation appears to be in place. Observation from the test shows that itself enable/disable the READ COMMITTED row versioning regardless of setting, and vice versa. 

I was doing some test on server name change and encounter some errors. Here is the original setup: Server name - ServerA, SQL Server default instance - ServerA Changes: Server name - ServerB Before I change the SQL Server default instance 'servername' 

So the questions change to a single one [sorry!] and I feel it is best posted here. and (run in a single command) do not appear to be heavy culprits. database name even less so. So what magic is there when stating the ormat is custom when the manual explicitely states It is not necessary to specify the format, since pg_restore will determine the format automatically 

The context is pertinent as it demonstrates behaviour different than other (more manual) successful attempts. Deploying a rails application with postgres and postgis extension to AWS EC2 instance, using the rubber gem, database migration initiates but halts with is being generated when reaching 

You could look into changing the database to contained database. Contained database user are authenticated by the database, not at instance level through login. It makes moving database to different instance simpler. If not, you could backup the login information using sp_help_revlogin scripts provided at this Microsoft support KB. And execute the output script on the new instance. 

But if I want to have to use with startup option limit to an application, for example sqlcmd (-m"SQLCMD"), how do I do that with NET START? 

I am trying to determine the duration of backup restore. I executed a few restore command to restore some backups located on network share drive. Here is command and summary, 

The documentation has examples where multiple options are set , so that's not it (apparently). Note, this attempt is with option 1 (one) for running a single BEGIN/COMMIT I do not see the source of the error. I also attempted to issue the command running first (to also chef on previous state) and postgresql returns 

It would be preferable to clean up the database. How can this be accomplished? channels_structures seems to be misformed. a pg_restore with no "clean" can run, but what pitfalls could that entail aside form the above type of case 

WHM/Cpanel seems to be creating mysql directories for each account in the directory /var/lib/mysql For one of these account, let's call it test, I have the following files (from a backup): 

Am I not supposed to see another line for root@% in addition to root@localhost? The real issue I'm having is that I can't connect to MySQL from outside of localhost (as in, I'm logged in using a terminal session), and if the MySQL server is not giving root universal access (root@%), then that would explain the problem. When I try to connect using PHP (from my local MAC), the following is the returned MySQLi object: 

Backup A 1st restore take about 5 min. Ok, after restore complete, I delete the database 2nd restore take about 1.8 min. Hm.. Let's delete the database and try again. 3rd restore take about 1.5 min. Hm.. 

Version - SQL Server 2012 SP1 CU3. I have been using sys.dm_os_volume_stats for a while and it was working. Recently I have not been able to return any result from this DMF on one SQL Server 2012 instance. e.g. 

I don't know how your report table is currently being designed, but I would think the report table list all the rows from the query results (with predefined number of columns, in your case, 2 columns). As long as the query is correctly developed to return all required rows e.g. all enrolled courses, the report table designing part should be fairly straight forward. 

Is it possible to restore the test account, with this table? Is there a sequence where I create the account using WHM, and then copy the files into the /var/lib/mysql/test directory? I saw an answer on this forum, but it applies to a flat file data directory. My /etc/my.cnf file has no data directory specified. 

This is a new MySQL Server install. I created my root password as part of the setup (on Centos 6.4). When I connect to the server through a terminal, I can connect to MySQL and issue commands, using my root password. select current_user; gives me: 

Following the execution of a the follow-up pg_restore is generating errors. Under nothing gets written as for the specific motive of (under constraint "FK CONSTRAINT fk_rails_fed130752f"). What happened was that, upstream rails application initially had an HABTM relationship set up, which was then modified to and the join table explicitely created a channels_structures table - I've steered away from relying on HABTM for convenience and future potential reasons. Probably iterated with some pg_dump in incorrect manner and left some pollutant lying around. 

The following database restore command is failing because of . This is effected from a shell session within the directory of the application (I initially had it calling the backup file from a subdirectory but changing that does not alter the behaviour. 

@elijah, SMO does have function to shrink file. The PowerShell script below shows the log.shrink method is used to shrink ONLY the log file. The shrink with default or truncateonly option work for me with full recovery model. 

Second test, rollback previous transaction, set READ_COMMITTED_SNAPSHOT ON but leave ALLOW_SNAPSHOT_ISOLATION OFF. 

Return (since I have changed the server name) exec completed successfully. However, there was error when running the log shipping backup job, 

After some tests, in order for the DMF to work, it appears that the service account needs to have at least READ access to the root volume of where the database files are located at, in addition to the SQL Server login security VIEW SERVER STATE permission. The READ permission does not have to be granted explicitly to the service account. It could be granted through other user/groups, 1) SQL Server service account 2) Everyone 3) Users 4) NT Authority\Authenticated Users The idea is SQL Server service account needs at least READ permission to the root volume. I have listed the test and details here.