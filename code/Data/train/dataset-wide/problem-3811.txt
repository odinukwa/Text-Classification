You are in control of the amount of information you disclose. You can say oh nothing, watched some GoT and sat in my pajamas covered in pizza crumbs all day and be done with it. Manners require you return the question but even if you don't some will let you know of their day regardless. Whichever way you cut it, there's an amount of interaction you will have to face every day. Therefore my advice would be: 

You can't change his mind, nor should you. You don't represent all immigrants, you don't speak for any portion of them but yourself, and you have no way of conclusively disproving his point... as he has no way of proving his. In other words you're both pushing a conjecture. Drop it, befriend the guy if you so wish, and if he brings up politics again just stay out of it. 

If they respond with a figure below the market average you've already researched, you can use that as a lever instead. If their figure is too low then maybe you should start drafting your notice letter as well. Good luck 

I don't know how well-phrased this is but it is the best I could come up with. Would you like a promotion with that? In my case it's easier to ask for a promotion than a raise. I phrased it as: 

In addition to contacting the OSHA, I'd also start looking for a new job, just to keep multiple doors open. Equipment breaking and not being replaced might mean multiple things (no money to replace it, bad management, ...) and an investigation from OSHA could put your company out of business. You want to be ready to jump ship if the one you're currently in sinks, and I'd suggest you to start looking asap, since you said it won't be easy to find another one. 

Chances are the recruiter just copy-pasted a list of skills someone else gave her. The important thing is to know what are the requirements for the job you're gonna interview for, and brush up on the core concepts. That list only tells you one thing: they're asking for a web developer that is probably going to write both server-side and client-side code, and this should be your main focus of study. They also seem to care about clean code, so try to at least be familiar with SOLID principles and designing a modular system. Don't try to focus too much on the single points of the list and you will be ok. 

You don't really have any choice other than being professional and reporting any mistake you find in your review. Angering your superior might be "bad" for your career, but signing an incorrect document would be an even bigger mistake, because you would accept to share the blame (and probably be the ultimate target, as superiors often tend to offload faults down the command line). Given that you WILL fight with him over reviews from time to time, there are a few things you can do to improve the situation: First of all, always remark in the positive, and try to shed a good light on his work. He will be less inclined to fight if you downplay his mistakes to "minor issues not worth fighting for". Second, always provide complete information and documentation supporting your findings. You state that 

You won't be asked to set up anything. The coding environment will have been set up for you. If they're feeling fancy they might even put it in a VM so they can re-use it for other applicants as well. Have a look at this article by Jeff Atwood, which talks about and cites experiences of other prominent bloggers on this subject. A choice quote (Dan Kegel): 

Your boss may or may not notice your performance decline. He might guess there's a personal issue you might be facing, and choose to ask you if everything's OK himself. If the performance drop is noticeable, it's best to preempt his checking in with you and go with option two: 

Only to law enforcement under a court order (and under duress). The accounts might belong to the company but passwords are personal. End of discussion. If she wants to make sure you have no company IP in your personal email, she can hire a computer forensics company. 

Are you noticing a pattern here? I am. You haven't given a timeframe of your actions so we don't know how long you spend at each job. Be aware that by changing jobs often, you come dangerously close to being perceived as a job hopper. You can find plenty of articles online with the pros and cons of that practice. Anyway, the pattern is that when your job becomes difficult, you quit. To answer the title question, no, you shouldn't tell your manager that you hate your job. You are infuriated by working with sub-literate fresh-out-of-college devs, imagine your manager having to manage someone who actively hates their job. What you should do is have a chat with your manager. It's part of their job to make yours easier but they can't do that if they don't know there's a problem. Let them know of the issues you face, and if that doesn't go well, then you should start thinking about looking for greener pastures. 

but this might not be clear for your boss, and this confusion might lead him to think you're just trying to impose you ideas on him. Last, don't be bothered by it. Nobody can be fired or reprimanded for just doing his job. 

This is fairly common if you have an overworked manager. The main way to proceed is finding other sources of work. Are there things the office needs and nobody already implemented? (automated build process, ticket tracking...) Check from you colleagues if they need something software related, or if they feel your products need something implemented. You can develop those features in a side branch* and merge them to the main product branch if they get approved. You obviously should still send emails and reports to your manager, to keep him informed of what you're doing and if the things you're doing are fine. If you still feel you have too few things to do, you could resort to online courses to learn new technologies or strenghten your skills on libraries and frameworks you're using. A good developer never stops learning. 

Your resume is a formal document, just the fact of trying to use humor in it will be seen as unprofessional by some. You don't know who will see your resume, and you'd better try to avoid being rejected immediately for such a small addition. If your resume is "terrible" as you wrote in a comment, humor is not the way you should solve the problem. Be sure to keep your resume short and focused on yourself and your work experience. You can find a lot of tips on writing a successful resume on many sites. Last of all, it's normal not to receive a reply if they're not interested in your position, and that's why you should be applying to a lot of places at once, expecially if you're in an oversaturated job market or if you have no previous experience. 

You should try to get it diagnosed. It looks like you have been stressing out, maybe even without realizing it. But it might be physiological as well. E.g. hormone imbalance might manifest as mood swings. Once you have it figured out you can think how to alleviate it. Even if it is "just" stress. I also don't think you should keep it separate from work, if it's induced by work that is impossible. Everyone has a bad day occasionally and many managers are fine with it. Programming is usually a creative job, and it's normal to have variable productivity. However, being permanently stressed by job also needs addressing at the job. A little back story: I didn't go for professional help but I was new and having trouble keeping up deadlines (I didn't need to keep) worked for 12h a day to the point of feeling physically unwell. And trust me, I am by many touted as the most laid-back person they know. The pressure got to me, and I didn't get the help needed team-wise. My teams' modus operandi was to have more tasks than fits the schedule and just push the ones that didn't make the release, but I couldn't adjust to this, I've constantly felt under-performing even after getting "meets all expectations" eval two years straight. I didn't feel like it, and the pressure I've felt was mostly subconcious and self-induced This is addressable by a manager, and almost all job-induced stress is. I've changed a team (within the company) and I think it's fitting me better. There are many other ways, like hobby, or not giving too much crap, but you have to have the root cause figured out 1st. (I made the decision before talking about it with my previous manager because I didn't want to expose myself, in case no remedy could be found.) 

It may be that you're trying too hard. Jobfairs usually have a swarm of candidates and if a recruiter plays his cards right, he'll get the intern he wants. In that situation the table is tilted to the favour of them and the students with high marks. Same goes for summer internships. Try applying for positions a little higher than your mark, like those titled Junior or Graduate level. If you have solid demonstrable experience (say, a nice Github account) and approach companies that don't appear in jobfairs, you don't compete with your high-scoring student-mates anymore. You compete with the world. That may work to your advantage because chances are it takes you from average to average-high. Don't be intimidated, you'll know if you can cut it within the first month, and if you find yourself in a nice place, you may even continue working part-time through your studies. 

Then technically (and actually) you are not in breach of your contract. Let's imagine having a software contractor friend. Would you feel guilty asking them to explain a programming concept to you? If your answer is no, then you shouldn't feel guilty about joining the course, because the way you've written this seems to make my example equivalent. An educational institution benefits from your time by providing you education in exchange for money. Your employer benefits from your time by your UX work. The non-competing entity only benefits by looking good in the tech community, because any work you do in their tutorials won't be sold for money. They're advertising themselves to you and others. I don't see how joining their sessions would be immoral. If still in doubt you can always bring this up with your manager, and I'd be very surprised if the answer is anything other than sure, no problem. 

I'm not going to focus on the personal and interpersonal aspect of the question, as they're covered well enough in other answers. I instead want to focus on the technical aspect. Testing You said you're writing unit tests. Do you try to have full test coverage? Do you write integration and end-to-end tests? Don't forget that a good testing suite has all three aspects of testing, and having everything tested will make you feel more secure. Dropping testing in favor of delivering more is a temptation anyone has, sooner or later, and it's far too easy if you're left by yourself and don't have testing standards. Force yourself to test, and never consider it a waste of time. Code metrics Try using a code metrics tool (giving you a specific tool is impossibile since you don't specify the language you're using), and conform to industry standards when it comes to writing function names, variable names, etc. (nobody wants to see hungarian notation in their java code). Obviously, you should first of all keep your code style coherent with the one used at your company. Try to read the other devs' code and learn how they write. Deployment system and Bug Tracking Since you are just 5 developers inside a bigger company, you probably also lack deploy and bug tracking tools. Trying to at least standardize (if not completely automate) the way you deploy the product will reduce the risk you give someone an outdated file or library, and having a formal bug tracking system will help people tell you if your product has issues or bugs. Having everything automatically checked and tracked will surely improve your confidence, and will help you deliver a great (or at least good enough) product. 

The tool I use is time.is, particularly the compare function. For example, to set a meeting with London and New York for later today: 

You can thank them for the opportunity and let them know you've found another position that's better suited to your {skills, culture, etc} you. They might even come back to you with a better offer. After reviewing this website on the subject I drafted the following (hoping to use it someday): 

Absolutely. They could've spoken with your friend privately, find some common ground, maybe learn something in the process. If I'm to take you at your word that your friend has been perfectly civil while venting1, it's obvious the colleague emotionally invested in their teaching style so much that they won't take constructive criticism. 1 It's hard to believe the worst thing your friend posted was a variation on my colleague doesn't like me. If he made personal remarks, the colleague is well justified in taking offense - and escalating. Add that to the criticism I mentioned above and it doesn't seem so "constructive" any more. 

His source material includes racist language He intentionally leaves out such language His resulting joke contains traces of said language You did look up the material You decided to take offence to it