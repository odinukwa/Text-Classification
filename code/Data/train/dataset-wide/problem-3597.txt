Your best bet would be to convert it to a VMDK using existing tools. (I suggest the VMware converter $URL$ Just run it within the virtual OS and point it to another drive, then import the VMDK into AWS, and create an AMI based off it. 

Disk Cloning (backup/restore) can work if you have identical hardware, and aren't too concerned about using a lot of MS central management tools (SCCM, WSUS, etc.). If you are simply deploying workgroup machines, that may be the easiest way to go. If you're working in a domain environment, you may want to consider using an imaging tool (even for a disk clone) - sysprep, shutdown, then capture the image. I'd suggest something like Clonezilla or Ghost. That said, if you don't have identical hardware, this can be more trouble than it's worth, which is where something like Windows Deployment Services and WIM capture comes in. With WDS in 2008R2 and above, you can simply sysprep, boot to WinPE, capture an image, then load all your drivers in the WDS driver store, and as part of the deploy process, all of the appropriate drivers will be sucked down to the image. That said, it requires a lot more work to set up and configure than bare image capture, but as you mentioned, you can keep your reference image on a VM, snapshot it, and work more quickly as a general rule. Really, it's all a matter of scale. For me, personally, anything over 5-10 machines I would go the WDS route, anything smaller, I would use a tool like clonezilla. 

This doesn't explain why I get a 404 with and then do not get a 404 with , but I found a workaround that lets me leave ProxyPreserveHost off. Instead of having Apache pass along the hostname to Tomcat, I just put the hostname right in Tomcat's server.xml, as described at $URL$ 

How can I make procmail echo those variables into the same part of the message as the rest of the email body? 

I have a procmailrc file that is collecting some variables from mail headers, then echo'ing those variables into the message body. Like this: 

When I make a request that goes through the proxy, I get a 404 from Tomcat. The headers say Apache-Coyote, so I know it's going through the proxy and reaching Tomcat. 

Take a look at this link and see if it helps you out: $URL$ It is for SQL Compact 3.5 though. Quoted below from this link: $URL$ 

I've read everything I can find online, but I cannot find a simple answer to this question. I have Windows Server 2012 Standard installed using a volume license product key. The official product name is Windows Srv 2012 Standard MAK B in the Microsoft Volume Licensing Service Center. Can I use Hyper-V on that server to create a new virtual server running Windows Server 2012 Standard and use the same exact volume license product key to activate it? Simply put, can the physical server and the virtual server use the exact same product key? My intuition says that it won't work for some reason, but I haven't found anything written in plain English that proves it won't. I hope I'm wrong, and it would work! 

The script to copy permissions from one user to another is a bit long for here, but an example that I found is here: $URL$ If you save that in a .sql script, then run it using SQLCMD or in SSMS, you should see what I think you're looking for. 

My solution would be to use something like Chef/Puppet/Salt. That gives you full package control in the OS, as well as full code revisioning. When you combine it with something like Git/SVN, you can roll an exact clone of your development machine to production, as well as update whatever is there, and roll back easily. 

That should force a refresh/reregistration of netbios names over the network: $URL$ Also, making sure that the computer account was renamed in AD, as I'm sure you've done. 

How do I inject the sender's address, or any other header, into the message body using procmail? I've already found how to inject a static string into the message body, which works fine: 

Running Apache and Tomcat on the same computer is no problem. It's pretty common to run Tomcat on port 8080, run Apache on port 80/443, and use mod_proxy to allow Apache to serve apps hosted by Tomcat. You might set up Apache so that any requests going to /app on port 80 get proxied to localhost:8080/app, which is Tomcat, but the end user doesn't know or care about any of this. 

This works okay in general. It is correctly echo'ing what I want it to echo. But it's echoing those variables into a separate part of the message, like this: 

Have someone, or you, take a look at the router/L3 device at 10.1.4.20. It looks like it might be receiving bad routes from an upstream peer that are then being withdrawn and then re-advertised. 

Well, there are a few potential culprits for the high CPU usage, namely IIS and SQL Server; that said, I'd actually investigate it. Run a perfmon trace for a few hours/days, then take a look at which processes are actually consuming resources. You can guess all day, but hard data will win every time. As previously mentioned - this does have nothing to do with the cost of the instance, which is pegged to time running, not resources used. 

What are you using for a webserver? - check the webserver config, usually there is a setting there for max filesize as well. 

Can anyone suggest an alternative to the Windows Remote Desktop Client for Windows 2000 Professional that will allow for a screen resolution larger than the fixed 1600 x 1200? I am trying to get to 1920x1080. The target server is Windows Server 2003. Thanks! 

Right now, I have Adobe Reader 9.0.0 installed on my Win 2003 Terminal Server. Before I just go ahead and update it to version 9.4, does anyone have an experience with a better PDF Reader for a terminal server environment? It does not perform poorly now, but I am worried that the update might cause some unwanted slowdown in performance. Can anyone recommend a better alternative for a terminal server environment than Adobe PDF Reader? Any gotchas when installing in a TS environment? My googling hasn't really answered my questions completely and Adobe didn't seem to have any information pertaining to this situation available (unless I just missed it). Thanks. 

SCVMM only handles the deletion of the machine from the host, it doesn't complete any AD-Integrated actions. Your best bet to accomplish this would be to script the deletion using powershell and the SCVMM and AD cmdlets. 

I'd recommend using sp_MSforeachdb to do this - it executes a SQL script against all databases defined in master. Your code is going to look something like the following: 

What you're looking for won't work - at least not in a supported way. If you've read the Exchange 2010 multitenancy guides - they specifically address this: 

Is this 2008 or 2008R2? The CSV option was introduced in 2008R2. If it's a Windows 2008 server, just run Certutil from a 2008R2 or higher machine (against that CA), and you should get the CSV option. 

As the question states, what are the drawbacks of making every capable Windows 2003 or 2008 Server in my organization a domain controller for the domain? Is it just overkill? Will many 3rd party applications explode? Something else I'm not thinking of? Are there any advantages? 

I was able to successfully load Windows Server 2008 on an HP DL380 G2, which is not officially supported by HP. It seems to be working perfectly fine, except for the fact I cannot locate any network drivers that will work so I really cannot do anything with the server yet. The server includes 2 HP NC3163 Fast Ethernet NIC's. I've searched high and low for anything that could potentially make these NIC's work with Windows Server 2008, but haven't had any luck yet. Should I quit my search and get a cheap gigabit card to put in one of the open PCI slots or is there some mysterious network driver resource I cannot locate? 

This wouldn't be a valid workaround if I had lots of different host names going through the proxy, but I don't. It would still be nice if someone figured out a way to let me turn on ProxyPreserveHost, though. 

That would grep IP that you want and grab the line number of the firewall rule. Then use to delete rule 1, or whatever number you want. 

I enabled the access log in Tomcat to see what the problem is, and Tomcat's access log is logging any requests that go directly to port 8080, but it isn't logging any requests that go through Apache. If Apache is mangling the request or something, I would like to see the evidence of that in Tomcat's log. Can anyone tell me how to get Tomcat to log 404's that go through the proxy the same as it logs 404's that don't go through the proxy? EDIT I also noticed that the 404 only happens when is part of the config. If I remove it, the proxy works exactly as expected. But I do need the proxy to pass along the hostname to Tomcat. EDIT I have now set LogLevel Debug, which shows the full proxy connection in the error log. Unfortunately I'm still not seeing where the 404 came from, but here's the connection: 

EDIT I should have been more detailed in my description. I have at least 50 users dialed into the TS at any time, and they all open PDF's all day long because all of our files are scanned that way. As mentioned in one of the comments, any added bloat to the Adobe Reader application in the 9.4 upgrade could cause some performance problems. Just trying to do my research before blindly updating. Everything could work just fine. I just want to cover my bases and see if there are any other lightweight reader alternatives designed for a TS environment. 

It ended up being a DNS issue. The new server had a total of 5 IP addresses assigned to it. Even though we specified the IP address for the SMTP server to use, when the connection was being made it would resolve back using the computer name and a different IP address than the one we specified. We added outbound SMTP rules on the firewall for all of the IP addresses on the server and it is working now.