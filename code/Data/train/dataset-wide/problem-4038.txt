If your company has made other donations, then there is some process involved in making the decision and vetting the charities (making sure the donation is or is not tax deductible). Simply ask your fiscal department about this process and who you should talk to about a charity. 

It looks like you've brought this up at least 4 times in less than a year, despite understanding that she really doesn't want to discuss this. You need to determine whether this is a deal breaker, does her lack of career goals mean she should be fired or not? Then inform her of what you intend to do. If you will be happy with her if in 5 years she has a job doing just what she is doing today, then tell her that. You can add that you're always available to to help her try for something else if she wants, if you like. If you think it will be a waste of the companies money for her to still be solving the kinds of problems she solves now in 5 years, then let her know that her time is limited and start looking for her replacement. 

This is a company policy which you are aware of, you need to either follow it or get permission to disregard it from someone -- first person to ask is your supervisor. Just because the policy isn't directly cost effective, does not mean that (a) it does not result in a savings to the company or (b) that it is within your purview to change or ignore. If your supervisor doesn't waive doing so, then do it, and do it right. As to whether or not calls to your spouse are business calls or not. I would say that you can certainly make a good argument that some of them are (working lunch, overtime). I would recommend creating a spreadsheet with the numbers, the time and amount, and whether it was a personal call or not (only for those numbers which were sometimes personal). No need to go into detail about why it's work related unless someone quizes you, but listing them will make it clear that you were aware of the calls and did not just miss them when creating your reimbursement documentaion. Print it out and submit it (with cash if possible, no reason to give Murphy a chance to turn your .25 into 25), getting a receipt. It's a bad idea to treat any work related task as frivilous and unnecessary -- you may think it is, you may argue against it, but if it's a requirement, it should be treated as seriously as everthing else. 

Pay is a means to an end, not an end in itself. The goal is to live the life you want. On a personal level, only you can decide if the new position looks like it is what you want. If you are worried about future employmers looking askance at the change, most will consider it unexceptional. If you are worried that the new company won't live up to it's promises, the only thing you can do is get everything in writing -- training, promotions, power and responsibility. 

How much would it take to get you to hunt down and murder everyone you care about and then commit suicide? If your answer is "I wouldn't take that contract", then no, there are other things to consider than just salary. Your conditions for taking a job will be individual, we can't tell you what tradeoffs to make. Common considerations are salary, benefits, commute, social utility, enjoyment, hours, growth, future salary, responsibility, company culture. 

Assuming you aren't this persons manager, you need to report the situation to your manager. This person is an impediment. Asking for regular updates should come from management. Regularly asking for updates should be approached cautiously, but if the answers are unsatisfactory you should take that to your manager. Handing out tasks is again a job for management. But I wouldn't recommend trying to find an isolated project -- if you are the manager that may help you confirm whether the person is performing adequately or not, but it can also lead to a project not being completed on time. Also, if you are the manager, how you respond will depend upon your location, in most of the US, the answer will frequently be to simply let them go. 

While this question is tagged Software Industry, I think it would best to step back a bit and look at it from an industry neutral point of view. Your companies process for the work you do involves an external quality review step. Your productivity is thus measured not by the time it takes for your task to go from start to finish, it is measured by the time spent between start and ready for review (in total, if more work is required to pass the quality control review, then that extra work gets added on to your total). So your personal productivity is not at issue, this external review does not slow you down. Now there are two caveats to be aware of, one that is directly your responsibility, and one from a company efficiency point of view. 1. First the personal, you obviously want to have as little rework as possible. Some is expected, possibly even desirable, a lot is a problem. 2. Secondly, and this is more industry specific, you want to make it as easy as possible for your work to be reviewed. If the QA takes longer because you didn't take the extra steps necessary to ensure that testing was easy and clear, that can be laid at your feet, particularly if your collegues do take steps to help the testers. So making it easily testable can be considered part of making it ready for review. 

You are approaching this the wrong way. That is a question the COMPANY should be asking, your question is much simpler, and doesn't depend on anybody else: how much do you need to be paid for doing this job? Anything less than that is by definition, unacceptable, anything over should be acceptable. Now, what you need should be influenced, but not determined, by how much you can make elsewhere. In short, you don't need to look up an equivalent title or even equivalent job, you need to look at the requirements of the job and how much you think you can make elsewhere. What does the job require that you would be reluctant to give? Hours, availability, stress, travel, location? What does the job offer that you want? Hours, travel, location, responsibility, power, career growth? Do you want the job and what it offers more than another job (say your current) and what it offers? Final note: the company needs to determine what is an acceptable market price, but they should be doing so based upon availability of people with the required ability who desire to do the job, not job title. If they don't they are unlikely to hire a good fit, but that is their problem not yours. 

Don't worry about their time, worry about yours. Your experience is itself a demonstration that you never know in advance what you will feel like after an interview. You went to an interview, expecting it to be nothing more than a learning experience and now you want to work there even if you could make just as much (or possibly even more?) elsewhere. Now, that said, if you're happy with the offer, you don't have to keep looking, there's nothing wrong with just picking the 3rd company. But don't just not show up for the other interviews. You should either notify them that you will not be attending, or, if you are willing to do so, ask them if they would like you to attend even though you have accepted a position elsewhere. 

Which one they want will depend upon their abilities and priorities. Think of this as a chance to improve customer satisfaction. 

Assuming that you are working on an internal line of business applications (either directly or indierectly) work closely with the business users to determine what they need as their top priority, and then make that your priority. You'll need to make sure you don't get side tracked by the bug/feature of the day (ie make sure that what you are working on is apriority, not just what happened 5 minutes ago). Most likely you have a backlog of what is wanted/broken, work it. But also learn what your users do so you can do so intelligently. The name for this methodology is Kanban. 

No inheritance - composition/interfaces over inheritance No sprocs - code should be in one place No frameworks - partially introducing a framework can be confusing and hard, switching to a framework can be a major change No FK's - he's crazy In short, for the most part, the restrictions are reasonable -- not necessarily correct, but that isn't the point. Sometimes comfortable is the right way to go, and it's not you that is going to be supporting this. I would pick a battle and then fight it -- in this case, the first battle should be getting the code onsite. After that FK's as data integrity is usually critical. As to how. For the code, just ask -- if he says no, take that to supervisor and see how they want to handle it. If it's supposed to be their code and he doesn't hand it over, that's a major problem and not something a junior dev can resolve. For the FK's I suggest starting small, doing one at a time, after verifying that doing so doesn't break anything. This will probably be slow and take away from new features. But you can't just slam it in and say that if it breaks something it's already broken. Out of order creation/deletion of FK's can work without the constraints being in place which means badly designed but working code can be broken when introducing them. This is probably the most bang for the buck and the least likely to break something and the most amemiable to testing. Show that it can be done without breaking the app. Find where a table is being used, and show that all of those pieces still work after adding a FK. While most of the above has been more technical than workplace, I'd like to address that as well. You have two conflicting problems -- you need a job, and your boss either wants you to play the heavy or doesn't want to get into the middle of an argument. Without the authority to resolve the issues, you need to tread carefully as pushing may get push back ending with your temporary position being shorter than desrired. If you get all of the code to the application (and regular updates), I would suggest that the rest of it basically boils down to a difference in how best to do things, and you weren't hired as the lead dev. You can offer to show that your changes are both good and manageable, that they can be done safely and offer benefits. But ultimately, it's not you in charge. If he is unwilling to let you introduce the changes, your options are to quit or do it his way. 

Get a box, put the stuff in, put the previous occupants name on there if you know it, and then give it to someone else -- your supervisor, human resources, office manager. You shouldn't have to put up with it, and if you throw it away, you will have been the last one to touch it and thus the obvious target for any complaints. Dealing with such things are why those positions exist. 

Short answer: homework assignments are neutral in themselves; neither appropriate or inappropriate, professional or unprofessional. Long answer: there are basically three kinds of "homework" assignments. 

There are a limited number of ways to negotiate without saying "no" and when you say "no", people are liable to take you at your word. At which point a company is not "bad" when they say "Ok, good luck". I only know of two ways to counter offer without quite saying no. First, you can ask for time for another offer with better terms -- "Can I have a bit of extra time? I applied at X and made the final round, but they won't make their decision until next Tuesday. I prefer you, but they are offering Y". This does not reject their offer or their timetable, but lets them know that more money would move you from possible to definite. Secondly, you can change the details, but in such a way as it is not just asking for more. More vacation time against lower hourly wage or better performance for a bonus. Basically offer something in return, while indicating that the given offer might be acceptable. If your counter is just $offer+$extra, then, as I said, it is entirely reasonable for them to accept your rejection of their offer and go on to their next candidate. Why wouldn't a company respond to a counter offer? A comapny is likely to respond to a counter offer if they believe there is a mutually satisfactory resolution. Whether that is the original offer, or another counter offer, they must believe you will be happy with the result. If they believe you will be unhappy, even if you accept the offer, they are going to at least hesitant to offer the position to you -- you can always leave, and having you leave will be distuptive. Why take the risk that you will quit without even starting because you have a better offer (several questions on The Workplace revolve around that scenario). Even if they think you might be happy, your offer may change how they view you, making you a less desirable candidate. Why do companies normally respond to counter-offers? Why negotiate at all? Companies normally respond to counter offers because they can either agree to the offer, or there is some middle ground which they can agree to, which they believe you will be happy with. The reason they even entertain negotiation is because rejecting a offer doesn't get them what they want - someone to do the job. If they reject your offer and go to the next person on their list, they have no guarantee that person will accept their offer, and at least some evidence that they might (after all, you did). As they go down the list, they would be getting less desirable candidates and using extra resources to do so. In short, as long as you aren't too far apart, it is probably easier to accede or reiterate the original offer, but it is not bad (for either side) to just let it go.