If he is an introvert, then perhaps he would do better communicating in written form such as e-mail or IM than face to face chatting. You may be expecting more hand holding than you are getting but there are alternative solutions that may be worth considering here. There are a couple of different ideas I'd suggest to you: 

Somewhat reliable though I would note there is something to be said for the mutual back scratching that can happen where I recommend Bob because Bob will recommend me back. The information may be useful though it is likely to be somewhat discounted a bit. 

Not necessarily. Software development can cover a lot of different possible roles as some developers may double as administrators, analysts and managers of various items. There can be database, network and system administration to be done. There can be business analysis, functional analysis, system analysis and probably a few others. Thus there is the question of what did and didn't you have to handle in your previous role. In some jobs, I had to put new computers onto the LAN that may or may not be what people would expect from a developer. 

I'd probably notify the boss that there will be some appointments and find out what kind of arrangement could be made in terms of keeping track of hours worked. Will you make up the time on other days, take paid time off, take unpaid time off, or something else? Getting this arrangement would be the focus I'd have in discussing this with my boss as the more likely side of this is knowing when are you available and if any deadlines you have may have to be moved as a result of these appointments. If the boss asks for more detail, you could say these are medical appointments though I'm not sure you'd have to go into much more detail than that. The key here is to look at this from the company perspective so that there aren't loose ends in terms of you being absent and not knowing how this is being handled. 

While I would say it can be fair, there are some possible issues you may run across in some cases. If the company is a start-up there may not be developers and managers to discuss the company. Alternatively, some companies may have non-disclosure agreements that may limit what could be discussed between someone who wants to interview the company if you are getting a job in a sensitive area. For example, if you are going to be a developer within an IS department that is just being started to be brought in-house there may not be other developers and managers to discuss. In other cases, you may have to be careful of how far back you go in looking at former employees as where a company is now may not be the same as where it was a few years previously. Overall, it is good to ask the question and see what kind of response you get. Does the interviewer seem uncomfortable answering it? Do they understand why it is being asked? It may be a very interesting can of worms to my mind. 

What if the answer is, "This company wasn't around in 2008," or "Those that ran the company in 2008 have left so I don't know how they handled the company." There is also the question of while there may have been a general recession in 2008, within the market of the company, were things so bad in 2008? This is really a big question as in one of my work places things were pretty good in 2008 though now is another story entirely. Thus, you may have to be very careful about what kind of strategies the company has for handling a downturn. 

Some people may believe incorrect information. How do you convince them they are wrong? Do you just let them believe they are right anyway? 

My personal choice would be to either be amongst the first or go before the first round of reminders are sent out which I'd see as the middle ground here. 

Are you sure that as a developer you won't do any system administration, network configuration, security work troubleshooting issues or project planning? In small companies, a developer may well have to where almost all the IT hats one can wear in my experience and some of the more high up formal roles like architect may well require some experience as a developer to know the SDLC well. 

You do realize that developers will generally be expected to pick up new technologies regularly and this opportunity could be a way to see how this works for you. Thus, this can be where you can work on how to handle the challenge of picking up something new which should be where you apply how you learn to use something different than you have had before. While it may be nicer to have more time to pick up something, the time constraints are likely to be common in the business world at least this has been my experience in 16 years of doing web development. My suggestion is to consider what coping techniques do you have and find some new ones as if you stay in this field this is likely to be a recurring problem where each person has to find their own way through this stuff as developers are often asked to do things they haven't done before as quickly as possible as there are 1,001 other things to do next and while doing the next 5 there will be another 1000 ideas someone will have so there is no shortage of possible work in the field. Not all companies will properly fund projects but that's a slightly different story. Note that by coping I mean what do you do to recharge yourself, how well do you know what will drain your energy and what will give you energy. This can be a rather valuable life skill in the world that you have a great opportunity to work on this that while it may be tough at times, by being an intern you will have a bit of an advantage as you aren't expected to have mastered it, unlike more seasoned professionals where it may be expected that in having been in the trenches for so many years that, "Well, you got used to it, right?" is the unspoken thought from other techies and non-techies. Consider how you view deadlines and possibly look into if you have perfectionistic tendencies where a book like "The Perfectionist's Handbook" may help you get to healthier forms of perfectionism. 

Don't apply to both as that may well be viewed as a form of cheating to apply in different fashions and be disqualified from consideration assuming this is for the same position. I had a similar thing with different recruiting firms offering the same contract where I had to be careful as to who would represent me. Advantages to using the school's site: 

You could ask questions about what kind of positions are they looking to fill, what kind of culture is there at the client, location, etc. While there may not be the knowledge of the exact methodology used, there are likely some general questions that may not be a bad idea to ask here along with whether your answers here may be held on file or not. 

Enthusiasm for the job, ability to learn new things quickly, attention to detail, general problem solving and determination would be some key things I'd want in a new candidate. Recent grads have the upside of flexibility, enthusiasm and stamina that would be useful. While you may think you are like a lot of other people, there is the question of how well do you know what motivates you? Can you get things done? Do you ask for help when you need it? These can all be quite important in software development as well as looking for companies where the work environment suits you, e.g. do you want formalized procedures all around or more of a cowboy coding style? Do you want projects that are more figuring things out as you go or where there is a formal plan and most things have already been analyzed and a solution designed? Consider carefully what you think would suit you best as interviews are you interviewing them as much as them interviewing you. FD: I've done Web Development for the past 17 years, so I do have more than a bit of familiarity here.