Note also that you're missing a address. You need to specify this as well, or the gateway given by SLAAC will be used instead. Or you just won't be able to talk to any hosts except the one you set up a static route for. 

In the general case, this happens when rpm (or yum) crashes when updating the rpmdb, which is a Berkeley DB key-value store, and very sensitive. When such a crash happens, the rpmdb is left in an inconsistent state and this error occurs. All of the other files in contain the same information, though in a less efficient format, so the database is easily rebuilt. Two notable bugs you may have seen on older CentOS systems can cause this. The big one, a "nasty and subtle race in shared mmap'ed page writeback" as it appears in the changelog, was quietly fixed in a kernel update in 2007. This one presented itself slightly differently than your report, though. The one you might see from 2009 happened when PackageKit would kill yum at an inopportune time, and was also fixed. This would be more likely to affect desktop systems or servers with a GUI, though. All of these bugs predate EL 6, and you should almost never see this occur on EL 6 or 7, nor should you see it if your EL 5 systems are up to date. (I have no idea about EL 4. If you have one, kill it before it spreads.) That said, anything that causes yum or rpm to die while working with the rpmdb could cause it. This includes what you're most likely to see these days, random cosmic rays flipping bits, or someone getting overzealous with . In RHEL 7, yum traps more signals during the actual transaction run, and you'll see the message . This should help prevent most situations in which someone or something interrupts the transaction and causes this problem. 

just saved you from accidentally destroying all your data. Don't try this again until you fully understand what's going on. I recommend you familiarize yourself with at least these parts of the LVM HOWTO: 

I can tell that you didn't actually install the packages, or you would not have asked this question. Generally, yum gets this right already, installing dependencies before the package that requires them. It is only when listing the packages to be installed that they are sorted, for convenience. 

Deleting any file in which referenced VZ repositories. Getting a clean copy of the latest RPM and installing that over the existing one: 

KVM doesn't include any such mechanism. However, since each virtual machine is simply a process on the host, they can be managed with standard process utilities such as or better yet, cgroups. 

The messages are (relatively) harmless and can be ignored, providing you have the extra few KB of disk space for storing them. If you do intend to have a fingerprint reader in future, you may wish to leave this service untouched, or at least carefully document that you have masked the service, so that future you remains aware of it. 

Sounds like your domain is parked. Both of those IP addresses are registered to Netissime, which seems to be your registrar. When you actually set up your own web and email services, you can change those records to point to your own servers. 

Your host doesn't have an active firewall blocking any connections, so the iptables rules you added effectively do nothing. Your system accepts all connections anyway. If your connection is firewalled, then the firewall is outside the server (e.g. Amazon EC2 security groups, GCE firewall, etc.). 

An nginx variable that you attempt to use in Lua must already exist first. But you tried to use a variable without creating it: 

There is no on CentOS because that name is a Debian-ism. You will find logs relating to user authentication in . 

You should have this in , and you don't have to reboot. Just . As for agetty in a shell, it really was not designed to run in the foreground and control some other terminal; while you could pass it a tty argument of , this would cause it to print a login prompt in your terminal, rather than on the serial port, which isn't what you want. 

You should be aware that takes place on the server which ansible is managing, not the machine on which you are running it, when and the is a URL. You should further be aware that visiting $URL$ redirects to $URL$ which is a secure web site, which further redirects to $URL$ if you manage to get that far. As such, the SSL certificate validation takes place on that server, and the software and CA certificates necessary to perform that validation must be on that server. Further, they need to be system packages, not packages you have installed yourself with . You should ensure that installing these prerequisites is among the earliest provisioning tasks you run. 

You've already redirected the request to the remote site; you have no further control over it. The browser will contact the remote site and get whatever response it gets. 

You can use a for this. Place it in a separate file which is d from the server's block, and then whenever it changes, reload nginx. An example: 

The relevant section of RFC 2616 makes for interesting reading if you're wanting to control caching. 

The problem is that reflects the connection that was made to nginx (from your load balancer), but your caching module is using the scheme from , which reflects the actual scheme in use. It should be sufficient to just make that change. 

rlwrap is a wrapper for GNU readline, so it's doing everything locally and only passing your input through after you press Enter. When you press Ctrl+] you don't see the prompt because readline has not yet sent your input. To kill your telnet connection, then, press Ctrl+], then q, then Enter. 

It appears that chkrootkit doesn't like your Node.js installation since it has a large number of hidden files. Most of those look normal for a Node installation to me, though. The Python ones don't look normal, but that could just be because you're using Debian. Check into those. As for the iptables problem, you are at the mercy of your VPS provider there. Since OpenVZ and Linux-VServer use a shared kernel, you can only use iptables if the provider loads it for you. In particular, Linux-VServer has very limited or no support for iptables in guest containers. I hope that by now you have moved away from that crappy OpenVZ based VPS that you were on. That's certainly the root cause of all the problems you have been having. 

In addition to setting the grub command line, you also need to configure tuned. But not using the instructions you linked to, as they are so full of errors it would take half a day just to explain them all. Create a custom tuned profile (which I'll call ), and then set the profile. You will base it on an existing profile, such as if you are running in a virtual machine (EC2 is, of course), or if you are on a physical machine. Create the directory to hold the custom profile: