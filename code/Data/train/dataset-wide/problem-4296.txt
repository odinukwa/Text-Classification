With my experience, I am terrible at reading people, to see if they are open to casual talk for a while, or if they don't want their work to be interrupted, so I don't know when to start chatting with them. Also, my own life isn't very interesting to talk about, as I don't go out on a typical weekend. I don't want to start talking "just because". I am good at staying focused on my own work all time, but usually when I talk I tend to catch people at a bad time (they are quickly interrupted by some work-related order). And at work there are conversations that can be over 15 minutes long. This is not a problem for me in non-work related situations, such as a friendly outing or a party, because I know people want to talk. But at work I either risk being labeled a shut-in or a guy who slacks off too much. How do I balance it? How do I know when to start/finish a chat, and make it sound natural without being forced or contrived? 

I've recently started to look for a new job in my web development career, applying to several places. Not wanting to be very picky, I applied to a lot of jobs where the required set of responsibilities fits my experience, without putting much consideration as to what their primary product or service is. I only took some consideration the age of the company and how reputable they are in their industry. IT jobs are common in almost every organization. Some do business making X and others are non-profits contributing Y and Z. Naturally some industries interest me more than others, and others not so much. As an example there is a web developer job available for a fashion magazine publisher. The job fits the description of what I am looking for, which is web software development with a possible opportunity to learn new languages. The industry that the company participates in, however is not really a great fit with my interests. So I may show passion in the work that I do, but not so much the end product (if they offer me a complimentary magazine I take it simply as a good gesture). Is it fair to the employer to apply for work if you cannot see yourself fitting in with what they are producing, or would it be a waste of my time and theirs? To me, it seems like a more intimate relationship with corporate interests is needed, since it's not like taking a fast food cook job. Because of that I feel like the passion and interest in the end product could mean the difference between being able to move up to a significant role in the company and just going through the motions. 

Take it as a chance to improve the way you communicate your opinions on others' code. Instead of believing that this was intended to reprimand you of your behavior, think of it as a soft prodding that you should be mindful of not just what you say in a code review, but how you say it in a code review. I know from experience that reviews are meant to be egoless and that we don't single out any one person, but it's still people writing the code. Take the chance to ask your manager or lead how they'd have responded to code you found less favorable, and simply improve from there. Make it a focus point for you to build on as opposed to it being something (potentially) negative. 

Honestly, alarm bells are going off for me with these particular questions, not because you're not getting better answers, but because the questions themselves are...terible. There's no real context to ask what the "difference" may be between Windows and Mac, given that: 

What you want to demonstrate is that you did billable work. What this means to me is several different things: 

Sounds a lot like my previous job... I was contracted to get a start on .NET and Flex projects and in the they put me working on LAMP/WAMP stacks (which is what the company eventually got into and dropped everything else). But in my case I was already familiar with those stacks whereas you will have to take on something new as a challenge. I would say just go with what you've learned already because in the end, these languages/systems are just a tool to meet the end of a goal. As someone just coming out of a training program, you won't have much say in the company until you can produce some results. Leverage your back-end experience to work for Javascript, and learn a framework or two. You'd be surprised how complex the language can be. Also, you'd get a better understanding of how server-client interactions work. Also, understand that the demands of a company may constantly change, as it was in my case. However, we cannot tell exactly from your question if this will be for one project only, or if the company wants to keep you in front-end for the long haul. If you are being compensated fairly, I wouldn't complain about it for now. Part of being a competent and reliable worker is to adapt to the dynamics of the company. 

You claim that this is a very low evaluation, but you don't explicitly state if you've been punished or otherwise demoted because of it. Without any tangible effect from these evaluations, there's no way for you to know how to improve, or what's keeping you from getting 90% or above. Talk directly with your evaluator and ask specific questions about your performance. Do not make this out like you want to know why you're getting marked lower than you expect; instead, steer the conversation towards tips and direct suggestions on how you can improve as a professional. Think "professional development" instead of "evaluation". I wouldn't recommend writing a letter or contacting anyone else on the matter, since it could result in more direct and unfavorable reviews in the future. 

The same applies for the second question. If I were asked, "What would you do if the network is down?", I'd start by asking these questions: 

Everyone's going to run into quirks or issues when working with another person. The fact that John decided to call these issues out in public is unprofessional and erodes morale outright. 

You would ideally title yourself as a software developer or software engineer. In your case, you have experience with back-end languages and frameworks which, in some companies put you squarely in programming the back-end of websites, far removed from the design. Other places would have you using a lot of HTML, CSS, PHP and some frameworks, bridging the contexts of design and function. The degree of specialization often depends on the company size. Website/graphic design is concerned with the presentation and organization of information in the medium. In a perfect world, having an expertise in graphic design would carry over well into website design, but website design comes with its own idiosyncrasies and rules for good practices. So those designers have to understand the technical requirements and limitations for design for an online medium. 

If you can sleuth your way to the original job listing, skip the middleman and contact the company directly! Now, not all technical recruiters are terrible- from my experience the bad ones tend to be the ones that scour through so many resumes and jobs. I applied to a newsletter for one that gave weekly job listings, but getting a response from any I was interested in was futile. I had a better, more personal experience with smaller agencies. They tend to have less candidates coming their way and you won't get so lost in the shuffle. 

You can't just think of John's working relationship, you also have to consider the rest of the team's morale when working with John. Here are some sure-fire red flags for me: 

I'd be surprised if HR were the ones evaluating a person's competence for the job based on their institution. Actually, I'd be surprised if HR were the ones evaluating a candidate's technical expertise period, but I've heard of stranger things. The long and short of it is, while attending a prestigious college can definitely help propel one's name and/or standing amongst other qualified candidates, that's about all it's going to do. The main factor of whether or not someone actually gets the interview nod is if they actually fit the requirements of the job. The prestigious college may get one a few extra looks during the interview process, and it may also set some predispositions about how they're meant to perform as well, but the main qualifier for whether or not they're competent and capable to perform isn't going to lie in the college alone. As an example, I worked with, then for, a person that didn't have a Bachelors in Computer Science, whereas I do. Irrespective of that, this person was brilliant at their job. They opened my mind to a lot of programming techniques and practices that I most certainly didn't know, and this developer has my absolute trust and respect. There's someone else that I'm familiar with that didn't fare so well in the IT industry, and they've got a few graduate degrees to show that they went through the paces. They're brilliant, but they lean very heavily on pre-baked solutions from frameworks and other places, and are not ones to go out and attempt to remedy a need that the framework simply can't provide for them. 

The last two weeks have fallen really short of these expectations. If I don't have work, I don't have hours to report, so I do not get paid. This makes me feel like I've been put on furlough, but doesn't that usually apply to paid employees and not contractors? 

I've read a few job descriptions and replies from interested parties about their places of work, that they have a "regular" workday with the hours of 8 to 5. I am normally used to working 9 to 5 and that is considered full-time as well to many of my colleagues and management. In the US, the Fair Labor Standards Act does not set a legal number of hours that divides full-time/part-time work and it is left to the employer. So in what cases would companies see 8-5 as being more acceptable than 9-5 to be "regular" (in their words) full-time? These jobs in question are both for filling the same role, (software engineer) and are in the same geographic area. They usually haven't indicated if it is to keep up with a regional office from a different time zone. Is the number of hours required to work as full-time largely an indicator of the company's local culture? 

From an engineer's perspective who may be interviewing you...how am I meant to evaluate your skill or see how you solve problems if you refuse to do so in my presence? Let's not mince words here. I suck at interviews. I was unemployed for about five months because my interviewing was so terrible (from my perspective; I know I'm a brilliant developer but interpersonal communication has always been a weakness of mine). But that didn't mean I didn't do any coding exercises; quite the opposite. I made sure that I met their coding exercise requests, and showcased what I had learned from past experience (including clear documentation of code, READMEs, unit tests, etc). I wanted them to know what they were getting from hiring me; a diligent worker who regarded themselves as a professional and expert, and one who understands what it means to architect the solution, test it, and deliver it in a way that makes sense to everyone. By you refusing or failing to do that, you miss the opportunity to really put yourself out there as a stand-out candidate. I've not heard of many professional institutions hiring someone without asking them some kind of coding exercise. Let's face it - as a developer, you're going to be paid a lot of money to solve problems, and if you don't showcase how you solve (or at least approach) problems, you're not showing me that you're worth what I'm willing to pay, or more. 

I have an unusual problem in finding work. I have been in many interviews (over 10 in the past year), but none of them produced any job offers. However, the employers I've interviewed with are impressed by my resume and ability to solve the problems given to show that I would be productive. This leads me to find an observation for most jobs that I apply to (mainly a hard-skills technical job). Everyone needs soft skills to survive the interview process. But for those more inclined for technical work, once the job is held, these soft skills are suddenly not as important or used with the same sense of urgency, or at least they're not the same type of communication skills. They feel underused in the job compared to the interview. As an example, I do not know how to translate my ability to communicate well with co-workers on a long project into the ability to convincing interviewers and play the salesman for saying why I should get the job. Speaking to an interviewer to me feels a lot different and more difficult than speaking to a team member to discuss project goals. I consider then different kinds of communication skills. I probably don't know how make them work at an interview, so here is where I want improvement on. 

I'm sorry for your loss. In the real world, time off is time off, regardless of if it's for bereavement or for leisure. In either circumstance, only your supervisor is authorized to grant you the time off or to decline it. Since you've lost a family member, I also doubt that they're going to decline the request, but in the context of an office setting, the only people that need to know why you're taking the time off is you and your supervisor. Once it's been cleared, then and only then should you make any kind of announcement. The last time I had bereavement leave, I was coming off of a week-long vacation. I had informed my supervisor the instant I knew when I'd be out, and declined to make any public announcements to anyone else when I had came back to work the following day. I had felt like it was handled professionally and succinctly, and the person who needed to fill out the appropriate paperwork was acutely aware of what was going on. If anyone else were brought into that loop, it'd add unnecessary channels of communication since they don't have to do anything while I'm out except their individual jobs; they can't handle the time-off request or anything like that. A lot of people are thinking that the manager was in the wrong here, but I would say they'd only really be in the wrong if they gave you this feedback in the open instead of in a one-on-one setting. Even worse if they jumped down your throat about the matter. Since you're still learning, it's not unfair to expect to get feedback on something like this. It also wasn't unfair for them to say that it wasn't good to announce this to the entire floor. (Note that I didn't mention them saying it was "unprofessional" since you yourself didn't state that they explicitly used the word "unprofessional". I'm sure that they understand what you're going through - or at least can sympathize - and aren't going to chide you for your actions based on that alone.) 

One of the more common expectations from working in a smaller company is being able to do more, and manage a wider variety of skills. They usually cannot afford the level of specialization that larger companies have. The advantage of smaller companies is that you can be a bigger fish in the pond, giving you potentially more control and direction of working on projects. It can be quite easy to have a management position there even if you haven't had that experience in previous jobs. As a personal example, I was offered a Project Manager role only 3 months in, on my first job after finishing college. (because I was still wet behind the ears, I only declined it to focus on building my technical skills) If you are interested in leadership positions, working at these companies would be a good way to get the experience. That has its downside, in that you might reach a plateau of experience or seniority too soon. Smaller companies tend to involve more horizontal movement than vertical movement in job titles. Overall, though, working in smaller companies will make you a more well-rounded professional.