Suppose we have a full rank, integer sublattice $L$ of the integer lattice $\mathbb Z^d$, where we fix the dimension $d$. Consider the Gram matrix $M$ of $L$, relative to some basis for $L$, and reduce all the entries of $M$ mod $4$. Is there a nice clean description of all the finite types of such mod $4$ reductions of Gram matrices, as we vary over all full rank integer sublattices $L \subset \mathbb Z^d$ while keeping the dimension $d$ fixed? There is a theorem that attempts to describe the Gram matrix of an integer lattice mod powers of $2$, in J.W.S. Cassells' book ``Rational quadratic forms", Section VIII.4, p. 117 in this book. But in the beginning of that section he writes "...This section is only for the masochistic". I would be very grateful if anyone has found a cleaner description and/or proof, at least in the mod $4$ case. 

It seems that when your map $\phi$ maps a vertex of $P$ to a non-vertex of $\phi(P)$, you're looking at a cone in the image of $\phi$ that now contains a whole line. Thus, by general Brion-type tangent cone analysis, any cone generating function containing a whole line must vanish. 

Problem $1$. Which full rank lattices $\Lambda \subset \mathbb R^d$ have their corresponding theta function $\theta_{\Lambda}(\tau):= \sum_{\bf n \in \Lambda } e^{\pi i \tau ||n||^2} $ zero-free in the complex upper half plane $\mathbb H$? For example, for $d=1$, the classical theta function $\theta_{\mathbb Z}(\tau):= \sum_{\bf n \in \mathbb Z } e^{\pi i \tau n^2}$ is the ratio of two Dedekind eta functions, so it is the ratio of two infinite products in q, and hence zero-free inside $\mathbb H$. Similarly, any theta function that can be written as an infinite product in a "nice way" is zero-free. What I would really like is a criterion that, instead of brute-forcing a contour integral to search for zeros, gives us some nice conditions on the lattice $\Lambda$, involving such parameters such as, for example, $vol( \Lambda)$, the successive minima of $\Lambda$ relative to the unit ball, the dual lattice, $Aut(\Lambda)$, etc. EDIT (on Nov 16, 2012). To consider more examples, fix any dimension $d$ and consider any diagonal positive definite quadratic form $a_1 x_1^2 + \dots + a_d x_d^2$, with $a_j$ any fixed positive real numbers. The corresponding lattice $\Lambda$ is therefore the direct sum of $d$ one-dimensional lattices, namely $\sqrt a_1 \mathbb Z \oplus \cdots \oplus \sqrt a_d \mathbb Z$, so that $\theta_\Lambda$ is the product of $d$ one-dimensional theta functions, and hence $\theta_\Lambda$ is nonzero in $\mathbb H$. More generally, if $\Lambda$ is reducible in the sense that it is expressible as the direct sum of some lower dim'l lattices, then we call the corresponding theta function reducible. It is therefore natural to ask the following more particular question. Problem 2. Which irreducible theta functions $\theta_{\Lambda}(\tau)$ are zero-free in $\mathbb H$? 

Given any convex polygon in the plane, is it always possible to find a point $p$ in its interior such that when we draw the line segments from $p$ to each of its vertices, the angles formed at $p$ are all (not necessarily equal) rational multiples of $\pi$? For a triangle $T$, it's easy to construct such a point, namely the Steiner point $p$ will do, enjoying three angles of measure $2\pi/3$ each, between $p$ and any two adjacent vertices of $T$. But is this known in general? 

Let $P$ be a compact, convex, symmetric, $d$-dimensional body in $\mathbb R^d$, and let $\mu$ be a (necessarily) symmetric probability measure on $P$, so that $\mu_P(x) = \mu_P(-x)$, for all $x \in \mathbb R^d$. As a consequence, the Fourier transform $\hat \mu_P(\xi) := \int_{\mathbb R^d} exp(2\pi i \langle \xi \cdot x \rangle d \mu$) is real-valued. Are there methods to find a $\bf{global}$ minimum (it's ok if it's not necessarily unique) of the (real-valued) Fourier transform $\hat \mu_P(\xi)$? Note. Of course, one can find conditions for local minima and then employ a brute-force comparison of all of them, but there are potentially infinitely many local minima. So I'm looking for something better than this. In other words, does the convexity of $P$ help us somehow? 

The game ends when a player's life is $\leq 0$. Now a person watching this game would like for it to end after about $t\in \mathbb{N}, t\geq 1$ turns. In what ways can they assign the probabilities $p_i$ such that the expected number of turns is $t$? Edit: To be clear I am looking for all possible $p_i$ such that the expected number of turns is $t$. 

This is pretty late but I'm fairly sure that if the user is allowed to request that they want n cycles, Some Newbie is right that this problem is NP-Hard. The proof goes as follows: Take some Hamiltonian cycle instance P. Embed it into our graph G for this problem by assigning all the weights of edges that don't occur in P to 0, and the edges that do occur to 1. Now, ask for one cycle that has maximum weight. If the weight of this cycle equals |V|, we know that there is a Hamiltonian cycle, otherwise if it is less than |V|, we know there is not, thus this solves the Hamiltonian cycle decision problem, which is known to be NP-Complete. It seems that if the user isn't allowed to specify the number of cycles, however, this gives enough flexibility that this problem is now solvable in poly time. My suspicion is that this is where the confusion was. 

Player $X$ attacks, and randomly deals $i$ damage to player $Y$ according to the distribution $p_i$. This means that $Y$ decreases their life by $i$. Player $Y$ attacks, and randomly deals $i$ damage to player $X$ according to the distribution $p_i$. This means that $X$ decreases their life by $i$. 

Suppose you have two players $X$ and $Y$ fighting, both of which have $n\in \mathbb{N}, n\geq1$ life. Each player has a probability $p_i$ of doing $i$ damage for all $i\in[0, n]$. Note that $p_0$ is the probability of doing no damage, and all $p_i$ should sum to 1. $X$ and $Y$ both share probabilities, so all $p_i$ for $X$ equals $p_i$ for $Y$. Now play the game as follows (each step is one turn): 

Okay so I haven't proved this yet but in practice this seems to be working pretty well for me. The trick is that you use interval arithmetic for the real and imag component of your number, using fractions with biginteger type numbers for their numerator and denominator. The bits still grow very quickly, but what you can do is "bound" them at each iter. For example, 0.000123141532 can become [0.000124, 0.000123], then you use those as your new intervals. If you end up having your upper estimate of the norm get >= 4 but the lower estimate of the norm be < 4 then you want to try a closer interval (so like [0.00012314, 0.00012315]). I find that usually 200 bits is plenty enough precision to run 1000 iters which wouldn't be practical otherwise, but these could grow as much as needed. Of course this code isn't super fast and optimized and using floating point numbers for rendering fractals is much easier, but the important part here is that these results are exact, this is guaranteed to give you whether or not it breaks in k steps. It runs basically in time linear in k since you can just fix precision, but there may be worst case behaviors on the edge of the mandelbrot that require the interval to get so small that you get exponential slowdown. There was some stuff on perturbation theory that might help prove that this doesn't happen but I haven't done that yet. I haven't ran into that issue in all my renders I've done with this so far at least. For now, here is that idea implemented in python. I'd like to clean up this code/comment it but I figured I'd just share it first so others can believe me that this works and maybe help with proving perturbation theory stuff I'm not sure about. Specifically, here is the interval class I made in python: 

Sorry in advance for responding to an old question, especially since this isn't even a solution. In my defence, this is my first post and I haven't seen anything in the FAQ for etiquette forbidding answering old posts? I've been thinking about very similar questions lately, and stumbled upon this post during a Google search for ways of solving the Beltrami equation. There is currently a construction (attributed to Gauss) detailed on the "Beltrami equation" Wikipedia entry for locally solving the Beltrami equation at a point (the default is $z=0$) when $\mu$ is (locally) expressible as a power series in $z$ and $\bar{z}$. I've tried the procedure but it hasn't quite produced a correct function, and this has prompted me to try to solve it myself. I believe that I have a working algorithm for finding general solutions to the Beltrami equation for a sufficiently nice $\mu$ - such as the one you've specified. Caveat: I realize that you're not simply wanting to solve the Beltrami equation, but would like to find the unique normalized solution $f$ such that $f$ is a homeomorphism of the upper half plane, but all that I'm able to furnish is an (explicit) family of solutions which probably contains the desired guy. I have no idea how you might be able to track down the unique normalized quasiconformal solution in this haystack. A pretty simple non-zero solution to the Beltrami equation for your specified coefficient is: $$f(z):=z-\frac{\epsilon}{2\pi i}\exp(-2\pi i\bar{z})+\frac{\epsilon}{2\pi i}.$$ Note that although $f:0\mapsto 0,1\mapsto1,\infty\mapsto\infty$ and is smooth, it doesn't satisfy that $f(\bar{z})=\bar{f(z)}$ and isn't the quasiconformal map we want. First observe that $f(z)$ satisfies the Beltrami equation over all of $\mathbb{C}$ (not just the upper half plane). Next observe that post-composing $f$ by a holomorphic function $\varphi(z)$ also results in a solution $\varphi\circ f(z)$ that also satisfies the Beltrami equation. Equivalently, any power series of $f$ is also a solution over its domain of convergence. Since $f(z)$ contains a $z$ term, it should be reasonably easy to show that any solution to the Beltrami equation defined at $z=0$ that's also expressible as a power series in $z$ and $\bar{z}$ will agree with some power series in $f(z)$ in a neighborhood around $z=0$. This results in a (countably) infinite dimensional family of solutions to the Beltrami equation, but it's not clear to me how one might be able to extract the quasiconformal solution. In fact, I'm not familiar enough with quasiconformal maps to know if the desired solution can be written as a power series in $z$ and $\bar{z}$ around $z=0$, although this is not, I feel, an unreasonable expectation. Being overly optimistic, I feel that the $f(z)$ above isn't a terrible approximation for the actual quasiconformal solution, especially if one simply wanted some growth-rate intuition. In particular, the approximation behaves best where the imaginary value of the input is large, which is somewhat unsurprising because the Beltrami coefficient is nearly $0$ when the imaginary part of $z$ is high, so the solution should be roughly the identity map around these parts - the identity function, of course, is the dominant term in $f(z)$ for $\mathrm{Im}(z)\gg0$. Just in case you want a way of constructing a solution to a given Beltrami equation that is "generative", in the sense that any other solution defined at $z=0$ should be a power series of this one, I believe that the following procedure should work: Step 1: We adopt the notation that the Beltrami coefficent $\mu(z)$ - which by assumption can be written as a power series in $z$ and $\bar{z}$, is written as $\mu(z,\bar{z})$. Then solve for $$\frac{\partial F}{\partial z}(z,w)=-\mu(w, F(z,w)),\; F(0,w)=w.$$ This is purely motivated by the aforementioned Wikipedia entry, although the order of the inputs for $\mu$ do differ from Wikipedia's. Step 2: Find $G(z,w)$ such that $G(z,F(z,w))=w$. That is, the functions $$(z,w)\mapsto (z,F(z,w))\text{ and }(z,w)\mapsto (z,G(z,w))$$ are inverse to each other. I'd be surprised if $G(z,w)$ always exists over the entire domain of $\mu$, but it should for "nice" examples of $\mu$ (It's existed for all the examples that I've checked by hand, perhaps something along the lines of $\mu$ being defined over a simply connected domain and expressible as a power series in $z$ and $\bar{z}$ might suffice)? Step 3: A "generative" solution is given by: $$f(z)=G(\bar{z},z).$$ Here's hoping that someone'll take this mess and figure out how to build the normalized quasiconformal map. =)