Most answers include the point that the behavior should be addressed in private. This is because you as the boss, or the more mature of the two, are obliged to choose the best place to get your point across. Even if you were to correct his actions on the spot you should at least remove yourselves to another location, again privacy. Otherwise you would be shouting to all "O.K. Everybody! I'm going to take care of this issue here! Stand back y'all" The only point missed in the above answers is this. It is best to handle something that makes you angry (or upset etc.) when you are Not angry or upset. The emotional component (or anxiety of surprise in a public confrontation) will make it hard to deal with any situation. This is not a confrontation you are out to win once and for all but a problem you hope to avoid in the future. As a talker who too often gives more information than desired I have received this talk on occasion. 

I'm not sure just when but its probably since programming computers took off. When a user can see how little is needed(?) to make a change they are much more likely to ask for continuous improvements. Painting and plumbing even though not professions they are trades and real jobs that are over when you're finished. Once the tools are put away no one would come back and ask for more. Now that everyone has a keyboard they cannot see the problem with those they hire continuing to type away to their ever increasing specifications. The masons/Masons had it right. You don't give away the methods of doing the job and you don't start to work until the money and scope are agreed upon. Myself, I've always had agreements worked out that would specify what would be complete in the current phase and leave the sloppy ideas for the next phase. If it is not part of the current phase "I'm sorry, I won't have the time". It's up to you to set the boundaries. My buddy charges three times my hourly rate and he bills half time for driving over a certain distance to a client. I'm getting by alright. He lives in a house larger than mine that he paid off in eleven years. YMMV. 

I agree with the others that you did actually make the mistake of agreeing with the deadline. It is very difficult not to in the circumstances, I know. The essential things to do are from my own experience (and many others) in the "If Only" file of hard learned lessons. The first goal at all times to to manage the clients expectations. Or rather "Make sure you are working towards what they want." This includes getting it in writing that such code will work in such a way on such a date. With that you need to add in time to examine the current code. This takes more time than anyone leaves for it, always will. As reality moves in (usually badly) on what can possibly be coded it is up to you to make the new reality clearly known to those involved. The schedule must take it into account. As far as Machiavellian politics in management I have been through some of what you describe. The record keeping here may not ward of their attacks since getting the job done is only part of what they are after. Sorry you have to step through all this while doing a good job at programming. The major point that needs adding is this. As clever people (or brilliant-?-) the habit is often to underestimate the time needed for a task, as follows. When we have finally, doggedly worked out, or quickly spotted the solution to the issue at hand we can see from the start all the way to the very end. We behold the answer. This "Aha" point is probably the only reason I care about the work nowadays. Estimations based on such understanding overlook countless shovel fulls of -work- that lie between the vision and the outcome. This came to mind as you described your PhD as experience. A PhD is work all right but not like regular people work. School politics is not like work politics. I also agree with those who suggest you cannot win the battle they have placed you in, no matter how excellent your work. You should keep records of goals set and reached and keep your eyes open for your next position. 

High end pay is typically contractor / consultant pay, which rarely all goes to the person being paid. The person matching the consultant to the job gets a cut. The consultant having to pay all of his taxes (regular employees pay about half of what the government collects, the business pays the other half). etc. As a consultant, one typically has to double their hourly salary to get an equivalent "regular" take home pay. Still, you're below the low end pay. The primary ways this is solved generally involve people moving jobs. Sure, you can ask for (an maybe get) a raise, but it is a very rare day that you get a raise that doubles your salary. Typically they'll offer you a small-ish amount (how about $25 / hr) thinking that you'll be happy with the increase. In order to argue equal pay, you typically also have to be equal in other non-task (but related) ways. I've known decent programmers that lack degrees from a University. They mostly get paid less. You can't compare your pay in cities with dramatically different costs of living. etc. You might want to do a bit more research to ensure you really are underpaid, then you might want to have a fallback plan in case things go really wrong in asking for a raise. Then you want to ask for a raise presenting the best reasoning you have. Even then, many just go the easier route, which is to take a job elsewhere, as it is always appropriate to discuss salary in an interview process, and always awkward to discuss it outside of an interview process. 

You cannot plan to make someone else do something. Instead look over the employee benefits with a careful eye to see if they already support furthering one's education. Some employers do so only for a degree that specifically can be used by the company. A few don't place a restriction on what you may study. Most require that your company be notified and that they review your request before deciding if they will reimburse expenses. Some employers will place restrictions on the reimbursement, requiring you to pay back the reimbursement if you don't maintain a sufficient amount of time at the company after receiving it. This is a common policy to prevent people from leaving immediately after a company helps them obtain the new degrees. 

You are worrying about the future. It all will come down to whether the person judging you determined that you took reasonable steps to secure the laptop. If you have the wrong person, a laptop in a locked trunk, in a safe welded to the car body, will not be sufficient. With the other extreme, a broken window meant you secured the laptop. I would take reasonable steps to secure the laptop if the damage is likely only to be the cost of the hardware. That means "out of sight" in a non-descript bag, preferably in something you can shove under a seat. Either that or something that can be placed under a jacket or other non-valueable item. If you live in a high-crime area, you might improve upon this. If you are aware that the loss of your laptop could have a harmful impact on the core business operations, where such a loss of data could easily exceed the cost of the hardware, I'd take a more careful approach. Locking the laptop in the trunk, coordinating with IT to ensure the hard drive is encrypted, and attempting to use the laptop primarily as a vehicle for accessing sensitive data in virtual machines secured in company server rooms (as opposed to keeping the data on the laptop). There is no correct answer, because one cannot determine how the theft will be handled or judged by the person reviewing it. As long as you take sensible steps that seem measured against the possible value of the loss, you likely will not be seen as negligent. Oh, I just saw the update you had, mentioning you have a truck. Trucks typically have VERY LOUSY security, as far as vehicles go (I owned one, and it was the only vehicle I had that was broken into 3 times). Since you don't have a decent trunk, you might have a lock box. Assuming it is clamped to the vehicle from the inside the lock box, it passes as an "effective trunk". If you don't, the only option you have is to hide it "out of sight".