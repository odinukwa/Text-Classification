Everyone expects that new people will have questions and most people will be fairly gracious about helping you get started as long as you don't come acoss as a user (Imean this isn the sense of someone who manipulates people not a software user) who isn't even trying but exppects everyone else to drop everything and do his job too. One thing you will want to figure out first is how and where to commit code changes and how often the organization expects you do it. Get a good solid feel for how to use the source control system as a priority espcially if you havent used one with a large group before. Ask if they have a coding stadard and where it is documented. If it isn't documented, try to figure out the basic standard from the code as you work through it. WHatever you do, do not use the standard from your previous jobs or univeristy experience if it conflicts with what most or all of your colleagues are doing. It really annoys people and makes the code harder to maintain. Yes some standard companies use are stupid and annoying, use them anyway. Do some observing of the corporate culture in your first few days. Do people prefer to talk in person or through email or through IM? Do people all wear headphones and hate for someone to talk to them? You may or may not be assigned a mentor. That is the person to go to with your questions. If they don;t assign one, you can ask the folks around you for help but if they clearly don't want to be disturbed, then ask you boss. It is his job to see that you have what you need to do your job. Then dig into the codebase and whatever technical documentation you have. Take notes. If the documentation is lacking, try creating some for yourself and then pass it to someone else on the team and see if your understanding is correct. Try to control your reaction to the software. Large complex problems tend to have lots of things in them that aren't the way you would have done them. Many people starting in a new job with a legacy project are appalled at the state of the code. Try to remember that some of that code was written ten years ago when certain techniques were not available and it has been working all that time. Yes you may see places to improve things, but keep your mouth shut on that until you have proven yourself as capable and competent. You have to have respect first before you have the credibilty to push through changes. Even if they don't have a formal code review system in place, get your work code reviewed. Better to learn what not to do the first month than do it wronng for months or years before anyone notices. 

Usually I say something like, "My current employer has asked that I keep that information confidential." Since I am in the data business, if pressed, I respond with, "You wouldn't want to hire someone who can't keep confidential data confidential would you?" And frankly if they still insist, I end the discussion because I am not interested in them if they insist they have to have a number. 

You may not know all the reasons for doing this. We had to adopt similar types of things because they were required for a certification required by our clients. If this is the case that these procedures were adopted for a contractual or regulatory reason, there is zero chance of overturning them. However, what is of most concern is that you document the impact of performing these procedures on deadlines and project work. Once the full cost in time is known, then, if they are not contractual, you will have the evidence you need to persuade them to consider loosening them. Moreover, if your clients are upset that their deadlines are being moved due to these procedures, you have someone who will take your side against management and the users of your software are far more likely to be effective in pushing back on something like this. You cannot hope to reverse a decision of this nature without allies among your users since you do internal applications. But to get to this point, you need to fully implement the new procedures and document the delays caused in other work. When you do time estimates, make sure you allow for that work as part of the project (and make it a separate line item, clearly visible, when you do). Your project owners may find that they don't want to spend an additional 40% of the time on each project and push back the requirement themselves. This is the most effective way to push back. Remember these testing items are project costs and need to be billed internally to the projects you are responsible for. Let the extra cost and deadlines moved out to speak for themselves. Even if there is no chance that these requirements will be pushed back, your internal clients need to be aware of the impact on your work. Further, this is a time when you should not be working extra to avoid having those deadlines slip. There is a cost to time-consuming new procedures and the organization must be made aware of that cost by letting things slip because you do not have time to do them. Remember it is not your place to dictate to management what you want to do, it is your place to do what they are paying you to do and they get to decide if a process is what they want you to spend your time on because they are paying your salary. Yes you can move on, but honestly, in this case, you will find yourself moving on fairly frequently. In your career, you will often have to perform functions you don't want to do. The next job will have other functions you don't want to do as well. Some of this is pretty much inherent in all jobs. It is unrealistic to expect to spend 100% of your time (or even the majority of time) coding at most places. The business is in business to make a profit, there are more important things to the business than writing code. Just because those things are not personally important to you (or uninteresting) doesn't negate the fact that they are important to the business. If you want to do only the things you want to do, then start your own business. You, of course, will likely find that there are plenty of things you need to do when you own a business that aren't fun and exciting like taxes and accounting and marketing, etc. 

First, you need to assume that the corrections you made could have still been incorrect. So when you talk to your manager again, tell him you had made those corrections and the date of them and then ask him if your corrections were in error. This conversation serves several purposes. First it lets them know you are taking the feedback seriously. Next it tells them that the corrections were made before the feedback, so if they are, in fact, correct, you look good. Next if the fixes were not correct, it opens up a dialog to help you to understand why they were not correct so you can actually fix your performance. If at all possible, I would do this in a face-to-face meeting or phone call. Email would be the last preference for this sort of thing. I also would do it immediately. 

Part-time is discouraged in all but customer service industries because most companies find it difficult/risky to manage. If I have a part-time software developer, are his hours going to coincide with when I need him available to work on a particular issue? What about when I need production support, do I have to wait until the next day when he comes in? How do I work out the hours when there is a need to work overtime? Will the person be willing to work overtime during the final days before a major launch, etc. If I have a need for someone to work full time as an accountant, then I have to recruit two part-timers instead of one full time person which is harder. Then I have the problem of information sharing so that the guy who works afternoons can pick up where the woman who works mornings leaves off. If I can't divide the work so that no person needs to be aware of exactly how far the other person got that day, then it becomes much more a of a risk. Further, in this situation, it is often likely one person will carry the other person so that one does the majority of the work. This causes resentment and it makes it hard for managers to often even know who is doing more to reward that person since they are sharing tasks. There is also an element of if I let one person do it, then everyone will ask which make for a problem if you have some jobs that are more difficult to split up than others. A psychological problem with co-workers shows up if the part time person ends up doing as much as the full-time people. Then they look as if they are slacking which leads to peer pressure. Sometimes the part-time person does this in order to make sure he or she will be allowed to continue to work part time. Also it is easier to concentrate longer when working a 4 hour day than an 8 hour day. So you see there are many challenges from the corporate level concerning managing part-time work and very few benefits. So one way they discourage it is by making sure the benefits are poor or non-existent. 

It would be unusual of management to do such a thing unless they felt that what you did made them as a company look bad. They may be worried about the repercussions of you doing the same thing to current employees and then they would be culpable since they knew of your behavior beforehand. I would not be surprised is a lawyer told them to reprimand you. In the US at least, they likely have the right to fire you for no reason at all and they do have a right to protect their professional reputation. People are reprimanded/fired for inappropriate posting on Facebook, for instance. Legally your rights are going to vary from jurisdiction to jurisdiction. Check with a lawyer to be sure of your rights if you think you will fight this. It will be costly and time-consuming even if you are in the right. However, apparently what you did was bad enough that your managers felt it warranted a talking to. I personally would pay attention to what they said and change your behavior and make an effort to make sure they see you behave appropriately with any employees that your sexual orientation might make you want to date. I would not date anyone from this company while you are employed there or anyone who used to work there. Be especially careful at any holiday parties. You could look for another job since you have ruined your reputation at this one. However before you do that, remember that it is a small world out there in most professions and once you get a reputation for inappropriate behavior, fewer companies are going to be interested. As you have seen, personal behavior can get back to current employers and future employers, so first I would clean up the inappropriate personal behavior. 

Does everyone know what they mean when they use this term? If so, then do not waste another second of energy on it. I suspect there are far more important issues you can find to expend your energy on. On a scale of 1-10 in importance, this is a -5. Treat it accordingly. If you really desperately feel the need to fix the usage, then model the language you want. Don't do it in a condescending way. Don't emphasize the word you use. (And automate is probably the correct choice.) Don't make it an obvious correction. Just quietly start using another term. Over time they may start to use your term. 

It is irrelevant that you think your work was satisfactory, your immediate supervisor did not and this is person who has the ability to get you fired or picked up as a permanent employee or assign work. You need to fix what he perceives is wrong even if you don't agree. If you go around him to the next level up, you will get a reputation as a troublemaker and unprofessional. Don't go down that road. Frankly it only makes his criticism seem more valid. Learn to accept that what other people perceive about you is important and learn to manage those perceptions. Learn that people who have more political power in an organization (which is basically everyone not an intern in your case including the admin assistant if your group has one) have more say in what is and is not considered the correct way to do things. What you do is adjust your behavior to meet your boss's expectations. Or find a new job with a boss you like better. Not meeting deadlines even by one day is "not reliable" BTW. Googling is acceptable for some things and not for others (especially if you put proprietary code out on the Internet, a huge non-no) and never when you copy and paste without understanding what you are doing. Politics are present in all organizations and blowing the guy off with I found it on Google is pretty much the kiss of death. You researched it on Google and then modified the ideas you found there to solve your problem. A monkey can Google, a developer does more than that. Perhaps, too, he was unhappy because he had to ask you what you were doing instead or because you blew off his questions with an attitudinal answer (the tone of voice you used when you said you Googled it is important.). It sounds to me as if you don't like the guy or think he is really your boss and he rightly smacked you down for it. One of the biggest problesm I saw in what you wrote is that getting a poor review is blamed on someone else. No, it is not his fault, it is yours (Why didn't you know in advance how he felt about your work? It is your responsibility to make sure the boss is happy long before you get a review, for instance, he was unhappy when you said you Googled, did you ask him why or blow him off?) and until you accept that and make changes you will continue to get poor reviews or get fired. The fact that he was a contractor is irrelevant and frankly only makes you appear petty to include that. Your immediate boss is the most important person in your work world. It is your job to make this person happy. I wanted to add: Every person I know who has gotten a review that said their work was not acceptable who didn't then change what he or she was doing eventually ended up being fired. It really doesn't matter what you think of your performance, it matters what your boss thinks. I think of one guy I worked with who was shocked to be fired even though in the course of a year he was transferred to every team we had (no one wanted to work with him) and none of his code ever made it prod and he was counseled on his performance multiple times. We gave him far more chances than most places and he refused to see he was failing until he got smacked in the face with it. Don't be that person.