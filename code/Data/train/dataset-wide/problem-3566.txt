Notes on setup for trac should be in /usr/share/doc/trac after package install. These generally detail configuration that is not automatically done during installation. First file to check is README.Debian or README.Debian.gz. Use less or zless to look at them. Trac should pull in subversion. If not, install the subversion pacakge. Documentation will be in /usr/share/doc/subversion. 

Reverse DNS is useful for providing some measure of trust in the identity of a connecting server. It is most commonly used to validate incoming SMTP connections. This is highly reliable for personal email. However, automated mail sending services are often poorly configured. 

The list of potential ways to send mail out is too long to list here. The standard programs are sendmail, exim, postfix, and qmail. There are a number of SMTP relay programs which can be used to send mail. Many languages have library routines that can be used to send mail as well. You can may it difficult by creating iptables rules to prevent access to the SMTP related ports; SMTP (25), SSMTP (465), and Submission (587). Blocking these ports will shutdown normal routes for email transmission. Once you have blocked the direct access to mail servers there are a wide variety of other ways to send mail including WebMail, port forwarding, and remote sessions. These routes are not normally used by any of the programs or languages. However, if someone wants to subvert efforts to block email transmission they may use these techniques. The only surefire way to prevent sending mail out from a linux box is to disconnect it from the network and keep it disconnected. This also applies to other Operating Systems. 

Why would you do this? You will likely want the data cached during the run. Once the run is done the cached data will age out of memory as newer requests come in. In the mean time it will sit in otherwise unused memory. Doing raw I/O will likely keep the buffering to the drives internal cache. This can result in decreased performance of the application, as you loose the O/S caching and subsequent speed up. When I first started worrying about relative access speed, it was on the order of 100/1 in favor of memory. The benefit of caching vs I/O has been steadily increasing since. Any security considerations are a moot point as the disk image will likely be available. 

The routers DMZ function likely makes all ports on the server public facing. You should consider using the DNAT functionality if you have it. You should isolate you virtual server on a separate virtual network. If you are using Linux, you can use IP tables to isolate your server. This can also log all attempts to access ports and/or hosts you don't want people accessing. (i.e. samba, router, etc.). I find Shorewall makes configuring iptables in cases like this quite simple. 

Depending on your software your logs are a good place to find the ids that are really being used. It also depends on how long you keep your mail logs. A little scripting magic and you should be able to get counts by email id. Sendmail usually uses the standard mail.log file to log message deliveries. Once you have found the appropriate logs it shouldn't be too difficult to select and pars the delivery messages. You will need to filter out messages sent to other systems (excluding you blackberry server). Normally privileged accounts (UID < 500 or 1000) shouldn't be receiving email. Other than that any id acceptable to your authentication system should be valid. Try running to get a list of users. The various alias files are for redirecting delivery. Many aliases are for required ids like and , or system ids like to which many alias may point. You will want to filter out the system ids, and configure the required ids in your new server. 

This will be in if you are using the split configuration, or if you are using the single configuration file option. The easiest way to do scanning is to create a local data acl like this. 

Yes. As long as the router allows the Ping request to pass outbound and properly tracks the request so that it can return. Most routers I have dealt with handle this correctly. Pings in though a Firewall (NAT or not) are often blocked. There are tools which manipulate TCP packets to generate ICMP failures to provide the equivalent functionality through a Firewall. 

This is standard behavior. Apache matches the first (default) site if no sites match. I setup a default domain to handle cases like this as well as invalid (unconfigured) domains. To support multiple domains by IP address, you will need multiple IP addresses. This also usually the case if you want to support multiple domains over SSL. There are some workarounds for SSL. 

All of these are likely to add up to about a second. Verifying your DNS configuration is complete will help. Configuring both SPF and TXT records for SPF may speed up DNS checks in some cases. If you can configure Postfix to do immediate delivery, then each message should use its own thread. I don't know if Postfix supports multiple delivery threads. Multiple threads can create synchronization issues which may slow down your server. High volume delivery may require special tuning of the server software. Exim allows the spool database to be split to allow multiple threads to run with less contention. If the email is not personalized, then putting the addresses in a BCC field and grouping recipients by domain may help. 

You are likely running into windowing effects. Data is transmitted in packets of up to 1500 bytes. There is a transmission window which allows a certain amount of data to be transmitted but not acknowledged. Your system will fill the pipe and then has to wait for the data an acknowledgment before sending more data. Some systems use a timeout before transmitting the acknowledgment, so you may get an acknowledgment for several packages at one, allowing your system to send that many more packets. This can lead to bursty behavior such as you see. There are a number of factors which can increase burstiness. Sampling errors can increase the apparent burstiness. Longer sampling periods tend to minimize sampling errors. It is rare that a single stream can run at the full bandwidth. To do so there must be sufficient bandwidth along the whole path. The latency (end to end transmission time) must be low enough that the transmission window is never fully used. The higher the bandwidth the harder it is to do so. 

Or manually (you may want to handle tun0) in the VPN startup script), but I would configure eth0 with /etc/network/interfaces 

To find the name server for a DNS server will query the DNS server for . This will return the nameserver information provided to your registrar. You must provide the IP addresses to the registrar when the servers are within your domain. To find the DNS servers the DNS server will contact one of the root domain servers. When the DNS server starts it will use a file to do an initial lookup of the root servers. 

I have used mtr (linux screen based traceroute) with a slow ping rate (1 to 2) per minute to monitor response to the end point. If one or more switches are getting congested they show dropped pings or slow responses. This may be a result of duplex issues. Under some conditions I have seen Cisco routers appear to run half-duplex on links hard-coded to full-duplex. Duplex issues can be tested by transfering a large file both ways. It will be much slower in one direction than the other. This has made package installations over the network impossible. Dumping error counters on all the interfaces (host and router) along the way can be helpful. Error counters should be 0 or low values and not increasing at a noticable rate. 

At a minimum you need the SMTP (25) port open in both directions. You should have the Submission (587) port open for incoming traffic, if you want mobile clients to be able to send email. For your clients to pick up mail you need either IMAP (143) or IMAPS (993) open for incoming traffic, although it would be better to have both open as sometimes one or the other is firewalled by ISPs. Setting up your own SMTP server can be somewhat difficult. Besides requiring a static IP address, there are several DNS records you need to setup. Either Postfix or Exim4 will work. There are a number of posts dealing with SMTP server issues. You could configure your clients to use a relay for outgoing messages. If you do choose to setup your own mail server, you will need to deal with incoming spam. Your clients (cellphone and laptop) should connect on the Submission port (587) and authenticate. can authenticate using your server, I don't know if will do the same. You will need port 25 open in both directions to allow mail to flow to other servers. If you don't install or you will likely want to provide a light weight server like to deliver system notifications. Having a single place to manage your mail is a good idea. Dovecot is a reasonably easy to configure server that provide IMAP services. I would configure it to listen on both the IMAP (143) and IMAPS (993) ports. I believe dovecot listens on both these ports when you use the protocol. You are correct in not using the POP protocols. If you are not running your own email (SMTP) server for incoming mail you can use a program like to get your mail from the server that is is being delivered to. You will need the appropriate port open to connect you your server. It will need a Mail Delivery Agent to deliver the mail. One option is , although you may be able to use the dovecot LDA service.