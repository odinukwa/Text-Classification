Your free time is yours, and your employer has no right to make demands over how you use it (unless they pay you to do it - in which case it is obviously not your free time anymore). If they want to ensure you stay on top of things and learn new technology etc., they should provide adequate training, resources and schedule it out of your regular work time. Firing you for not doing something which was not in your contract would be IMHO illegal (but I am not a lawyer, this is just my personal stance - if you want to be absolutely sure, you should show your contract to a lawyer well versed in your country's employment law). Of course, self improvement and continuous learning is in the long run beneficial to you first of all, so a wise person does invest in it; however, how much and in what form, is totally up to you. And it should also be perfectly acceptable to a good employer that you may be in a situation where you can't currently spend time on professional improvement (e.g. due to family obligations). On the other hand, if you sense that an employer is - formally or informally - expecting or obliging you to spend a set amount of your free time studying, that would be a big blinking red alert for me to avoid that company if at all possible. Such companies are most likely trying to exploit you - as long as you are willing to let them. 

But if you want a proper job, you can choose one which is international enough and in demand globally, like 

First of all, why do these two need to be opposing choices? I can very well imagine a project which directly benefits your organization while at the same time allows you to acquire a new skill or refine an existing one. This would be the ideal solution as most organizations (somewhat understandably) are more oriented towards their own short term goals, rather than your long term goals. To be on safe ground, you need at least your boss's informal approval for self learning projects done in your normal work hours. Collect ideas for option B and filter the list for projects which look exciting to you e.g. because you can learn something new related to them. Discuss these ideas with the persons involved, to get their support and agree on the rough solution. Then go to your manager and tell him/her something like this: "I thought I could use my free time to implement a tool to make life easier for the ... team who have been complaining about ... . We discussed that a simple solution built on the ... framework, using a ... DB would solve their problems. I assume I could implement this in about ... days and it would also allow me to learn more about technology ... which could come handy in the future, as I have heard rumors that project ... next year is going to need this." To ensure success, you may want prepare two or more such project ideas to offer a choice between them to your manager. Thus (s)he can make the final choice based on business value for the company (and retain the feeling of being in control - which may be an important factor for some persons and some kinds of companies), but you too get what you are after. Update 

Most probably not. In smaller cities, cost of living is lower and work opportunities are less, both keeping the average salary level lower than in big cities. As a side note, I think the part of your post you dedicate the most words to is too localized - that is, which city to choose. You don't explicitly ask this, but without this, the list of cities with pros and cons is not very relevant for your two actual questions. 

is No. It is necessary, but not sufficient in itself, to get hired. As for your detailed questions, I personally am not strict with the criteria. I would expect a decent programmer to pass this test easily. However, some people may be nervous and make stupid mistakes like the above in a live interview. So I can imagine scenarios where a candidate misses some use cases or fails to write 100% correct (pseudo)code - like your examples 1-3 above -, still (s)he demonstrates her general problem solving skills and applies logic correctly. In this case, with a guiding hint, she should be able to find and fix the problem and get a 100% pass on the fizzbuzz challenge. However, if she can't complete it even after receiving a few hints, that's likely a fail then, although not automatically - there is always room for individual judgement and further discussion if needed. 

Several of these tend to cause problems for the whole team or company in the long run if not identified and addressed in time. And each of these may require different actions: 

I can only give my general thoughts on this, not being familiar with salaries over there. I think you can look at this as applying for a new job (with the advantage that they already know and almost surely want you). Most advice regarding salary negotiation states that you should let the other party make the first proposition, then you can bargain for some more. So I suggest you focus on asking for official recognition of your results in the form of a new role / job description, including the appropriate salary. If your manager agrees to promote you into a (senior) developer role, you can just calmly wait until he starts talking about the new job grade or salary range. If he wants you to give an amount first, you can politely answer that he knows the company job grades much better, and he can judge well how useful you are (and going to be) to the company. You can say that you are feeling underpaid and under-recognized for what you have so far put on the table, and you would like fair treatment in this respect as the basis for a mutually benefitial long term relationship. Then sit back and listen calmly to his response, and move based on that. 

Depending on your situation, you may want to team up with colleagues if many of you have similar working conditions and requests. The more of you step up together, the higher pressure you can exert to management. Also, the less tension develops between you and others (as it may happen if you alone get new equipment but others don't). On the other hand, the more you are, the more costly it is for management to comply with your requests, which may reduce the chances of success. Another key aspect is to frame your request in terms management can understand and find convincing. That is, focus on cost vs benefits. E.g. 

You should definitely talk to your line manager first. Going over his head may piss him/her off for no reason (unless your relationship with your line manager is bad - which you haven't mentioned so I won't discuss in more details than that it would be a difficult situation requiring extra care from your part). You need not be very nervous about this, I am pretty sure your manager - if he is worth his pay - has already considered this and may even have an answer ready for you. 

Also, X could ask coworkers how they gained their expertise on domain C and relate his/her current woes and issues - most likely (s)he may get sympathetic responses (provided (s)he raises the topic at the right time, e.g. at lunch time, not in the middle of a team design session :-), and useful advice. In general, most nontrivial domains take considerable time to master, even if they are nontechnical. In a previous project, it took me close to a year to get productive due to the mathematical complexity of the subject. At my current employer, I have been working on one of our project for over 3 years and there are still things I don't understand about the business domain. I can see what a specific piece of code in our legacy app is doing, but have no clear idea why. 

Absolutely. If (s)he was the person you worked with the closest, that may give him/her a different viewpoint than that of the company owner. Note though that the owner may get the info for his/her own recommendation from the very same person. So the two recommendations might turn out to be very similar. However, once you have both, it is up to you to decide how to use them. If they look too much alike, you can skip the worse of them. If they are different and both are positive about you, use both. 

I agree with Oded's answer and would like to add one important step. If you tell your boss "I would like to share a room with Agnes, Bill or Charlie because ...", his/her immediate reply may easily be "OK, but would they like to share a room with you?" It may also turn out that (s)he has different room setup in mind, and/or that some of the aforementioned has already discussed the topic with your boss before you... So you may optimize your chances by discussing the issue with your favourite teammates already before turning to your boss. This way you can ensure that you only mention names who haven't yet committed themselves and specifically agree to share a room with you. You might even be able to allocate the whole team this way, in a way that is acceptable to everyone involved, which would further strengthen your case. Of course, this would only work with a boss who is not a control freak :-) 

Not necessarily. As you noted before this, the fizzbuzz test is a quick way to weed out totally clueless candidates quickly to save everyone's time. So the answer to 

Yes, in the short run it may help you get your first job, or to get back to the job market after a long break... but what after? First of all, the effects of having a low salary and no or low raises are cumulative. If your colleague starts out with the exact same salary but gets only 1% higher raises each year, the net effect of it over 25 years is that he will have over 27% higher salary. Now if he already started out with significantly higher wage, the difference is going to be even bigger. Even if you feel you don't care about the money now, it may - and probably will - change in the long run. You are going to have different phases in your life. You may become a family man, at which point your salary is going to become significantly more important to you and your beloved. Also at some point you will need to start thinking about - and maybe saving for - your pension years. If not thinking ahead, at that point you will have already lost many years of cumulative growth potential. 

That is actually a question for the finance department in your organization, and the actual salary should be calculated at the end of the month once the employee is back in the office and circumstances have been clarified (as @gnasher points out, there are several, possibly better alternatives to pay deduction). Still the basic answer to your question should be simple. Employees are paid based on the number of their effective working days, not per calendar day. (In fact, if your employee were paid per calendar day, you had no right to deduce pay as the number of days in the month doesn't change regardless of absences ;-) So for a month with 22 working days, your employee's daily pay is 2500 / 22.