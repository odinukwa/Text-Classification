You can't easily do this, and normally wouldn't need to do that. If you find a local user is spamming you it is usually easy to deal with. Spam filtering is usually done for mail coming from servers you don't have control of. You could try with a base configuration using the remote server as a smart host for all deliveries. It would need to know to route the message back after scanning. You would then need to configure your smarthost routing to skip messages arriving from the system doing spam filtering. 

When you specify name servers in DNS they are defined by name. These first few names are typically names for name servers, so I believe these records are the names listed in the records for the domain. I am concerned with the number of name servers, as normally there are 2 to 8 name servers for a domain. It appears the presented list of names also includes the names returned by looking up the addresses of the servers. The IP addresses listed should be the IP addresses obtained from the record for the names servers. It is common for an IP address to have multiple associated names. PTR records are usually configured with only one name. Many ISPs by default configure their PTR records to indicate the service type, and some additional information. The names beginning appear to be of this form. With the exception of servers sending email to the Internet, there is no requirement to have names on records to match an record which points to them. Try doing the lookups for yourself. You can use or to find the IP address and corresponding names. 

Yes, Google would be correct in identifying the SPF failure. The IP address that should be checked is the address which is connecting to Google's mail server. As there is no received header for Google, I suspect your mail server is checking SPF on the connection. It should only check SPF for unauthenticated connections from the Internet. Local connections and authenticated connections should bypass SPF validation. SPF is intended to ensure the sending computer is permitted by the sending domain. Normally a domain would have 1 or 2 mail servers which handle all email send to or received from the Internet. These addresses should be the ones listed in the SPF record for the domain. In this case, appears to be connecting to the domain's mail server. If the server is not on the domain's network, it is common to use an authenticated connection on the submission port (587). The mail server should then forward the message to gmail and SPF should pass. If SPF still fails, the SPF record needs to be corrected to include IP of the mail server. There are several mechanisms that can be used. My Email Policy ensures that all legitimate mail sent from my domain will pass SPF. There are some services which forward messages on behalf of my users which will fail SPF. However, the recorded failures I have received from servers validating have all be spammers. 

You will encounter this problem with any domain whose servers are hit by a DDOS attack. Having the servers for your own domain hit by a DDOS is more likely to be visible and traceable. Setting up one or more caching name servers on your own network and configuring your computers to use those for DNS resolution should resolve the problem unless the DDOS is extremely prolonged. I use dnsmasq on a linux server, and have run it on an OpenWRT router. It will also read values from and/or other files in the same format. It your external DNS host supports it, you could run a local bind server as a hidden slave. This would provide the best protection you could get without hosting DNS locally. Alternatively, you could run bind as your local caching name server. 

When I had server getting monthly preventative maintenance from the manufacturer, they started off with a shutdown every month. This tended to result in component failures. The schedule changed to quarterly, then to only when required. I would not recommend shutting down a system that old unless it was necessary. 

You should be getting proxy requests from only a few IP addresses. Firewall these addresses. At a minimum prevent access to HTTP, but I would firewall them entirely. If proxy is a module disable the module. On Linux you can use a2dismod to disable the module(s). 

Relay via your ISP's mail server. Configure your mail server to forward all outgoing messages to it until you have resolved your issues, Until you get your PTR record pointing back to your domain you are likely to have problems. You will have to arrange this with your ISP. Do you have a static IP address, if not you shouldn't be trying to send directly to the Internet, and risk loosing incoming email. Also check what your server thinks it name is this should be server1.domain.se. If it just says server1, or 111.111.11.1 you are not likely to be able to send email to many servers. Read the bounce messages you get, as they may provide a clue as to why you were classified as spam. Also check your IP address at spamhaus.org. If you are blocked there, you will have problems with many servers. There are other sites that will check multiple blacklists for you. 

In the unusual case that your host has multiple Internet facing addresses and your mail server randomly binds to them when sending, you might want to configure that host as you suggest. This may cause problems for remote servers sending you mail if your server fails as they may try each address in succession. (I have seen a lot of posts from users having problems getting applications to send from the non-primary address on an interface.) rDNS rules are of concern when you are sending, so I would verify that the only the primary address is being used and configure DNS accordingly. You may be able to choose another public address and configure your server to bind to it. I would verify that configuration. You can verify the address you are sending from by sending a message to ipconfirm@postmaster.aol.com as described on the AOL troubleshooting page. If you have multiple addresses for an A record, then you could have a PTR record back to that A record for each of those addresses. This would be unusual and I would NOT recommend doing so. All of the lookups I have done for A records with multiple IP addresses have PTR records back to a unique domain name. Having each PTR record return a unique domain makes it much easier to determine which host is malfunctioning should it be necessary. The few cases I have seen the same domain from multiple servers appear to be moves of the domain to a new IP address. The one domain I know of that uses a singe domain name for multiple servers is . They use a single name as the name in the HELO command. Its A record returns two addresses, but they have a farms of servers with PTR records to unique names other than . All of their severs that have sent me mail pass rDNS validation on their IP addresses. Likewise, is is legal but not common to have a PTR record return multiple domains. Not all providers will support this. Of the hundreds of mail servers I have in my email database, very few have more than one PTR record. The majority of those don't have a valid rDNS lookup for any of the domains. It is best to have separate domain (host) names for each IP address with pointer records pointing back to that unique domain name. Any A records with multiple addresses would be different from any of the host names and are generally used to load balance web servers and other stateless services. The configurations I have seen for load balancing SMTP servers use multiple MX records with the same prioritity. Overload and server failure can be handled with multiple MX records with different priorities. For an example try following the addresses for or a similar server to their PTR records and back. You might also want to look at the mail servers for any of the large freemail services like gmail, hotmail, or yahoo. It is common to have PTR record for addresses not hosting an Internet mail server which do not have a corresponding A record. ISPs often use this technique. If the PTR record of an SMTP server points to an A record which does not point back to the PTR record, something is broken. My research shows servers which pass rDNS and have a valid SPF record for the hostname or HELO name are more than 90% likely to deliver ham rather than SPAM. Few of the failures to deliver are Spam related. Systems which fail to pass rDNS are highly likely to be sending spam. Those that don't send spam are most likely to be sending to a mailing lists or otherwise sending automated email. 

I have run into three cases with various init scripts. user@host has the privileges to shutdown apache2, but apache runs on port 80 which requires it be started by root. Use sudo to restart apache2. user@root should be able to reload apache2 though. If user@host can start apache2, then you likely ran into a timing issue where apache tries to start before all the children have exited. Reload can be used apply many configuration changes, and does not require the old children to exit before the new servers are started. See the documentation for . The PID file got changed to a different PID by running start when the server is already running. Stop tries to stop the process from the PID file, but it is no longer running because it failed to get resources used by the old process. 

You need name resolution to work differently from inside and outside the network. Your dyndns entry will route to external IP. Firewall routes are different from inside and outside the route. Add you dyndns name with the servers IP address to the local hosts file on OpenWrt and the dnsmasq DNS service should override the entry from the Internet. If you have it configured correctly, your name should resolve to your server's IP address from inside your network, and your external IP address from outside the network. It is possible to configure hairpin NAT, but it is relatively difficult and fragile. 

You can tunnel the access over SSH and just allow localhost access. Access over a tunnel is usually more secure. If you want to allow access without tunneling you will need to use your external address. Be aware that your home external address may change. Depending on your ISP's configuration this may occur relatively frequently. Postgress may allow TLS encrypted connections. This should be used if you are not tunnelling your connections. 

Default policies are quite limited, but make a good backstop to ensure un-handled packets get dealt with in the proper manner. If you need (want) to log those packets you need a final rule. This can be a chain which logs and applies the policy. You could also just log and let the policy handle it. Consider these approaches to policy, and the final policy rule. 

Don't put the gateway line on the server with the Internet connection. Its 192.168.100 address should be the gateway address for the other hosts. See for information on the interfaces file. 

It looks like they downgraded security in their upgrade. TLS security appears not to work. This may be the result of a patch on your side checking defaulting to or verifying TLS security. You should be able to identify the security being used in the browser after you have fetched a page. I would try contacting hostmaster@someserver.xxx, as they probably don't intend to be non-compliant with TLS security. If VBScript is using the Internet Explorer setting, you could try disabling all TLS ciphers in IE. This should force VBScript to negotiate to an SSLv3 or SSLv2 cipher. I would start with disabling 3DES as there was(is) a Windows problems when connecting to servers using a secure implementation. 

Hostnames make it easy distinguish between servers. See RFC-1178 Choosing a Name for Your Computer for more details. For what you are doing the server's hostname doesn't really matter. In your case your host will be hosting serveral FQDN (Fully Qualified Domain Names) to enable services. You could add more using addtional DNS CNAME or A records. As you have a small site ALL of these domains refer to a single host. Larger services like google.com have multiple IP addresses backed by multiple servers. In some cases the IP addresses may belong to load balancers in front of multiple servers. For an Apache server you should use IP based virtual hosting. You can use Apache ACLs and/or a firewall to restrict access. I use both when I can. If you add a mail server there are additional rules which should be applied. The FQDN for the mail server should be the same as the name the Server announces. In addition, the IP address should have a PTR record returning that FQDN. 

A second proxy pass for /webmail ahead of the proxy pass for / may work. I believe they are matched in order. 

If you have DMARC you can configure delivery status reports and bounce reports. This will allow you to receive delivery reports. I receive reports from Google, Microsoft and Yahoo. Please note disposition "none" indicates the mail was delivered. 

When I have run snort, I ran it on the router. This doesn't require an additional interface to send the traffic to. The risk is that if snort mishandles data and executes it, it will have easier access to the network than it would have otherwise. 

It looks like you email is from an automated sender which is sending using one of Google's server. It may be connecting to GMail to send the message. Your server appears to have an SPF record, which neither includes the Google SPF list nor indicates that it should be enforced. Including a Sender header for apache@servername.mycompany.com may help. There are a number of factors that will make you email look like Spam before you even start sending it. 

They are trying to read the environment strings for the environment. This can be obtained from /proc/self/envion, and they are walking back the directory tree to read it. It looks like Joomla is falling back to the main page when it can't process the request. 

If your server is using the default configuration, it should be using the self-signed certificate. This is adequate and acceptable to establish TLS connections on outgoing and incoming connections. It will however fail validation. You will need to use a certificate from a trusted authority to pass validation. Are you providing clients with certificates that they can use in place of a login? Other than your users provided with user certificates, I would expect client certificates to fail frequently. Many servers use a self-signed certificate, or have other issues that will cause validation failures. Exim won't ask for a client certificate unless you set or . Certificate are well covered in the Encrypted SMTP connections section of the Exim documentation. Many organizations have trouble getting their DNS correctly configured for STMP usage. DKIM is particularly troublesome, and most signers I encounter fail validation. I have little hope that many sites have configured their servers with the correct valid certificates. After recent restricting connections to TLS v1.0 and above, I have had to stop announcing to a number of servers. I haven't yet resorted to trying to validate TLS certificates for any clients. If I ever do, it would at most count towards their spam score. I may enable the log selector to investigate if any sites could pass validation. SMTP over TLS is growing but far from the standard. Those sites that do use it are sites that are well-trusted by other means. UPDATE: I've checked my logs, and so far only two senders have passed validation. Most clients didn't validate. I tried validating my certificate: 

Try using which should contain the domain portion of the sender address. Expansion variables are listed in chapter 11 of the Exim Specification. 

Prior to the switch over cut the TTL (time to live) on the address to a short period (say an hour). You can override the TTL for individual addresses. This should be done 2*TTL in advance of the change over. A couple of hours before the changeover you can cut the TTL to a shorter period (5 to 10 minutes). When you do the cutover, try to notify all your secondaries of the change so that the pull the change immediately. Verify all your secondaries have the change. When you are satisfied with the change, increase the TTL on the address. The easiest way to do this is to remove the TTL from the address and let it use the TTL for the domain. Due to the use of fast flux DNS for malware distribution and botnet control some DNS sites may limit the minimum TTL they use internally. You may want to watch for your changes to show up on OpenDNS and Google before shutting down service on the old IP address. Alternatively, you can just watch the logs for traffic to drop off.