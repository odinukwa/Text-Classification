Or better yet, it should not be present at all. Sending a blatantly wrong error code is a good way to confuse people (like yourself). 

The SELinux reference policy already contains a user role which (slightly) confines root when confined users are being used on the system (they are not by default). It should be possible to design a user role which can start/stop services and no other admin tasks, based loosely on , though I've never had to do this before and so I hesitate to give you a line-by-line. As much as I hate to say it, this is a question I would probably take to the selinux mailing list. 

Then renew with . And in monit specify Finally, you can restart monit with the renewed cert with something like a certbot renew ... 

Monthly is not frequent enough. This script should run at least weekly, and preferably daily. Remember that certs don't get renewed unless they are near to expiration, and monthly would cause your existing certs to occasionally be expired already before they get renewed. The name of the program is , which was renamed from . If you are still using , you need to update to the current version. Aside from those issues, it's about the same as my cron jobs. 

The actual values will be supplied by your ISP, hosting provider or datacenter. Or you can use public DNS providers such as Google Public DNS. 

It's what happens when you let marketing people touch technical documentation. This particular server motherboard has a secondary SATA controller, to which the ports labeled SSATA1-4 are connected. It can be enabled or disabled independently of the other SATA controller in the system BIOS. 

Courier imapd tries to do reverse DNS and ident lookups by default. Make sure you disable these, as one or the other (or both) is the most likely cause (and doing reverse DNS lookups at connection time leads to bad security). For instance: 

Thanks for posting the additional info. I did quite a bit of looking into this, and couldn't find any way to reproduce this issue. I found that iptables doesn't actually have any command line options that would cause it to read a user-supplied file. Nor does its SELinux reference policy define any need to read arbitrary files. My suspicion at this point is that some files on your target system are mislabeled. This could happen if, for instance, someone was editing a copy of iptables' configuration file in a user home directory and moved it to instead of copying it. Moving a file preserves its SELinux context, and so it would have the wrong context at its destination. Copying a file creates the new file with the default context for the new location, which is almost always the correct context. If it is mislabeled files, then running should fix it right up. To be sure, I'd just relabel the whole filesystem. You can do this without rebooting by running: 

Apache doesn't, but PHP does allow limiting the maximum amount of memory used, in php.ini. For instance: 

Remember that is prepended to the condition in the . So you've asked for rewriting URLs that begin with . Simply remove the duplication. 

Note that I didn't create this myself; I shamelessly ripped it off from Port mirroring with Linux bridges, which has a detailed explanation of how it works and an alternative using Open vSwitch which is a lot more flexible (and a lot more complex). 

Yes, just use the target instead of . You can also specify a reject reason, though the default is usually fine. The possible reasons are in the man page. 

Load the unique_id_module. This provides the UNIQUE_ID environment variable which serves this purpose. 

You have an incorrect setting in your file: The value is set to in the default file and needs to be changed. should be defined and set, either to which inserts public cache-control headers, or to (blank), which doesn't insert any cache-control headers, and the headers sent by your application will then be used, if any. 

What you really should be doing is using a tool designed for fetching Web resources, such as , , or libwww-perl's command. If nothing is available, you should have your system administrator install something appropriate. With that out of the way... The command does not terminate because the web server didn't close the connection. Remember that by default HTTP keeps connections open after each request as a performance optimization. Once one request finishes, another request can be sent over the same connection, rather than closing and reopening a new connection. If you want to instruct the server to close the connection instead, you can send the HTTP header. 

You're running a 32-bit kernel (and an out of date one at that). This means that any single process is limited to somewhat less than 4GB of address space. This system should have been initially installed with a 64-bit OS. (And while you're at it, consider a newer distribution. CentOS 5 will go out of support soon.) 

Currently the only way to reclaim the space used by a dropped InnoDB database is to dump all the databases, stop MySQL, delete the underlying storage files, restart MySQL, and finally import the database dump. The MySQL documentation has further information about this. 

If you only wanted to give higher preference to specific IPv4 addresses or blocks, you can specify them as well. Remember that you have to use an IPv4-mapped IPv6 in hex. So, to give preference to 203.0.113.0/24 over all IPv6, you would add: 

The way described is the way you create multiple records on Route 53. Entering two values in the textarea separated by a newline will result in two distinct records in the DNS. This is why Amazon call it a "record set" - it is a set of records. 

Those paths do not exist as files in the filesystem. They are handled by your web application. But, you are not actually routing them there in . You instead are routing them to a 404 page. 

By default 5% of a filesystem is reserved for use of the root user, and not otherwise available. This is visible in your output as a ~300GB discrepancy between the total space and available space. OpenNebula appears to consider this space as unavailable when performing its calculation. If you don't want to reserve such space, then turn it off: 

Stop using . You should be using instead, and should have been for years now. The man page even warns you of this. 

This would be processed by the system init scripts and set the kernel's hostname at boot. This is no longer the case in CentOS 7, nor any systemd-based system. On such systems, the static hostname is stored in , and set with . While it's possible to simply put the hostname in , running will cause it to take effect immediately, without requiring a reboot. (And, it was never the case that the hostname could be set by changing . This file simply overrides name resolution in case DNS is not available or unwanted.) 

You're running CentOS 7, but you installed EPEL for CentOS 6. This obviously is not going to work. Remove it and reinstall EPEL for CentOS 7. 

These sorts of software licenses generally tie themselves to the MAC address of an Ethernet adapter in the server on which they're to be run. Which is annoying as hell when the NIC breaks and has to be replaced... So the NIC ID they're asking for is almost certainly the MAC address. 

Set an ACL on each user's home directory, to which Apache needs access. This lets you avoid silly tricks with groups, which can actually cause more problems than they solve. For example: 

Well, that confirms a permission problem. Check the permissions of all the parent directories as well. 

I presume you mean to embed a Ctrl-G bell character into the output. The error is because you have placed an unnecessary backslash before the final backtick, thus escaping it. This isn't what you want. Remove it: 

We set default policies for the tables to ACCEPT; the traffic will actually be dropped by rules within each table. This gives us more flexibility. In particular, the OUTPUT table should always be set to a default policy of ACCEPT unless you intend to block outgoing connections. 

Like many other embedded systems, OpenWrt uses dropbear as its ssh server, not the more heavyweight OpenSSH that's commonly seen on Linux systems. Older versions of dropbear only support RSA and DSA keys; support for ECDSA was not added until version 2013.62 (which has only just been released a few days ago). It should show up soon in Barrier Breaker (trunk); but you will not see it in Attitude Adjustment.