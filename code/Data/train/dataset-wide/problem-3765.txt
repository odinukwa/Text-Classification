If your current status is "waiting for Joe to finish what he's working on", then Joe (and everyone else on the team) should know about it. It's your manager's / scrum master's responsibility to either help Joe finish a bit faster, or find you something else to do while you wait. That's what stand up meetings are all about, keeping the team informed of every member's current status. 

Arguably the simplest form of gamification would be a friendly contest. It could be anything, as long as it's work related, fun, and not too competitive. Fun rewards could range from silly t-shirts to books, nothing too pricey, you don't want people to get fixated on the price. The contest topic should be something related to the current goals of the company / team / project, whichever applies most, and it shouldn't be anything more serious than a friendly challenge. Whoever fixed the most bugs this week gets a silly t-shirt it's quite different than whoever comes last will be fired. Next you could have some kind of leaderboard, if your work has easily quantifiable aspects. To continue with the bug fixes examples, whoever fixes the most bugs each week gets a gold star, or any other silly achievement token you can think of, and every now and then the leader gets a price, bit more pricey than a book (two books?), or a couple of days off work. It would be impossible to come up with specific guidelines for gamification, as the process is entirely subjective (what's fun for me may not be fun for you), and quite dependent on the nature of your profession and the dynamics of your workplace. For example, there were gamification elements in every job I had, even in the strictest and most disciplined environment I had to face, the army. Getting a bit more recreation time than the rest of my company for disassembling and re-assembling my Heckler & Koch G3A4 in record time (don't ask, I don't remember) would be one example. And, of course, no answer on gamification would be complete without a mention to Stack Exchange. Chances are there is (or there will be) a Stack Exchange for your niche, and if you think about it, it's a ready made gamification platform for your company. Have your team mates compete by providing excellent answers or asking great questions, and use the existing reputation / badge mechanisms to quantify their contributions and reward them. If you are a manager, you can always spice things up a bit and ask questions on work related issues yourself, rewarding employees that would give you great answers. What you need to remember is that gamification is not about getting direct and immediate results, but mostly about having fun. Small and frequent rewards, preferably awarding the less illustrious aspects of the job (think: documentation), and always light hearted in nature, as the core concept behind gamification is encouragement and further engagement, not competition. Further reading 

I strongly dislike receiving emails from colleagues that aren't strictly about our work, however interesting or useful they might be, and I would go absolutely mental if someone interrupted me by sending me a link via IM. That might just be me, but the lack of response from your colleagues probably means that they aren't exactly enthused about it as well. On several teams I've worked with I was (sometimes officially, others unofficially) the researcher of the team, and part of my responsibilities was to dig up anything new and cool we could use in our codebase. From my experience, what works best is a casual, in company blog. Every time you find something you'd like to share with the rest of the team, write a somewhat comprehensive article about it, don't just post a list of links without context. It doesn't have to explain the concepts / practices / technologies / tools in depth, but its essential that you point out clearly how whatever you are talking about applies to what you or your team works on at the moment. You could start with the rewrite, write a series of small and casual but comprehensive articles on what new things you introduced to the codebase, what decisions you made and why, discuss challenging issues you faced and how you overcame them. Show real examples from your codebase, point to actual tickets in your issue tracker. In short: context. At the end of the day your colleagues may still ignore you. But this time it won't be because you're spamming them, and you'll have excellent documentation of your thought process and progress of your skills. 

Although other answers here are great, especially the counter-open-question one, they are all requiring you to direct the entire brain activity to the conversation (for example to come up with X creatively). This could be a problem in some work positions and the two boilerplate reactions avoid that. These are easy to execute even if you are intensely processing something else. Not super polite, but a talker like this have faced many worse reactions already somewhere in their career; make you look a little eccentric, but won't cause an angry reaction. 

You've stalled them. You never say how long you intend to think, and you don't promise you will actively get back to them to continue the conversation. Flat intonation means the pitch (frequency) of the sound you make should change as little as possible through out the sentence. My second approach. Say what you are currently doing, addressing as much yourself as them. Your tone shouldn't indicate you are responding to their question, you are simply friendly communicating your own actions. 

I wrote a rather long diatribe expanding these points, but it grew so bitter I decided not to share it. The observation which could escape many readers: publicly known salaries give a great power to employees to get more money from the employer. Some say that secret salary negotiations are advantageous to the most powerful employees. Are they? Well, the power of these employees is quite soft: knowledge, skill, experience, relations, performance. Publicly known salaries could lead to the public salary negotiations, which could then lead to collective negotiations (think trade unions). What is the negotiating power of a whole team? Humongous. Just for starters it trivially includes the soft power of the team's top employee (the same knowledge, skill, experience, relations, performance that a top employee could use in secret negotiations). Now combine it with the soft powers of all other team members. Now add the hard power: "we are yet to see if our entire team could continue to work inside this organization". This illustrates how even the top performer can expect some gain, while it's true that the mediocre performer gets relatively more. 

It makes other employees scared to resign and shows that company doesn't trust their morality. It is also a bad idea, culturally. Coming from Europe I'd say that you can do this differently, we do this differently, and all the terrible risks and obvious reasons enumerated in existing answers don't apply. This is because they only exist in your brains and not your world. They are errors in your judgement. A company in financial sector. Some employees of IT dept resigned trough the history, who could technically: steal credit card numbers, introduce back doors, install subtle bombs that would fire in future. And who could with just a little bit of thinking devise how to do it anonymously (I said it already: IT). They worked 3 full months after resignation. They didn't particularly like to work these 3 months and stated it plainly, but they were legally obliged to do so. They didn't even like the company. The company could have legally walked them out on day 0, but the decision was to keep them. The bad stuff never happened. And they fixed some stuff during the time, cleaned some of 'their' mess, did some knowledge transfer. It was more than one occasion. Go figure. Employees actually have some morality. They don't go around harming others just because they see no immediate penalty. I think that after 3 months if they found on a sidewalk a wallet of their CEO, they would return it. Their managers trust in that morality. And the upper manager knows that they can trust the lower manager's judgement. The owners know they can trust the upper management. A magical chain of trust. It's bad I believe that other answers, maybe because of the immersion, didn't see what is obvious to me. If you (a person) hire yourself a janitor, and interact with him for years, and as he says he would like to resign the next minute you send guards to escort him? Really...? Because your stuff is so precious? Unacceptable risk, huge liability? A minute before it was acceptable, now it's not? Nevermind how long is the list of your stated reasons and justifications, the action brings a clear message about the employer. It shows how employer treats others, how much trust they have with morality, what you could expect of employer's own morality. (Update) Cause If you see a company that experiences this, and want to find the cause you ask a simple question: "what needs to change before this company can keep employees after resignation?" If you address all the stated reasons one by one, and somehow magically exclude them all (the risk that an employee would reduce staff morale, poach customers, sabotage, etc) I won't expect the situation to change. I expect they would still have been escorted out and I expect the enumeration of reasons would get new entries. So these are not actual cause: they don't influence reality. If you re-create the trust in human morality, I expect things to change. This is because you nailed the true cause, not just a stated reason. Now, how it is repaired, is there a recipe to change a mistrusting company, I honestly don't know. 

I'm kinda surprised that no one mentioned this yet, but compelling people to participate in any "holiday celebration" is assuming that it is a holiday for everyone. Basically not everyone celebrates these holidays and forcing people to participate, in what could be seen as religious holidays, could be an HR nightmare. Even if this isn't your reason, you could drop that bug in someone's ear and get the whole thing called off. "You know I like the holidays as much as anyone, but have you considered..." 

It appears that Colorado has some pretty broad DUI laws: A specific instance of lawn mower DUI with some explanation The DUI/DWAI statute The Colorado Department of Transportation's "Marijuana and Driving" FAQ 

I'm struggling with a direct supervisor, who just doesn't seem to pull his own weight. Basically my supervisor is expected to be a "working manager", so his time is split between 15% administrative tasks and 85% doing the same job I do. I understand that he has admin responsibilities that pull him away from day to day tasks, no problem there, but it seems more and more that the quality of his work in the field is sub-standard. Which leaves the bulk of the work undone, or worse done poorly and the rest of the department is left to scramble to meet deadlines and fix his "mistakes". (To be clear, its not that I just have a high standards, he often scolds the whole department for things that he did, or didn't do.) It seems that any one of his subordinates can accomplish more in 4 hours than he usually gets done in 2 or 3 days. I'm thinking it may be time to make the higher management aware of the problem, before things boil over, but I'm unsure of how to approach the situation. Should I go to higher management with my concerns, and if so, how can I report the situation without coming across as in-subordinate? 

With that out of the way... I would assume that the higher management is unaware of the issue and would most likely take immediate action if/when they are informed. Even if the law wasn't being broken, a smart manager would have some serious concerns about safety and liability. There's a good chance that the company already has a policy concerning this sort of situation. If I were in your situation I would try to give the manager an opportunity to catch the trainer in the act. If you can manage that, there won't be any question about whether the smoking is happening on the job or after hours. 

I've been dealing with a strange company culture issue. Very often we will see a problem coming weeks or months in advance. We usually try to prevent the problem from occurring by bringing the issue to the management's attention and by asking for preventative measures, but the attitude usually seems to be "Don't talk about the problem." This wouldn't be such a huge deal if they wouldn't later get upset about no one telling them about the problem. More or less we end up getting set up to fail because problems aren't discussed and thus aren't solved until it is too late. Its a bit like being on a train and seeing that the tracks ahead aren't finished. When you mention it to the conductor their only response is "Don't talk about the train-wreck..." yet when the train derails the conductor claims that no one told them the tracks weren't finished and shifts the blame. I understand that most employers prefer optimistic employees, but optimism doesn't lay train-tracks, or perhaps better put, optimism shouldn't replace due diligence and preparation. Is there a way to shift a company's culture toward open dialog and problem solving or better yet problem prevention?