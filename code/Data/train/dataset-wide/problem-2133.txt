sorry if it's silly but I can't get the keyword to find it out ... 'group by minutes without collecting, list by minutes query mysql, order more than 60 minutes' were some searches I made. I'm using this for now, of course I know it doesn't work but I want to initialize from something, 

Looking how to list minutes 1 to 120 from a 2 hour interval timestamp field instead of getting each minute from both hours together. What I want is something like this: 

Can I improve MySQL CLUSTER performance with those editable variables down tag of of mgmt node or of ndbd node? The main reason of this question is that I'm getting ERROR 1205: Lock wait timeout exceeded; try restarting transaction when importing a 1.2 G .sql file. I can't find any solution to this refering to MySQL CLUSTER so I want to try with the variable, but I don know if it's compatible with. Will it accept those variables? 

I have in I realized that when typing command logged as any system user I got access to mysql, despite I can only display and databases, how can I disable this accesses? I don't have those users registered on so I don't want this to have access. This is what happens 

I have the cluster built by one MGM Node and two data/sql nodes When importing data to an node the importation crashes returning the following: 

The & don't write anything. Before the crash, both nodes have the same records. I google it but I can't find anything related. 

I'm setting up MySQL Cluster. As it uses , how could I export my databases from MySQL Server specifying the ENGINE? Is there a way to do this? All my tables are 

As we can see in MySQL Documentation, the default for is 100, the default for is 4000, change this for the needed value. 

I have a configuration. What I want is to create an auxiliary table only for a report project so it's not necessary to replicate it. Is there a specific way to make this in the line? 

Monitoring the other node, I could see the data is being well inserted, but at records, the first node return the ERROR. The & write: 

Ultimately the problem was SELinux on CentOS, and the answer was to disable SELinux! I couldn't find any errors in the SELinux log related to MySQL so this took quite some time to track down. 

At some point Percona MySQL on CentOS 6.4 seems to have stopped reading my.cnf, possibly after MySQL updated to 5.5.33 a few days ago. Selection from /etc/my.cnf: 

I've got replication running on Percona Server 5.5 by following this guide and wondered if I should add to my slave's to make it read only? The guide sets up replication for the mysql table so users are replicated but I am primarily using the slave to take mysqldumps, an in an emergency reconfiguring it to be master, so I don't believe we need (or should have) write enabled on it constantly? 

Huh, well that ain't right. Slow log is off, error log has the wrong name, connection and heap sizes are wrong, and the server collation is wrong as well. Processes running 

We have the most basic of MySQL replication setups, a single Master doing statement-based replication to a single Slave, a 90/10 mix of innodb/myisam tables. Both run Percona MySQL 5.5 at the moment but we are upgrading to 5.6 in a couple weeks and have scheduled downtime. Will this kind of setup see much benefit by switching to GTID replication? Do I need to switch to row-based replication as well? Trying to decide if it is worth the extra downtime for converting to and testing GTID right now. 

Our MySQL master is allocated 24GB of RAM (innodb_buffer_pool_size = 24GB), but was curious if there was some standard amount to allocate to a replication slave? Right now the slave is just used to take dumps without locking tables on master, and in theory be used as an emergency master if something happens (hasn't come up in the last 18mo). If master fails I could always quickly allocate the slave 24GB, but how much does a slave really need to just sit there replicating? 

Via Homebrew I just upgraded from MySQL 5.5.29 to 5.6.10 and all my queries and existing users are working fine, but whenever I try to modify permissions or create users now MySQL disconnects me. Are there any my.cnf settings I need to change for 5.6, or system table updates I need to do etc? 

I'm busy setting up a MS SQL Server instance on a Windows Server The server is Windows Server 2012 R2 and the version of MS SQL Server is 2014 Essentials. I've installed MS SQL and created my database, I've also installed HeidiSQL to test making connections to the server. All this software is running off of the same machine. When I run the MS SQL Management studio it connects to 

The above connection seems to work when connecting to the SQL Server on the server itself. If trying to connect with another computer on the network (also using HeidiSQL) I imagine I won't be able to use SPKWINVMSERVER\SQLSERV as the hostname but it doesn't work on IP address which is in this case 192.168.20.67 

I gave this user all the server roles for testing and it seemed to create ok. However when I try to connect to it using this Login I've just created using HeidiSQL it fails The connection details I'm using in HeidiSQL to connect are 

I'm busy trying to migrate an informix database schema (with no data) to an informix database running on a different server. I have exported the schema from the database using 

I have a PostgreSQL 9.4 Database running on my CentOS 7 Server. This database has only ever been available to users on the LAN, however recently I needed to make it available to users outside the LAN which I did using port forwarding for port 5432 on the server using our Netgear ADSL Router. My PostgreSQL database has been configured postgresql.conf 

I'm busy trying to migrate data between informix databases using the dbexport and dbimport utilities. I know that in PostgreSQL I can use the following 

Never mind it seems dbimport won't work in this case because the schema wasn't generated with dbexport. It worked when I did 

I believe I've found the reason this wasn't working, it seems none of the traffic was targeting port 1433. To fix it I had to run the SQL Server Configuration Manager and then do the following Navigate to TCP/IP under SQL Server Network Configuration > Protocols for SQLSERV Right click TCP/IP and select Properties Under the IP Addresses tab I had to add 1433 to TCP Port for all of the available IP Protocols seems to be working ok now, thank you to everyone though for helping me get that far though