Will the work being done get paid at a later date? Add a bonus for postponing salary. Probably not possible with this company's financial situation, but it's better than nothing. Equity - for your sacrifice you should get a piece of the company. 

Ask if they can focus the beginning of the meeting on the technical/your part of the project because you have a time constraint. Ask if there is anything in the meeting you need to know about before excepting. Tell them you can't attend but would like the 'minutes' or whatever summary someone may put together in writing. Don't be afraid to leave a meeting if you have things do to and you don't think anything you need to know about will be covered. Maybe there should be separate technical meetings? I'm sure the managers don't want to sit around and listen to the "geek" stuff either. 

As others have suggested, I don't think you should go to the COO first. You two are next in line and should act like professional adults who can figure-out how to play together on your own. Nobody likes being micro-managed, so you have to take some responsibility and learn how to manage yourselves. Find a time when you are clear-headed and not emotional (right after one of these meetings would be a bad idea.) and setup a private meeting with the Director. Let the director know you are embarrassed at these meetings because it sounds like he is ordering you around instead of asking for your help. He may not be aware that it sounds so harsh and may apologize and correct himself. If the director gives any indication that these tasks are part of your job, let him know that you will not comply unless you are told to do so by your boss. If this still comes under dispute, this would be the time to go to the COO and clarify your role. In some ways, it seems a little silly to waste a "C-Level" executive's time deciding who sends email to vendors. Hopefully, it won't come to that. 

You must forcibly point out that one situation has nothing to do with the next. Ask him to make an argument that is on point. If your team and those around don't see his error, there's not much you can do about it. They're obviously limited. This is in your head. He's being a bully and needs to be put in his place. You know more than he does, so carry that confidence around with you when it comes to confronting him. Ignore the reactions of others. Keep standing up for yourself. 

Find a small group and see if you can go to lunch with them. I've found that some groups always talk about work and some want to get away from it and talk about other things. Either way, you can find out their interests. If you feel no one is opening up, just ask them, "What do you do when you're not working?" I may not think that collecting postage stamps is very interesting, but I am interested in people who have a passion for something and enjoy hearing them talk about it. Now when you greet them in the morning, you can ask if they got any new stamps. 

The mere fact that you have continued to stay indicates you value the casual environment over more pay, so how do you see this as leverage? Instead of 8 hours a day, these jobs could put you into 10-12. The extra pay you indicated doesn't add up. 

The toughest thing to understand when dealing with our managers is how busy they and how much is on their mind. Your questions are valid, but they are just one of many they get throughout the day. Either you just keep asking questions or find another resource. Messages always tend to seem blunt especially when they say things we don't want to hear. A busy manager is going to minimize his interactions as much as possible. There is a risk he is not giving you enough information, but he's still willing to do it anyway. When he asked, "Aren't you familiar with the current software?" Your answer should have been, "No." Ideally, managers are aware of getting their people on-boarded and up to speed, but this company doesn't seem very structured in that area. Could you ask someone else to train you or put a plan together to split the time up among several people. This is why I like to see a manager who is willing to do some of the dirty work, but too often, it is at the expense of having time to manage people. I'd rather chop down trees with a quality sharpened ax than have me and my manager swinging two dull pieces of garbage all day long. 

Although code quality should be important, it needs to be put into the context of management's expectations and the skill level of the team members. Wanting to improve in this area is a good thing, but focus on the problems and not just the symptoms. Everything you are suggesting is done for a reason. Are users getting errors due to a lack of null checks that require debugging? Every programmer should know the earlier these are caught the easier they are to fix. After you make the connections between these coding flaws and the problems they are creating for everyone, your team should start looking for ways to fix them. Code reviews or some process to get more than one set of eyes on each line of code is considered a good practice. Where you will run into trouble is if there is no enforcement of what you team thinks is best. If one programmer is allowed to do things his way, none of this is going to work. At some point, it should be apparent that this person't code is causing more problems than the code created by others. It is up to the team to address problems with sub-standard performers. Hopefully, everyone can come to some consensus on these issues in pursuit of better code. 

If there was a problem communicating the requirements to you originally, I doubt the process is any better now that they've decided to change them. Sometimes it's just easier to do something yourself than explain it to someone else. Communication requires a certain amount of effort from both sides. If they don't tell you anything, it's not your fault. Ask about the quality of your original code. It's possible there was something he didn't like about it, but you never know. Maybe he felt bad for giving you bad specs and making you do it all over again? I know I would if it was my fault. 

Take a copy of your resume with you to the interview. I give the CTO a 50/50 chance of even looking at your resume beforehand. Save them some face by offering a "cleaner" copy. You're better off getting his/her business card and sending a thank you email after the interview. 

I tend to take a formal and an informal approach. Sometimes I ask as part of the requirements gathering to get more "background" information. Explain it help you understand the big picture. I know, it's a buzzword, but sometimes you need to use those to your advantage and get business people's attention. I find most people don't mind talking about the work they do and don't attempt any cost benefit analysis of their time and whether or not this is important. Maybe I've been lucky in this areal. Othertimes, I may just ask one person a question at the end of a meeting when everyone is getting up or after they've come to me with a question. I'm genuinely curious, so I just ask naturally. Asking people to take up a lunch or coffee break may be a little too much. Usually people want to avoid work at these times.