Yes, the GLUE record provide the IP address for the name servers. It is necessary to provide them if the name server's name is a sub-domain of the domain they are a name server for. For example needs a glue record when it is the name server for . However, if it is the name server for a glue record does not need to be provided to the domain registrar. 

Consider using your domain registrar to host your DNS. It may already be provided as part of the domain registration. 

Check your network interfaces for errors and retransmit counts. It you are dropping packets you may have to wait for timeouts before the packet is retransmitted. Any load graphs for the network would help as well. 

IP Masqerade is NOT for email. Other than for your ISP's email relay many servers will refuse to accept your email. Incoming email doesn't work with IP Masqerage, although you can use email clients to connect to a POP or IMAP server. You can run an email server either on the server doing the Masquerading, or use DNAT (Destination Network Address Translation) to forward to a single internal email server for each external address. IP Masqerade is a form of SNAT (Source Network Address Translation). This works as a security feature as it forces a defauly deny policy from the Internet or other outside network. IP Masquerade provide no incoming routes to the servers which are being masqueraded. This protects against access vectors that use incoming connection. Any incoming access needs to be configured as a DNAT rule or an exception though a protocol helper as is used to allow full FTP funtionality. IP Masquerade is typically used to enable the use of private DNS zone on the Local Area Network, while allowing access to the Internet. These are usually in the 192.168.0.0/16 and the 10.0.0.0/8 blocks, but also includes the 172.16.0.0/12 block. IP Masquade will work for other blocks, but this should only be done during transition to private blocks. The private ranges provide some security as they should not be routable on the external interface of any border switches. IP Masquerade should be combined with appropriate firewall rules to limit the protocols used to access the Internet. 

This port is used for STUN (Simple Traversal of UDP for NAT), which is used by VoIP in some cases. It is also used by the Apple FaceTime application. It could also be used by malware. You may have unauthorized or incorrectly software on the workstations in question. It is also possible your firewall is blocking legitimate traffic for one of the above services causing them to retry more frequently than normal. I would expect FaceTime to stream traffic, but that would require an ongoing connection. I would expect the router to recognize this, but UDP is connectionless, so it might not. FaceTime may recover by switching to an alternate port, so it may not be obvious to your users that the port is being blocked. EDIT: I've done a lookup on the IP address in question. Do a whois lookup on the IP address and contact the ip-admin or abuse address. Explain what you are seeing and see if they are willing to provide any information. It is unlikely they will want to host a command and control server, but they may not be willing to share information. Given this particular address, I don't expect it was running a STUN server. This would lead me to wonder about malware. Investigate at least one of the offending devices to see which program is generating the traffic. ( will show the program on Unix/Linux, and the Windows firewall may have a rule allowing the traffic out.) If it is a legitimate program, then I would suspect misconfiguration. If not, you likely will need to clean up a malware infection. If it is spreading, disconnect all devices generating the SYN requests. As you are running SEP, I suspect these systems are running Windows. It may be able to identify the program sending the traffic. A wget https request indicates the server is currently being used by swarmcdn.com Has anyone installed the Swarmify video software? 

You can have as many zone files as needed, but only for zones you are authoritive for. The origin must be different for each zone, and the records contained inside are normally different. Each zone should only have the appropriate definitions A, TXT, MX, and SPF records, etc. as required. Your bind configuration will need a zone definition for each zone you serve. If you are a secondary server for a zone, you normally get the zones from the primary. This is done using a zone transfer request. Cached versions of the zone are semantically identical, but usually differ in format. Bind has mechanisms to keep the secondaries reasonably syncronized with the primary. Because bind is a caching service, there is some delay before all the servers are syncronized. Even if the primary and secondary servers are in sync there is likely cached data in the network which is not the lasted copy. By defaul Debian (Ubuntu) based systems have master zone defintions for all the RFC 1918 zones. These all use the same zone file, db.empty. This prevents upstream calls for addresses which should never be queried outside the local zone. 

Have you considered routing data. This script should return the broadcast address of the Internet interface: 

For ongoing monitoring you could consider installing . It will gather information every 5 minutes and generates graphs that will allow you to see where the bottlenecks are. I also use which can be run in background mode gathering data to disk. This gives quite detailed infomation on what the bottleneck is. To what processes where running in the past you will need the process accounting package. 

DKIM is so frequently mis-configured that I don't reject on it. Many signers don't publish their public key. Both SPF and DKIM data are used in generating spam scores for message that haven't been outright rejected. 

If you have sensitive files, start with securing the files. This should be done even if you don't intend to let other users to access the system. Linux/Unix has a strong permissions system. Ensure none of the sensitive files are readable by . This can be done by restricting access to any directory along the path. It is not uncommon to set the permissions on home directories to which allows only the user and root to see the contents. Set your restricted user up with their own group, which on some distributions is the default. Audit you system to see what files can be accessed with permissions. If some of the sensitive data is in a database, audit its permissions. If you allow the user access to a browser, they will normally be able to browse the file system. Besides kiosk mode, you may want to consider using a to restrict them to a small portion of the system. This can be difficult to setup for an X-window environment as it needs a fair number of files and devices. I would expect an profile would need to allow access to the same files and directories as chrooted environment. You can combine approaches it implement Defense in Depth. It is relatively, easy to attempt to restrict an X-window user to a single application. Just start that application instead of starting a Window Manager. As long as that application can not start other applications you have restricted them to that application. Explore the capabilities of that application as it may be able to browse and possibly execute files. Does it have a mode intended to restrict access. If there are flaws in the configuration, the user may be able to escape their jail. I have used a few tricks to gain access to and other tools on a supposedly locked-down Windows system. This is where correct file and directory permissions come in to full force.