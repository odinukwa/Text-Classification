Differential backup is used to decrease the Recovery time object(RTO), it gives you facility of restoring backups quickly. Differential backup includes all the changes made since last full backup, or full backup which started the differential chain. Differential backup is not affected by log backup so in event of disaster you would have to restore(in your case) 

Checkpoint pages /sec counter is important to know about memory pressure because if buffer cache is low then lots of new pages needs to be brought into and flushed out from buffer pool, due to load checkpoint's work will increase and will start flushing out dirty pages very frequently. If this counter is high then your SQL Server buffer pool is not able to cope up with requests coming and we need to increase it by increasing buffer pool memory or by increasing physical RAM and then making adequate changes in Buffer pool size. Technically this value should be low if you are looking at line graph in perfmon this value should always touch base for stable system. 

Yes it can and you cannot do anything as you have no control over system process in terms you cannot kill it. 

The major difference I know is Normal Column Encryption The normal Column encryption which was introduced from SQL Server 2005 uses function Encryptbycert to encrypt the columns. It is not as secured as compared to Always Encrypted in terms that with this method data is submitted as clear text in SQL Server and this data can be seen from traces. A DBA, who has admin access to SQL Server, can see the data so this is actually not fully secured. Always Encrypted With always encrypted the encryption is done at clients app by API, like ADO.net,ODBC. Drivers are installed at clients end to do this encryption. This will not allow SQL Server to see text data hence not revealing it to DBA's and one who have admin access on SQL Server. Always Encrypted allows clients to encrypt sensitive data inside client applications and never reveal the encryption keys to the Database Engine. Quoting from Docs.microsoft 

First and foremost thing, SQL Server in picture is which is not supported by Microsoft in any way please apply SQL Server 2008 R2 SP3 to at least get extended support 

The most important thing about corruption is why is occured and what is cause. If backup is not corrupt you are very lucky in that case you would have to restore the database on same server with different name. There is also chance that if underlying subsystem is highly corrupted the newly restored database might get corrupted as well. Its also likely that mirror database has also corrupted, otherwise you can failover to mirror database (while you are parallely doing restore) and see if it works. 

Since your databases are in simple recovery mode checkpoint will be taken care of by database engine either automatically or when log file grow 70 % of its size, you can also give manual checkpoint . But still a long running transaction can hold log hostage and would not allow it to truncate even if you manually give checkpoint. Log backup would not be possible in your case since recovery model is simple. You can use Bulk logged recovery model to take benefit of bulk logged features supported.But non minimally logged transactions will be fully logged in bulk logged recovery model so be careful. Since you dont care about point in time recovery you can switch recovery model between full and bulk logged as required. $URL$ Laslty if your team is doing huge DML which generates lot of logs you would ask them to break there DML in chunks to avoid filling of logs. Index rebuild of huge table also generates massive logs. Use truncate table to remove records from table( if you want to remove complete record) as it is mildly logged as compared to delete but dont use if table has Foreign key constraints and Indentity. $URL$ Above points will surely give you some relief with huge logging. Hope this helps 

Your research is correct you have to first apply service pack on mirror instance and then failover the mirroring so as to make this mirror instance as primary. Now you have to apply patch on instance which is nor mirror(which was previously primary). I have done it many times and I do not see much Gotchas. 

Let me answer your question point wise 1.SQL Server express has SQL server agent code built in but disabled. When you go to sp_configure you can see Agent XP enable/disable option this is so because if any point of time you are planning to upgrade SQL Server Express Microsoft upgrade process does not have to do much change but just a minimum to enable SQL server agent functionality. So before upgrading to Standard it wants you to use proper service account as a start up for SQL server agent so that after upgrade when database engine tries to bring agent services up it can do it eaisly. By default NT Authority/System account has admin privileges so it was able to bring Agent services up. Also please make sure that you always change SQL Server/Agent service account using SQL Server configuration manager it preserves the ACL's 2.As a good security practice SQL server should not run with Built in account instead a domain account should be created and granted least privileges to run it. Below Microsoft web resource will tell you what rights are required. The article is bit lengthy but beautifully written $URL$ 

Yes you can restore differential backup, after you cleared question with details I have updated the answer. You can restore differential backup and then restore log backups 8,9,10 as they are taken after diff backup 

I do not know exactly whether it is supported or not but DEFINITELY not recommended and not possible AFAIK. I can say from experience that this could be counter productive so please avoid this you may get more outage than expected. You can of course fail it back using T-SQL script or powershell, there is no harm in doing so. Some people try to change preferred owner in WSFC GUI thinking that after failover it may failback because the preferred owner is just the node which they always want to be primary replica, please avoid that as well, in most cases after removing owner the AG may not failover on the node which is removed as owner. Basically you should NOT change anything from cluster GUI. Quoting from MS BooksOnLine 

Memory allocated is memory given to SQL Server for doing various processing. Allocation is wide terms which means providing memory you should not attach any specific meaning to it. You are correct committed memory is physical memory used because committed memory is backed by physical memory while reserved memory is memory reserved by process which it thinks it might need it may necessarily not be committed. 

You have to either test it yourself or ask the vendor, as for question that can snapshot backups which under the hood use VSS to connect to database and take backup break the backup chain the answer to this is yes it may and I am saying this because I have faced this issue. Also note that the characteristics of breaking that backup chain lies with snapshot backup only. TP tools which take normal backup also use VSS but they do not break log chain at least I have not faced such issue but you need to be careful with snapshot backups and I guess your tool is doing the snapshot backup because it is freezing the I/O to get consistent view of the disk and then taking snpahot. 

You MUST run dbcc checkdb on all the replicas at least weekly. If you can afford it daily or once in two days that would be even better. Yes you can run checkdb on all replicas because checkdb internally creates snapshot and runs integrity check on that snapshot without affecting database. For more details read Checkdb from every angle You cannot run index maintenance on read only replicas. You have to do it on primary replica. And since the logs generated from primary replica is replayed on secondary the index maintenance changes would eventually be done on secondary replicas.Please read Recommendations for Index Maintenance with AlwaysOn Availability Groups. 

I was able to reproduce your issue and this might be one of the reason for no result. Cause: When you create a table and when no record is present in the table and you run on such table then you get the "message like below but NO tabular result". 

After selecting above restart your windows machine NOTE: Due to delayed start SQL Server service might take some time to come online but eventually it will. There is similar issue mentioned in this msdn thread 

Connect to SQL Server using Windows authentication. Run sp_readerrorlog and see the complete message which would have come in errorlog when you tried connecting with SQL Authentication. This message is not of much help. You can update the question with message 

If you want to avoid all such hassle you can also use Ola Hallengren update stats script which takes care of lot of such things. 

Yes if you are going with Always ON Availability Groups the shared disk(in some form) is a requirement. From BOL I will quote 

Is your SQL Server patched to SQL Server 2005 SP4. It must be. Can you read errorlog using below command and post its content on some shared location and attach link in question I would like to see what is there in errorlog. 

No its is not same as full version there are many differences and all is documented in Features Supported by the Editions of SQL Server 2014. 

The size which you are pre-allocating is 1048576KB which is approx 1G. The same is with Log file 1048576KB which is 1G. Can you alter your script and put it to few MB's and see if you again get the locking. You can later run to increase size. This is something I have witnessed to telling you. This is not a definitive answer but I am sure it will reduce the creation time which exactly is your problem. Did you also noted if any process was blocking the table creation script. Plus first run create database script and then the alter database commands. 

The table structure is almost same as your table and query as well. So you can see SQL Server did and . 170 read ahead brought all the pages that were associated with table now since all pages were in memory SQL Server scanned all pages to locate the row doing 164 logical reads. Remember every read is logical read, physical reads are just there to show that page was brought into memory using physical I/O and read ahead reads do not count under physical reads. 

For 2nd we have password stored in hash format you can see it from sys.sql_logins. The information about SQl server logins are stored in and each login has SID repective to it. Only SA login has same SID no matter what server it is. That is why when you move database by backup restore mechanism users are moved not logins and you finally have to create logins(if already not there) and map it to users. This is generally called as troubleshooting orpahned users You can use sys.syslogins and sys.server_principal to gain more information about logins. Note that sys.syslogins is a legacy view. If you also want to move your logins you have to take backup of master database and restore it on destination server. And this would be possible only if you have same version and SP on destination machine. 

Hopefully this might solve your issue. if not there is log file called as that would have information about what registry key SQL Server was trying to access it would be better if you also upload that in shared drive. Do you have visual Studio installed on the same server please tell me ? Don't play with windows registry unless you are very much confident what you are doing. I dont think This Support article is applicable to your scenario but you must have a look at this 

If you are upgrading from enterprise evaluation edition to enterprise you do not have to worry and inplace upgarde would likely to be smooth. If you are upgrading from from enterprise evaluation edition to standard edition problem can arise. You can use evaluation edition for 180 days and if you have used any enterprise feature in 2014 evaluation edition, but upgrading to standard edition, your upgrade might fails( this was bug in 2008 but still can be noted in 2012) This link has similar information. Even if successful you would loose all enterprise features so you need to plan accordingly. 

Check to see if the startup type is set to Manual.Service status is usually stopped. Try and start the Windows Installer server.Also open CMD as administrator and in CMD type below commands 

Yep their is limitation in SQL Server express regarding memory it can use and don't refer to books online about documentation that SQL Server express instance is limited to 1 GB this is bit misleading. I quote from this support article 

There is nothing wrong in actually starting from SQL Server 2012 this new feature has been introduced in SQL Server 2012 DBCC MEMORYSTATUS output. Below is output of memorystatus on my system 

This is not clear, what do you mean by believe, can you show some facts how you reached to conclusion that SQL Server is not using memory. Please run 

Uninstall the existing SQL Server and all the components from the add remove program. Backup the registry Delete the following keys using regedit: --HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SQL Server --HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSSQLServer Go to HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall and delete all the sub-keys referencing SQL Server. Go to HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services and delete all the keys referencing SQL Server. Rename all the SQL Server folders in the computer. Reboot the machine. 

Negligible as far as my experience goes. DMV's as the name suggests are basically views or functions ( like sys.dm_db_index_physical_stats ) which get information from various caches and system tables. DMV's are very light and read data from caches. They do not cause blocking and depending on amount of data you need to fetch they very very quick. The point here is always only query data from caches which you actually need. You may use NOLOCK hint in your DMV query you would see some people using it but frankly I do not see much of need to use it with DMV's. Its function though still remains same. So when you use NOLOCK hint you say to SQL Server that give me the data I am asking no matter what is state of the data is. It may have been changed and yet not committed so you get "dirty" data. NOLOCK hint avoids select queries taking shared lock while reading data. The drawbacks are many