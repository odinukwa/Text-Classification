Theoretically, yes. I don't know if there is an existing Microsoft or third-party utility using that API. You could write one in-house if you have any coders on deck, it would be almost trivial. 

The Microsoft Update Catalog web site seems to be very unreliable. If it isn't working, what troubleshooting steps are sometimes helpful? (Please note that the Microsoft Update Catalog is not the same thing as Microsoft Update, although they offer the same content. The Microsoft Update Catalog is a web site where you can download off-line installers, including installers for different versions of Windows than the one you are running. It requires the use of Internet Explorer, and is surprisingly fragile.) Note: this is intended as a canonical question, to collect various possible solutions to the various common problems with the Microsoft Update Catalog. I'm posting an initial answer, but additional answers are encouraged. Posted to Server Fault rather than Super User because the MUC is primarily used by system administrators, end users will typically use Windows Update or Microsoft Update instead. 

However, the licensing server is already configured in Remote Desktop Session Host Configuration and the Licensing Diagnosis shows no problems. Resetting the grace period as described here allows logons to succeed again but does not permanently resolve the problem; event ID 1130 continues to appear the first time someone logs in via Remote Desktop after a reboot, and after another 120 days logons will start failing again. As described here, the failing server(s) do not have X509 Certificate entries in 

No. The GnuWin32 tools are (as the name implies) Win32 applications, i.e., they use the Win32 subsystem, not the POSIX subsystem. Of course, no matter what advice you may receive from strangers on the internet, you should test all your critical applications/services on a test system before making this change on any production systems. :-) 

The WinRE infrastructure is still in place (and can be re-enabled later using a copy of and the command line tool) but will be disabled. Note that the setting in does not appear to have any effect in Windows 10. (However, this might depend on which version of Windows 10 you are installing; I have only tested it on the LTSB branch of version 1607.) 

When the dialog is dismissed, the installer hangs. I tried adding the file to the Trusted sites zone, but I couldn't figure out how to properly format the path. How can I install the Java 8u65 runtime on my Windows Server? 

Workstation SAMs act in many ways like separate domains with a one-way trust relationship. So while I can't find it explicitly documented, I don't find it surprising that this doesn't work, as it is analogous to adding a domain local group from one domain into a domain local group from another domain, which isn't allowed (see table 7-1). (The only odd thing is that it seems to work if the domain is Windows 2003 functional level, and I can't find this change documented either.) In any case, you should be able to solve your problem by changing the domain local group into a universal group. Assuming you are at least running in Windows 2000 native mode and not Windows 2000 mixed mode, universal groups are supported, and they are specifically designed for this sort of scenario. 

When you get to the screen that lets you select which partition to install Windows on, there is an option to load additional device drivers. Or you could press to get a command-line prompt and use . Also, if loading the network drivers doesn't resolve the problem, you could try using after loading the network drivers to explicitly establish an iSCSI session rather than using ipxe. I'm not very familiar with this technology, though, so I'm not sure what the recommended approach is. 

In Windows 10, the Windows Update client uses event tracing rather than writing to a text file like it did in previous versions of Windows. This can make troubleshooting problems with client machines difficult. The Get-WindowsUpdateLog cmdlet doesn't always work. In particular, it doesn't seem to work properly when run remotely, or when the target machine doesn't have direct internet access. I've also seen reports of other problems whose cause is less clear. Is there a more reliable and flexible option? 

There's at least one circumstance where you can't replace a junction point with a symlink: if the content might need to be accessed remotely. If you access a file share on a Windows machine, junction points are interpreted by the server and work as expected. Symbolic links are interpreted by the client (i.e., a symlink to c:\foo\bar would be interpreted as pointing to the client's C drive) and are disabled by default anyway. Incidentally, junction points do work on external drives. 

You can also do it from the GUI if you prefer. You don't need to turn off "Include inheritable permissions from this object's parent" but I recommend you select the "Apply to files only" option. 

See the Microsoft documentation for additional command-line options. When WinRE is disabled in this way, the startup menus are still available, but the only option that is available is the Startup Settings menu, equivalent to the old F8 startup options. 

I'm using the Adobe Creative Cloud Packager to build an installation package containing all or most of the available applications (as opposed to specific individual applications) for deployment on end-user workstations. This install package runs successfully on Windows 10, but fails with error 1603 ("A fatal error occurred during installation") on Windows 7. The installer runs for a long time before failing, and appears to be installing at least some of the applications the package contains, but these installations are rolled back and when the installer finally exits none of the applications in the package are present. The log file (PDApp.log) may contain the following messages: 

The approval setting for the child groups are not actually changing in this scenario; they remain "Same as Parent". It is just that when the approval is "Same as Parent" the console shows the parent setting with a note that the setting is inherited. If you have explicitly changed the setting for a child group to anything other than "Same as Parent" then changing the setting for the parent group will not affect the child group. The "Apply to Children" option changes the setting for all child groups to "Same as Parent". 

One common problem is error 8DDD0010. In my case, I was able to resolve this by logging into the built-in Administrator account (usually named Administrator and disabled by default) and turning on IE compatibility mode for microsoft.com. Other reports suggest that these steps may help: 

Addendum: if you are using BitLocker, you are already partially protected from this technique; the attacker will not be able to read or modify files on the encrypted drive. It would still be possible for the attacker to wipe the disk and install a new operating system, or to use a more sophisticated technique such as a firmware attack. (As far as I am aware firmware attack tools are not yet widely available to casual attackers, so this is probably not an immediate concern.) 

The only way to create the application data folder (and contents) is for the user to log in. If the user has logged in, but was not created, the most likely reason is that the application data folder has been redirected by group policy. In this scenario, your customer probably just needs to find the user's RSA folder (which is probably sitting on a file server somewhere) and make a copy of it in the location your software is expecting. 

Contrary to the documentation, the settings do not interact; configuring the computer setting does not affect the behaviour of the user setting. 

If you attempt to install the Java 8u65 runtime on a Windows Server, the following error message appears: 

The administrator of the parent domain removed the DC object the next day using ADSIEdit. I was then able to remove the orphaned domain as described in KB230306. I believe that part of the problem was that not all of the information had fully replicated, perhaps due to some odd issues with DNS in the isolated environment. It is possible that, had I waited overnight, the procedure I originally tried (described in the question) would have worked. 

Almost certainly a permissions problem; if not on the folder containing the executable, then on one of the files, or somewhere else on the file system. The most effective way to troubleshoot this sort of problem is usually Process Monitor, available for download from the Microsoft web site. If the problem does not occur on other servers, the root cause might be something specific to the server, e.g., perhaps the permissions have been changed on the root of the C drive or on the Program Data folder. Process Monitor is still the best bet for identifying the problem.