in your query above, every time some one views your view, an is executed to your server why don't you run a job that transfers the data from your progress server to your sql server and create a view pointing to a table in your server locally. that will be much faster 

when the job fails for any reason (i lose that Days transactions) when for any reason the job run twice or i run it twice (i get duplicates) 

try the FILESTREAM feature in SQL server, FILESTREAM integrates the SQL Server Database Engine with an NTFS file system by storing varbinary(max) binary large object (BLOB) data as files on the file system nice articles about it 

after knowing when statistics is triggered it will help you decide when to update statistics manually to know more about Statistics & its effect on performance i recommend BrentOzar and Kimberly in sqlskills very good blogs & bloggers. 

When you use EXISTS, SQL Server knows you are doing an existence check. When it finds the first matching value, it returns TRUE and stops looking. when you concatinate 2 columns and if any is null the result will be null e.g 

Usually its suggested that this is the opposite of the way you are doing it, so yeah restoring 2 database from the same media device will effect performance because IO operations are happening on the same disk at the same time. 

View the Dates and notice that leap years have feb 29 and non leap years have only till feb 28 a non leap year 

i have 2 tables in my access DB, customer and contracts and they are related through the customerid, this is the script i use normally 

Updates: Make sure (HideInstance Flag is No) 1)In SQL Server Configuration Manager, expand SQL Server Network Configuration, right-click Protocols for , and then select Properties. On the Flags tab, in the HideInstance box, make sure its No. 2) Make sure (Sql Browser Service is Active) go to SQL Server Configuration Manager, check properties for SQL Browser service, in Advanced tab, make sure it is active & restart it 

It has become very difficult to access this table now, a simple takes hours to execute. most of the columns in the table are just integers that's why i didn't do any indexing. What do you think i should do to improve this table, and increase the speed of query's to this table 

If indexing which columns should i index and why Is it good idea to Partition the table Any Other suggestions 

I wanted a Script that can loop through all tables and their columns in the database and insert dummy data based on column type and size, so that i can start using the database for testing, and ability to run queries and Test Apps. 

Am sure there are different and better ways to get this task done e.g using cursors or sql functions, etc i thought of sharing my way of getting the task done. beginning create a stored procedure that will generate and execute the insert statements that inserts the dummy data The stored procedure takes in 1 parameter, the parameter is the no. of rows to be added to all tables the logic of the script is simple, a select of joined with & The has all column names the has datatype of the column the has table name, there are other ways to get table name like but i thought that joining sys.columns with is more convenient below is the code 

Stop the running sql server Login to your windows machine with the user that you gave access to the sysadmin group Start the mssqlserver service IN the SSMS chose windows quthentication mode when connecting to SQL you can then go to Server>Security>Logins>sa and change the password and enable the account 

i recommend reading the following $URL$ Remarks section and also read about (Shrinking the Transaction Log) $URL$ you need to note that a log file can only be shrunk to a virtual log file boundary, shrinking a log file to a size smaller than the size of a virtual log file might not be possible, even if it is not being used to know more about what is a Virtual log files Read here $URL$ The SQL Server Database Engine divides each physical log file internally into a number of virtual log files. Virtual log files have no fixed size, and there is no fixed number of virtual log files for a physical log file. The Database Engine chooses the size of the virtual log files dynamically while it is creating or extending log files. The Database Engine tries to maintain a small number of virtual files. The size of the virtual files after a log file has been extended is the sum of the size of the existing log and the size of the new file increment. The size or number of virtual log files cannot be configured or set by administrators. 

This will show you the Size of each log file of each database and will show you what space used in the transaction log or If the shrink operation runs without error as you said, but the file does not appear to have changed in size, verify that the file has adequate free space to remove by performing one of the following operations: Run the following query. 

Why does sqlcmd -Lc does not show the local instance? and in your case even if sql server service is working. ok first will talk about what sqlcmd -Lc does it "Lists the locally configured server computers, and the names of the server computers that are broadcasting on the network" for reference and a note to keep in mind is "Because of the nature of broadcasting on networks, sqlcmd may not receive a timely response from all servers" for reference SQL server browser service is the service that Broadcasts and upon startup, SQL Server Browser starts and claims UDP port 1434. if you unplug your machine from the network and type sqlcmd -Lc, you wont be able to see your machine listed, because If it doesn't get a reply from other available SQLs , it doesn't list itself. Now to know more about why sometimes sql server doesnt show up, you need to know about UDP and how sql server uses it to discover other sql servers UDP is a connection-less protocol UDP does use ports, it allows multiple processes to be using UDP at the same time. Since it's connection-less, any connection-like properties between two systems must be handled by the application. It's a fairly small protocol and therefore takes up relatively little bandwidth on the wire. SQL Server, uses UDP in two ways To discover other SQL Servers that are out there. To discover how to connect to a named instance. now after knowing how sql server service works and how it uses UDP here below is list of reasons why you dont see your local instance showing up 

this book is useful $URL$ and here is some reviews and nice articles about it $URL$ $URL$ slideshow $URL$ -- i also suggest watching these video tutorials by Learn it first as a start they can give you a basic but useful introduction Data Mining with Analysis Services $URL$ $URL$ -- chapter 11 of BI Architecture and Design Guide (best practices) is focused on Data mining $URL$ 

if you are using Symantec BackupExec check out this article How to disable the creation of the $IDR file when backing up a Microsoft SQL server 

now i am trying to design a way where i over come these 2 problems as well as am trying to develop the ETL in such a way that it can auto fix it self incase any of these events occur. i want it to check if there are missing days and run run the ETL for that day, and check if there are duplicates and delete them. below are ways i though of 1. i take in the last 5 days regardless, every day the ETL runs, deletes the last 5 days and refill. 2. i check the destination tables if they have missing dates in the last month and then i query the source with the missing days. keeping in mind that the source is a huge table in a production environment that i have to optimize my query to the maximum when requesting from it. thanks 

I tried your script and recreated your environment completely and i didn't see any error. Ran perfectly and created all tables and transferred all data successfully i tried running under a sql agent job and still no error was generated but i guess you can update your insert script by making sure the column gets converted under all conditions 

Linked Server & Openquery suggested by @Aaron is simplest and fastest option for sql server to connect to remote server, but just to present the variety, you can also develop a SSIS package for sql 2005 & above or a DTS package for sql 2000, these are ETL tools of SQL server