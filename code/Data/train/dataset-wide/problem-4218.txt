The problem here is that the approach the customer is proposing is backwards and awkward. The IT team should be asking you for guidance on how to resolve the issue. You trying to navigate their internal IT department and find someone to do this is obnoxious for you and them. The person you are in touch with is confused about how things work. Instead of making it into a battle around what is and isn't your job, just guide them on how to get things done. "Please work with your IT team to contact me(/my team) with regards to this problem. I will provide them with the information they need to resolve this issue. Thanks." Once you get someone who knows something and can do something about it, things should go more smoothly. NOTE: It's of some concern that you have access to their servers if it's not your job to administrate them. If you don't administer these servers, you do not need access and therefore should not have it from a security perspective. 

It sounds like you're having trouble assessing your real worth. It's definitely worth investing your time in understanding what your market value really is, since you apparently just negotiated a bad deal for yourself. You can only go back to the well, so to speak, so many times. Consider your 6 possibilities: 

Honest, direct communication is fine. Bring solutions, not problems. You can raise the following points with your boss: 

Open Source. Find a relevant new technology and contribute, or start a project of your own. You'll find that employers will find you through your open source contributions, so you'll be approached for jobs once you've made it clear you can work in the new technology. It's best to market yourself through meet ups and other places. If you live near a thriving tech hub, there are plenty. You can meet people using and developing cutting edge technologies, learn how to get started through their talks, download code and get started. Another great method is to build an application for iOS and/or Android and launch it on their respective application stores. You'll learn a lot of end-to-end tooling as well this way. You'll also be able to show what you've built. If you know, for instance, how to build enterprise-level code in old technology, and how to build an application in a new technology, it's a fast path to building enterprise level code in the newer stuff. The best part is that any open source code you publish through github is visible for everyone to see. It serves as your portfolio. Given you have experience, saying and showing you can build in a technology will have a lot of credibility. 

I take it that this is your first job out of school. It's a rough time and since you don't have any experience to draw on, it can be a little unnerving when someone takes advantage of your newness. If I were you, my first step would be to get some intel on this guy. Do you have any friends in the company yet? Do you feel good about your manager? I imagine this must be a fairly small company since the CEO is personally handling the hiring of someone at your level. This guy must have some sort of reputation by now. You should start asking people you trust "what's with [insert freak's name here]?" And tell them (in confidence) what he's been saying to you. If you don't have any friends at work, make some. In the meantime, you might want to ask him what he wants from you. From what I can tell in your post, there doesn't seem to be any point to these conversations other than you intimidate you. I would try to come across as casually bored by these conversations but start asking questions like "is there a point to this?" I had a coworker at my first 'real' job that would take it upon himself to put me down, one-up me, or minimize my achievements regularly. Years on, I think he was just threatened by me. I worked with him for maybe a year but it felt like a long time. My guess is that this is what you are dealing with. The best thing to do is be the adult and act confidently. 

Definitely read about Temple Grandin, Anthony Burroughs and John Elder Robison, who will give more practical advice than Dale Carnegie on how to relate to people when you are on the spectrum. Carnegie's books focus on what, not how, which is the more common roadblock for people with difficulties picking up social cues. If you make a general statement that you are on the spectrum and trying to improve your working relationships with others, you may get positive support. It's better to do this before there's an unfortunate incident, so you look proactive (willing) and not reactive (forced). Families with people who have a son or daughter on the spectrum are a great model for what happens--people learn to accept that there is a difficulty without accepting that negative consequences are tolerable, and that you will need feedback that others would not necessarily need. It also gives you an easy out if you realize you're in an awkward situation--you can simply state "that's the kind of thing I'm working on" and move forward. 

The term "man-hours" is a somewhat antiquated and it does carry some baggage but you shouldn't take too much offense. The continued use of it is really not any more sexist than the term "manhole". Can a woman go into a manhole and does she feel less welcome in the sewer because of the name of the entrance? That said, this is being replaced over time. You could advocate something more specific based on the kind of work. If you are in software, you can use terms 'developer-hours' or 'dev-hours' vs 'arch-hours' to distinguish the kind of work. Another option is to change to 'days' and while you are at it call them 'person-days'. 'Man-days' sounds strange. It's really hard to measure how many hours of work a given person has put in. One man's hour might not accomplish as much as given woman's hour, for example. On the other hand, there is no ambiguity around when a day has passed and how many days are left until a deadline arrives. 

Yes, it is possible the break a contract in a professional manner, if you otherwise act professionally. Leaving is (let's assume) a pain for them, and saying "I stuck to my 2 weeks notice" without alleviating that pain isn't necessarily professional, and won't earn you bonus points with anyone. Finding a creative solution to help them transition, and give them a fair shot at a successful transition--that's professional. (And don't be dismissive of the relationship--you never know where those people are going to wind up, or where you and all these companies will be in a few years.) The existence of the two week clause demonstrates that it was always possible that you would leave prior to one year, and to minimize disruption if you leave. So offer them something to meet that need. Since you have been moonlighting at Company B, have you considered moonlighting at Company A a while? Meeting with a new employee over the weekend to transition? As a tactical move I might offer to stay two weeks but to highlight how much better an alternative would be--such as giving them some time to find someone, and then pair programming with that person a few evenings to transition. Situations change. It does them no good to have you sitting there for two weeks plowing ahead, they just want a smooth transition. Ensure that and you are a professional. 

Lots of good answers here but I think there's another aspect to this that you aren't considering. You got a job that was supposed to be a programming job but wasn't and then you turned it into one. That, my friend, is called 'success'. You found an escape route out of the trap of a dead-end job. But now, instead of parlaying your achievement into a real satisfying career, you are considering squandering it? This won't last forever. At some point this company and/or this legacy system will no longer be around. And then what? You put on your resume that you were a spreadsheet jockey for X years or do you tell them that you actually are a programmer but haven't been doing anything because you never told your employer what you were doing? I'm a father too so I get that spending time with your son is important but you also have a life. I think you are wasting your talents and this will ultimately make you less happy. You work remote now. There are tons of jobs on SO that allow remote work. I think not telling your employer is the worst choice you can make here. At the very least they should employ you long enough to integrate this solution into the actual application. For your own good, you probably shouldn't admit to doing nothing for any significant length of time.