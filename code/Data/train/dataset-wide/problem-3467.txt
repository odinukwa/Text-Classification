It is hard to guess, but my would be a redirection, more specifically HTTP -> HTTPS redirection. In order to be it this case, there would need to be redirect from HTTP to HTTPS on your server and you possibly do not see those in your logs because you might have them at different place. So, the scenario would be that the client for some reason (some form somewhere misses right scheme) POSTs to HTTP, gets redirect code and navigates with GET to HTTPS. If this is not the case, it could be different redirection (like non-www to www prefix or alike). You should be see those in the logs, but you might miss them for some reason (filtering somehow based on HTTP code?). But this is not as likely as HTTP->HTTPS redirection. So, is this it or can you prove that this is not the case? 

You already have A record that says "mx.websolutions.com.ar" is "198.50.148.166", this is required for OVH VPS. So nothing to do here. This needs to be propagated well, so that OVH servers can see it that way (but you already have this, so just saying ...). Log in to your OVH manager Navigate to Web -> Platforms (left sidebar, in the middle of the screen) and select your VPS (something like vps123456.ovh.net) At the bottom you have IP Addresses - click IP tab (the second one) In the right bottom corner, click on Manage IP You should see the table of IP addresses with third column being called "Reverse" or "PTR" or something like that. Click the "-" in this column on the row with your IP address. Then enter your host name "mx.websolutions.com.ar" and click OK sign. Wait until propagated well (e.g. use dns propagation checker to check that or just wait long enough). You are done :) 

Update 3: I have setup a similar machine locally in VMware. In my local setup, instead of /dev/vda* I've got /dev/sda* and the disk size is 20 GB instead of 80 GB and the new space that I want to add is 30 GB instead of 80 GB, otherwise it is the same. I can see in GParted the very same situation, it behaves exactly the same as the real server, the /dev/sda5 can't be resized. Here are my attempts with fdisk: 

Configure your router to use your squidguard machine as a 'transparent proxy'. You did not mention what you were using for a router, but if it's supported, there is likely a tutorial on the web for configuring it to be used with a proxy server. 

The mysql-server-5.1 package was in older versions of Ubuntu, but doesn't appear to be in 14.04. Version 5.1.73 is downloadable from MySQL's website 

Use CrystalDiskMark, it will measure sequential and random speeds of reads and writes, as well as using different sized data and random and zeroed data. 

The farther away from the inside of the disk platters you go, the higher the velocity of the head relative to the platter is. Therefore you can see peak sequential transfer speeds of up to 2X when comparing the outermost area of a hard drive platter to the innermost. This can be verified with a utility such as HDTune. 

To take advantage of this, those seeking the highest performance from platter drives will often partition only the start of the drive, therefore formatting the drive to a lower capacity, utilizing the faster part of the hard drive. This process is called 'short-stroking'. 

That would solve the issue if you are getting an error message similar to Last, make sure that your router has port-forwarding and firewall rules allowing incoming connections to the MySQL server. 

It's not the piping doing it. Part of your problem is your pager, . By default it truncates at the same length as your terminal does. You can fix this by telling it not to do that: 

It comes down to density (how many servers do you need in a certain amount of space) and redundancy. You might want two separate servers if you can live with some of your servers going down instead of having all your eggs in one basket. In a virtualization environment, it might be useful to start with only a single CPU socket filled in a server, then down the road as capacity needs increase simply fill the other socket with a second CPU and increase the memory in the server. 

Here I can see the /dev/sda2 (local virtual machine) even starts on the same sector as /dev/vda2 (real server). Same for /dev/sda5 and /dev/vda5. 

If I do the same on my Windows 10 desktop, I get success and can work with the share folder and map it. And I am not sure what I have not tried yet, but I have checked these: 1) network connection properties of server B, if server B has enabled Client for Microsoft Networks - yes; if server B has enabled File and Printer Sharing for Microsoft Networks - yes 2) I have tried advanced properties of IPv4 -> WINS tab -> Enable NETBIOS over TCP/IP (made no difference to default, both A and B have static IPv4) 3) enabling Network discovery and allowing its firewall rules in firewall.cpl + same for File and Printer Sharing and their rules; again made no difference What am I missing. How can I access shared folder from Windows Server 2012 R2 acting as client. 

I have a broken Ubuntu 14.04 server. Everything is OK except for apt-get, which for some reason thinks that it repeatedly fails to update mysql server package. The mysql server is updated and works perfectly, so I do not want apt-get to touch it. But every time I do anything that includes apt-get update and apt-get install (including installing completely unrelated packages), it always tries to finish the installation of mysql server. What I am looking for is to find the source of this information that tells apt-get that mysql server needs its attention. I would like to manually edit that source of information and tell apt-get that this package is all OK and it should not care about it anymore. Is this possible? Please note that I am not very interested in actually making apt-get to finish the mysql server update. This is because mysql server runs in production there and everytime apt-get tries to "fix it", it kills it and corrupts the database. If it is not possible to change that apt-get status about a package, would it be possible to somehow tell apt-get not to care about mysql server at all (i.e. to somehow exclude mysql server package from apt-get completely). 

Anandtech has a write-up on the performance of over-provisioned drives from a few different vendors. While 50% did show slight improvements over 50%, 25% resulted in similar performance and was the recommended amount to use. 

While the cables and connectors look very similar, there's a difference. Category 6 uses thicker 22 AWG wire, while Category 5 uses thinner 24 or 26 AWG wire. This causes two different problems: The smaller wire pairs (CAT5) aren't large enough to securely fit in the connectors made for the larger wire pairs (CAT6). You can tell a CAT6 connector (on the left in the below image) by the fact that the wires are staggered at the end of the connector, so that 4 pairs of larger wires will fit. 

Databases use sparse files which don't automatically re-use cleared storage. You will need to compact the file to reduce its size, mongo can achieve this with the '--repair' option 

The second issue is that the conductors in CAT5 RJ45 ends are generally not strong enough to pierce the thicker insulation as well as the thicker wire in CAT6 cables. So even if you can physically fit the cables, you won't get a quality connection. 

First, have you changed to configure MySQL to listen for connections on the server's IP address? Your file should contain this line: 

It's very hard to say which settings you should change, and what you should change them to. It appears you are using the default configuration settings, which are likely not ideal for your server. A good place to start with your investigations is MySQLTuner, it's a popular script that you can run and looks at your current configuration and makes suggestions for improvement. $URL$ Another useful tool is the slow query log. You can see which queries are taking a long time to run, they may be poorly written. Don't get too aggressive with your MySQL caching settings if your web server also runs on the same server, heavy traffic could cause the server to run out of memory and start paging which will leave you dead in the water.