Any inner horn $\Lambda[n,k],0< k< n $ admits a filtration $\mathbf{n}<\cdots<\Lambda[n,k]$, such that each step is filling an inner horn. 

We call a sequence of $L_\infty$-algebras (weak) maps $$0\to L\xrightarrow{f} M\xrightarrow{g} N\to 0$$ is exact if it is exact on the the underlying chain complexes level. Thought I don't know whether this is a good notion. A trivial case is exact sequence of Lie algebras. It is clear that given a surjective map of Lie algebras, the kernel is a Lie algebra as well. My naive question: if we are only given $L_\infty$-algebras $$M\xrightarrow{g} N\to 0$$ being exact, can we find a $L_\infty$-algebra $L$ fitting the longer sequence above? I expect the answer to this naive question is no, but I do not have an example. If the answer is no, then how do one sensibly fix it? I heard someone talked about homotopy fibre of $L_\infty$-algebras, does it work for this case? 

This is a very vague question. We know that some algebra structures can be viewed as modules of some fantastic stuff, call T. Such examples include: Abelian groups are $\mathbb{Z}$-modules, chain complexes are modules of $\mathbb{R}^{1|1}$(it is a super Lie group, I shall not call it as dual numbers, since the multiplication here differs from the usual one), more generally, modules of a operad T (Lie algebra and associative algebra are of this kind). To get the infinitified version(L-infinity algebra, A-infinity algebra, etc.) one uses an infinity operad. Note that module is basically a morphism from T to some Auto( ). And the infinitified version basically replace the source thing by a higher thing. Projective representation goes differently. A representation is the same as a module, a morphism from T to some Auto( ). Projective representation of G, which can be think of as a non-strict functor from BG, the one object category associated with G, to some 2-category. A lot of constructions come from similar ways, they basically replaces the target by a higher thing. Other examples: 2-bundle as a functor Cech groupoid to a 2-category associated to a 2-group, and representation (of a Lie algebra) up to homotopy should also be this kind. A nature question: whether these two constructions are the same? It seems obvious not. On the other hand, I feel they should have some relations. To make my question more clear and concrete, consider Lie algebra and L-infinity algebra. Lie algebras are modules of the operad $\mathcal{Lie}$, view as certain map from $\mathcal{Lie}$ to some Auto(). L-infinity algebras are modules of operad $\mathcal{Lie}^\infty$, view as certain map from $\mathcal{Lie}^\infty$ to some Auto(). My question is whether it is possible to view L-infinity algebras as certain map from $\mathcal{Lie}$ to infinitified version of Auto(). 

Lie groupoids are groupoids with smooth structures. There is a nature 2-category of Lie groupoids: Lie groupoids, smooth functors of Lie groupoids, smooth natural transformations of smooth functors. However this is usually not the correct one, partially because weak equivalence (fully-faithful and essential surjective in the smooth setting) of Lie groupoids cannot be inverted. We need more morphisms between Lie groupoids. There are three (or 2.5) ways to define the more morphisms: 1) Span: Span of Lie groupoid morphism G<<--K-->H such that the left leg is a weak equivalence. Equivalence of such spans: G<<--K1-->H and G<<--K2-->H are equivalent if there exists G<<--K3-->H with K1<<--K3-->>K2 such that all triangles 2-commute. 1') Span:Span of Lie groupoid morphism G<<--K-->H such that the left leg is a weak equivalence and the map between objects are surjective submersion. This is a slightly different version of the 1). 2) Bibundle: right principal bibundle of Lie groupoids. Equivalence of bibundles: equivariant map of bibundles (this is in fact a diffeomorphism). Modulo equivalent relation in three cases we obtain three categories. A classic result tell us that they are isomorphic. One could go a bit further, it is possible to define three 2-categories (i.e. bi-categories, in fact (2,1)-categories, 2-morphisms are invertible), and naturally there are functors between them. The construction is given in Hellen Colman $URL$ One expect also that they are 2-equivalent 2-categories. Recall that a equivalent functor of 2-categories must be locally equivalent and surjecttive-up-to-equivalence on objects (See Leinster "Basic Bicategories"). This means that 2-morphisms must be the same. However it seems that 2-morphisms of (1) and (2) are different. The 2-morphisms induced from (2) to (1) must be and strict isomorphism (namely, K1 and K2 are isomorphic). What's wrong with my reasoning? 

Suppose whole square and the left square in the diagram below are pullbacks, then we may wonder whether the right square is a pullback. It is usually not the case. 

(2) Whether there is a universal way to fix a cokernel(or other limits/colimits) ill-behaved category, obtaining a category(maybe 2-category)? 

Let $aSS$ / $abSS$ be the category of augmented bi/simplicial sets (one can also consider $SS$/$bSS$ be the usual bi/simplicial sets, the results should related in some reasonable way.) There is an obvious functor $n$-th row $R_n$ sending an augmented bisimplicial set $X_{\bullet,\bullet}$ to $X_{n,\bullet}$. What is its left adjoint? (exists?) (In general, how to the compute the left adjoint functor to such a functor $f^*\colon Psh(B)\to Psh(A)$ induced by $f\colon A\to B$. The right adjoint seems easy, if I am not wrong.) 

In a 2-category(i.e., bicategory), the composition of composable 2-cells is unambiguously defined. Where 2-cells are 2-commutative triangles (other shape will not give more information), "composable" is not easy to say in simple words but it is easy to imagine. Special cases of this statement include vertical composition of 2-morphisms are associative and the exchange law of vertical composition and horizontal composition. Any comments or references would be appreciated. Thank you guys! 

What is the higher categorical generalization of exact sequence (3 terms or $\mathbb{Z}$ terms)? In particularly, consider the simplest cases: chain complexes, $L_\infty$-algebras. 

Given a commutative square in a nice category, say, manifolds $Mfd$. Suppose all edges are submersions (I guess transverse should be OK), then the square is a pullback if and only if it locally is, i.e. for a (or all, no difference) cover $U_i$ of C, we have $P_i=A_i \times_{U_i} B_i$, where $A_i=A\times_C U_i$, similarly define $B_i$, $P_i$. 

where $\mathbf{n}$ is the simplicial set $0\to 1 \cdots \to n$ (this notation is bad), its 1-cells are $(i,i+1)$, do not include $(i,j), i+1< j$. For those who does not familiar with simplicial set, one could just think of $\Lambda[n,k]$ as an indexed geometrical horn. So basically this is a combinatary question. For $n=2,3$, this is apparent, for $n=4$ one can still do it by hand. I guest it is true for higher $n$. Thanks for your reading. 

I am wondering whether there is a Lie algebraic version of principal bundle for Lie group over a given manifold $M$. The first thing I try to think of is group cocycle picture of principal bundle. 

Given a topological group, say $G$, it is well known that the classifying space $BG$ classifies $G$ principal bundles. Under some mild assumption on $G$, one model of $BG$ is the geometric realization of the nerve of the one object groupoid $G⇉*$. Let $P\to M$ be a $G$ principal bundle. We can form the action groupoid $P\rtimes G=\{P\times G⇉ P\}$, whose nerve is also the bar construction. There are natural groupoid morphisms $P\rtimes G\to G⇉*$, and $P\rtimes G\to \underline{M}$, where $\underline{M}$ is the trivial groupoid. Taking the nerve and then taking geometric realization, we obtain a map $$|N_\bullet （P\rtimes G）|\to BG.$$ Notice that $N_\bullet (P\rtimes G)\to N_\bullet \underline{M}$ is acyclic, thus we have a map $$M\to BG$$ up to homotopy. My question is that: whether this map is the classifying map for the $G$-principal bundle $P\to M$? Since all the maps are so natural, I would expect the answer should be yes. However, I did not find the relevant relevant reference. Thanks a lot.