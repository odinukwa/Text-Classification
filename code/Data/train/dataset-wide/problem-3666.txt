That stops a client accessing more than one mailbox; That might stop badly written clients who don't close old connections from making new connections, if they won't clear up their mess. I'm guessing this means that maybe you don't want what you think you want. 

The only thing that happens to them is that they are emailed to me; the server does nothing else with them. I can approve comments offline, using Steve Kemp's chronicle. I prefer to have a lean set of filters on my server, to deal only with things that are dangerous. Nearly all are trivial to spot using mail filtering software, and that seems the right place to deal with comment spam. I prefer reviewing spam using mail rather than server logs. 

Machine: Xen-3.0 image running stable Debian Linux 2.6.18, pretty vanilla. My VPS provider asks me to deal with some trouble my image is causing, namely handling IP addresses it is not supposed to: 

Not explicitly, as far as I can tell! At least, nothing under /etc or /var/tmp mentions these IP addresses. But says something I can't make sense of: 

If the alternative is irregularly applying updates, you don't actively follow security updates, and you are running a vanilla stable Lenny, then auto-updating probably increase the security of your machine, since you will update known security holes faster. 

It's not my fault: my VPS providers have overlooked something. What might that be? 81.171.111.1 means I'm happy listening in on ARP requests that I shouldn't be: how do I change this? In any case, what does this mean? I'm looking in completely the wrong place for information on what my image is doing. Where should I be looking? 

OK, since you only want to reduce your access rights (rather than actually running as Peter per se) you may have some options. In Windows 7 (and Windows Server 2008 R2) the task scheduler supports this directly (via the "Do not store password" option) but I don't think there is any built-in equivalent for Windows Server 2003. Running the task this way on a different machine probably won't help because you don't get network access. It can be done in software, though, even on Windows 2003, via the CreateRestrictedToken Win32 function. A Google search found a piece of software called ulimitnt which appears be able to do what you want (via the option). Note that I've never used this program so I can't vouch for its reliability. Using this approach, the script only has access to files that grant access to both local system and to Peter. (Note that the local system account implicitly belongs to the Administrators group, so if Administrators has access that will be sufficient.) 

Powershell (as per SvenW's answer) is best practice, but if you prefer the old fashioned command line: 

One alternative would be to use Software Restriction Policies (Computer Configuration -> Windows Settings -> Security Settings) rather than the "Do Not Run Specified Windows Applications" user policy. This will also give you more flexibility around how you select the application to be blocked. Keep in mind that any blacklisting approach can be worked around. If you want to ensure that the restriction can't be bypassed, you'll need to use Software Restriction Policies in whitelist mode, i.e., specify those applications that are allowed to run rather than those that are not. 

I am learning the basics of linux servers so I am green. I have an Ubuntu server upon which there are websites that I have inherited. In a fit of security worry I decided to check out the ownership of the web site files. They are all 2016:sites. If I run the command 'cat /etc/group | more' I can see that the group exists. But when I run 'lastlog' the user 2016 does not appear. I started to worry that 2016 might be the username of web users connecting from the web so I set the permissions on a testfile to chmod 600, giving read permissions to only the file owner. Sure enough I could still access the file from the web. Can anyone suggest what is going on here? I tried creating a new user and giving them file ownership but then when I access the file from the web it wants me to have all directories up stream owned by the same person. Thanks 

I'm relatively new to Linux so please excuse my ignorance. I have a public web directory where I have been experimenting with the permissions to try to learn about them. I have set up a simple test.php file and set its permissions as follows: -rw --- --- Which I was expecting to mean only the owner can access the file and no other. But, I can still access this file remotely from the web and the test page shows? This is on a Red Hat web server. NOTE: The owner use is not the web access user. This worries me as I then think maybe a web user could write to the file some how (is it possible?). Any pointers would be great. I just want to makesure I understand this as it seems to me to be an important security concept. Cheers C 

Note: the problem has been resolved, the admin of the parent domain managed to remove the DC object. I gather he used ADSIEdit. I'm working with an AD forest (in an isolated test environment, luckily, so failing all else we can blow everything away) and accidentally tried to create a subdomain using a cloned machine as the new domain controller. Naturally enough, this didn't work. But the new subdomain got created, even though AD was not successfully installed on the putative DC, and now I can't get rid of it. I started with this article. That didn't work because there was still metadata for the DC for the orphaned domain. So I found this. Unfortunately this doesn't work either. I opened AD Site and Services, opened the site in question, opened the Servers container, selected the DC in question, right-clicked on NTDS Settings and selected Delete. Clicked through "Are you sure", selected "This Domain Controller is permanently offline ...", confirmed that I wanted to do this even though the DC isn't in the domain I'm connected to, and confirmed that I wanted to do this even though this was the last DC in the domain. Then it said "Windows cannot delete object LDAP://... because: A referral was returned from the server." Anyone seen this before? Any ideas? 

This error occurs when the user has existing permissions on the Active Directory OU that the Group Policy Management Console (GPMC) doesn't know how to deal with. It should be noted that group policy delegations are really just permissions on the OU, the GPMC just provides a simplified interface to make the necessary permissions changes easier. You can use Active Directory Users and Computers to check the permissions on the OU. You will need to enable "Advanced Features" from the View menu in order to see the Security tab for an OU object, and you will need to choose "Advanced" to see the detailed permissions list. In my case, the group in question had been explicitly granted "Read" access to the OU, which must have been added by mistake at some point since it is redundant. In the linked question on the Microsoft Forums, the user was attempting to change delegation for the Domain Admins group which by default has Full Control on all OUs. In my case, since the existing Read permission didn't need to be there, I removed it using Active Directory Users and Computers. I was then able to use the GPMC to add the delegation I wanted. The user in the linked Microsoft Forums question could have removed the Full Control permission for Domain Admins the same way, which would have also removed the group policy delegation as a side-effect. (Whether this is a sensible change is another matter!) In other cases, if the extra permissions cannot be removed, you can grant the necessary delegation directly in Active Directory Users and Computers rather than via the Group Policy Management Console. If you want to grant the "Link GPOs" delegation then the necessary access permissions are "Read gPLink", "Write gPLink", "Read gPOptions", and "Write gPOptions". Once the change is made, refreshing the view in the Group Policy Management Console should show the newly created delegation.