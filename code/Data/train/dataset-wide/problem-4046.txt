Six months is pretty early to ask for a raise. A year to 1.5 years feels more reasonable -- especially if you are young / just out of university. You haven't "paid your dues" yet. Additionally, you may work hard and have a very bright future, but chances are you don't have a lot of polish (yet). Also, it is not unusual for there to be a moderate pay increase at the end of a 6 month probation anyway. Finally, they are paying you in experience that many don't get at your stage of career development. That will reap rewards later on. However, if you feel strongly that you are grossly underpaid, or that your work is much more demanding than what your pay grade would suggest, and you must bring it up at 6 months, then I would take a middle-ground approach. I wouldn't demand a pay raise (yet), but I might bring up the topic. At the end of the review I would say something like, "ok. Can I mention an important topic? I love my job and am happy here. However, since starting here I have taken on the additional roles of client support, traveling, project planning and development, etc. I'm interested to know if these additional responsibilities will be reflected in my compensation." Then stop talking and let them reply. Personally, I don't think I would be any more aggressive than the above at 6 months. 18 months? Yes; you have a more proven track record. But 6 months? No. 

An HR person hit copy and paste. But, that does mean your email made it to HR person's email account -- past any filtering software they may have. So that's cool. 

That's about all you can do. However, if your supervisor or IT Directory is comfortable with conflict, they can (should) be doing the following: 

You may know that governments move slowly. But what most people don't know is that universities move even slower. I have worked for both, and I can tell you that they do not rush on anything -- least of all on permanent hires. When I was hired to work in a high priority position for public agency, it took 3 months. One month to process my application, another to interview, and a third month to decide whether or not to hire me. Why? People in government and / or university positions are very difficult to terminate. Additionally, government and educational institutions typically make up for their lower pay by offering great benefits and fantastic retirement plans which tends to retain careerists. Put together it means that when you hire someone in the public sector, you are very frequently hiring them until they retire. Consequently, the hiring process tends to be very plodding and methodical. Quick hires are just too risky -- everyone in the public sector has had the experience of working with very difficult, low-performing or problem employees who just stick around driving everyone crazy for years or decades, and nobody seems to be able to do anything about it. It makes you take a very long-view on hiring decisions. Don't give up. It sounds like they like you, and eventually may extend an offer. Stay pleasant, be cordial, take some deep breaths and be patient. And, keep looking in the meantime, because it could (still) be weeks (or more) until they make a decision (and that decision could be "No"). Note Be advised that this is a taste of what working in the public sector can often be like. I worked as a programmer in a government IT Department for several years early in my career. We were paid fairly well, and had a lot of pressing priorities that needed our urgent attention. And yet? People still took their time chatting in the mornings, and making the rounds as they got their coffee. One long-term programmer would get her coffee every morning, and then walk around the building for an hour or two chatting with all of her friends. Then for morning break everyone would get together in the break room to eat shared snacks and talk about the news for 20 - 30 minutes. Then she would come back to her desk and call her offsite buddies to talk for another hour. At least once or twice a week I would be sitting at my desk working hard on a high priority item, and my supervisor would just stop by and say, "hey kid, let's go get a donut." Then we would slowly walk a block away to a donut shop, and sit there and eat donuts and hot chocolate, and gossip about other departments or just chat for an hour or two. It was maddening, but I was a junior employee and didn't have any control over the situation. Meetings with this supervisor always took at least 2-3 hours, and nothing would be decided, and we would circle back and have another meeting (where we wouldn't decide anything) again in a week or two. Working for the public sector can be very rewarding, and has a lot of plusses -- the benefits are good, the pay is OK, and you are insulated from disruptive market changes. But it can drive you a little crazy -- especially if you are a go-getter, enthusiastic type. Otherwise, put in your 30 years, collect your pension, and enjoy a very (very) secure job. 

It sounds like your workplace has a lot of rules, and bureaucracy, and a general culture that stifles some of the joy of coding, and that is (understandably) very frustrating. And so, it sounds like you are lashing out at John's request -- not because his request is really a big deal, but because you are frustrated, and he in not in your direct chain of command so he is easy to lash out against. John's request is reasonable, and motivated by an actual need. External audits and accreditations are a valid concern for a QA department head and his superiors in upper management (even if your company is not rigorous about performing them). If an audit is ever performed, and they find a problem with flawed software slipping through your bug tracker or (worse) a security flaw that sailed through your bug tracker, and there are no comments to provide any context for the programmers thought-process, then the optics are very bad for John and his QA department. The first thing they will want to know is, "why don't your programmers comment on bug fixes?" And his best answer will be, "because I let them get away with not doing it." That is not an acceptable answer. It's not like John is asking you to do something arduous. If the bug was "button is disabled when checkbox was clicked; should not be disabled", then just add a one-liner (just like you (hopefully) do in Subversion / Git: "fixed button - no longer disabled when checkbox is clicked"). If you are moving it from the In-Progress swim lane to the Complete / Acceptance Review (or whatever your company's process is), then just give John a one-line comment. Even a stupid / boilerplate comment. The main thing Johns needs is an insight into the programmers headspace. It takes like 10 seconds, and helps satisfy a valid need. It sounds like your company wants to (at least try to) write good software, which is why they pay the salaries of your QA department. Fighting against your QA department's ability to protect your company from flawed software (even if they aren't doing it right (in your opinion)) makes it look to management like you are being difficult, and working at cross-purposes to a valid business need. Your boss is not going to fight this battle, because he knows it's a hopeless campaign. Your company is not going to stop your QA department from (trying) to do their job. And John's argument ("we need this small thing to be more audit proof") is stronger than yours ("he's not the boss of me"). 

Conclusion In my opinion, the possible benefits do not outweigh the probable consequences. Yes the guy sounds awful. Flood your (offline) diary with rants about your bad experience, and tell friends about your lousy former boss over some dinner and wine. But I would recommend against writing any exposes or open letters or warnings online. The Internet has a long memory, and the consequences can be very real. 

After that, you'll just have to hope for the best. The CEO is the agent that the company owners / stockholders have entrusted with running the company. It's his neck on the line. Maybe he just has a hard time trusting his staff -- definitely a flaw. But at the end of the day, he is the boss. 

Some techniques I try to follow to avoid being too aggressive in group discussions: 1) One the one hand, I find that my willingness to speak up can often break the ice and help other people start talking. 2) However, once the ice is broken, I try to remember to let other people talk and express their views. If I'm talking more than my equal "share" (50% in a two person situation, 33% with three people, 25% with four, 10% with ten people, etc) then I am probably talking too much. 3) If I disagree, I try not to lead with contradictions. Instead I ask questions to make sure that I completely understand the other person's position and why they feel that way, and then I restate their position and ask "do I have it right?" Only once I completely understand their position do I express an alternate opinion. This way they know that have been understood and can have an easier time digesting my disagreement, and not just immediately assuming I'm being contradictory. 4) Trust in the wisdom of the group to arrive at the best decision in the end. The best decision isn't always the most efficient or profitable (or the one you prefer). And it may take the group some trial and error to get things right over time. Its ok; there's power in groups of people working together. It's better to choose an 80% solution that a whole group can work on and achieve together than a 90-100% perfect solution that causes deep discord and never gets accomplished due to group dysfunction. Hope some of those ideas help.