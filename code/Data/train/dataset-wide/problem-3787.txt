To put it simple: Don't. If it is your internship, nobody should expect you have enough experience to work without supervision. If you can't find any step forward in one single thing in an hour alone (this applies for more experienced programmers too), then find help whitin the company, this applies if you have absolutely no idea how to attack the problem. It is never a shame telling "I don't know". It is way worse choice to keep up trying for days. If you are in a transitional period (new project assignment), report to your boss (most likely your senior programmer, or if you don't have yet, then project manager) that you would need some assistance. Calmly tell them you would like to make bigger progress, than by yourself, in the worst case they will tell you, that they can't provide help right now, then just be patient and ask them later. Also if it is matter of stairs and distance between your collegues, ask them if they can provide a temporal space between senior programmers or use some kind of chat program (for example skype) where you can access to help more interactively than you/they run up or down on stairs. 

I concur with Ajaxkevi here, but I would add this: In childhood, much of life is about obligations and duties and doing what you should do. In adulthood, however, you will see that plans and circumstances change, and that expectations of behaviour are more about approach (i.e. being clear and curteous to your boss) and less about about actions. You have not signed a binding contract, nor would one likely be even legal in most countries. You can do your best to keep the relationship with the company positive, and it will probably stay that way. It is worth keeping in mind that if you have been a great employee they won't want to sour the relationship either as you might go back and work there one day. They have no legal or even social right to demand you see out your term, since the circumstances that are causing the change are largely out of your control. As a side note, congratulations on creating a business at any age let alone so young. Success in business often requires you to make hard decisions about honouring vague agreements or not, or about honouring one arrangement over another. As long as you treat people fairly and openly, you will have a clear conscience when you need to give people unfortunate news. 

For the next quitting in your life: Ask (or Force them) for a regular checklist for giving in all the properties what the company has and it is in your hands. They should check all the items one by one to ensure you gave them everything. In case if you both signed this paper, they have no legal demands on you. If something missed from the list: that is their problem, you can prove your good attitude with the paper which is signed by you and your former employer. If they hold back your last salary just say them you gave everything they stated, so please send the paycheck or get a lawyer, since it is rightfully yours. Sadly in this situation you don't have this kind of paper, if you have nerves to fight with them outside a courthouse, you can, but I would say it is futile over a certain amount. What you can do, whenever your friends applying a job there, tell them your story. At normal places these documents are just natural and part of the regular practice. In case if you legally didn't work there (is it the case?) then the situation is clear: just walk away, don't recommend the workplace for your friends, and never do the same again. 

Yes, raise it with his boss privately. Surely that's what such a meeting is for, as other topics could be covered by a 1-to-1 with your boss. If your boss is correct in his approach/actions, then his boss should be able to reassure you. Don't be naive and assume that bosses are there for your benefit. 

I find the PERT estimation useful for software development tasks. Summarising: a = time if you fly through it, no delays, no problems b = time you think it will realistically take given known delays and known problems c = worst possible scenario, everything gets delayed, your other bosses give you extra work, and you find a flaw in your implementation at 80% through your plan Estimated time = (a + 4b + c) / 6 Variability = (c - a) / 6 Say you think a task would take a day in ideal conditions, and normally you'd get there in the next 2 days because of meetings, but there are a few stages that could cause problems and then it would be 9 days. Then your estimate is (1 + 4x2 + 9) / 6 = 3 days, variability is 1.3 days, so you would say "I expect to get it done in 3 days, but it could easily take 4.5 days." This way, they have an idea of when to expect it (for delivery to customers, you want to estimate the time to delivery in calendar days, including the effects of meetings, holidays and so on), and an idea of what a conservative estimate might look like. If there is a big variable, like 'it might break component X, so then I'd have to modify and rebuild that component, which would be an extra week', then flag that up in the response - 'I expect it to be done in 3 days, but it tests the limits of component X, so there could be an additional week there'. This is one of the hardest bits of working in small businesses with multiple competing demands on your time. So grasp it with both hands and don't shy away from giving estimates. The sooner you get a handle on it, the better things will be. If quizzed in person, don't be afraid to say "I can't give you an estimate that would be any use off-hand, let me send you something by the end of the day". Good luck. 

I would like to stress out, if you don't say it, you support bad deceisons and living together with them. If your boss gets angry, and punishes you, that is a good sign to look after different job. It is the boss' job to hire or apply right people to the right places in his project. The worst case scenario is his fault, and you can find an another job if this is the case. Better to get into a conflict with your boss than just passively suffer from incompetence. On the other hand if the boss listens you and you have facts to talk about, then you are getting ensured about you have a good and objective thinking boss, and that is a very good moment put a lot of faith in him. 

I think this is about personal feeling. If you do want to attend, do, if you don't, then don't. If you refuse a team building event in work hours, for example if you think it is stupid, speak with your boss, tell him you rather wouldn't attend, and you are willing to work in that time. One question is: are you willing to spend time with your collegues outside working hours? I heard complains from spouses about their darlings overdoing their team building and they are neglecting their personal life. One point is sure: 

You turn it down You accept, and fail to improve things like you predecessor You accept, and succeed 

You have already taken the biggest step, seeking to improve by reviewing what you write. It will improve. Often non-native English speakers know the vocabulary but not the emphasis, so native speakers can struggle to understand - if that is you, use emphasis and vary your tone to show which words are important in your sentence. Speaking clearly and succinctly is a difficult skill to master, so expecting to have the best version in your first draft is a tall order. 

I've heard of people doing this; one guy mentioned having an always-on video conference for remote work, which seems to be the usual context for this kind of appliance. Finally found it: Virtual Camaraderie His take on it - having a separate machine for the video conference - is what you're talking about. [Edit: also Project Stargate] I would make a few suggestions: 

Yes, they are different An online coding test is intended to let the recruiters screen out bad applicants or to rank applicants so they can consider the 'best' ones. It is essentially pass/fail, because you're not able to explain what you're doing to the recruiter. An in-person test is much more interactive; you can explain why you are doing something, or ask for a detail you need but don't have, or ask for clarification of the task or question. In person they are hoping to see your approach, your thought process, rather than just whether you can do a puzzle or not. Don't overcomplicate things If you get a question 'replace all the %20 with space', then just use the built-in function. If they want you to code it by hand, they will say so. Anything that you can do in a simple and straightforward fashion that has not been forbidden is fine. You'd be surprised how many people who apply for coding jobs cannot write code at all. Sometimes they're just asking you a very simple question. In person, investigate the problem Online tests have to be specific about the problem they want you to solve, but in person the interviewer can just make vague requests, like 'can you write code that replaces %20 with spaces' without specifying what inputs to expect. It is worth just checking the parameters of the task; will the code need to cope with arbitrarily long strings, alternate encoding choices, empty strings, etc etc. This is a double-edged sword; you might look good for trying to establish such things before you dive in, but they might just say 'yes' to whether you need to cope with X, so don't skewer yourself with it.