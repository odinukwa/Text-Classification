For my money you can't beat a swarm of self-replicating nanobots. This has, of course, been tried once already here on Earth, with only partial success. A molecule got thrown together that happened to have the physical property of being able to create copies of itself. That in itself is already a fairly promising recipe for disaster, and indeed to start with that's what seemed likely to happen: the copies, and the copies of copies, multiplied exponentially, threatening to dismantle the entire world and turn it into more copies. The process stalled when it turned out that these replicators were not endlessly versatile in the types of raw material they could use, so all the immediately available usable stuff got used up, limiting the rate of replication. So, the copies turned on, and attempted to dismantle, each other for raw material. Random variation in the copies led to a situation where the best-equipped copies won and replicated, crowding out the less-well-equipped copies. This led to a de-facto arms race, externally unguided but effective because of the consistency of the selection pressures that determined the winners. It caused the resulting entities to grow more and more sophisticated, and to gain more and more abilities. A few billion generations later, the copies had got so sophisticated that entire colonies of them could move around coherently and exchange information with other colonies. The colonies themselves got progressively more sophisticated, until they were able to invent the internet, and to use it to ask each other how the job of destroying the world could be done more efficiently the second time around. Sorry if you had different ideas about how we got to this point. But by examining the mistakes made the first time around, the answer should be clear by now, and it is in two parts. First, design a self-replicating nanobot that's more versatile in the raw material it uses, so its exponentially multiplying copies can effectively eat the whole world without being contained in the bounds of their own ecosystem. Second, don't let them turn on each other: rather, get them to cooperate so that they make way for each other to spread outwards in search of more raw material. (This is where a bit of foresight is required in the design of the communication system.) Stick to this recipe, and we'll have the Earth teeming and homogenized before you know it. 

$URL$ Imagening people living on the tundra permanently is not hard considering there's real life people living in both artic and green tundras. Consider Siberian or Mongol tribesmen. Though they are both nomadic, meaning they don't have single large villages (to the best of my knowledge), you can invent a society where there's a class of people traveling and herding large animal groups and shipping products back to the village. Typical example animals would be horses or reindeer. Both producing hide/leather/bones/food/manure. Mongols living on plains ofcourse don't have trees for firewood, so what they do is burn dried pony poop. 

If a normal human gains immortality, there no innate clause that says his nerves no longer work like they used to. He is the result of evolution. And pain is a result of successful breeding in a world where feeling and reacting to pain is very useful. Meaning it's in his genes. Pain and emotional pain are both ways your subconsciousness is telling you that you are in perceived danger. A species that were immortals from the get-go might have never gained the ability of feeling pain. Therefore, I think the answer can lie in the origin story of the Immortal in question. Or, perhaps, it's a medical question. There's a Kung-Fu style called Iron Shirt. The student's body is beat meticulously several hours every day, and at the end, the nerves in his skin is so worn out that he doesn't register superficial pain on the skin. (practical for ignoring pain in combat, obviously). Without knowing the practical benefits of your story's variant of immortality, maybe the Immortal will be less and less subject to pain over long periods of time. Maybe his curse is that he's slowly losing feelings, first physical, then emotional. 

Air balloon! I was considering boat, but there might not be lakes, and werewolfs can swim! But they sure cant fly, and probably can't operate air balloons. So I'd go for air balloons. If there's simple gun powder weapons around then I'm sure someone would have invented at least a crude and simple flying device for this kind of situation. It would only really need to be flying for a night, and if you bring a friend then you could take shifts making sure it stayed floating. The downside A) Needs gas B) unless you're an actual pilot who intends to steer the balloon all night, you need to tether it to the ground so you doesn't fly away. Unless you would want it for a traveling reason, it would make sense to just have it tied to your house roof or in the garden. C) a smart and strong werewolf would know to just pull your ship down with the rope/chain, or even climb up the rope. Or be a d*ck and cut the rope and then follow your balloon on foot until it crashed (if the balloon is not steerable/no pilot) at the end of the night 

I think it's a fascinating idea. But it's easy to misunderstand the concept. I've had this idea in my head for a little while also. I think if of it as just replacing the human language representation of the law (eg, English) with a computer language representation. That is, the actual meaning would remain the same. Just the language has changed. In theory, computer languages are our best attempt that representing complex logic so maybe it make sense. It's interesting to think about how this could apply to financial law (eg, for investments or tax laws). Perhaps it could lead to a kind of arms war. If financial law was expressed completely as a computer language it would be easily to apply game-theory type methods to find the practices that produce the highest returns. We've already seen computer processing power have an effect on the stock market through algorithmic trading. With more powerful hardware and better algorithms are, you can make faster trades and get a competitive advantage. But we could take that to the next level with algorithm that find the best way to minimize tax. Or they could find the best way to restructure a company to avoid regulation. Perhaps this would mean that loopholes in the law would become instantaneously obvious and available to everyone. For example, in the past there have been legal loopholes that allowed organizations to behave like a bank even though they were not regulated as a bank. But the impact of that problem was minimized by the fact that it was difficult to understand that this was the case... But with computational law, this kind of thing could become obvious. How could lawmakers respond to this? In some cases it might be possible to also instantaneously close loopholes. But sometimes loopholes can't be closed easily -- even when we know they exist. For these cases, we would have lost the "fog of war" that comes with the esoteric nature of law. So, this is our arms race: a race of finding loopholes against closing them. This same kind of thing could be applied to non-financial law, also... I remember after the George Zimmerman case, some media pundits worried that the verdict effectively legalized murder, under certain circumstances. In a computational law world those "certain circumstances" would be more clearly understood. As a result they could also be more easily taken advantage of. Maybe all of this could lead to a system of laws that was constantly changing (like a large open-source codebase, or like wikipedia). If a character wanted to do something that was on the line between legal and illegal; it might be interesting if he could run a search that looked at recent court verdicts and waited for that short period of time in which his activity was (technically, computationally) legal. It might also be interesting to think about the organizations that create programming language (such as the C++ Working Group) as prototypes for future law making bodies.