CPU affinity masks are ignored inside OpenVZ containers. You will not be able to get this to "work". 

You also need to make the change @Zoredache gave to fix your reverse DNS (but you wouldn't have discovered that problem until later...) 

If the NFS server is that old, it might even be using NFS version 2, which you would have to specify explicitly with . 

If you're using libvirt, you can't do this in the virt-manager GUI, you have to edit the network XML directly, e.g. with You need to add a element to set up a TFTP server (if you don't already have one), and add a element inside the element of the configuration to tell clients about it. For example, to run a TFTP server on your host at 192.168.122.1, with files served from , and provide it to clients with a boot filename of you would change: 

In this particular case, one rule might be slightly faster than two CIDR rules, but the difference is so small it will likely be unnoticeable. Unless you're routing multiple gigabits per second, it's not worth trying to optimize here, and if you are, you should probably buy a purpose-built router anyway. I recommend you use CIDR comparisons anyway, as this will be faster if you ever add disjoint ranges (and you probably will sooner or later). And it's cleaner and easier to understand. 

You need a system which actually has IPMI. Your cheap desktop motherboard, like virtually all such motherboards, does not. 

You don't have to do anything too complicated. Just call to boot into the new kernel. It couldn't get simpler...unless your old kernel was somehow compiled without kexec support. 

Use RPM packages, like everything else. At the moment the best built NVIDIA driver packages are from Negativo17. 

To avoid restarting the web server, manually clear the cache by having the web server serve a PHP script containing only: 

The first tile is Automatic and Windows will derive the colors from the desktop background wallpaper. (Assuming all the bugs are fixed.) Selecting any other tile will allow customization. 

I'm going to presume you've given enough information and not left out anything important in the nginx configuration information you chose not to share. With that caveat in mind... 

You've set up the installation CD, or some other external media, as an installation source in . Just comment or remove it. 

Did you open inbound TCP port 10514 in the rsyslog server's firewall? You have to do that if you want to receive incoming connections. 

You received the error because the file does not exist. The reason the file does not exist is that the file in the repo is named , while your howto has a instead of the . 

The common factor with both of these sites is that they use ECC SSL certificates to secure their https connections, rather than the traditional RSA certificates used by most sites. These are currently very rare, but they are expected to increase in popularity in the future. Both the versions of curl and NSS in use were built with ECC and therefore ought to support these certificates, so I think you've run into a bug in Fedora and should report it. A related bug was recently fixed in RHEL 7. As a workaround, you can use instead of , which has no problem connecting to these sites (though the latter returns a 409 Conflict error). 

Remember that the CNAME overrides all other records for a given name, and that means the NS records in particular cease to have effect. Namecheap really should have rejected the attempt to create this record, but since they didn't, you will have to remove it yourself. 

You have SELinux enabled, and you moved the files instead of copying them. Therefore they have their original context (probably or something similar) rather than the necessary context for MySQL to use them. To solve the problem, put the files in the correct place in the directory structure (probably and run on the files. 

There are a couple of ways to solve this: First, it doesn't work because is the shell cron uses to run commands, but doesn't support . So the quick fix is to set in the crontab. Or... Second, it's not necessary to anyway. You can just call the virtualenv python directly. 

Win-Q is roughly equivalent to the All Programs item on the Start menu in previous versions of Windows; it's what you would hit to choose a program not directly on the Start screen. Generally, you will only get program icons added directly to the Start screen if you are the user who installed the program. If you're trying to deploy Windows Metro style apps, Microsoft has a great guide for doing this. Unfortunately at the moment there aren't any really good ways to enforce the content of each user's Start screen, unless you're willing to reimage the workstation. Hopefully a Group Policy template will be forthcoming... 

You should already be using WordPress Multisite with the domain mapping extension. If you were, this would already work out-of-the-box. (Though you need to add something to your script to set up the domain map for each new customer.) This also eliminates the need to use mod_userdir, which seems like an ugly hack... 

With the two machines in different datcenters? You can't. This scenario assumes that both machines in the cluster are on the same subnet; the VIP is also in that subnet. To do what I think you want to do, you would need an anycast IP address. Then you'd still have to run your own AS so you could add and withdraw routes as the machines go online and offline. This is at least a six digit investment in hardware, infrastructure and quite possibly an admin to babysit it all. Not what you had in mind, eh? Geographical redundancy is not easy nor cheap. The minimum I'd do here, since I would guess you are on a tight budget of no more than three or four digits, is to forget the VIP and write a custom fence that adds and withdraws A records from the DNS when the machines go online or offline, and host your DNS somewhere that has solved all these problems already (e.g. Amazon Route 53). You'll also have to STONITH, (and write custom code for that too) but withdrawing the DNS record ensures that visitors aren't directed to the dead node. Later, you should take a few hours and do some research to decide whether this is the right way to scale your application at all. If it's a web site, it might not be. 

You have the failed drive replaced, and then restore your backups. Pretty straightforward, if annoying. 

250 means that the message was accepted for delivery. The human-readable portion of it can say anything, and it appears that this is someone's attempt at humor. 

Your nginx configuration is trying to pass to 10.0.0.78 port 9002, but your uWSGI is configured to listen on port 9001. One of these two needs to be changed so that the ports match. You also need to ensure that the host firewalls permit the traffic between your servers. 

"Incoming" and "outgoing" are from the perspective of the machine in question. "Incoming" refers to packets which originate elsewhere and arrive at the machine, while "outgoing" refers to packets which originate at the machine and arrive elsewhere. If you refer to your web server, it mostly accepts incoming connections to its web service, and only occasionally (or maybe never) makes outgoing connections. If you refer to your web client, it mostly makes outgoing connections to other services, and only occasionally (or maybe never) accepts incoming connections. Clear as mud now? 

You might also have a problem with the since you don't have a at the beginning of the relative URL . Try changing that to . And, you're missing a fastcgi parameter that tells php-fpm where to find the PHP script. Add this into the block. 

You're really letting the whole world access your memcached?! And for that matter practically everything else, since you're only dropping traffic on a few ports. I would suggest you drop that entire configuration and generate a fresh one using a tool such as (CentOS 6) or (any distribution). 

The Firefox CCK Wizard will create a custom extension for your site with your desired Firefox customizations. Deploy the extension that it creates along with Firefox onto end-user computers. 

In my CentOS VMs I found that the script , installed by the RPM, actually changed the hostname. This happens when the instance gets its IP address during boot. While it's not the long-term solution I really want, for now I simply deleted this script. The hostname I set with now persists after a reboot. The script is likely to be exactly the same place in Debian/Ubuntu VMs, but of course I don't run any of those. 

If you found only one version of the package, you will have to delete it from the RPM database without actually removing it from the filesystem (since they're required for booting and installation). For instance if there was only one version of dracut: 

Actually neither. FCRDNS stands for "Forward Confirmed Reverse DNS". How this works is that, first, the PTR record of the connecting IP address is looked up. If it hasn't got a PTR record, then the check instantly fails. A mail server with this feature on will then reject the connection, such as this rejection taken from my own mail server: 

Your server has an package installed that doesn't match that in any of the repositories you currently have. It is also newer than that in any of the repositories you currently have. Interestingly, its source isn't identified there in your output. You might find more information about the package with . To resolve the issue, you can do one of two things: 

Wow, you've got a real mess on your hands. Overall the nginx configuration looks good. The only thing that struck me on first reading as being possibly "wrong" was the statement. In my production WordPress multisite, I have: 

Yes, if your provider also provides a separate network for this purpose. Otherwise just use the public IP addresses. Though in this case, if you use SSL you will have to pass it all the way through to your backend servers rather than terminating it at the load balancers, to ensure that other customers' virtual machines cannot sniff your traffic. You'll also have to encrypt your MySQL connections and the connections to your storage servers...You may as well just set up a VPN between all your boxes. 

You can do the installation yourself if the provider gives you remote access to the server's out-of-band management hardware (e.g. IPMI, iLO, DRAC). If you don't get such access, or if the server doesn't even have such hardware, you should probably not do business with them and find another provider.