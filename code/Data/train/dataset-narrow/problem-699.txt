There is no LIMIT set as such for express edition. However when connecting from application connection pooling comes into picture, if enabled. In connection pooling, after a connection is created, it is placed in the pool and it is used again so that a new connection does not have to be established. 

Depending on how transaction is initiated, if it is under explicit begin transaction and commit yes it will rollback completely to its initial state after the query fails, while if the transaction is not under begin transaction and commit it will store the changes done till the query failed and from after the query failed the it would be stopped from making further changes. A classic case where system initiates a rollback is when a deadlock happens and SQL Server by internal mechanism chooses deadlock victim, kills the transaction and it may or may not rollback depending on whether it was explicit or implicit transaction. Like when normal select statement is killed their is no rollback as such. 

SQL Server is installed but due to corruption in MSDB, Model database it is not able to come online. If model database is not able to come online tempdb wont be created hence SQL Server would not come online. The error is also includes stack dump this is very strange SQL Server is getting installed and detecting corruption in system data files. There might be two possibilities 

Direct transfer of database using backup restore or using attach dettach is not possible because you cannot move database from higher version(SS 2012) to lower version(SS2008). Its not allowed by Microsoft. What you can do is script out the objects manually run the script in destination database and then use import export wizard to move data. This link would help Moreover SQL Server 2008 express database has limitation of 4 G database. So when you move data using Imp exp wizard make sure you do not exceed the limit. PS: If you would have searched the net you could have found lot of similar threads on how to achieve this. 

Following can be the reason behind the error message. The process of troubleshooting such errors is mentioned in article Could Not find database engine startup handle error during Installation 

I would suggest to setup one job that would backup the transaction logs (serially). This would also make sure backup does not heavily utilities the I/O because you are running backup for database one at a time. What could be possible drawbacks with running in parallel 

By enabling the trace flag in a batch (by using DBCC TRACEON command) right before the target query, and then disabling the trace flag (by using DBCC TRACEOFF command) right after the query. Starting with Microsoft SQL Server 2005 Service Pack 2 (SP2) and Microsoft SQL Server 2008, the query-level option "QUERYTRACEON" is available. This option lets you to enable a plan-affecting trace flag only during single-query compilation. You enable it in starup parameters. 

What Denny Cherry wrote is true for SQL Server version from . From SQL Server 2012 onward there was considerable change in SQL Server memory allocation. Memory for SQLCLR is allocated from max server memory setting in SQL Server 2012 not outside of it. BOL says that from SQL Server 2012 onward 

Yes they will run. Logshipping is simple copy and movement of logs so when you bring secondary database online it just brings the database online it does not affects any job running. So you should disable all backup,copy,restore and alerts jobs. When next time on primary, backup job wil run it will succeed even copy job will succeed on secondary but restore job would fail on secondary as database is online and logs cannot be restored more over log chain would be broken. 

There was surely something happened in database . The first thing you should do is change autogrowth setting you have set autogrowth in percentage(10 %) for both data and log files this IMO would have forced database to grow unnecessarily. You can refer to Autogrowth settings and how to configure it and configure optimum value for this preferably in MB. 

It would be better to rebuild the cluster from scratch in other domain. In windows server 2016 you can have cluster nodes in 2 different domain 

Yes this is very much possible and I have this in my environment. Please note that in this case you would not be able to leverage automatic failover of replicas from SQL Server FCI to standalone node 3. You would have to reply on manual failover. This is because the AG replica resides on FCI which has its own failover. 

There was notable change in SQL Server memory code in SQL Server 2012 but no where its related to what you are seeing. SQL Server memory allocation is dynamic in nature when SQL Server boots up it would grow its memory notification till the resource notification is revoked.SQL Server will keep allocating memory based on its need as long as there is memory available I.e. as long as notification is signaled in widows and will scale down its usage when there is signaled in windows. When available memory is between the low memory and high memory SQL Server will try to maintain the memory usage stable with some exceptions. With 48G memory you have set max server memory to 44G and only given 4 G to OS. IMO this is not correct you must give at least 6 G OS. You should give enough memory to OS so that it would have enough to allocate otherwise it would start signaling low memory notifications and SQL Server would have to trim its memory consumption. Does SQL Server service account has Locked pages in memory privilege. If not you should give it, but before doing that please leave 6-7 G for OS( I am assuming here that this is dedicated system for SQL Server) If you want SQL server to consume more memory create a dummy table and then start inserting large number of records in it at same time start running multiple statements you would see SQL Server memory consumption rising. If you want to check SQL Server memory consumed by SQL Server use query posted above 

Other method is by using Extended events, below link by Jonathan has steps( applicable to SQL 2012 or later) $URL$ Ofcourse you can read below article by Paul Randal where he showed how to track page split using fn_dblog command $URL$ 

You can use copy database wizard to copy database from one server to other. It has some limitations please read This Microsoft Online Doc before proceeding. Internally database would be transferred to destination server and it is much like backup restore only but you manually dont have to take backup and do restore. If you want Screenshots on how to achieve this you can refer to below link $URL$ 

So this means when queries run on this workload they can request almost memory as memory grant for the execution there by forcing others to starve for memory. And this is may definitely cause OOM error. Further more what Microsoft says is 

The memory for joining and filtering are decided even before the query runs and suppose there is really a memory crunch and the memory required to run operation is not available SQL Server processor will grant "required memory" which is 

Yes you can change the autogrowth setting when database is being accessed, for next autogrowth instead of percentage the value in MB would be taken into account. Its almost always a good idea to keep autogrowth in MB. You can get tentative value for autogrowth from This Article use the query mentioned to set the tentative value. Keep monitoring using the query in future this value may change then accordingly you have to change yours I suggest you to read Considerations for the "autogrow" and "autoshrink" settings in SQL Server 

No this is not possible SQL server 2012 Standard edition database has no such Limit of 10 G database restriction. Can you check autogrowth setting make sure you have not put limit on autogrowth for data and log files. 

Well you can query various DMV's to check what is memory utilized by each request and then figure out by yourself. You can query sys.dm_exec_requests DMV and look for column which says 

BUT note that plans do not always get invalidated when you update stats. There are quite few articles describing this 

No memory will be allocated by Max server memory setting(will fall under 58G category) not from outside this limit. I am not using word as from SQL Server 2012 buffer pool is only consumer not allocator of memory so its better to use max server memory 

Did you tried Ola Hallengren solution for index rebuild. There are various modes you can try as mentioned in his article. But as you said limited also took 4-5 hours I guess this is what DMV is. Its actually slow and even MS believes the same about it. Index rebuild is considered as maintenance activity and should be done when load on server is relatively less or during maintenance window. 

My guess is since you have remamants of failed installation still present in your system that is why you cannot install the new instance. This can be fixed by deleting few registry keys related to SQL server. Follow below method , this method was given by Microsoft forum team and is recommended way to remove have helped me and forum users many time . If you have multiple instances below suggesstion would not work so dont use it. First please refer to below Microsoft support link for what actions to follow before removing SQL Server instance. Its is for 2008 r2 but would be applicable to 2012 as well. $URL$ If still you face problem you might as well try below suggesstion which involves removing registry entries. Note: Removing necessary registry entries might cause inconsistency so backup registry before doing changes. •1. Uninstall the existing SQL Server and all the components from the add remove program. •2. Backup the registry . Please read in details the MS link before proceeding. •3. Delete the following keys using regedit: ◦--HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SQL Server ◦--HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSSQLServer •4. Go to HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall and delete all the sub-keys referencing SQL Server. •5. Go to HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services and delete all the keys referencing SQL Server. •6. Rename all the SQL Server folders in the computer. •7. Reboot the machine. If you dont find this useful or have confusion dont proceed. Open a case with Microsoft and allow them to have a look at your system. with my experience with many failed installation registry keys are left in corrupted state and only solution would be to remove them.But you need expert to fiddle with registry PS: Above method was suggested in SQL server forum and works well. Of course if you can please revert it would be helpful 

Transaction log backups are mostly small and if you have a busy database producing lot of log records you might need to change the backup frequency. Mostly I have seen transaction log backup completing fine when frequency is 15 mins. I don't think should be matter of concern for you.