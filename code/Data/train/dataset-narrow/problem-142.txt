for tunnel interfaces networks, (we are) as usually, uses 172.16.0.0 network, with same rule: 172.16.N.0/30 - left side of the ring(or main uplink) 172.16.N.5 - right side of the ring(or reserve uplink) if you have more than 255 branches, than you just need to use binary calculation, and you will get much more economical utilisation of address space(say if you need formula, i can provide it for you). imho, this is good way, because you always know, in one look, what branch network, what branch vlan and what tunnel you are looking. 

But, I`ve disabled usage of logged user creds. So, if user creds are correct, i have this message in /var/log/freeradius/radius.log 

forwarding proccess, forwards frames. learning proccess, writes incoming frames source addresses to the fitering database filtering database, holds info about what host can be found behind what interface, used by forwarding proccess. 

No. The FIN is send because the sender decided that it wants to close the connection. Even if you would change the recipient that it will ignore the FIN the sender side of the application will still consider the connection closed and not send or receive any more data on it. Just compare it to a phone call. If the other end decided to hang up the phone and no longer talk to you it does not matter if you are trying to ignore this, the other end still will not talk to you any more. 

Because it is easier to understand the output then, i.e. one sees that this packet continues after (relative) sequence number 1 and goes to 205, i.e. length 204. 

I am trying to understand the working of Go-Back N using this website:- $URL$ Here, suppose we are sending frames 1,2,3,4,5,6 (window size 4) and in the current window we have frames 1,2,3,4. Now suppose ACK 4 is lost then according to the website none of frames in the current window are re-transmitted. According to my understanding, frames 3,4,5,6 (of current window) must be re-transmitted. Where am I going wrong? 

I read that "TCP/IP protocol suite contains relatively independent protocols which can be mixed and matched which is not possible in OSI". What is the meaning of mix and match over here ? Can we mix transport layer and network layer protocols ? 

In message switching, the switches wait for the entire message to arrive (store) and then forward it to other switches. Does packet switching also use store and forward technique ? I know that in packet switching, the message is divided into packets and sent across the links. But are the packets sent as soon as they arrive at the switch or are they stored in a similar way as message switching? 

A user can not be directly identified at the transport layer. The common ways firewalls handle this is by associating the IP address somehow with the user and then mapping any flows to a user based on source IP address. Of course this will fail if there are multiple users behind the same source IP, like in multi user systems (UNIX, Windows Terminal Server...) or if the source of the traffic is a network with NAT where multiple IP addresses are mapped to a single one. For building the association between user and IP address various methods are typically used, like: 

There is no such thing as "the network" which behaves the same everywhere. The network is made of routers which simply forward packets unchanged. Then you have packet filter firewalls which might pass such packets unchanged, might block these if the reserved bits are set or might sanitize the packets by setting the reserved bits to zero. And then you have application level gateways/firewalls which effectively are an endpoint for the TCP connection and which create a new connection consisting of different packets and of course the reserved bits set to a sane value. 

All this operations are uses CPU, which is shared by another OS proccesses, this is an important. So what is typical switch? Switch, as usual, have multiple (!)different type(!) processors: 

Is it possible to do that without VLANs ? yes, but why, you have good switch?! ;-) How should be configured MikroTik WiFi router ? In what mode the WiFi router should work ? If your switch is in default config, then you just need to connect wifi-router ethernet1 port to the switch. This will be "wan" for wifi-router, add address to this interface for. example 192.168.1.254, set gateway 192.168.1.1. It will works. If you want to limit connections from 192.168.2.0 to 192.168.1.0, set acl on mikrotik. But, if you want, to permit 192.168.1.0 to 192.168.2.0 and deny 192.168.2.0 to 192.168.1.0, both, you need: 

Your output shows relative instead of absolute sequence numbers. To get the absolute numbers use the appropriate option. From the documentation: 

Because it the ACK to the FIN which be definition should be the last sequence from the data plus one to distinguish it from an ACK to the last data. 

There is no fixed port on the browser for receiving the data. The source port of a TCP connection is picked more or less random (depending on the system) and differs from the source port of all other TCP connections from the same host to the same target host+port. There are often multiple TCP connections open to the same target at the same time. To have a look what connections are currently open and which ports they use run . 

Matt, good question! Bridge and switch are almost same things. Bridge, now(in 2014 ;-), is a basic function of the ever modern OS, so this is software. Lets look on bridge architecture(bridge operations are described in ieee 802.1D), bridge must have: 

So, when switch forwards frame, it is uses just ASIC, and in theory, CPU can be overloaded, but switching will works fine. ASICs and CPU are separated, ASICs even haves own superfast memory(CPU have typical RAM). When you are send configuration command to your switch oven ssh\telnet, CPU recieve commands from ssh\telnet process, and send them to the ASICs. Switches architecture is very complex, and it is vendor-specific, IMHO, modern switch this is true-engineering-excellence. 

syntethic task ;-) STUN can be used only with "full cone NAT, restricted cone NAT, and port restricted cone NAT"… but not with symmetric NAT. STUN is the protocol for clients, but clients, as usually, in real world are using symmetric NAT(unique port for any connection, dynamic translation)! In the real world servers are using full-cone NAT(static translation), and servers, as usually, gets connections from clients, which are already know ip:port… However, formal answer: most "frequent" using of STUN it is sip client to server keepalive(udp), but there are also other usages: $URL$