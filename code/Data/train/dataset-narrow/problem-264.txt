You don't need a router to run DHCP. In fact, it is much more common to run DHCP on a server than a router. 

No. The computer has no idea what it's connected to. As I said, computers generate data from applications and that data is encapsulated in lower layers until it is sent on the wire (or radio if wireless). This will happen regardless of whatever device is on the other end. 

Since the log message says it's a Land attack, you could look in your sniffer trace for packets with port=0. If you don't find any, that's a good indication it's a false positive. Also, look to see if you can identify the source of the packets in the log message. If it is a device you control, you can inspect that device to give it a clean bill of health (or fix it if it isn't). 

VLAN 104 is not tagged on any ports. You need to allow it on the ASA port and the switch uplink ports. 

First, packets are anything but physical ;) I assume you actually mean Ethernet frames (not packets) A simplified explanation: the ethernet hardware receives an entire frame in a queue structure, fetches one byte at a time, and clocks it out the interface one bit at a time. Then it fetches the next byte, and so on until the frame is complete. Because the ethernet hardware operates on one frame at a time, there's no possibility of interleaving two partial frames. 

Change the static routes on the ISP router to use the next hop address 172.16.15.21 instead of the interface. 

A management VLAN is the same as any other VLAN, so yes, you can include it on your trunk ports. Just make sure the management interface is in the correct VLAN. 

If they're trunked together, you don't need an IP address on both switches on the VLAN interface. One is enough. For example, you can modify the Parts switch like this: 

I think you are confusing NIC timestamps (only available to the OS), and TCP timestamp fingerprinting, which allows a remote host to identify the OS (and possibly the individual device). Routers don't modify TCP segments -- what you see is the segment from the originating host. That's why you can fingerprint remote hosts. In order to identify a router, you need the router to generate TCP traffic, for example, from a administrative session with the router itself. 

Running spanning tree in such a large, unreliable network is just asking for trouble. You will always have links flapping which will cause spanning tree to continually reconverge. You need to redesign your network. That means adding routers or layer-3 switches to break up the network into more manageable L2 domains. The goal is to eliminate L2 loops by making them into L3 loops. Doing so will also give you more bandwidth because you can use the links that are currently blocked. Plan on purchasing 2-3 routers or L3 switches in order to solve your problem. 

MAC addresses are layer 2 addresses. They are used to address devices at the hardware level. Ethernet, for example, is a layer 2 protocol, and it uses MAC addresses to send data to devices. Ultimately, you need to address physical devices on the Internet. That's where layer 2 addresses (MAC addresses) come into play. 

Your crypto maps go on the "outside" interfaces -- the ones connected to the bridge router. The peering relationship is formed between those interfaces. You have it on both interfaces on ISR-1. Also, you need to generate matching traffic. ISR 2 has no interfaces that would match the ACL for the VPN. One more thing, On ISR 2, the ACL for NAT (101) doesn't look right. Are you sure that's the way you want it? 

Packet Tracer is not always a faithful simulation of actual switch behavior. In the real (Cisco) world, the switches would operate as you initially described. 

You have a routing problem. If you put an access list (access-class) on the vty interfaces, you will get a "connection refused" message (or a time out message). The fact that you are getting a destination unreachable message means your router doesn't have a route to the destination. I suspect that when you put on your access list on the interface, you also blocked routing protocols. 

You do not need the ip helper-address statement. As I understand your requirement, you only want to allow printers on vl 2 to be accessed from vl 3. Nothing else on vl 2 can be accessed from vl 3. 

The slash notation is another way of writing the subnet mask. It works the same for IPv4 and IPv6. The number /3 indicates the number of consecutive 1's in the mask. Since the mask is the same size as the address, that means that for IPv6, the subnet mask is three 1's followed by 125 0's (3+125=128 bits). For an IPv4 address it means three 1's followed by 29 0's (3+29=32 bits). It can also be written as 192.0.0.0. 

The best way to think about this is: Each layer of the stack in one host communicates (logically) with the same layer in the other host. But the information "moves down the stack." As it does, each layer encapsulates the information in the layer above. So, for example, the TCP information gets encapsulated in the IP layer, and so on. At the receiver, the process is reversed as the information moves up the stack. 

The PCs don't "know" there are switches in between them -- they operate the same way as if they were directly connected. Switches operate at layer 2, so they don't process ARP packets. They forward frames without modification. If the destination MAC address is unknown, the switch floods the frame out all ports. 

You have created an "invalid" network design. You have two VLANs that have the same IP subnet configured on them. You can't configure subinterfaces (as you've discovered) because the router, operating at layer 3, can't distinguish between the two subnets. Generally speaking, you should have one IP subnet per VLAN and vice versa. Either change the IP subnet on one of your VLANs (you will have to enable routing), or make everything the same VLAN. 

Assuming the SSIDs are the same and there are no authentication issues, it is up to the client to decide which WAP to associate with. You might see if there's an updated driver for your workstation. 

VLAN tagging is specific to a particular port, not the whole switch. A VLAN can be tagged on port 1, but untagged (native) on port 2. When two switches are connected with a trunk, the VLAN tagging should be the same on both trunk ports. If VLAN 100 is tagged on one side of the trunk, it should also be tagged on the other. 

Definitions can be very context dependent, but I'd say they are the opposite of what you said. An IP block would (usually) refer to a group of addresses on a bit boundary (a CIDR block), while a range could be any group of contiguous addresses. These kind of definitions can be imprecise, so in many cases, they could be synonymous. 

Don't equate marketing literature with technical discussions :-) Let me answer your second question first: Hardware is faster than software, in practically all cases. When we say "hardware," we mean devices that are purposely designed to forward packets as fast as possible. The usual limitation is the physical properties of the integrated circuit technology. Software, on the other hand, uses a general purpose processor that has to perform several operations in order to forward a packet (read data, move it to another part of memory, perform some calculations, move it again, etc). This is generally significantly slower that hardware-based systems. The switching vs. routing debate is largely moot in modern networks. Once upon a time, routers did their forwarding in software, but modern enterprise routers use hardware and software in combination to forward packets at line rate - that is, as fast as they are received. So essentially, there is no difference between routing and switching. That is one reason you will see the term "layer 3 switches" used. It's partly a marketing effort to make them "sound" faster. Questions about CEF, fast, and process switching have been asked and answered here already, so I won't repeat them. So your last question assumes there is a major difference between routing and switching -- but as you can see, there isn't any longer.