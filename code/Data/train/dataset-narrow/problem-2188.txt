A polynomial $f(x_1,\ldots,x_n)$ is a monotone projection of a polynomial $g(y_1,\ldots,y_m)$ if $m$ = poly$(n)$, and there is an assignment $\pi:\{y_1,\ldots,y_m\}\to\{x_1,\ldots,x_n, 0,1\}$ such that $f(x_1,\ldots,x_n)=g(\pi(y_1),\ldots,\pi(y_m))$. That is, it is possible to replace each variable $y_j$ of $g$ by a variable $x_i$ or a constant $0$ or $1$ so that the resulting polynomial coincides with $f$. 

Proof: Consider the bipartite $n\times n$ graph $G$ with $(i,j)$ being an edge iff $a_{i,j}=0$. Then the maximum average degree of $G$ is at most $d$. By Lemma 3, we can write $G=G_1\cup G_2$, where the maximum degree of the vertices on the left part of $G_1$, and the maximum degree of the vertices on the right part of $G_2$ is $\leq d$. Let $A_1$ and $A_2$ be the complements of the adjacency matrices of $G_1$ and $G_2$. Hence, $A= A_1\land A_2$ is a componentwise AND of these matrices. The maximum number of zeros in every row of $A_1$ and in every column of $A_2$ is at most $d$. Since $rk(A)\leq rk(A_1)\cdot rk(A_2)$, Lemma 2 yields $rk(A)=O(d^2\ln^2 n)$. $\Box$ 

Motivation: the largest known monotone circuit lower bound for PER (proved by Razborov) remains "only" $n^{\Omega(\log n)}$. On the other hand, results of Valiant imply that $$ \mbox{CLIQUE$_n$ is a monotone projection of HAM$_{m}$} $$ where $$ \mbox{CLIQUE}_n(x)=\sum_{S}\prod_{i < j\in S}x_{i,j} $$ with the summation is over all subsets $S\subseteq [n]$ of size $|S|=\sqrt{n}$. I myself couldn't get a "simple, direct" reduction form these general results, but Alon and Boppana claim (in Sect. 5) that already $m=25n^2$ is sufficient for this reduction. 

Under "substantially" I mean something really big, say, by some super-polynomial (in the number $n$ of variables of circuits) factor. 

P.S. I know that $\Omega(n\log n)$ gates are necessary to simultaneously compute all $S_1^n,\ldots,S_n^n$. This follows from the lower bound on the size of monotone boolean circuits sorting the 0-1 input; see page 158 of Ingo Wegener's book. The AKS sorting network also implies that $O(n\log n)$ gates are sufficient in this (boolean) case. Actually, Baur and Strassen have proved a tight bound $\Theta(n\log n)$ on the size of non-monotone arithmetic circuit for $S_{n/2}^n$. But what about monotone arithmetic circuits? 

Let $f(n)$ be the smallest number of edges in a DAG representing $K_n$. It is not difficult to show that $f(n)=O(n^3)$. 

This is a partial (affirmative) answer in the case when we have an upper bound on the number of zeros in every row or in every column. 

Remark 2: An indication, that in the case of bipartite graphs $G$, the answer to Question 1 "should" indeed be NO is that then the following monotone Karchmer-Wigderson game on $G$ needs only $O(\log n)$ bits of communication. Let $k$ be the largest number of vertices in a complete bipartite subgraph of $G$. Alice gets a set $A$ of red nodes, Bob a set $B$ of blue nodes such that $|A|+|B|>k$. The goal is to find a non-edge between $A$ and $B$. 

P.P.S. Actually, Valiant proved a more impressing result: every polynomial $f(x)=\sum_{u\subseteq [n]}c_u\prod_{i\in u}x_i$ with $c_u\in\{0,1\}$, whose coefficients $c_u$ are p-time computable, is a projection (not necessarily monotone if the algo is non-monotone) of HAM$_m$ for $m$ = poly$(n)$. PER also has this property, but only over fields of characteristic $\neq 2$. So, in this sense, HAM and PER are indeed "similar", unless we are not in GF(2) where, as Bruno remembered, PER turns to DETERMINANT, and is easy. 

N.B. There is yet another interesting related result due to Arnold Rosenbloom: $\{+,\times\}$-circuits with just one monotone function $g:\mathbb{N}^2\to\{0,1\}$ as output gate can compute every slice function with $O(n)$ gates. A slice function is a monotone boolean function which, for some fixed $k$, outputs $0$ (resp. $1$) on all inputs with less (resp., more) than $k$ ones. On the other hand, easy counting shows that most slice functions require general $\{\lor,\land,\neg\}$-circuits of exponential size. Thus, one "innocent" additional output gate can make monotone circuits omnipotent! My question asks whether this can also happen when $g:\mathbb{N}\to\{0,1\}$ is a fanin-$1$ threshold gate. 

It is long known, at least since Adleman's theorem, that BPP $\subseteq$ P/poly holds in the non-uniform setting (even for algorithms computing functions over infinite domains, like arithmetic circuits working over all real numbers). The disadvantage of these results is, however, that after the derandomizing, we get a sequence of deterministic algorithms, that can be different for inputs from different dimensions $n$. But if we are unable to show BPP $=$ P in the model of Turing machines, can we at least show this in some restricted uniform, but still "practically relevant" models of computation? One of such models is that of dynamic programming algorithms. At a high (extremely high) level, the model of DP algorithms can be described as follows. We parameterize a given problem $P$ by one (or more) parameters $n$ ("dimension" of inputs), consider the resulting "subproblems" $P_1,P_2,\ldots$ and give one (or more) recurrence equations 

But wait: it is well known that CLIQUE requires monotone circuits of size $2^{n^{\Omega(1)}}$ (first proved by Alon and Boppana using Razborov's method). 

The $k$-th elementary symmetric polynomial $S_k^n(x_1,\ldots,x_n)$ is the sum of all $\binom{n}{k}$ products of $k$ distinct variables. I am interested in the monotone arithmetic $(+,\times)$ circuit complexity of this polynomial. A simple dynamic programming algorithm (as well as Fig. 1 below) gives a $(+,\times)$ circuit with $O(kn)$ gates. 

A $1$-entry $(i,j)$ of $A$ is covered by $R$ if $i$ was chosen in $I$ and none of (at most $d$) rows with a $0$ in the $j$-th column was chosen in $I$. Hence, the entry $(i,j)$ is covered with probability at least $p(1-p)^{d}\geq pe^{-pd-p^2d}\geq p/e$. If we apply this procedure $r$ times to get $r$ rectangles, then the probability that $(i,j)$ is covered by none of these rectangles does not exceed $(1-p/e)^r\leq e^{-rp/e}$. By the union bound, the probability that some $1$-entry of $A$ remains uncovered is at most $|A|\cdot e^{-rp/e}$, which is smaller than $1$ for $r=O(d\ln|A|)$. $\Box$ 

The voting function $\mathrm{Maj}(y_1,\ldots,y_m)$ of $m$ variables is a partial function whose value is $y$ if the element $y$ appears more than $m/2$ times among the $y_1,\ldots,y_m$, and is undefined, if no such element $y$ exists. A simple application of Chernoff's and union bounds yields the following. 

Concerning $Q2$: Yes, we have some algebraic/combinatoric measures, lower bounds on which would beat log-depth circuits. Unfortunately, so far, we cannot prove large enough bounds on these measures. Say, for linear $NC^1$-circuits, such a measure is the rigidity $R_A(r)$ of the matrix $A$. This is the smallest number of entries of $A$ that one needs to change in order to reduce the rank to $r$. It is easy to show that $R_A(r)\leq (n-r)^2$ holds for every boolean $n\times n$ matrix $A$, and Valiant (1977) has shown that this bound is tight for almost all matrices. To beat log-depth circuits, it is enough to exhibit a sequence of boolean $n\times n$ matrices $A$ such that 

But what about other (especially, infinite) semirings? What about the arithmetic semiring $(\mathbb{N},+,\cdot,0,1)$ (with usual addition and multiplication)? 

Thus, $p$ represents $q$ if $p$ contains $q$, and the number of labels in $p$ equals the number of edges in $q$ (there is a 1-1 correspondence between labels and edges in $q$). 

ADDED: Tsuyoshi Ito answered Question 1 with a very simple trick. Still, Questions 2 and 3 remain open. The counting status of PATH is interesting in its own both because it is a standard DP problem and because it is #P-complete. 

N.B. Note that I am talking about a very restricted class of circuits: monotone arithmetic circuits! In the class of $\{+,-,\times\}$-circuits, Question 1 would be just unfair to ask at all: no lower bounds larger than $\Omega(n\log n)$ for such circuits, even when required to compute a given polynomial on all inputs in $\mathbb{R}^n$, are known. Also, in the class of such circuits, a "structural analogue" of Question 1 -- are there $\#$P-complete polynomials which can be decided by poly-size $\{+,-,\times\}$-circuits? -- has an affirmative answer. Such is, for example, the permanent polynomial PER$=\sum_{h\in S_n}\prod_{i=1}^n x_{i,h(i)}$. 

The problem remains open (for now more than 30 years) even for linear $NC^1$-circuits. These are fanin-$2$ circuits over the basis $\{\oplus,1\}$, and they compute linear transformations $f(x)=Ax$ over $GF(2)$. Easy counting show that almost all matrices $A$ require $\Omega(n^2/\log n)$ gates, in any depth. 

I've realized that the answer to my question is - yes: the VC dimension of degree $\leq d$ polynomials on $n$ variables over any tropical semiring is at most a constant times $n^2\log(n+d)$. This can be shown using Theorem 1 above. See here for details. So, BPP $\subseteq$ P/poly holds also for tropical circuits and, hence, also for "pure" dynamic programming algorithms. 

@Alessandro: I am sorry if I misunderstood your question. But my first impression is that one can transform any depth-d circuit of size $S$ into a depth-d formula (fanout 1) of size about $S^d$: just go layer-by-layer starting from the bottom (next to the inputs) layer, and take multiple copies of the same gate; at each layer the number of gates can increase by at most the factor of $S$. This means that any lower bound $S$ for $AC^0$ formulas implies a lower bound $S^{1/d}$ for $AC^0$ circuits. So, it is hard to expect easier lower bound proofs for $AC^0$ formulas: in the world of $AC^0$, $d$ is a constant. B.t.w. your language $X$ (strings with exactly one $1$) has a trivial DNF (depth-2 formula) with $n$ monomials. 

To see this, let $H_i$ for $i=0,1,\ldots,n$ be a DAG consisting of $n+2$ parallel edges from $u_i$ to $u_{i+1}$. The $j$-th edge for $j\leq n+1$ is labeled by the edge $x_{i,j}$ between $i$ and $j$ in $K_n$. The last edge is unlabeled. Let now $G=H_0\circ H_1\circ\cdots\circ H_n$ be the graph obtained by connecting these graphs sequentially. Let $s=u_0$ and $t=u_{n+1}$. The graph $G$ has only $O(n^2)$ edges. 

I am interested in (the reasons for) the difference between the permanent polynomial PER and the Hamiltonian cycle polynomial HAM: $$ \mbox{PER}_n(x)=\sum_{h}\prod_{i=1}^{n}x_{i,h(i)}\ \ \ \ \mbox{and} \ \ \ \ \mbox{HAM}_n(x)=\sum_{h}\prod_{i=1}^{n}x_{i,h(i)} $$ where the first summation is over all permutations $h:[n]\to[n]$, and the second is only over all cyclic permutations $h:[n]\to[n]$. I am not asking for proofs, just for intuitive reasons. 

Let the ground set consists of all edges of $K_n$. As our family of feasible solutions take the family of all forests in $K_n$. This is a motroid, and its bases are spanning trees. So, the corresponding to this matroid polynomial is a multilinear polynomial $f$ whose monomials correspond to spanning trees. Jerrum and Snir have proved (in Section 4.5) that $f$ requires monotone arithmetic circuits of exponential size. This already implies that every $(\max,+)$ circuit, and hence, also every simple DP algorithm, must use an exponential number of Max and Sum operations to solve the maximum weight spanning tree problem. 

Since the expected weight $\frac{m-1}{2}|A|$ of every subset $A\subseteq E$ depends only on the cardinality of $A$, we have that $\alpha[{\cal F}]\geq r({\cal F})$. We also have that $\alpha_p({\cal F})\geq \alpha_1({\cal F}) = r({\cal F})$. But, for some families ${\cal F}$, greedy can have much better "amortized" behavior. 

We have combinatorial measures for general (non-linear) $NC^1$-circuits, as well For a bipartite $n\times n$ graph $G$, let $t(G)$ be the smallest number $t$ such that $G$ can be written as an intersection of $t$ bipartite graphs, each being a union of at most $t$ complete bipartite graphs. To beat the general log-depth circuits, it would be enough to find a sequence of graphs with 

So, were HAM a monotone projection of PER, we would have $2^{n^{\Omega(1)}}$ lower bound also for PER. 

P.S. [added] Majority vote output gates $\mathrm{Maj}$ come naturally in play when derandomizing probabilistic circuits: take many copies, apply Chernoff, and take a majority vote. 

P.P.S. [added 27.05] I would like to slightly "focus" my question. If $T_m(f)$ and $T(f)$ denote, respectively, the tropical circuit complexity of a polynomial $f$ with and without $\mathrm{Maj}$ output gate, then my question turns into "can the gap $T(f)/T_m(f)$ be superpolynomial?". A partial answer is NO if the gap $T(f)/B(f)$ is small, where $B(f)$ denotes the monotone boolean circuit complexity of the boolean version of the polynomial $f$. 

As Igor Sergeev told me, an affirmative answer to Question 1 follows also by counting: Knuth has shown that there $2^{2^n/n^{3/2}}$ matroids on $n$ points. 

Impagliazzo, Pitassi and Urquhart (1994) observed the following: If all coefficients used in the cutting plane proofs are polynomial in the number of variables, and if this game needs $t$ bits of communication, then every tree-like proof of the unsatisfiability of the given system must produce $\exp(t/\log n)$ inequalities. They then used known lower bounds on communication complexity to give an explicit system requiring proofs of exponential size. The disadvantage of this result is that the system is very artificial, it corresponds to no "real" optimization problem. It is therefore an interesting question to come up with a lower bound for a "real" optimization problems. 

As a possible candidate, one could take the PATH polynomial whose variables correspond to edges of the complete graph $K_n$ on $\{1,\ldots,n\}$, and each monomial corresponds to a simple path from node $1$ to node $n$ in $K_n$. This polynomial can be decided by a circuit of size $O(n^3)$ implementing, say, the Bellman-Ford dynamic programming algorithm, and it is relatively easy to show that every $\{+,\times\}$-circuit computing PATH must have size $2^{\Omega(n)}$. On the other hand, every circuit counting PATH solves the $\#$PATH problem, i.e. counts the number of $1$-to-$n$ paths in the specified by the corresponding $0$-$1$ input subgraph of $K_n$. This is a so-called $\#$P-complete problem. So, we all "believe" that PATH cannot have any counting $\{+,\times\}$-circuits of polynomial size. The "only" problem is to prove this ... 

Over semirings, where $\mathrm{Maj}$ is easily computable (like over the boolean semiring), the answer is clear NO. Sometimes, even when $\mathrm{Maj}$ itself is not computable - like in arithmetic circuits - the answer is NO: one of the gates entering the output $\mathrm{Maj}$ gate must compute the target polynomial correctly on a large fraction of inputs. And Zarankiewicz-type arguments imply that if the values of two polynomials coincide on a "large" number of inputs, then they must coincide on all inputs: if a polynomial $f$ vanishes on a rectangle $S_1\times\cdots\times S_n$ with all $|S_i|$ larger than the degree, then $f$ is a zero polynomial. Zarankiewicz-type arguments ensure the presence of such large rectangles.