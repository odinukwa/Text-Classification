If there isn't an 'in your face' requirement to repair the infrastructure that's in the building right now, then you're going to be fighting an uphill battle. Most managers (and users, for that matter) are willing to accept sub-par service as long as it works; mainly because they want their IT gear to last until it dies. If a degraded level of service has been provided for long enough, people will not communicate issues anymore. They'll simply accept it as what it is, a crummy system, then complain to their coworkers and think it's your doing (you personally). I can't tell you how many times I've run across a user that's had a different issue and, upon further diagnosis, found out there was bad wiring or auto negotiation was turned off that resulted in pathetically slow speeds. My response is always to the flavor of "I can't believe you never said anything...". In essence, if your managers don't see a legitimate need for better resources, they'll accept the heartache is business-as-usual and tell everyone to suck it up and move on. As a network engineer, a big part of your job is going to be communicating those requirements to your higher-management that doesn't entirely understand what you need or why you need it. You can interpret that as 'salesman'. A method that's always worked for me is giving them cold, hard facts, but do not forget the sugar coating... Correlate things that actually matter to them. A few off the top of my head: 

Depending on when the commands were typed in, this sounds like the expected behaviour. If were plugged into , and moved to the trunk state, then DTP on would have negotiated trunk mode. This is how DTP normally negotiates the interface mode: 

This sounds like a case study for sFlow. The best way for you to figure out what's going wrong is to figure out who's talking to who - and how much. Just spin up your favorite sFlow analyzer and start tracking the bandwidth consumption of individual users. Here's an example sFlow configuration pulled from sflow.com that you'd put on your WAN interface: 

can be all sorts of messed up, and will be none the wiser because won't forward broadcast packets on to anyone. 

This will be totally vendor dependent. As an example, Juniper devices have a range between 0 to 3600 seconds. 0 seconds being the default (instant preemption). 3600 seconds, or 1 hour, being the extreme. 

You need to be looking under the stanza. That gives you all the inner-workings of the devices plugged into the chassis, including VC members. On an MX platform, this is along the lines of what you'd expect: 

If you want to load balance across these links with STP, you would also need to add the following configurations: 

Further reading In order to make this a viable setup, you need a sender and receiver. The sender effectively establishes all of the prameters the tcp session will be benchmarked on. Transmit 

Keep in mind that every switch running VTP (client or server) will prune if told to do so. This is not default behaviour, VTP comes disabled. Otherwise, scenarios like below would not function as expected. 

That’s because VTP functions on a client/server model, not a distributed model. The server effectively controls everything that happens inside the VTP domain. When a switches directly connected port/downstream port, it sends a VTP Join message indicating participation in that VLAN. If you wanted something similar to a distributed model that supports VLAN pruning across links, you would be looking at something similar to GVRP, which is pretty difficult to come by in the Cisco world these days (aside from CatOS). I would assume this is because they’re trying to push VTP a lot harder. 

If you are installing the driver, and connecting to local printer directly, but other users are connecting to a print cue located on a server, it is possible that the QOS is causing you issues. When you print to directly to a printer, the amount of data is quite large. With most drivers, a print job gets passed as a TIFF image. So, assuming the wireless network is a different subnet/vlan as the one containing the printer...and that the printer and server/print cue are on the same vlan/subnet...and also that you are connected directly to the printer (safe assumption, since you can see printer stats), your large print job (tiff image) may be captured by QOS, while everyone else's job is passing from the server to the printer without ever crossing an L3 boundary, and being subjected to the QOS policy. Hope that makes sense. 

If I may offer one more piece of information, which might help. To understand VLAN's, you must also understand two key concepts. -Subnetting - Assuming you want the various devices to be able to talk to one another (servers and clients, for example) each VLAN must be assigned an IP subnet. This is the SVI mentioned above. That enables you to begin routing between the vlans. -Routing - Once you have each VLAN created, a subnet assigned to the clients on each VLAN, and an SVI created for each VLAN, you will need to enable routing. Routing can be a very simple setup, with a static default route to the internet, and EIGRP or OSPF network statements for each of the subnets. Once you see how it all comes together, it is actually quite elegant. 

A couple of thoughts. I can go into more detail on any of these if you need me to. -When it comes to wireless, there are two ways to plan. One is for coverage, the other is for capacity. Based on the number of devices(capacity) and space(coverage) that you describe, I believe that capacity is going to the be the bigger deciding factor. Remember that wireless is like using an old-school hub. Everyone hears everything. That also means that only one client can talk to one AP at a time. This isn't a limitation of a device (Cisco vs. Netgear) this is a limitation of the physical medium (airspace). Since you are programming for mobile devices, which will only support a single stream, you should plan on 1 dual band AP per 50 devices. If you choose to only support 2.4 or 5Ghz (airspace issues with neighbor offices for instance), then plan on 1 AP per 30 devices. -The Cisco 887 only has a 100Mb connection. If you keep with your current plan, and do all of your L3 routing on the 887, it will become a bottleneck for anything that routes between your internal networks. Examples include: Local replication for Dropbox, Wireless synching between i-devices and itunes, Copying files from machine A to B, Time machine backups, etc. etc. This bottleneck occurs because anytime data must flow from one network to another (wlan to lan) it will need to be routed, and must go out, and then back in, from the same 100Mb interface. This might not be a big deal, but I wanted to mention it, just-in-case. -The Wireless controllers are a good idea. The initial setup takes a little while longer, but from that point on, it becomes super easy to deploy more AP's or WLAN's. I don't know anything about them from personal experience, but I have heard good things about the Meraki AP's. It is an cloud-based controller solution, which Cisco recently bought. EDIT for clarity: I don't know anything about the Meraki solution. I know A LOT about the Cisco Wireless Controllers :-). -How are you powering your AP's? Do you plan on using VOIP in the future? Consider both of these when considering whether or not to order a switch with PoE. -Also, just noticed, you are planning on putting a firewall in-line after the router. That further complicates your plan to route between subnets there. I would plan on purchasing an L3 switch. That would simplify the deployment considerably. Hope this helps. Good luck. 

I suppose this is theoretically possible, although what you are trying to accomplish is exactly what VLAN separation sets out to resolve, layer 2 separation. 

After dealing with this for some time, we finally decided to investigate. I'm seeing this entry before the system stops accepting requests: 

Edit Let me break down how this works a little better. Your goal is to tunnel the 172.31.x.x networks through a tunnel you’ve established between RA and RB. RA has no knowledge of ; hence, you don’t see it in the RIB. RB has no knowledge of ; which you can also see in his RIB. If RA attempts to contact anything in 172.31.1.0/24, the packet will be sent to its default router (which we’ll assume is ). Once the cloud gets that address, he will drop it since he doesn’t have any knowledge of any networks except and . A GRE tunnel needs a valid destination to build a tunnel and this tunnel will traverse the WAN. Your RA tunnel will be from Source to destination with a virtual IP of . Your RB will have source and destination with a virtual IP of . You can then set a default route in RA that effective says . You can then set a default route in RB that effective says . These default routes will force their respective traffic through the GRE tunnel to reach their end-points. 

Now, in the second instance, significantly more BPDUs are sent and loop prevention port roles need to be turned on to make sure loops don't occur. While I can agree with Daniel Dib, most of this does happen in milliseconds, but it really all depends on your network architecture. If you have a gigantic switched network with 100 nodes, it might take a little while (i.e. greater than a few seconds). 

Although this is on an EX4550, the transceivers marked would show up the same on an MX platform. It's not a malfunction, the system just doesn't recognize the device signatures. If you want additional information on them, such as the vendor, fiber wavelength, or fiber type, use the . 

There doesn’t seem to be anything out of the ordinary with this system versus the rest of our devices. Below is our configuration. 2 

From the configuration statements above (taking into account the and values) you would achieve a 1 second failover time. Depending on your environment and how critical this vlan is, you may want less or more. 

You can setup a sort of IP SLA that can keep your system running how it is while still allowing for failover in case your goes down. An example of this type of configuration for R4 would be something like this. 

Adding to what YLearn already said, is how you can quickly retrieve that information from the cli to see if your hardware supports it. A non-PoE supported device would display the output below if it were available. 

In theory, you'll want to migrate the clients to transparent before you remove the server from the equation. This makes absolute certain that things will continue to function without any gotchas. In practice, it doesn't matter. A server will just stop sending summary advertisements to the VTP domain and the clients will continue using the last seen revision. We just went through this on one of our tiny, alternate networks. Someone completely wiped out the VTP server and it went unnoticed for months before anyone looked. 

You are correct this is a VoIP configuration. This is part of the configuration for CVP call center survivability. If this site lost it's connection to the Internet or WAN (however its connecting back to your Data Center), the 2800 would take over call processing for the IP phones. It is used in combination with the standard SRST functionality on Cisco's ISR and ISR G2 platforms. SRST keeps the phone operative and receiving/placing calls and CVP Survivability keeps your call center functioning. You can read more on CVP survivability here on the Cisco Support Forums. It says, in part: 

The router sends the initial request, and simply waits for a well-formed answer from the Radius/TACACS server. There are no active "keepalive" style health checks; the router doesn't ping the server and look at response-times or anything like that. What the router does next, depends on your configured criteria. In general, once the timeout expires (default is 5 seconds), or if a malformed response is received, the router will try the secondary server or fail down to the next configured authentication method. Radius, unlike TACACS, can also mark a server as "dead" and cease to try authentications against it for a preconfigured amount of time. See the following settings to tweak this behavior: Timeout Configuration: 

Your NAT Exemptions on the Spokes are messed up. First, you have the Spoke 2 address as the source on Spoke 1, and you're missing Spoke 2 altogether: 

Depending on the actual "Metro Ethernet" service that your carrier is providing, you have several possible solutions. I'll address what I see as the most likely scenario, and some of the solutions in that scenario. Your carrier is probably using Q-in-Q tagging, and your local VLANs are irrelevant. (See the Wikipedia page on 802.1ad for info on Q-in-Q, or this Cisco config guide on VLAN tunneling.) This situation, where the carrier is using Q-in-Q, is usually the case in my experience. They will accept whatever VLAN's you send, and then apply Q-in-Q tagging and send the traffic across their network. So inside the carrier network, your traffic destined towards Site-A could be tagged with VLAN 10. When the frame arrives at the PE equipment, it will have that additional VLAN tag stripped, and be forwarded onto your equipment with the original VLAN tagging intact. It is possible that the carrier is utilizing your applied VLAN tags to direct the traffic. (i.e. VLAN 10 for Site-A and VLAN 20 for Site-B.) 

As you can see, each one of the three RFC1918 ranges cuts out a private block from one of the old "classful" network ranges. (Class A, Class B, and Class C in this case.) To quote Dumbledore, "From this point forth, we shall be leaving the firm foundation of fact and journeying together through the murky marshes of memory into thickets of wildest guesswork." The IANA had been assigning addresses for many years before the inception of RFC 1918 (February 1996). (Actually the private ranges were first put forth in RFC 1597 in March 1994.) For example, if you conduct a lookup, you can see that Level 3 had this block assigned on 1992-12-01. Therefore it can be assumed that the authors of RFC1918 had to work with the IANA/Jon Postel to find available ranges, giving us the private ranges listed above. But again, unless someone directly involved with the process* speaks up, this may remain guesswork. *Or just someone with better Google-foo than myself. I was unable to find a good primary source for this information.