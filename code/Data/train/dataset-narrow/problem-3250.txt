you should to your HDD before issuing this command or specify full path along with . You should get something about 20-30 MB/s for your HDD. This would tell you if the bottleneck is the HDD or your network setup. 

you're doing everything right, CEC negotiations happen once during the boot process, and this is the only time your TV could be properly detected. this is perfectly normal and most Pi's work the same way. you may get some success trying to detect your TV later using "cec-client", however I did not try this myself and could not confirm nor deny the possibility. 

The shift register is such a funny thing, that will push "0" or "1" down the chain until the end, so once you reset Arduino_1, there's nothing you can do to avoid resetting Arduino_2 and the others on the next shift register clock. You definitely need a better HW design. 

2-3MB/s is kind of slow, but it's very unlikely the HDD is the problem. to check the disk interface speed, you may use and see the resulting write speed. on my raspi i've got: 

Your Python loop will always return true, and you never search for the string in your csv file. Python: 

Im afraid not. But you can use Chromium, which google chrome is derived. Having said that they are not the same thing. Also the Chromium browser in the rpi repository has been tweaked for the pi, to make it run as good as it can. 

You need to install Bonjour Service on windows machines. Bonjour is running on macs by default as its used by iTunes ect Soon as you install you should be able to connect 

Turn on / off via Cronjob If you want to turn the hdmi off and on at certain times you can do it via crontab. 

Make sure that is the IP address for your Raspberry pi, can you ping 192.168.1.100. Have you created a file called "ssh" without extension in /boot of the SD-Card? 

To allow the connection to complete you need to also do the following step to allow a remote device to actually connect with the pairing key 1234 

I think that you are having timeout issues. Here is an example of 1 second timeout, which is working fine. 

you should set the baud rate in your serial.Serial(...) command, otherwise the camera might not recognize whatever command you're sending there. something along the lines of: 

the easiest way is to buy several SD cards and install the OS of your choice on every card, then you may switch between OSes as simple as removing one SD card and putting in another. even better solution might be getting several Pis and use one as Onecloud server, another as media player, and third as whatever you like at the moment. I have currently three of them running, beats switching SD cards hands down. 

your display is connected to your RaspberryPi, right? so you cannot be in another room or in a totally different place, as long as you wish to see the screen. then, your best bet would be a wireless keyboard (and, probably a mouse combo), connected directly to Pi, you don't need any network or computer, making your setup cheaper and easier to use. if you don't need wireless, i think any cheap usb keyboard will do the trick as well. 

You could use MQTT and use publisher(server) and subscribers(clients). core-electronics.com.au have a very good tutorial and video there also. On the publisher you could have a Realtime clock and periodically send the time out, then a "play video" command to start at a given time ie 2 seconds away to make sure they all received the command before video starts. 

Current can not forced, it is drawn by the circuitry. If the Rpi Zero is rated for 150mA, and you have a power supply that is rated 2000mA all that will happen is that the Rpi will only draw 150mA from the supply. Voltage on the other hand will cause damage, and you can force too much through the circuitry by using a power supply that has voltage higher than specified required input which in this case is 5.1v. 

First thing to check is if there is enough power to start the USB HDD, as I believe you can only pull out 250mA through the USB on the RPi3 and this is OK for some HDD but not others. If your HDD is powered successfully then burn a fresh image to it using Win32DiskImager, to see if it is your image causing problems . 

you cannot, unless you're ready to solder some external ADC converters to I2C or serial and write scripts that will read the data. there are NO embedded ADC converters on Raspberry Pi. 

Why do you need GPS and RTC? Last time I checked, GPS provides very precise time, so you may easily ditch RTC from your setup. And everything falls right in place, LCD connected through GPIO pins and GPS to the USB port. 

external address of your pi is the same as the external address of your router. please use your browser to access whatismyip.com to find out the exact value. btw, other people would not be able to access your pi, unless you configure your router to forward requests to the port 80 to your pi address. 

forget about the battery packs, you need just simple 5V 2-3A power adapter plug to power your strip. actually, if I were you, I'd separate the power supplies, and use traditional RasPi power source to power the board, then another power supply just to power the LED strip, this way: 

You could use the ADC built into most* Arduino and connect to it using you RPi via a python script as depicted in this tutorial 

Yes please avoid messing with mains voltage especially if you are not confident. That said there are still nerdy ways to accomplish this. The Kankun Smart Wifi Plug Socket is a wifi access point that actually runs a ssh server so you could control it that way. There may be other plugs but none that I am aware runs like this as most seem to require "hubs" 

You can do it all in one PHP page. I personally would not I would have the processing done in a separate PHP file, but this will get you started 

You can make it discoverable using subprocess in Python without using pybluez. A bluetooth command list is found here 

I use a simple PHP script to call a bash script to grab a picture and serve it back in PHP. I can call this bash script to grab an image any time I want one or auto refresh, send to mysql, convert to video, ect. install a web server 

you ought to fix your network setup or use (240MB) image that contains everything you need without network access. 

you may find the path to using command and path to your data file using your linux command line experience. 

When you connect things in parallel, the total amount of current would be the same, limited by the current limiting resistor, therefore one LED will shine quite bright, 5 LEDs would be not so bright and 10+ LEDs will be hard to notice if these are ON or OFF. If you plan to connect more than 2 LEDs, use a transistor, as noticed in his comment before. 

the partition contains some stuff that gets the linux running (it's much easier to read FAT than correctly process ext3/ext4 partitions in the boot loader), the rest is ext4 -- that's where your Raspbian and your files live. 

"with" will automatically close the file, so you don't have to worry about all this "you must restart after rotating the log" nonsense. also, you don't really need to store temperature and humidity every 10 seconds, unless in a very harsh environment. it might be a good idea to write three separate log files and store the values only when changed -- this might considerably reduce your file size and wear of your SD card. 

Setting up a Raspberry Pi as a NAS would be much easier, but.. You could install Deluged and set it to move completed downloads the set that runs a bash script to check the folder for files then uses scp (secure copy) and send it to a ftp server running on your windows box Install Deluge 

Then browse to $URL$ The default password is deluge Then click preferences -> Downloads -> Tick Move Completed to -> MyFolder 

Not good practice, you should write them all together as functions ect but if your other scripts have not functions ect...then.. 

. But I think your problem is you are either: 1. Running from /home/pi/ which is not a node app root directory, so cd into a node app then run 

or you could use the Open Source Tool I have developed and host on GitHub Raspberry-Pi-Zero-Wifi-Setup-Tool 

You can buy a multi CSI adapter to use more than 1 the official camera like this multi-camera-adapter which there are a few different makers / designs which allow multiple CSI inputs into a single port on the Raspberry Pi. Another approach is to use multiple USB cameras, which would probably be cheaper.