There are probably many ways of doing this, the most obvious one that comes up is using one 12V battery/power supply, and wiring its output to your appliance using some sort of relay switch modules. Ideally you would want to use a pair of 3-ways switches, which can be controlled digitally. I'm not sure what's avaialble on the market, but ideally that's what you'd want to use. What i know for sure that's available and cheap and would work for you is simple on/off realy switch modules. You would control the switching action of the normally open relays with the rpi GPIOs so that, if one pair of relays is switched, 12V is supplied to your appliance. And another pair of relays would connect -12V to the appliance. And you should probably also include some sort of protection from short ciruciting your power supply, maybe some normally closed relays, which open with the same signal as the normally open ones. Something like this picture would work. 

Anytime you run a function to move the slider to a certain position, you should use and update the current_pos variable. You can see that this variable is initialized with a value of 0, since i'm assuming that at the start of the program, the slider will be at the start of the reel. So for example you could create just one function to perform the movements as required, in relation to the current position of the slider. 

The custom effects are part of the closed-source GPU firmware which only Raspberry Pi and Broadcom engineers can change. You can add further effects in post-processing (on the CPU) though. 

The foundation kernel has been ported by third parties to 64 Bit , but only by breaking HW acceleration, camera support , WiFi and Bluetooth. Whether Canonical is interested to use this completely custom downstream kernel is an question only they themselves can answer. Don't forget that most Raspberry Ubuntu images don't seem to be maintained and supported by Canonical at all , but by community efforts. Of course most download pages are not thinking about AArch64 when they write "64-bit" , even Canonicals main "64-bit" download does not work on the Pi directly. 

There is the 96Boards initiative , which might be what you are looking for. Sadly Raspbberry Pi does not participate in it. $URL$ : 

If you are engaging in commercial redistribution of GPLv2-licensed binaries , you must offer/mirror the sources to your customers and third parties yourself. You cannot point everyone at raspbian.org / raspberrypi.org . This is because the GPLv2 was written before the WWW was established as fast and common distribution mechanism. Furthermore , as you correctly stated , you have to include " [..] the scripts used to control compilation and installation of the executable [..] " as long they were part of a GPLv2-licensed project. The easiest way to satisfy those requirements is to use apt-get source on all installed packages , so they reside on the same medium as the binaries. Sources: 

where 2243 is just an example for a port to use. Server_username username you would use to login into the server. So once that's set up you would simply log in to to the server via ssh and from there ssh into your pi with something like: 

Hence if you pass in any of the position variables stated above you would easily evluate the number of steps required to reach the wanted position and also update the current postion of the slider once the funtion has been called. 

You could apply this general logic to your specific problem, to achieve what you were looking for. Hope this helps. 

I have a Raspberry pi 3b, running on "Raspbian GNU/Linux 8 (jessie)" that is currently using a 3G USB dongle to gain internet connectivity. The dongle is a vodafone k5160 set up as an ethernet connection (eth1). My problem is that whenever i try to connect my rpi to a router on another network using the ethernet port, eth0, it fails to obtain an ip address. It simply gets assigned a random 169.254 local link address, and from reaserching i see that this means it faild to obtain an ip address from the DHCP server. A bit more details on my set up: 

The target is not people looking for a cheap Android box. It is for developers and OEMs which want to create medium-to-high powered IoT (Internet of Things) devices. 

Silverlight does not run the RaspberryPi , there is nothing you can do about it. The Moonlight project (for Silverlight on Linux) never supported DRM and has no hardware-acceleration either. Both technologies have been abandoned by their authors too. Furthermore no Android builds are hardware-accelerated , stable or even Google "certified" which might be needed for DRM support. 

Turn the Zeros into USB "Ethernet" devices (a matter of loading some kernel modules on Raspbian) and use Ethernet emulation to communicate with them. You can now use SSH , MQTT , HTTP/REST or raw sockets to "talk" with them easily - and they can answer back. $URL$ 

Since consumer SD cards use top-secret Flash Translation Layers and actually have more capacity than advertised to remap bad blocks or for general wear leveling this is impossible via shred. The writes to a file might not end up at the same place where it currently exists on the disk at all. You have four choices : 

If those do not meet your needs , you could write your own in C++ with Qt5. Qt5 is one of the few frameworks which is properly hardware accelerated , which becomes most important when using the Pi Zero or the first model B. JavaFX and Java3D are lacking in this regard. 

If you are using a USB Wireless Adapter, it more than likely isn't using it's required drivers that are enabled when completely booted. If you have a different adapter, try using it, otherwise it probably won't work. 

Updating Raspbian Since you've already tried doing a reinstallation of Raspbian, you may not be on the latest version of your OS, causing your errors. You can update by executing the following through LXTerminal: 

You've probably have it set to a different country than you are used to. Execute the following in the command line: 

When shown with a screen, choose Option 1, to expand your filesystem. Press the enter key when highlighting over the option. This should make you be able to use more space on your Pi. I don't know what to do about your distance situation but this is what I can suggest for you freeing up space. 

You haven't expanded your filesystem. Execute the command shown below when signed into the user 'pi': 

You probably can. According to this forum post on Raspberry Pi, many have done this without an issue. Many, have sent boards with them through the air with little-to-no TSA people interrupting them. I would personally recommend you get a case for it, whether it be a paper fold-out, or a plastic one which I use here. EDIT: This is all an opinion, I can't validate that every time they won't get on to you, but from what others have stated online, whether it be true or not, you shouldn't have a big ordeal when flying with a Pi. As @Jacobm001 mentioned above in the comment, this isn't a good question for this site, and it can't have a solid answer. 

I received a couple of useful answers prior to my edit to the question. Here is the output of suggested commands to try: 

The reason why i'm including normally closed switches is to ensure that you can't short circuit the power supply by a mistake in your GPIO controlling software. 

Okay so, i've only just realized i should have asked what model of pi you are using. I've already drawn this out with reference to rpi2/rpi3 pins layout, however if you are using a different model it should be pretty easy for you to change the connections accordingly. For reference, here is the pin layout for this model $URL$ And here is how you should connect your dry contact to the pi: $URL$ Notice that in this example i'm using GPIO 18, but you could use any GPIO, and set it up as an input programmatically. Also you should set this GPIO with an initial internal pull-down resistor, so that it's not floating when the dry contact is open. You can do this pretty easily programmatically, let me know if you need any help on this too. So to wrap it up, when the dry switch is open you should see a LOW input at the GPIO, and when is closed, you should see 3.3V, hence HIGH at the GPIO. 

After four years , Android for any Raspberry Pi model is still in beta state. You can follow the progress of the community porting efforts here. After 2012 , the foundation took the stance that they see little benefit in supporting Android , as they now percieve it as mainly encouraging consumption instead of creation. 

Only batteries supporting the Smart Battery Standard over SMBus/I2C can be used with Raspbians Battery Monitor applet. The only battery supporting this (AFAIK) is built into the pi-top Laptop. No Raspberry Pi can correctly measure its own input voltage without additional components. 

Use the program Etcher with a so-called image file. All your settings , installed programs and documents will be saved if you do a proper shutdown from the "Start" menu (it is called something else on Raspbian , but you get the idea). Get image files for "Raspbian Stretch Desktop ZIP" here . I strongly recommend Raspbian , it is the best supported distro and the Model 1 A can not run Ubuntu anyway. 

The Raspberry Pi cannot turn itself off properly. Thats why after a Raspbian shutdown the Pi will still consume an non-negligble amount of current (up to 30 mA). This also means that the 5V rail is indeed always on. 

-wait for reboot- This should update your Raspberry Pi to the latest edition that the Pi Foundation provides. Installing a New Browser You can also try installing the browser singularly by executing the following: 

Your power supply isn't supplying the correct voltage. See this link. You can override this though by editing your config.txt file if you understand the risks: 

If you ever have a red square at the top of your screen, this indicates that your CPU is too hot. The rainbow square indicates that you aren't getting enough voltage into the Raspberry Pi. 

wait for reboot This should grab the latest firmware and updates to make your Pi be able to successfully find networks and connect to them. I might also suggest getting . This is a Wireless and Wired connection manager. You can get this GUI program by executing the following: 

Then, find where it says and change the gb (or anything else) to the two letter code for your country. If you are from the US, it should read like so: 

This should remount the device and make it read/write-able (). Also, as you stated in the comments above, if it does have a virus on it, be sure to format it to prevent the spread of it getting to your Raspberry Pi or other devices.