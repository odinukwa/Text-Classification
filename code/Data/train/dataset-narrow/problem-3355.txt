Is there an error in my /etc/modules file? How can I debug this, and/or how does one correctly load modules on system startup? By the way: I can modprobe those above lines just fine, which enables the LCD and I see a nice blinking cursor on that display (since there is not getty running). 

This is for my Linux PC, but the Raspberry Pi will show something similar. Then tell you TTS tool to output to stdout, which is easy for . Pipe the output through aplay, with the specified device: 

The way to go would probably to use Qt embedded. It is small enough to run reasonably well on the Pi, I would guess. It can use the Linux framebuffer directly, without X11. If the kernel has acceleration in the framebuffer, it will use that, too. But this may not be the case on the Pi right now. The Qt embedded can also be built with QtWebKit support. There are some Qt blog posts about deploying Qt embedded on the Pi. You should begin there. There's also cross compilation instructions on the same blog to get you started. 

Where has to be replaced by the MIDI sequencer that you see after running . On the Python side, I cannot give you much advice, except reading the docs for the package. There you also have to connect to the ALSA sequencer device from above and send your MIDI events to that port. 

If you installed Raspbian via NOOBs you can access the NOOBs menue by holding the shift-key during start-up. In the menue, click on the -button in the top of the window. Select the -tab and add an separated by a space to the end of the line. After exiting NOOBs, your Raspberry should boot into an emergency-terminal from which you'd be able to change any script. 

If I understand it correctly, your PWM-frequency is 100Hz and your duty cycle is 20%. This would mean, that your LED is on for 1s/100*0.2 = 2ms and off for about 1s/100*0.8 = 8ms (and so on). Are you sure you can see that? Maybe you should start with 

You need to specify a display to be used. When you issue a command via SSH, Raspbian will try to execute it and return any output via SSH as well. To use the remote (from your perspective) screen connected via HDMI, type in first. 

I was trying to set up a MCP79410 real time clock (RTC) and had to search quite a bit until I found a way to integrate the RTC's time signal into my Raspbian Jessie: Apparently, even there, some things changed over the last updates of Raspbian and there does not seem to be a huge crowd using this particular chip (as opposed to, e.g. the DS1307). I specifically wanted to connect a MCP79410 already hooked up to an ABS07 quartz crystal and a HU2032-LF battery to my Raspbbery Pi Model 3B running Raspbian Jessie 4.4.38-V7+ #938. The implementation should be as easy as possible and simply provide me with a correct system time even if the RPi is disconnected from the internet. 

I forgot to check, but it seems there is actually a package for gnuradio in Raspbian wheezy: $URL$ So you should be able to install the package by running: 

Instead of , you should put your PCM device there. You can list all devices by typing . Then pick your headset as the slave device. Add the new device as your default device in : 

This should switch to french azerty layout. You can put this command into your if it works. There are also many other keyboard layouts available (like for Belgian azerty). Edit: If you want to make this permanent, you need to make sure the still starts the default WM and desktop. So put these lines into your , if it does not exist yet: 

You are looking for the system tray protocol of FreeDesktop (see $URL$ You don't need to code for this protocol for yourself, toolkits like Qt or GTK will already provide simple APIs for that. A quick googling shows this little Python and GTK based project: $URL$ The important piece seems to be the gtk.statusIcon() method. Another quick search comes up with the docs for this function: $URL$ And it seems to do exactly what you want: to show an icon in the system tray. 

The Pi reboots when you connect the WiFi dongle. This may be due to an insufficient power supply or some faulty driver (I assume the former). The Ethernet connection gets disabled when the WiFi dongle is attached and activated. However, I don't think this is the case with Raspbian. 

As I pointed out in the comments, inserting an empty SD card into a Raspberry Pi and trying to access that SD card via USB or LAN from a different computer is not going to work. The Raspberry Pi is a computer of its own and you wouldn't be able to access a hard drive in a regular computer with no operating system either. What you'll have to do is set up the SD card befort inserting it into a Raspberry Pi. There are several ways of setting up a Raspberry Pi SD card, but all of them start with inserting the SD card into a computer using a SD card reader (many notebooks have them built in). That way, you'll be able to access the card like a regular flash drive. Once you have access to the SD card, the easiest way to start is by downloading NOOBS and putting it on your SD card (you can follow this tutorial by the official Raspberry Pi Foundation). Once you have done this, you can insert the SD card into your Raspberry Pi and start it for the first time (if you use NOOBS, you need to attatch a display). To access it remotely (e.g. from a different computer in the same network), you can use SSH (following this tutorial, again provided by the official Raspberry Pi Foundation). 

The PiTFT does not use all GPIO pins, the 40 pin connector is merely for physical stability and ease of use. Some PiTFTs even have another 40 pin GPIO connector in order to easily allow for more GPIO peripherals. You might want to get one of those. Using DSI instead of the GPIO would be hard, as you would have to write your own drivers (and might need custom made driver boards as well). The Raspberry Pi Foundation allowed some insight on these issues when they introduced their 7" display. 

I want to set up a RasPi 3 for games with RetroPie. I have a WiFi and a Bluetooth dongle (BT 4.0) and now would like to buy one or two BT gamepads. Which are useful and/or compatible and of good quality for use with the RetroPie system? 

My Pi2 is not booting anymore after upgrade to Jessie (using the standard apt-get route). During boot I get a bunch of messages, the first one is the "A start job is running for dev-mmcpblk01p1.device", which takes about 90 seconds. Then I get messages like 

For to work, you need to either have avahi running, so that the name is resolved via mDNS, or your router must have appropriate host entries and a default local domain which is searched. The avahi approach is probably the least trouble, and is also needed if you want to use shairport or other zeroconf services. 

However, when you have one of those screens attached, you won't be able to output to your TV as well. You could use one of the small touch screens as an input device, and output to your TV via HDMI. There are several options for small Pi touch screens, for example: 

You can use to resolve IP addresses (or hostnames) to MAC addresses. You need a little bit more scripting (parse the output of or use and ), but it should work on almost any Linux machine. 

I had the same problem after I messed up my .xsession-script. Rebooting wouldn't help and username as well as password were correct. However, you can still access your Pi using SSH (e.g. using Putty on a Windows machine or on Linux/Mac OS X) and then retrace the steps that created that mess in the first place (most likely editing or in a way, that the command to be executed did not work or finished after a few seconds or is executed in the background). 

In order to use the newly established connection to provide one's RPi with a time signal, one needs to comment out the lines 

This means: At 0x57 and 0x6f, the MCP79410 is listening for I2C communication. 0x57 leads to the EEPROM, a status register and a unique ID register whereas 0x6f is the address that leads to the RTC itself. In order to establish a connection, the line should be added to and the line to . After a reboot, the -command from above should return 

Well, I had the same problem and had to find out that this question is a rather hard one. This blog entry introducing the official 7" RPi display explains some of the most important keywords involved (HDMI, DPI DSI, DBI). If your display needs to be a touch screen, than the first important aspect is, that (from my research) only displays connected via the DSI-port (J4) or GPIO will not need an additional data connection for relaying the touch input. If your display is connected via HDMI, then an additional connection (usually via USB) is needed (and will have to access the USB ports from outside if you do not want to solder around - this might conflict with your casing). You should be able to get this information easily. The next important aspect is, that displays using the GPIO ports usually need special drivers (either to be installed on a standard raspbian or delivered with a non-standard raspbian provided by the manufacturer of said display). This complicated things enormously, as those drivers might be documented badly or outdate fast - even the next update of your OS might render them useless - not to speak of difficulties using OSes that there is no driver for. You should be able to find the drivers and some customer feedback online. If you can't find the (correct) drivers or some support easily, then you will most likely have troubles using the displays once you bought them. Furthermore, displays using the GPIO ports usually need to provide an additional GPIO breakout in order for you to be able to use some of the GPIO ports for something else. This information should be obtainable by looking at pictures of the displays (is there a GPIO "outlet" somewhere on the screens backside?). TFT, LCD (or maybe even LED, oLED) are different technologies for displaying stuff. Although they determine the optical quality and power consumption, I personally would not worry about those too much. More important - at least in my opinion - is the touch technology, meaning resistive or capacitive. The former should be used with a stylus and usually can't take gestures ("multi-touch"), the latter is what modern smart phones use. And lastly, regarding compatibility with RPi3 (as opposed to RPi B+ for example), DSI and HDMI should always be fine and regarding GPIO I would go with the manufacturers information (as they are the ones, who provide the firmware/drivers). Hardwarewise, there shouldn't be a problem. To become a little bit more specific, the only DSI screen I found, was the official 7" one. It will work without any alteration to Raspbian (I don't know about other OSes). There are quite a lot of GPIO screens of which I would use the ones by known manufacturers sold through major outlets in order to avoid being stuck with bricks (At my department, we have several displays we can't use anymore, because they are cheap knock-offs whose firmware is nowhere to be found anymore.). And regarding HDMI: As HDMI as well as the touch device (whose information are being transmitted by USB) are standardized, there should not be a problem regarding any of the major OSes. I hope this answers most of question. If not, just clarify your question in the comments. 

I have read that apt might have problems with IPv6, so I did and put in the file. Now I get these error messages: 

There are many more configuration options for WiFi networks. So if it does not work, you may have to read a bit about that. 

A quick search returns a blog entry which details how to make the function keys be the default. There is an option called fnmode in the Apple HID driver. You can test this by running: 

There is a good summary of the CPU frequency scheduling interface for Linux. In short, you can run the following command to get the current frequency of your CPU: 

I want to turn off auto white balance for my raspivid stream. However, when doing that, the image turns completely black. Why? And how do I fix this? 

The second one always being HDMI. Maybe it is possible to configure this to be the default output device for the system and use device 0 for the shairport. 

I have an old rev.2 (I think) model B. It already has the 000 Fuses, but still only 256 MB of RAM. I wanted to use it for some small projects, but it does not run very stable. I tested TP1 and TP2 and measured only about 4V. This is obviously too low. I was using different power supplies: Apple 5W and 12W adapters, a 1.5A adapter I am using with my RasPi2 and also tried powering via my MacBook Pro's USB port. All the same, I always get around 4V. Could it be some component on the RasPi board? Can I fix this? I have attached a picture of the RasPi in question to aid the discussion. 

No. The Raspberry Pi is powered at 5 V. Using it as a power source for a heating element with 1.8 kW would require it to cope with a current of about 360 A - about the 110-fold of what is advisable and definitely in the range of the impossible. The only way to do this would be to have a power source which is being controlled (but not powered) by the Raspberry Pi. However, I would strongly advise to start with something more simple. 1.8 kW is a lot of power - you could easily burn down your house or inflict serious (possibly lethal) damage on people. On top of that, no insurance would cover that.. 

from . Before the next step, one should make sure, one's system time is accurate (e.g. by comparing it to a radio controlled clock nearby). Now, one sends one's current system time to the RTC using the command 

Well, the way you wrote your script, it does everything sequentially - one line after another. However, there are ways to execute commands parallely using python on a Raspberry Pi, whether it's a zero, a 3b or something else. The keywords you are looking for are threads and sub-processes (both links are for Python2.7, but you'll find the Python3 documentation on the same webpage). Both are fairly similar in implementation and results for most purposes. 

As @dbmitch and @JvO pointed out, your problem is most likely caused by not correctly unmounting the drive. Using the terminal, you would need to enter