I show a reduction from positive partitioned 2-DNF assignment counting (see proof of 5.1 in [$URL$ for details and inspiration of my proof). This problem asks to count the number of valuations that satisfy a formula of the form $\Phi: \bigvee_{(i,j) \in E} X_i Y_j$ with $E \subseteq \mathbb{N}^2$, where the $X_i$ and $Y_j$ are pairwise distinct variables. Represent the positive partitioned 2-DNF as one vertex $x_i$ per variable $X_i$ and one vertex $y_j$ per variable $X_j$ and an edge from $x_i$ to $y_j$ for each $(i, j) \in E$. I add a source vertex $s$ and an edge from $s$ to each $x_i$ with parameter $p=1/2$, so with probability $1/2$ the distance is $1$ and with probability $1/2$ it is $>1$. Likewise I add an edge from each $y_j$ to the target vertex $t$ with the same distribution. Up to the exact value of edges with length $>1$, is a clear probability-preserving bijection between valuations of the $X_i$ and $Y_j$ and possible worlds of this graph: for a valuation $\nu$, the corresponding graph is the one where the probabilistic edge adjacent to $X_i$ has length $1$ iff $\nu(X_i) = 1$ and length $>1$ otherwise, and likewise for the $Y_j$. I set $k=3$. I claim that the probability that there is a path from $s$ to $t$ is the number of valuations that satisfy $\Phi$ divided by $2^N$, where $N$ is the number of variables. Indeed this is clear as a valuation is true iff some adjacent pair of $X_i$ and $Y_j$ is true iff the incident edges to the corresponding $x_i$ and $y_j$ both have length $1$ in the corresponding world. Note that the exact length of any edge of length $>1$ is irrelevant as the structure of the graph ensures it can never be part of a path of length $3$ from $s$ to $t$: there are only edegs from $s$ to the $x_i$, from the $x_i$ to the $y_j$, and from the $y_j$ to $t$. 

An antichain in a DAG $(V, E)$ is a subset $A \subseteq V$ of vertices that are pairwise unreachable, namely, there are no $v \neq v' \in A$ such that $v$ is reachable from $v'$ in $E$. From Dilworth's theorem in partial order theory, it is known that if DAG has no antichain of size $k \in \mathbb{N}$, then it can be decomposed in a union of at most $k-1$ disjoint chains, i.e., directed paths. Now, I am interested in labeled DAGs, i.e., DAGs where each vertex $v$ carries a label $\lambda(v)$ in some fixed finite set $\Sigma$ of labels. Given an antichain $A \subseteq V$, I can define its labeled size as the minimal number of occurrences of the labels of $\Sigma$ in $A$, namely, $\min_{a \in \Sigma} |\{v \in A \mid \lambda(v) = a\}|$. Is there an analogue of Dilworth's theorem in this context? In other words, if I assume that a DAG has no antichain of labeled size $k \in \mathbb{N}$, what can I assume about its structure? Can I decompose it in some special way? I am already puzzled by the case of $\Sigma = \{a, b\}$, but also interested in the case of a general finite label set. To visualize this for $\Sigma = \{a, b\}$, saying that $G$ has no antichain of labeled size $k$ means that there is no antichain containing at least $k$ vertices labeled $a$ and $k$ vertices labeled $b$; there can be arbitrarily large antichains but they have to contain only $a$ elements or only $b$ elements, up to $k-1$ exceptions at most. It seems that disallowing large antichains should enforce that the DAG essentially "alternates" between parts of large width for $a$-labeled vertices, and large width for $b$-labeled vertices, but I have not been able to formalize this intuition. (Of course, a suitable structural characterization must talk about the labels of vertices in addition to the shape of the DAG, because already for $k \geq 1$ and on $\{a, b\}$ the condition is satisfied by completely arbitrary DAGs whenever all vertices carry the same label.) 

After some more literature search, it appears that the complexity of counting the edge covers in a graph was shown to be #P-complete in bordewich2008path, Appendix A.1. (This assumes arbitrary graphs as input, i.e., they cannot enforce any assumptions on the input graph, except that they observe that the minimal degree can be made arbitrarily large). (bordewich2008path further indicates that the result is claimed without proof in bubley1997graph.) This result predates those of Cai, Lu, and Xia referenced as (1) in Tyson Williams' answer, and it does not rely on holographic theory. Specifically, the result relies on the #P-hardness of counting independent sets in 3-regular graphs shown in greenhill2000complexity (improving on the analogous result for graphs of degree at most 4 shown in vadhan1997complexity), and proves the result using the technique of bubley1997graph. A stronger result, namely, the hardness of counting edge covers in a bipartite graph of degree at most four (further imposing that the edge set can be partitioned into four matchings) was studied independently in khanna2011queries, Appendix B.1, again without holographic tools. They rely on the hardness of counting independent sets in 3-regular bipartite graphs (shown in xia2006regular by a refinement of the interpolation method of vadhan1997complexity) and then they apply a refinement of the technique of bordewich2008path. Note that these results do not capture the result in Tyson Williams' answer, where we can additionally assume that the input graphs are planar and 3-regular. References: 

At Barriers I, a panel of leading complexity theorists agreed that Barrington's Theorem was the result that most surprised them. Fortnow explains Barrington's Theorem here: $URL$ 

I've been reading a paper by a mathematical chemist. He proposes some indices to measure the complexity of molecules. From here on in, instead of molecules, think undirected connected graphs: a vertex is an atom, and an edge is a bond between atoms. It's possible to consider colorings of the vertices, to tell the Nitrogens apart from the Carbons, say, but I'll ignore that part for now. The point: the indices he suggests are motivated by heuristics and experimental "looks good so far"-ness. I think there must be some actual theory known about some of these quantities, and I'm hoping to get some pointers here. Fix a graph $G$. Let $C$ and $C'$ be two covers of $G$. Say $C$ and $C'$ are the same kind of cover if they contain the same types of subgraphs in equal numbers. (Note $C$ and $C'$ do not have to be isomorphic.) Now we define the following quantities: $k_S(G) =$ number of kinds of minimal edge clique covers of $G$ $k_T(G) =$ total number of minimal edge clique covers of $G$ $k^{bi}_S(G) =$ same as $k_S(G)$ but for bicliques $k^{bi}_T(G) = $ same as $k_T(G)$ but for bicliques $p_S(G) =$ number of kinds of partitions of the edges of $G$ into cliques $p_T(G) =$ total number of partitions of the edges of the graph into cliques $p^{bi}_S(G), p^{bi}_T(G)$ as above, but with partitions of $G$ into bicliques Empirically, it is apparently easier to calculate the $p$ measures than it is to calculate the $k$ measures. I expect something must be known somewhere about calculating some of these quantities. Can anyone provide algorithms, computational hardness, etc.? Thanks. 

I am most interested in how these failures relate to consensus and other distributed agreement problems. Thank you. 

What most intrigues me is the ability to apply the theory of computer science to other disciplines, especially biology and cell biology. If this notion intrigues you also, I'd suggest you take a look at the following: an essay by Jeannette Wing about the importance of Computational Thinking; and an NSF report about applying the Algorithmic Lens to other scientific disciplines. 

Yes, there are several papers on this topic, and related ones, in the context of ant colony optimization algorithms for routing on ad hoc or mobile area networks (MANETs). In a MANET, the nodes in the network graph are mobile, and if they move too far away from their neighbors, they fall out of range, hence the communication link is broken (i.e., the edge disappears from the network graph). The routing problem essentially is: how do I keep all the vertices connected, and maintain efficient pathways between nodes, when links can disappear and reappear? Of course, if a node moves out of range from all other nodes, it is the same as if the node were deleted from the network graph. The paper An ant colony optimization routing based on robustness for ad hoc networks with GPSs by Kadono et al. contains a "related work" section you will probably find interesting. In this paper I've linked, there is an assumption of the availability of some GPS information, which probably does not apply to you; I chose it mainly for its discussion of other papers. However, all these approaches assume something about how nodes can be deleted (or suddenly appear), in order to construct an efficient algorithm. You'll have to decide what formal assumptions hold for the problem you are trying to solve. Search phrases like "ant colony optimization MANET" or "ant colony optimization self-stabilization" may turn up other papers of interest to you. 

Erik Winfree describes DNA self-assembly and molecular programming at a plenary talk at ASPLOS 2008. Probably the best rigorous introduction to the theory of self-assembly currently online. 

At PODC 2009, Bruce Hendrickson gave a phenomenmal invited talk about these issues. (His slides don't appear to be online, but you might want to ask him if you could see them.) I don't think there's a "right" model yet -- bonus for you! -- but I would suggest you look at his papers, especially the ones on the Graphs and Architectures page, where he tries to figure out how to handle enormous graphs with little structure (i.e. "modern" datasets) on massively multithreaded machines.