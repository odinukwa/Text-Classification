Update 1 I looked at the samples over here and nowhere is a constant used in place of GPIO.HIGH or for GPIO.LOW which is probably why it works. 

Assuming you are have access to a Windows machine, recommend going over the steps listed here and checking if any have been skipped or overlooked. Found some more tips here 

I am not sure why an external source (< 1 kHz) would appear to work without flicker though as it shouldnt matter where the pulses come from. If you are looking to programatically control the PWM duty cycle, and are comfortable working with C or Python consider using the pigpio library. There are also number of examples to get you started. 

If you need internet access on your pi, the easiest way is to directly connect the Pi to a router rather than directly to your laptop like so 

tries to initialize all modules, which would include audio that fails here. Apparently it is not required to do so and you could initialize only the modules you are using and skip audio to avoid the problem. 

Welcome! I find your question quite interesting as it requires careful modelling of the different states and transitions between them. I feel your question only partially related to the Raspberry PI and is more specifically related to modelling states, events, state transitions and behaviors which might make some moderators mark it as off-topic. Anyway, based on my understanding of your requirement, I have written up a python script (not tested at all) which I hope will help you in some way. if you find any errors or require any clarifications, please leave a comment below 

Disclaimer ... This answer is probably bit tangential to your question, focusing on how to host; as I feel it would be of some help to evaluate. If you feel otherwise, let me know I will remove it. There is a full tutorial right here on the raspberry pi web site that goes through the motions of setting up the hardware and the required software to self host a wordpress installation on the PI and make it accessible to clients within the local network. With a bit more configuration (port forwarding, packet filtering etc) on the router facing the internet the same should be accessible from outside the network. This bit would be specific to how your network is connected to the internet. Briefly this would be one of the many ways to go about doing that The magic word of the day is LAMP L-inux - one of the recommended distros is Raspbian which is Debian adapted to work with the ARM processor powering the PI. you can get it from here A-pache - one of the venerable web servers out there Install using There are a number of tweaks possible to control the memory usage as detailed here If you intend to use the PI as headless (no display), you can use to tweak the memory allocated to the GPU to the minimal allowed (16 MB i think) freeing up more RAM to the applications M-ySQL - one of the most popular database backends Seems to require apache to be restarted Install using P-hp - not my personal favorite language Install using Download Wordpress from $URL$ and follow the instructions in the tutorial to move it into the right folder for apache to find it. With that you can start focussing on content creation. HTH 

HTH Update based on comments below Given the challenges I've mentioned above, Here is how I'd approach the problem Online setup I have decribed them in the above 3 bullet points Offline setup using a intermediate server / cloud storage such as google drive PI side of things 

[disclaimer] I havent actually had hands-on experience, but this is how I'd start Most modern Cameras may support either PTP and in some cases PTP's extension MTP. The user manual that comes with your device should tell what is supported. If you are looking to programatically access your DSLR camera's photos, there are some libraries such as pyptpchdk, this or like this one. Apparently someone has already worked on this before, including periodically querying the camera for the list of images. 

detected device are indicated with addresses that are not Part 3 : Connecting LTC2945 There is a rather long discussion on the raspberrypi forum here on the topic of connecting to LTC2945. Here is the extract that is probably most relevant to the question at hand 

My guess is it is the same Joan who is top rated contributer here. Might want to thank him/her if the solution works for you. 

Further Updates on SIM900A module In the spirit of improving on my answer, I dug a little deeper and came across this blog post which describes a similar attempt to host a web server behind a SIM900A module. Sorry to be bearer of bad news but, unfortunately the blogger's experience matches mine own suspicion on the way the module operates. Here's a extract from his blog 

My best guess is internally within python 2.7 there is a object reference comparison to to set the pin HIGH rather a value comparison to the contant (equal to 1) and somehow this has changed (to value comparison rather than reference comparison) within python 3. So when passing works for python 3 and not with 2.7 

The Arduino can be interfaced with this module via AT commands. Here are some more relevant links I think might be useful $URL$ $URL$ $URL$ $URL$ If you choose one of the other modules that exposes the other interfaces, the Arduino IDE can be used to directly program the ESP firmware eliminating the need for a separate Arduino board. As for your specific requirements, 

Its easy because that is one of the biggest advantages of open source software While the answer to question has very little to do with specifically to raspbian or serial communications on the PI, I will still answer it. Steps 

Here goes my first question .... Is there are well maintained list or chart of devices/brands that have known incompatibilities with raspberry pi either in software (generally fixable or can be worked around) or in hardware (generally harder) ? I dont mind including poor performance issues as well I know there is a list of compatible devices over here but my question deals with ones that are not covered in the list and are known to have issues. Specifically I am looking for devices under 

While strictly not directories as asked in the question, I will answer with the understanding that recovering some free disk space is the intent. Depending on how many packages' debs have been cached, you could gain nothing, something or a lot of disk space using . this thread has some relevant discussion on the topic. Be sure read and understand what the various options supports before executing the commands. 

from @Jason's comment below I believe is the value being returned indicating there is no implementation/support. the file specific to arm looks like this where there isnt a specialization either. 

Pythonic Approach If your objective is to play the sound as part of special effects (say as a part of a game) your python based approach is more appropriate. 

sometimes a device might not require a specialized firmware and the driver can directly communicate with the physical device. here are some common commands and the o/p they produce: : gives you the kernel version (4.4.13-v7+ in your case) : gives you the friendly OS version (e.g raspbian/wheezy or raspbian/jessie) : gives you the list of all packages that have a the word firm in their names : gives you the version details of the driver loaded for the ralink usb wifi dongle for completeness sake, i will add : gives you the list of drivers (kernel modules) that are currently loaded In your case it appears both the kernel and the driver () have been updated successfully. Part 2 - Diagnosing the problem Searching for in the linux source code cross reference I found it located here. Clicking the identifier took me to a page that lists all the references and one such reference is the method, which is located here. The method has been passed in as a callback to be executed when the read completes (successfully or not) 

To answer your question, you need to share the details of the supported connector(s) (could share a photo) on your monitor without which it is impossible to suggest a working solution. see this page for details on video out options 

If you already haven't done so, You can resize your filesystem to expand to fill the whole SD card using . 

note the trailing will launch the process in the background and let the boot process complete when executes 

It is my belief that modules like the SIM900a are intended to enable a device (Pi in this case) to connect to a remote machine, pull or push some data over mobile networks (2G/3G etc). To do that the module will 

Assuming this is the product you have, have a look this customer comment who has graciously left some breadcrumbs on how to control the device. As some other customers have noted, the product cycles (ON/OFF) the relays on power up and also malfunctions in certain cases you might want to take the right precautions when using it in your application. There is download link below the comments to a rar file that contains some documentation and device drivers for windows Here is an extract from the documentation