The default maximum length of a GROUP_CONCAT is 1024. You need to change that max length in the session using this: 

Now, the tagret database will be the point and time instance for MyProdDB at 2:45 PM on Feb 3, 2013. Give it a Try !!! 

There is really nothing you can do once a shutdown starts. Why ? According to the MySQL Documentation on the Shutdown Process 

You would have look for the two rows in the display that has as the user. Once you find the IDs... You can run the or command against the Process IDs. CAVEAT This is a possibility that evn the KILL command can hang if the query must come to a completion (such as a transaction that must fully commit or fully rollback). Master is oblivious to all this. Why does work just fine ??? Running simply checks for binary logs on the DB Server. There are no DB threads to read, parse, examine, and coalesce. Running has to reconcile three(3) aspects: 

In the event of a crash, just destroy the Slave and spin up a new one We'll call the Slaves S0 and S1 Here is something else: have this in /etc/my.cnf in S0 

You seem to have an issue with key distribution with and the Query Optimizer. Since the is not being factored into the partitioning scheme, I only see MySQL having to look up the up to 6 times. Depending on when and how frequent each value is written, the query could be using the wrong index. There are two things you could do to see if key distribution is at issue SUGGESTION #1 : Run on each query 

No one foresaw any of these effects because the behavior of explicit clauses was relied upon by the implicit behavior of the Query Optimizer. CONCLUSION From my perspective, corner cases can only be of an external nature. In light of this, developers must be willing to fully evaluate the results of a in conjunction with the following twelve(12) aspects: 

You will see a list of relay logs MySQL Replication needs and rotates. If is not in , you can delete without breaking anything. Why is is still around ? It could be anything. Between setting up replication after an outrage, skipping SQL Errors, and just plain Starting and Stopping, along with a low expire_logs_days could leave one or more relay logs lingering. In light of these things, if a relay log does not appear in , you can delete it. Why is the relay log so empty ? It has to do with the mechanism Replication uses to rotate to the next relay log. You will not see these annoying little files very often. The only time I usually see them is with one of the following: 

That would not be possible. Why? MySQL for Windows is very stringent about locking files. It is impossible for two MySQL Instances on Windows to lock on the same ibdata1 files. From your question, you mentioned launching one MySQL Instance from Windows and another from Linux hitting the same datadir. At the risk of sounding redundant, MySQL for Windows is very stringent about locking files. Trying to lock ibdata1 exclusively, MySQL for Windows will block another instance from anywhere (Windows, MacOS, Linux, etc) from opening a file handle on ibdata1. The reverse is also true: MySQL for Windows will not be able to acquire an exclusive lock on ibdata1 if it is opened from elsewhere (Windows, MacOS, Linux, etc). I have seen this done using two Linux-based mysql instances, only to see the data go down in flames due to file corruption. Even if what you asked was possible, there is another issue you have to account for. The following system variables need to be set properly: 

Your only hope in this scenario is to have the PROCESS privilege. The SUPER privilege allows you to kill processes. Naturally, you don't want that. On the other hand, the PROCESS privilege allows you to see the processlist. According to the MySQL Documentation on the PROCESS Privilege 

Having taken a quick look at the Stored Procedure, I have three suggestions SUGGESTION #1 The table (lines 198-210) is MyISAM. Perhaps it should a MEMORY table. 

This will initialize the value you need to retrieve before starting a unit test. If you wish to initialize the now as of 3:30 AM, 5 days ago, do this 

The output file will contain the SQL to restore grants. The file has one glitch: Each line needs a terminating semicolon (). Open the output file MAKEGRANTS in Notepad and append a semicolon to every line. Move the MAKEGRANTS file to the MySQL 5.5 server and execute. Then, load the mysqldump. Some may object to this convoluted approach and say run mysql_upgrade.exe on MySQL 5.5, especially if you load a 5.1 mysqldump that includes the mysql schema. Hey it's also works. What I mentioned before is just my personal preference (my way of doing things) since I like leaving the MySQL 5.5 schema tables intact. Here is something interesting: What if all you data is InnoDB? You can mysqldump without downtime (Like This): 

I have two suggestions SUGGESTION #1 : Use grep command You could use the grep command to filter it out 

In order to safeguard the app from having to edit it for the sake of assigning a new IP, try using a DB VIP instead. For example: 

Leave the setting for 12-24 hours, if the write performance is acceptable, you are good to go. If not, set it back with: 

Basically, you want to result the running total and group it This requires iterative variable manipulation. First, your sample data quadrupled: 

I would yes for one reason: InnoDB and the Query Cache are not good neighbors. Why ? On , I answered the question Why query_cache_type is disabled by default start from MySQL 5.6?. In that post, I poetically described how InnoDB man-handles the Query Cache. I originally got that information from Pages 209-215 of High Performance MySQL (2nd Edition). I have recommended people disable their query cache before: 

SUGGESTION Note that contains several days worth of binlog events. Before you run the midnight backup, you should run 

Setup B is way easier to manage Each sits in a different folder. That can be very beneficial if you do no want to test OS limits. For example, my employer hosts MySQL for a CRM system of car dealerships. Client has 800 dealerships. Each dealership database has 160 tables. That's 128,000 tables. 

That why all attempts to search on those two words will fail. If you convert the table to InnoDB, drop and create the FullText index, you will find them. There are only 36 stop words for InnoDB FullText Indexes. If the table has to remain MyISAM, you have to provide an empty stopword list, restart mysqld, drop and create the FullText Index again. Here are some of my past posts on this: 

Step 02 On ServerC, run Repeat running until is 0 Then, run Step 03 On ServerB, run For the sake of example, let say looks like this: 

One of the silent killers of MySQL Connections is the MySQL Packet. First, let's figure out what a MySQL Packet is. According to the page 99 of "Understanding MySQL Internals" (ISBN 0-596-00957-7), here are paragraphs 1-3 explaining MySQL Packets: 

Knowing this about MySQL Packets allows a Developer/DBA to size them up to accommodate multiple BLOBs inside one packet even if they are obnoxiously large. Definitely, a packet too small will cause problems for open connections in this respect. According to the MySQL Documentation 

That bulletpoint is true for a user with privileges or . Such a user cannot change a live connection's grants in full in the middle of an external or separate session. That has to be true even more so for a non-superuser. By definition, you should be able to revoke a privilege you could grant. But look at the grants again 

If the table is InnoDB, that could a little because the data dictionary within ibdata1 would know what the file's name was originally. Notwithstanding, you could rename the file the same way. You should also make sure the file has the correct ownership. 

Essentially, I performed three table scans: 1 on the main table, 2 on the small subqueries. NO JOINS !!! Give it a Try !!! 

MySQL 5.6 Documentation The and variables were first introduced for mysqlbinlog in MySQL 5.6.3. Once MySQL 5.6 went GA, those options were not meant to be used at all. How did I know ? Look at the list of options for mysqlbinlog (Table 4.16). They appear in the list between and BUT THEY HAVE NO HYPERLINKS !!! mysqlbinlog Here is something else to consider: mysqlbinlog is not a client program. It is a utility program. In mysql, client programs require logging into mysqld with a username and password. If you look at the list of MySQL Client Programs, please note that mysqlbinlog is not there because it is a utility. You can see mysqlbinlog among the list of MySQL Administrative and Utility Programs. If you are using an option file, mysqlbinlog can never respond to the options under the group header. Why ? According to the Options File Documentation: 

STEP 07) run on M1 STEP 08) run on M1, S1, M2, M3 Where is 0 on all the servers... STEP 09) Point you application to other servers as desired Any questions ??? If none Give it a Try !!! Your mission, should you decide to accept this, is to practice this is a Dev/Staging Environment and make sure you trust this algorithm before doing this in Production. In the event your data is caught or killed, the DBA StackExchange and I will disavow any knowledge of your actions. 

I can see the wisdom of not mixing the command with select mysqldumping of tables. You do not want to risk creating database with the name of a production database. You also do not want the developer to become aware of not the database that will be the target. In this way, the mysqldump, in itself, can never be blamed for overwriting target tables. 

In a high write DB environment, if the id was inserted into the Role table in one DB connection and you executed the INSERT in another DB Connection, you could get a race condition. How? 

When the prompt comes back, MySQL is down. If you shutdown Windows, the only evidence for MySQL's shutdown would be in the error log. EXAMPLE On my laptop 

Give it a Try !!! UPDATE 2012-06-25 12:13 EDT To speed up the subquery, make sure you have this index: 

I would like to suggest something radical. I got this idea from StarTrek : Deep Space 9 (Call to Arms)