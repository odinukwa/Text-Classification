Simple, don't use proxy servers. Proxying scripts through a web site can prevent many bits of code from working. For example, scripts that attempt to keep a session open, or scripts that verify the source the script came from... etc. Many sites that use captchas and other such security mechanisms don't want you to proxy, as it bypasses the whole purpose for security mechanisms like captchas in the first place. 

Let me explain it this way. The touch-pad itself has absolutely 0 concept of scrolling. it senses a touch... and reports back an X and Y. The driver takes that information... and determines how to interpret it as various mouse-ish gestures. So... in short... it's up-to the driver to determine WTF a scroll is. So the problem here is the driver... or the driver configuration. And since you didn't specify what flavor of linux... your results might be rather mixed. Synaptics did create a suite for common flavors of Linux... but what you need to acquire them... or if it's available for your distro... is beyond me. 

Rather than getting an email... I'm assuming your goal is to be able to find your home-router whenever your IP changes. Have you looked at tools like DynDNS? where you run a small app on your machine which will automatically update a DNS record on a 3rd party's site to point to the current IP of your machine? Then you simply refer to the public DNS name rather than trying to track down a specific number. Many router actually implement this functionality without having to add anything else. There's also desktop-apps that can update the DNS records for you if your router isn't capable of doing it for you. Try one of these: $URL$ $URL$ 

The Windows Kernel is not just a single file. It's the core of the operating system, and relies on several files in order to function. It is not seen as a task in the task manager... because it is what organizes those tasks. 

You can enable auto-hyphenation in one of two ways (depending on your version of Word). Newer versions require you to click on the "Layout" tab of the ribbon... and then click on "Hyphenation" and click "Automatic". Older versions you would click on the "Tools" menu, then "Language", and finally "Hyphenation". From there, you can check the box that says "Automatically hyphenate document". 

There are 2 cables you can "extend". USB: USB cables are the easiest thing to "extend", as long as you don't really want to go past about 5-meters. They're all pretty standard. Just make sure that you get a cable that has the same ends as the one you have now. (USB-A end? maybe micro usb? ... not sure) RF: Alfa devices can have a few types of connectors. (yes... they don't actually have a single connector that works on all of their devices). It's possible that it is a simple SMA connector, or RP-SMA. I've even seen N and F-Type connectors on alfa devices. To give a more specific answer, we need the exact model of the alfa device... instead of the wifi chipset. 

Most fields in active directory aren't really used for anything but custom-development. You can do custom-searches against Active Directory... but they're far-less than pretty. The "Office" field you're talking about is called the "physicalDeliveryOfficeName" in Microsoft's LDAP lookups... so you'd build a query like: 

Routers cannot an IP to a DNS name. The two technologies are not connected. It can, however, one IP to another IP... but this largely depends on the router you have, and what it allows you to configure. Keep in mind that any traffic going through your router would continue flowing through your router and your ISP. You aren't "redirecting" a connection to another IP; you are acting as the middle-man. If your IP changes, or if the router gets rebooted, all users would be kicked offline. 

Your PC's HDMI port is not a capture device. It is a video-output device. If you want to capture what is on the screen of your PS4, you'll need to invest in a capture device, and probably more high-end CPU/GPU. Encoding the video is much harder than decoding it. 

Your ISP probably limits you to a single-logon using your PPPoE credentials. Your best bet is to get a wireless router & let it handle the PPPoE negotiation... and then let the rest of your devices connect through wifi or through a wired connection. 

Depending on your setup... there may be several ways to accomplish this... and you'll probably have to use several methods to make it work semi-reliably. There's several hurdles you'll have to overcome in order to accomplish this reliably. 

Just use the gzip alone. by default, gzip will take any file passed to it and compress it and add the .gz extension. i.e. 

Alternatively, you can go up to the "Styles" panel in the ribbon and right click the desired style, and click "Select All", and then simply pick a different style. 

sadly there is no single-method for stripping leading zeros.... but here's a little trick I learned... 

Many motherboard manufacturers include some bit of logic that will disable the on-board video card if there is an addon-card installed. Sometimes you can get lucky & they include an option in the BIOS to re-enable or set the onboard as default which will allow both to run in tandem. I couldn't help to notice that you have a 9600GT installed... most 9600 cards I've seen have 2 video ports already (one DVI & one 15-pin DSUB). More than likely, you would be better off using both ports on your 9600 rather than relying on the onboard video-card. 

Sorry nope. Badly written programs are badly written. If the memory management isn't done properly, you're just going to be out of luck. For a Citrix server... if you only have ~1.5gb of RAM to play with... you really have an under-powered server for the task. I'm surprised you managed to get ~90 users on that machine. 

You can accomplish such a thing with any virtualization platform that lets you assign USB devices directly to the guest OSes. I honestly can't think of a reason you would need multiple wifi network adapters... across multiple guest OSes... but I'm not in your boat. Virtualbox is a quick & simple solution that does allow for this... but under high-load... can choke from time to time. (I suspect this is true for most virtualization platforms) VMWare's ESX server may not have this problem... but I have not yet tested such. The is one of the more interesting questions here. The answer is quite a bit complicated. Microsoft likes to keep things simple by only implementing a very simple set of interfaces that makes things generic enough that any application can make network connections without having to re-invent the wheel every time you want to send a packet of data from one machine to the other. So they provide a basic set of functions that let you send/receive data. WIFI is a relatively new thing in the networking world... and Microsoft tries to pigeon-hole that technology into their existing simple framework. So, they simply added an extension to their existing network stack to add support for the authentication... and called it a day. Unfortunately, Microsoft does not have an infrastructure in place to implement "sub-interfaces" for each physical adapter. For standard Ethernet, this isn't a problem, because you can simply add a 2nd ip address to the same 'interface'. But with wifi, the authentication session is tied directly to the interface. Where this is physically possible to be done (and is done in other platforms like Linux)... Windows just can't handle it. In theory, the manufacturer could implement a framework to add/delete virtual interfaces on-demand... similar to enterprise-ish network adapters... I doubt there is one out there for Wifi. You also asked about VLANs... WIFI can indeed carry VLAN'd traffic without issues... the problem is, VLANs are yet another thing Microsoft left out of their framework. Most of the time you get lucky, and the driver has some advanced setting you can set to use a specific VLAN tag... but you cannot typically do multiple tags. Enterprise-ish network cards typically have some sort of control panel that may allow you to setup virtual interfaces... but I doubt there is one such card for WIFI. 

Make sure the key is set to Change the Value data: to Browse to and then click on the following registry key: 

Sounds like you may have purchased one of those crappy thumb-drives from ebay. There was a rash of thumb-drives that were actually 1-2gb... where the firmware would loop the drive and falsely report a larger available drive than there was. Every tool you would use to look at the drive would report 8+gb... but it really wasn't. As long as you don't go over the actual size of the drive... you'd never know. Once you try to go over that size, the old stuff would get overwritten causing lots of corruption, and other weird symptoms. 

From the stock-firmware, this is not possible as far as I know. If you resort to 3rd party hardware like openwrt, it's fairly simple. Openwrt will void your warranty, so tread in that direction with caution. But as far as the internal-workings of the router goes... the wireless interface is bridged with a vlan interface that is tied to the LAN ports on the back of the modem. Once you have a more "open" firmware on your device... you can simply remove the wireless from the bridge and configure it as needed. There is even the capability of hosting multiple SSIDs in different network segments, as well as separating each physical port onto it's own "VLAN". 

Annoying, maybe... but necessary. You're actually lucky enough to have a card configured to mirror by default. In most cases, prior to loading the driver for the video-card, every port except for 1 is disabled completely. After the driver is loaded, each display is initialized and made ready to use. In all honesty, what would you want displayed on the other monitor prior to logging into your machine? 

Most web-servers today implement the gzip compression on the data stream. Perhaps your remote web-server doesn't have that turned on? Compressing files prior to sending them across the wire will yield little/no improvements on the actual amount of the data going over the wire. Rather than trying to transfer 900mb ... it'd probably be smarter to look at what you're transferring and perhaps look at programs capable of transferring "deltas" rather than the full contents of the files. (transfer what changed vs transferring 100% every time) I know of no web-services that will do this for you on-the-fly. 

The method to the madness is to replace all zeros with a space-character then "trim" it on the left-side only. (we don't want the ending-zeros to go away) then replace the space characters back with zeros... and finally format it the way you want. Alternatively... rather than trying to trim the digits... you can also convert it to an actual integer using cint() and then format it like so: 

In short... the answer is Yes. The longer answer is quite a bit more complex. A router is a computer. The operating system and hardware are specifically designed for the task, but essentially they are the same. As far as setting up your own computer as a router, 99.9% of this question depends on what operating system you are running. Also, the kind of router also makes a difference. Windows has a built-in feature called which sets up a very simple NAT'ing router, whereas Linux operating systems uses a combination of with the module and kernel-mode routing. Apple computers are very similar to Linux in the way you configure them, but I'm sure they have a simple GUI for configuring such. If you want a non-NAT'ing router, Linux can do this quite simply, but Windows has no way of doing this (without 3rd party tools) until you get to their Server platforms. As far as a client/server application goes, there is really no need to implement a from what I can gather by your question. Can you give some details about the scenario? 

As odd as it sounds... perhaps you ARE typing in your password wrong. Does your linux box and your windows box share the same keyboard layout? Perhaps what you think is a number-sign (#) is actually a british pound sign (£)... or other such oddities. 

There's several factors at play here... Without more information on the drive mechanics, status, and what is already on the disk, I can only guess at some things. First, when copying large files to the disk, it's unlikely that you'll get a singular chunk of 500gb (contiguous). It's more likely that you'll end up getting a few fragmented segments (if not many) of space all over the disk. So, as the file is being written... it's having to work back & forth over different regions of the disk. Second, Most drives today have multiple platters and heads that have to share an axis in order to access parts of the disk. I.e., if your file is being written to the top side of the 1st platter on the first few blocks... and then the next block is allocated on the 2nd platter near the middle of the disk... you can end up where the disk's head has to jump back & forth between both segments (which adds a lot more time "seeking" between sectors) and that problem is compounded by technologies like "bus-mastering" that attempt to be smart and fill up all available bus bandwidth... by attempting to read/write in a "multi-threaded" fashion. i.e. a write operation is broken down into 5 write operations simultaneously... 1st writes blocks 1-10, 2nd writes 11-20... etc. Unfortunately, platter-based hard drives have to spend time going between each sector trying to write & verify the data... and so such a technology can actually cause more problems than it would fix. SSDs, on the other hand, have almost no seek-time... so they will fair significantly better. Third, this is a "green" drive... which tries to be power-efficient. By design, they will "go-to-sleep" from time to time to reduce power-consumption, and spin right back up when something accesses the disk. There have been issues where the drive decides to goes to sleep (for a random unknown reason) and then has to wake back up. The spin-down time and spin-up time can generate a HUGE delay in read/write jobs. It's possible that there is a firmware for your hard drive to fix this issue... or perhaps you need to contact the manufacturer and get them to address the issue. (which may be near impossible for an 'individual/consumer' to do) Forth, yes, the platter can go bad... but not enough bad to mark a sector as being bad. Most drives have some fuzzy-logic built-in that will write to the disk... go back & read that it was written to verify it was written properly... and if not... write it again... and then verify again... and if that fails too many times, it will finally mark the sector as being bad. But if it succeeds on the 2nd try... it's not marked as "bad" just yet. I hope this helps you a bit... but I admit, this is far from complete. There are many MANY more reasons that can cause platter-based disk to become a "bottleneck" for performance.