I'm happy to give example how to implement something like this with JNPR DCU/SCU, provided your peering routers are JNPR, but it's possible with just communities, just bit more awkward. 

Ethernet has preamble and start frame delimiter at start and at end it has 'IFG' or inter-frame-gap. These are used to determine start and end of frame. 

Full Outside local country (local IXP, whole own AS + customers seen) Outside local area (if applicable, like for me it could be 'Nordics') Include/Exclude specific peering router in blackhole 

D and C will distribute the prefix+label to B, using LDP B will allocate local label for this, say 300 (could be anything) 

You should probably check 'show diag events', it should correlate with these messages. GOLD gives us description for 'TestErrorCounterMonitor', which gives us some data on understanding the message 

3750/3560 are not very good switches for application which can microburst, i.e. if your egress is 1GE and ingresses are 1GE too, two very low average rate ingress ports can easily congest the egress port, causing drops. To maximize the available buffers (and minimize microburst drops) follow this document. 

Worst case scenario, your HW has gone bad Best case scenario, it's cosmetic failure due to software defect, luckily you are in SRE which will be supported until 2015, so maybe upgrade it to latest rebuild. There are two bugID which will cause this error in very benign way. 

I think it's also relevant to understand directionality of pause frames and what that means. Essentially what sending pause frame means is 'I am congested, and I prefer that you buffer frame in your TX, rather than I buffer in my RX' 3750-X cannot send pause frames, it can only receive them. This means if 3750-X buffers are in danger of being depleted (which is very easy, 3750-X has tiny buffer and is badly suited for applications where egress capacity isn't significantly more than ingress), there is nothing pause frames can do, 3750-X cannot do the desirable action and ask sender to slow down (causing Dell to buffer them). However if the Dell is receiving data so fast that it is in danger of being congested it can send pause frame to 3750-X and ask 3750-X to stop sending (effectively it asks 3750-X to buffer frames FOR it, so it does not have to buffer them). This, in my opinion does not make sense, I expect every storage device to have more buffers than 3750-X (<1ms per port on average), I'd expect you only increase packet loss by asking 3750-X to do your buffering, as it'll drop them sooner. As I see it, you can only enable pause frames to the direction where it does not even make sense for this application. 

Once there are no reason to disable VPN-CAM, it gets renabled, and those VRF VLANs will disappear. This will also double your VRF performance, as you won't need to recirculate the packet in the PFC. Without VPN-CAM your first PFC lookup will resolve VRF, second will resolve egress rewrite. With VPN-CAM before packet even hits PFC, VPN-CAM has already told you which table to look against, so PFC will directly return egress rewrite on single lookup. To confirm if VPN-CAM is used or not, you can issue this command: 

I prefer the latter, as it allows easy addition of new VLAN and does not introduce new concepts. However the former is needed, if you want to use CDP to communicate the voice VLAN to the phone. Otherwise normal behavior is that phone will first boot in data VLAN, then get instruction from DHCP to change VLAN, and then it'll boot again in voice VLAN. 

% strings jkernel-ppc-13.2R1.7|grep "FreeBSD: release" $FreeBSD: release/7.3.0/sys/kern/kern_pmc.c 193634 2009-06-07 10:00:35Z fabient $ 13.3 will be running 10.0. (edit: alas, this turned out not to be true) 

AFAIK RSSI is arbitrary (and of questionable use) unit, but at least my 3G cisco actually outputs dBm: 

show firewall filter RE-FILTER | match mgmt_ntp mgmt_ntp 199728 2628 % snmpbulkwalk jnpr .1.3.6.1.4.1.2636.3.5.2.1.7|grep mgmt_ntp .1.3.6.1.4.1.2636.3.5.2.1.7.9.82.69.45.70.73.76.84.69.82.8.109.103.109.116.95.110.116.112.2 = STRING: "mgmt_ntp" % snmpbulkwalk jnpr .1.3.6.1.4.1.2636.3.5.2.1.5.9.82.69.45.70.73.76.84.69.82.8.109.103.109.116.95.110.116.112.2 .1.3.6.1.4.1.2636.3.5.2.1.5.9.82.69.45.70.73.76.84.69.82.8.109.103.109.116.95.110.116.112.2 = Counter64: 199728 More information on juniper.net 

Due to weird IOS architectural reasons you need to have full privilege level 15 to do 'show run'. The modern replacement to various privilege levels is RBAC or Role Based Access Control. Here you can define each user separate view, command by command. You could allow user to do 'show run' and add new permit lines in access-lists in configuration mode, but nothing else. Nice thing about RBAC is, that user also only sees commands which are allowed, so when she punches in '?', only commands shown to her are the ones previously allowed by operator. Example configuration: 

Fully agreed with @ricky no way today, there isn't any signalling protocol which allows transferring information of L2 protocolX signalling to L2 protocolY, maybe there should be. But even if such protocol would be specified, I don't really expect T1 people would invests on new gear to get it. Personally I don't understand why connections are build like this. Some business people claim that customer damand RJ45 ethernet interface, so for some customer even when fibre gige connection is delivered, there is optical converter (Another SPOF which customer cannot monitor!). I would throw the adtran out of the window and buy T1 interface to the 2901. This has several benefits 

RTTSum is the sum of samples, divide it by sample count and you've got arithmetic mean. RTTSum2 is sum of squares of samples, you need it for example to derive standard deviation. 

Like @Brett said, StackWise is not possible without the use of stack ports. However, there is also really really old Cisco switch feature called cluster which uses just ethernet ports. I personally would never run this cluster feature and would steer away StackWise as well unless I have extremely good justification for it. Usually higher software complexity means lower MTBF and that is my experience running tens of 3750 stacks and hundreds of individual 3750 switches. The newly introduced 3850 stack architecture seems much more appealing, as it's more closely designed to look like chassis based switch, you have two RPs and bunch of dumb linecards. But of course experience is thin on such a new solution. 

One way to do this is ICMP Timestamp, which is milliseconds from midnight UTC. It has the added benefit that you don't necessarily need to control both ends, as long as the far-end is not firewalled, there is good chance it'll work. However, to have reliable one-way measurements, you need reliably same time in both ends. As ICMP timestamp only have precision of 1ms (which is not nearly enough for many applications, but sufficient for this) it's reasonably easy to find even non-cooperating hosts where ICMP timestamp will provide useful data. If you control both ends, be sure that you are synchronizing NTP to only 1 server and same server. The absolute clock is not very important, it's just important that you experience as closely same time as possible. If ICMP timestamp is not sufficient, it's very easy to write 10 lines of ruby/perl/python or even C to do measurements when you control both ends. I can't really suggest software for doing ICMP timestamp measurements unidirectionally, hping2 supports sending ICMP timestamp but for some reason does not output unidirectional values. I wrote patch for hping2 to display one way latencies. 

It can't be PC ethernet card, as DES-1024D is not 'cut-through', that means, if PC sent broken frame, DES-1024D dropped it and did not forward it. You've already done good debugging by moving the wire to another switch, this allows us in high degree of confidence to exclude 3COM as culprit for the errors. Options that are left is room 3 D-Link or wiring from it. First thing I'd verify is duplex setting, if negotiation is on (as it should be, only disable if you must, as negotiation has important function to signal remote fault) verify that both of the devices are in 'full duplex', if auto negotiation is on but links still disagree on duplex force them to full duplex. If this does not help, you have three options 

This would cause 50ms buffers on the Serial1 and would allow you to handle up-to 2.25ms burst from single Gige interface. 

The exact practical scenario when labels might run out is debatable. There are some house-keeping issues also which are not directly related to labels running out but contribute to that effect. Label managers today in major vendors (CSCO, JNPR at least) are programmed so that they need continuous block per label application. Of course this could be fixed, with some cost in performance and complexity, but is certainly another issue to consider. Some MPLS services are quite hungry for label-space in the core, in the edge is mostly irrelevant as we can mask them under our 'IGP label'. We need to remember MPLS is not just about IP, it is about FEC, if we need to give some service different treatment/path in the core, we need new FEC. There are some discussions about supporting mega labels and big labels, their use cases, although more likely implementation will via special purpose labels. Personally I'd hope/expect MPLS wire-format to be changed before 2^20 becomes an issue. As MPLS is mostly used only inside one operator network, changing the wire-format is super easy in comparison to IPv4->IPV6 migration, so what ever problems we'll run into, addressing them will be quite simple. Some issues I'd like to be solved: 

This can easily turn into a debate, sure you could do management in different logical-system, but what are the perceived gains? You're still going to need to protect the main instance just the same. In my opinion you gain nothing but you add complexity, which means added risk of downtime. It would be different matter on SUP2T or Nexus7k with CMP, where you truly have separate out-of-band interface available. My recommendation would be to optimize for least complexity, do on-band ssh management via normal main instance and have RS232 (alas, necessary evil) as back-up out-of-band. If you go through this route, it'll work, there will be some inconveniences like copying software, but you can cope with it, with 'set cli logical-system MGMT' You need two solution, one for normal day-to-day work, and another for OOB, when system or network is broken. OOB is easy, you need RS232, as RS232 is only solution you can use, to try to reboot box when junos is not running or unresponsive (set system debugger-on-break). For your main day-to-day work, it's more debatable, you have three options: 

This is almost certainly single host with many IP addresses routed to it and simple script to make it appear like it's traversing many hosts. Comparable hack for IPv6 can be seen here $URL$ Like Ricky+Laazik say no limits what PTR can point to, like no limits where A can point to, just you won't be able to have it PTR -> A -> PTR unless you control both. Obviously the person does not control A record for those hosts and couldn't have A resolve for them. 

They are not in my view strict well defined terms. Generally people mean T/E, SDH/SONET as leased line, but DSL not. When customers in RFQ request leased line from us, I interpret it as they feel DSL quality is inferior to 'legacy' solutions, and specifically want us to avoid using it. While technically there is no difference in the physical copper we order from incumbent, in both cases it's copper between customer site and our pop, we lease from the incumbent, it is just connected to different active device in our network. 

By default STP is not tunneled like rest of the traffic, but STP BPDU is directly visible to the switch, and switch will react to it normally, this is often undesirable. If STP BPDU needs to be tunneled as well you need feature called 'Layer 2 Protocol Tunnel' or L2PT. L2PT is fancy word for DMAC address rewrite, when incoming frame has DMAC identifying the frame as special BPDU, such as STP, you rewrite the DMAC to some non-special address, for STP BPDU DMAC is written ingress to 01-00-0c-cd-cd-d0 then in egress the 01-00-0c-cd-cd-d0 DMAC id again rewritten back to STP DMAC. Configuration is as follows: 

If RR isn't close by in the forwarding path then it might reflect sub-optimal route to your PE. In future this problem will be fixed by BGP-ORR If you are running MPLS network, then you should also consider if your core should be BGP free or not. Benefit of BGP free core is that it won't crash next time there is parser bug for BGP UPDATE message. Problem with BGP free core is that either your PE boxes need to have full-table or you'll have sub-optimal default-route. 

I would ask for 'maximum-paths' (it's usually called ECMP in standards and documents, not ECLB). And if ECMP is non-starter, then fallback to your /25 plan. Other acronyms that I couldn't immediately figure out were DIA (dedicated internet access?) and SOP (standard operating procedure?). I'm not sure if these are really so universal acronyms that they should be used in stackexchange without at least hovertext to resolve them. 

Very interesting question which unfortunately does not have any single correct answer, as the exact solution varies from hardware to hardware. However this problem is explicitly discussed in Computer Networks - a Systems Apparoch at page 231-232. The gist of the solution for design called 'Sunshine Switch' is that you have diagram input--batcher--trap--selector==banyan===outputs and there is delay box which connects selector to batcher. And I quote: 

If you ask any responsible electrician all devices must be grounded so that if there is short-circuit they don't become dangerous. In practice I very very rarely see devices grounded, only incumbents with long history of spending lot of money and manpower have the professionalism to do this. For legal reasons, I cannot recommend not grounding them, but I would expect exactly 0 problems, and you certainly wouldn't be alone running your boxes without ground. If you are running AC PSU and you have Schuko plugs the system probably is already grounded.