You can do the installation yourself if the provider gives you remote access to the server's out-of-band management hardware (e.g. IPMI, iLO, DRAC). If you don't get such access, or if the server doesn't even have such hardware, you should probably not do business with them and find another provider. 

This is already minimalist. You have ssh enabled and that's about it. Almost everything else is startup and shutdown tasks. One thing you should enable is . Without this, you may not be able to shutdown or reboot your droplet from Digital Ocean's control panel. (Or, on a physical server, the power button will not perform a graceful shutdown but instead hard power off the machine.) 

I don't know where you got openssl . But since it has a release number higher than the versions actually available in the repositories, they are not considered upgrade candidates. Install the update by selecting its version explicitly: 

The application is disregarding the system time zone and displaying the time in UTC. In your timezone, the summer time had just ended, so your time zone was UTC-0300. This corresponds to the time displayed by your application. 

To make shutdown work from outside the guest on CentOS 6, you need to install the package and start the service. 

The qemu-guest-agent must be installed and running in the guest. Run before taking the snapshot. This tells the qemu-guest-agent to stop all filesystem activity and bring it to a consistent state. Take your snapshot. Run after taking the snapshot. This tells the qemu-guest-agent to allow filesystem activity to resume. But the snapshot will remain as it was when frozen above. Back up the snapshot. 

Pray. Verify that your backup is current. Run it manually if necessary. If you don't have backups, make one now. Fail the drive with pending sector and offline uncorrectable sectors. The other drive with reallocated sectors will live a little longer, and hopefully long enough to complete this process, but this drive is at the point where it could kill your entire array. Replace the drive. In hardware. Partition the new drive and add it to the mdraid array. Rebuild the array and wait for the rebuild to complete. In newer versions of mdraid, the rebuild will start automatically. Repeat the process with the second drive. 

It appears you've somehow installed your guest in a way that it considers the hardware clock to be in local time. KVM guests should always consider their hardware clock in UTC time, unless they're Windows guests (but even those can be set to UTC hardware clock)... Edit the file, and change to . Then reset your guest clock. 

When you have SELinux enabled, the web server (and processes that run within it, such as mod_wsgi, and on EL 7, on similar server processes even run separately from the web server) are not allowed to make outgoing network connections, unless you explicitly allow them to do so, e.g. using an SELinux boolean. To resolve the problem, set the boolean to allow network connections to a database: 

You can use RADb as a tool to do this. First, you will need to find the provider's autonomous system number (AS number). To do this, first find any IP address for the provider. For this example I will use well known provider Hetzner. 

Routers are supposed to decrement the time to live field by 1 for each second spent processing the packet, but in no case should it decrement by less than 1. So if a router spends more than a second processing a packet, it should decrement the TTL by more than one. However, it's exceedingly rare that a router would spend more than a second processing a packet, unless it was terribly bogged down. Barring router implementation bugs, that's about the only thing I can think of that would explain this. 

You cannot control the reverse DNS records for the VPS's IP address directly yourself. Your VPS provider controls these records. Contact that provider for instructions on how to set the reverse DNS record. 

You can't derive the private key from the certificate (signed public key) or the certificate signing request. If you could, the crypto would be utterly useless. 

Both. When you mount some device to /foo, then the files on the new device appear, and the ones on the original device are hidden. If you unmount /foo, then the original files will reappear. 

Don't try to install certbot manually on CentOS/RHEL systems. It just makes a huge mess. Instead, install it from EPEL. 

You have squid, so forget about trying to code it yourself and use squid's built-in splash page functionality. This 3.2+ example from the squid page will show the splash page once per hour (see that page for more examples and full instructions, including examples for squid prior to 3.2): 

For nginx, you will need to compile in the headers more module (it is not included with nginx by default). This will allow you to override the header. After that, you can simply do: 

Note that you can't guess in advance whether someone has a specific Apache version; it's up to the sysadmin to make sure that the correct modules are being loaded. As the developer all you really need to worry about is that you are providing the correct directives, depending on what modules are available. As a sysadmin you will have to maintain differing configurations for Apache 2.2 and 2.4; there is no way around this. Fortunately every configuration management system makes this relatively easy, and if you aren't already using such a system, you should be. 

You didn't install the EPEL 7 repository. That's the EPEL 6 repository. Remove it and try again. Better yet, install nginx from their own repositories to ensure that you stay up to date with critical and less critical upstream fixes. 

If you want to avoid this sort of thing, you should stick to stable releases, rather than unstable mainline releases. Either way, you should test first before blindly upgrading production. 

You said that you can't reach nigelyons.com in your browser, but that's not true. You can reach it just fine. It sends a redirect to www.nigelyons.com. It's that site that you can't reach. And the reason you can't reach it is that it doesn't have an A record in the DNS. To resolve the problem, create a record set in Route 53 for www, containing the appropriate A record. Then wait; negative caching means it could be an hour or more before it becomes accessible. 

You should put your actual web site in an Apache block, and have the default host serve only the Apache test page. If you are using name-based virtual hosts, like most people, then just ensure that the default virtual host appears first in your configuration. You can check your configuration with a command such as . See also Apache's examples for more information. 

Considering how often this software is abused, I am not surprised to see anyone regard mail containing this as suspicious. I would remove it. You should also consider adding the RFC 2369 mail headers to your list traffic. Though I doubt that particular piece of software is capable of it. If you're intending to run a mailing list, consider using software designed for that purpose instead. 

This is a known bug in Google Compute Engine. Instances can run nested VMs on first boot, but on subsequent boots cannot run nested VMs. You may follow the issue to be notified of updates. 

Your gateway is wrong in your guest. Since you bridged your network connection, it is as if the VM is on the same subnet (LAN) as the host. Thus it needs to use the same gateway address as the host. 

You can't give two machines the same IP address and expect them to work. Give the Windows guest a different IP address. 

In practice on the public Internet, messages in which this is done are uncommon, though they do occur especially in enterprise and academic environments where it's much more common for one person to send email on behalf of another, or of a group. I've never actually seen spam that does this (and got through all my other controls). I would generally consider it unsafe to discard or raise the spam score of such a message. 

When you see a "Protected multilib versions" message, you need to run instead of here. BTW, in RHEL 7.5, the package was moved from to , so you need to make sure you have the optional channel enabled before upgrading existing GUI systems from 7.x to 7.5. 

The "intelligence" of how to route packets must reside in the routers, not the end boxes. So your default gateway must be one directly accessible on the same subnet; that gateway must then figure out what to do with the packets to get them wherever they should go. 

To get a recent long-term support kernel purpose-built for CentOS 6, consider using kernel-lt from ELrepo. 

The file you want to create is , in each user's home directory, from which the MySQL client will read configuration directives for each corresponding user. 

Here, causes it to remember 12 previous passwords. For further detail, see Linux Password Security with pam_cracklib. 

Your ssh private keys have likely been compromised, since someone had a valid private key for logging into your root account. The fact that someone didn't log in from a permitted IP address saved you from further compromise. Nevertheless, this is a significant compromise; it suggests that your workstation (or other machine you typically work from) was compromised. You should treat every workstation and server you touch as potentially compromised. Format and reinstall your workstation(s). Revoke/destroy all of your existing ssh keys and rekey everything. Change all passwords. Strongly consider wiping and reinstalling any servers on which you have access to log in with this key. 

Which also eliminates the need to use an evil , and doesn't require you to have Rails serve static files (which is slow). 

Run on the device. It should automatically detect the new size of the iSCSI target and resize the PV. After that point you should be able to use the additional space to expand your logical volumes or create new LVs. 

Gives the user access to read files and traverse directories under , and applies the same ACL to any new files or directories created later. Once applied, user home directories no longer have to be world-executable, (e.g. ) thus users can no longer read each other's files, but nginx can. Note that if some directories need to be writable by the web server, you can set those up on a case by case basis by changing both instances of the permissions to . For example: 

One of the Passenger developers provides a yum repository for RHEL/CentOS. (You need EPEL to use it.) This is probably the easiest way to get up and running. 

My guess is something's gone wrong with yum's internal cache. I'd start from a known good state: First, connect the computer to the Internet. Second, flush out yum's internal cache: 

Your iptables rule allows incoming connections to port 3306, but only on the eth0 interface. You are probably trying to connect from a different interface. To resolve the issue, replace the rule with one that allows the traffic you need. For instance to allow traffic from all interfaces: 

ssh to the remote system and shut down as many services as possible. Basically everything but the ssh server itself. From your local system, capture a copy of the running disk image back to your local system: 

Apache doesn't log the hostname by default, though you can change your Apache log format to log it. I prefer to log it in the otherwise useless second field, for example: