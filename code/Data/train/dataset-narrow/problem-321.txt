I have some pre-8.3 ASAs that I'm planning to upgrade to standardize on the new NAT semantics. I am aware of the big changes between pre-8.3 and 8.3+ from these two great Q&As. What is unclear to me is how to choose from the numerous 8.3+ ASA software releases available to me. This is what the software release tree looks like in my Cisco support portal: 

Post-Replacement Tests At this point, at least basic connectivity should be working on the ASA. To prove the different aspects of workingness, do at least the following: 

I have a failing Cisco ASA that is being replaced under a support contract. It is a single-point-of-failure in production at a branch office that can tolerate downtime. I will physically replace the device at that site myself. Prior to the hardware failure the configuration was just fine. My goal is to get back to the working state prior to the hardware failure. While I have worked a fair amount with ASAs I have never had to perform a hardware replacement so this is new territory for me. What I am looking for is a checklist, runbook, or procedure to serve the following purpose: 

Suppose also that is connected to the internet with a Cisco ASA as its gateway at . The purpose of and is to allow us to replicate as closely as possible the servers on the network so that we can safely test changes to them without impacting production. If you naively replicate the servers on the network and connect them to then they retain their IP addresses as shown in the above table. Now suppose I want to also provide a connection to the internet for the network through the same Cisco ASA. It seems like this would be a problem because the ASA would base its routing decisions on IP addresses of which there are now duplicates on different VLANs. This leaves me with the following questions: 

Is there a way to provide internet access to multiple VLANs which incidentally have the same subnet behind a single ASA? If so, how is this acheived? How would the ASA know to which VLAN to send a given packet if both VLANs have the same subnet? Is there a better way to provide internet connectivity to a test network containing servers with the same IP addresses as production? 

My question is: Is that really as simple as it sounds? A simple calculation on which port number is lower or is there more to it? What would happen if I had Po1 and Fa0/1 and all other factors were the same? 

Has anyone done this before and did they get it working on a SRX? Have I missed something? According to the examples there isn't much config needed to make this work. 

I have a Juniper EX3300 switch that has a 10Gbps connection to our upstream provider. Our upstream provider (lets call them Provider A) passes us various connections on tagged VLANs over this single connection. Transit and interconnect etc. We now have a 3rd party provider (Provider B) who has a pop in another data center that we need to pull into our network. It was agreed that Provider A would run a L2 interconnect to their pop and then pass their traffic tagged down our 10Gb trunk. This was all fine until the requirement has changed. Provider B now needs to send us their customer traffic tagged on various VLANs. This means that we need to somehow accept VLANs in VLANs (Q-in-Q). It looks to me like the EX3300 can only use the dot1q-tunneling options within the vlans stanza and you can't mix and match VLANs using dot1q-tunneling with VLANs that aren't. Does anyone have any ideas of how I might be able to run both on my trunk port? EDIT1 ProviderB is passing us Customer1's traffic tagged on VLAN 1201. ProviderA is passing us all of ProviderB's traffic tagged on VLAN 1755 

Example The below shows the interfaces are all in the default instance except fe-0/0/6.0 which is in a routing instance called 

and if I have any issues on site A I can move a.b.c.1/24 to a device on site B and everything carries on working ok. I don't know 100% what our provider uses to achieve this apart from a VRRP instance to provide some resilience for gateway address. Now I am looking to install an exact copy of this setup as a backup connection. For now all I wanted was for another provider to do exactly the same thing just with a different IP range (we don't have a PI range). This time round I have been told that the only way this can be done is if we establish a BGP peering session to them (the backup provider) and advertise the (new) IP addresses we are using at each site back to them. To me this didn't sound right but then I haven't done a lot of work with BGP. Is it possible that you can advertise the same IP range to a single ISP from two different sites and be able to achieve what I described above? 

At first glance you might think that, as C could join the network created by A, probably C could also communicate with A (of course in a true ad-hoc network it doesn't matter who initiated it, this is just a fail-safe test). In that case, it means that this network has a multi-hop feature. However, this is not the case. Nodes can only communicate with other nodes within WiFi range, therefore, they don't participate in routing or forwarding data. 1st Issue According to Wikipedia, in a wireless ad-hoc network "each node participates in routing by forwarding data for other nodes". How do we reconcile this definition with the current ad-hoc network of Windows? Technically, is it correct to call a single-hop network by ad-hoc? What features can we expect from the Windows Ad-hoc Network? 2nd Issue What would be the technical challenges to develop a protocol for multi-hop ad-hoc network (if there is any)? Current computers would be too slow to forward data based on routing tables??? 3rd Issue If your computer has an Ethernet connection with the Internet and you setup a wireless ad-hoc network, you may share your internet connection within nodes in the ad-hoc network. However, the other nodes only in the ad-hoc network are not allowed to share such internet connectivity (a popup window appears complaining about a problem with automatic IP address). What are the technical challenges to allow all nodes in an ad-hoc network to share internet connectivity (besides the multi-hop issue aforementioned)? 

Recently I was doing some tests in a small wireless ad-hoc network and one interesting feature I've found was: 

Therefore, the Network Layer (#3) should provide services for the Transport Layer (#4) and not the other way around. However, there are some routing protocols (Network Layer) that uses UDP and TCP services (Transport Layer), for example: 

Recently I was puzzled by the following articles about Raw-Ethernet frames: RAW ethernet vs. UDP Message Passing Using Raw Ethernet Frames Briefly, both of them discusses that it is possible to establish a point-to-point communication using only the Ethernet layer. In that case, the overhead of the IP and TCP layers would be avoided and the throughput would increase (roughtly 50% according to some benchmarks). I would like to do a similar test but in a wireless environment. However, I have some issues: 1st Issue Is there any hardware constraint (ie: the Wi-Fi card) that might undermine such effort? 2nd Issue Both articles chose the following frame format: Preamble | Delimiter | Mac Headers | Payload | Pad | CRC As far as I know, preamble, delimiter, pad and CRC are added by the Ethernet device to every frame and can not be changed via software. I guess with Wi-Fi devices is similar. Therefore, is there any hardware constraint (ie: the Wi-Fi card) that would undermine removing the Mac Headers? ps: consider that the communication will be on a point-to-point basis, ie., there will be no routers, switches, bridges, ... no internet connectivity. 

Don't Overspecify the Work to a Professional Assuming you're using a qualified professional to perform the install, you should be careful not to overspecify things that don't actually matter to you. After all, you are hiring them, in part, because they have innovative and up-to-date capabilities, techniques, and practices that you might not even know (or care) about. For example, discussion about tools that an installer uses is overspecification. You care about the product they produce, not how they produce it, right? The most common consequence of overspecification that I have seen is that installers turn down your work. I have seen RFP/RFQ/SOW documents that included enough unproductive, irrelevant, unclear, or contradictory details that no installer who looked at it was interested in the work. The professional installers I've worked with don't take second looks at jobs that seem problematic; the first impression you make counts. You can really get yourself into a bind with documents that overspecify work. If you widely distribute a badly-formulated RFP in your area you can easily burn through all the capable installers in your area. Things you probably should specify 

I opted to use the Cisco support methods of swapping out my ASA. You might also consider Ricky Beam's suggestion to swap CF cards which is unsupported by Cisco 

Vent the Device into the Room's Airspace If you seal off the device from the "plenum airspace" and vent it into the room, then, from the point of view of smoke, fire, and air handling the device is no longer in the plenum but rather in the room. This way the device can physically occupy the space above suspended ceiling without requiring a flame-test rating for plenums. Duct the Return Air Usually the "plenums" where I am inclined to install equipment are in the return air path. I have found that it is often a straightforward matter to duct the return air from the room to the air handler. There is good, easily-installed flex duct that I have used for this purpose. By ducting the return air, the volume above the ceiling ceases to be a plenum thereby relieving the plenum-rating requirements. This also has the added benefit of improving indoor air quality because you no longer have that giant plenum filled with all manner of awful things off-gassing and throwing particulate into your air supply. 

We have a straight forward internet connection which has a small /29 IP range. The connection is Ethernet and our default gateway is the first IP in the /29 range. Our ISP has just given us a secondary IP range, a /28. They have told us that we need to use the first IP of that range as our default gateway. Now the device it's connected to is a Juniper SRX. Initially I thought this wouldn't be an issue but it turns out it's more tricky than I thought. 

For more details see here: $URL$ Note: It took a JTAC engineer a few weeks to work this out after building it in a lab and testing it. He is going to try and get the documentation updated to note it only works in packet mode! 

I have a SRX 220 cluster running Junos 12.1XD46-D30.2. My ISP provides me with a /27 public IP range. Lets say 80.0.0.64/27 The way this is configured is that they use the first two available IP addresses for a VRRP redundant router setup. These are our default gateway IP addresses. I have configured my SRX interface reth0.0 to use the IP address 80.0.0.71/27 

Once that is done there is no performance impact from the apply-groups statement on the running system. Obviously logging itself will have an impact on the performance of the device. (check out the CPU use for eventd) I personally use both methods. If the device is a low end device or processing jitter sensitive traffic then I tend to only log in the required policies rather than everything. On other devices I will use the apply-groups method to globally log everything and then use the apply-groups-except method where I don't want to log certain traffic. 

Which according to Juniper $URL$ is supported on the SRX/vSRX and should add layer 3 and layer 4 information to the hash algorithm. Relavent bits quoted: 

We have equipment stored in two data centres. Currently we have a layer 2 network that spans both centres. This layer 2 network is provided to us by our ISP and they also run transit on top, a single IP range that also spans both centres. This forms essentially an active/active connection Both sites have the same default gateway This means I can use