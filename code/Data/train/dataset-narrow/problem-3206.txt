As @Peter Green suggests, I would definitely recommend wrapping the wire around the current clamp - indeed I would wrap both Live and Neutral in opposite directions so this will act as a multiplier! Given the quoted maximum of 200A (for a single core) and the OP's Switzerland location where single-phase plugs are rated at 10 or 16 Amprms at 250 Vrms then 10 / 6 loops of both wires respectively means that a 2.2KW load (divided by a nominal 250Vrms) would produce an 8.8rms Amp current which if multiplied as suggested by 2x10 or 2x6 respectively would appear to be 176 or 105.6 Arms . Using the 1mV/A conversion factor of the clamp this would yield a representative voltage of 176 or 105.6 mVrms. One thing that is not immediately obvious is that the Digital-Multi-Meters that the clamp is designed to be connected to is a High Impedance (probably of the order of 10 MOhms) to achieve this you are probably going to want to use an Op-Amp circuit - however you also want a rectified and smoothed DC voltage to feed into the Pi - whereas the voltage you are getting is an AC one. In this situation however the alternating voltage is in you favour - you can capacitively couple the AC voltage into the Op-Amp with a gain of somewhere between 10 to 20 times (very easy to achieve) and capacitively couple the output to a half wave rectifier (diode) feeding a low-pass filter, then you can configure things so that you get a voltage that is of a magnitude (but clamped to a maximum of 3.3V !) that the Pi can monitor directly to confirm that a certain current level has been reached. The only proviso is that if you are splitting a mains lead so that you can wrap the individual (live and neutral) cores around the clamp is that that will remove one of the two layers of insulation originally in the main cable, either you will need to enclose those wires and the clamp in a suitable box or you will need to make an in-line "adapter". My suggestion for this adapter is a "loop" of main cable sufficient to wrap around the clamp the required 6 or 10 or whatever number of times and two more short lengths of the same cable with a plug on one length and a socket on the other and a suitable terminal block and an enclosure with five or six terminals. Wire the "plug" lead to three terminals and the "socket" lead to the other three (or two and use a common (the middle) terminal earth for a five terminal block case). Then you wire the neutral and earth wires from one end of the "loop" lead and the live from the other end to one set of terminals and the other wires to the other set of terminals. The idea here is to get the current flowing in the live wire in the "loop" to be flowing in the same direction as that in the neutral wire - in a normal cable they will be in opposite directions. Now we have that reversed we can simply coil the whole "loop" wire around the measuring clamp with the properly doubly insulated cable safely in the clamp, and provided the terminal block is properly put together with clamping/strain relieves on all four cables (the "plug" one in, the "socket" one out and the two ends of the "loop" cable) and securely closed to enclose the individual cable wires you will have a "safe" construction - just do not leave any magneticly sensitive things like credit cards in the vicinity of that loop when it is powered up and current is flowing! 

in which the name you specify is "<name>" and the password "<password>" ? Finally, have you set up your systems so that the server is definately at 192.168.0.150? Many people will direct you to set a static IP address on the Server but a more robust and elegant method to ensure this is to make your DHCP server (often your Broadband Modem/Router) reserve the required IP Address for the relevant MAC for the network interface on the Server that will be used to provide the share... 

From the Datasheet for both devices (section "7.1 - Addressing" on page 9) we can see that - as a "solder-blob" forces a "L" and an open pad is allowed to be pulled up "H": So mine (being a "8754A" and having all pads open or "H") will have an address of 0x3F - and two of yours will need to have their address changed from the default case. 

Note: this interface - or at least the power supply notification has NOT been adopted by the new fangled - even though, by what might be regarded as a bit of cargo cult programming it does try to ensure that the pipe exists. On the other hand this does exactly what I want it to do on my RPi system! 

Given that you are able to reach here to the Stack Exchange site I would presume that you have a router that should be providing IPs, possibly in the 192.168.x.y range where x is often 0 or 1, and y is possibly 1 for the router and then goes upwards for other things connected on your LAN. This error can be caused by IP address clashes, especially if some devices are set to fixed ones (for instance if they are a server/gateway and you want to fix where they are - like your broadband router) and your only dhcp server (normally, again, your router) has not been told to NOT use that fixed address as one for the DHCP pool. I'd suggest getting into your router's configuration and checking the range of addresses used for dhcp does not include any statically assigned ones configured locally on a device itself. Note that many routers do permit you to "reserve" a specific address for devices which you always want to have a fixed address for (e.g. I have one device used as an IPv6 tunnel gateway and local storage server which it is convenient to always be 192.168.1.2 next to the IPv4 router on 192.168.1.1) which is another way to have a fixed address AND for it to be handled by dhcp rather than by locally setting on the device itself. Unlike the previous answer - which I don't have the reputation to comment on (yet) - I'd strongly urge you NOT to enable UNLESS you have also sorted out a key to secure such logins. By default Pis running Raspbian do not have a root password set so if there is external access to your LAN the Pi will be very insecure - and once you sort out your IP issues so that it is reachable it will be vulnerable. 

Obviously I could do with adding myself to sudo, games, video and audio as well but this will give you the idea... Note that being added to/removed from a group will not take effect immediately without further steps, but will do upon your next login! 

Now I haven't got the Korean locale currently installed but a quick fixed that for me, so I can then do: 

In either case I'd check the 3.3V rail again with those Arduinos completely out of the circuit. You may get around the first case with a 5V to 3.3V BI-DIRECTIONAL interface - I got a two channel one recently on a well know On-line Auction site (hopefully the link should not rot too quickly) which specifically noted that it was suitable for use on IIC. 

Using a bread-board is usually a temporary means of allowing you to work out the circuit you want before transferring the design to Veroboard or just for something that you only need for a short while. For instance I recently needed to check that all the GPIO pins were working as outputs on a RPi that I had bought second-hand; I rigged up a circuit that enabled me to check that six pins at a time were operating and were not shorted together. I put something together with six instances of a NPN transistor, a series base resistor (to a RPi pin under test) and an LED and a series resistor in the collector: 

One suggestion that has not yet been made is to use a PC with a card reader/writer (or if you are really well equipped, two of such things, which means you can do without the stashing mentioned below) to transfer the files between the Pis in an "off-line" way. If your PC is a Linux machine it will probably auto-mount the card(s) as you insert them so it just becomes a question of finding an area to temporarily stash the files between reading and writing the two cards. For those of you who still remember what a floppy disk is, this process will seem reminiscent of disk swapping and MSDOS ...! 

Any line in an aptitude tab beginning with can be expended by selecting that line (with / arrows) and hitting and lines collapsed in the same way. Use - to access the menu and don't forget to do a - to update the package list (aptitude and apt-get are two separate utilities and each needs to have it's lists updated to keep their idea of what packages are around up to date...) Red background lines are problems/warnings (but only if on something that needs to be installed or you want installed); Green lines are packages to be installed; Purple lines are packages to be uninstalled and Cyan lines are packages (on the preview tab) that will be updated (on other tabs there will be a purple/green pair of lines). Bold white foreground lines are packages that are currently installed and not changed and dim white are un-installed ones available but not installed... Hope this helps. 

According to the flipping manual, which I hope you have found the chance to read, normally will look in order for then in the xinit library directory for a system default script to run - but as you have provided command line client arguments instead () that is used instead. You might find it instructive to look for the system wide script for clues as to how things are normally done. I think you may get somewhere with further arguments after a on the line that you use, arguments after that symbol are server arguments, one of which may be relevant is which according to the X server command line help: 

Yes, that should be fine - I'm doing something similar myself and it helps to compensate for the voltage-drop across the fraction of an ohm resistance the F1 "poly-fuse" has (which is in series with the power input before it goes to the rest of the RPi circuitry). There is one proviso though: you should trim the supply so the 5v pin is at the desired value (e.g. 5.0V or slightly above) with as much of anything that is attached to the GPIO 26/40 pin connector disconnected and any USB equipment that might not always be attached not being attached. This is because the voltage drop across F1 will vary in proportion to the current through it (in accordance with Ohms law provided the current is not so high that it starts to heat up and the resistance increases and it makes more heat and the resistance increases etc. in a positive feed-back way) and you want to adjust your supply when the current is at a minimum and thus the voltage drop is also at a minimum so the "adjusted" voltage on pins 4 (and 2) is as high as it will get. As you might imagine if you tweak the voltage on pin 4 to the upper level (5.25V anyone) under maximum loading, when you remove some of the loading, e.g. by unplugging a USB device, the current through and the voltage drop across F1 decreases and the voltage downstream of it - to the rest of the RPi circuitry and pin 4 will rise and then would go above the maximum... 

Um, you need more than what you have got, to connect directly to a USB device as you have tried. For starters, USB data is carried differentially over a pair of data leads (D+ and D-) and whilst most of the time one is the inverse of the other the voltage levels (Wikipedia link) are 0.0-0.3V (low) and 2.8-3.6 (high) for low- (1.5Mbs) and full-speed (12Mbs) rates - and those are relative to each other - not to ground; high-speed uses ±0.10V (low) 0.36-0.44V (high) but again that is relative to each other NOT to ground so it is quite possible for the individual voltages to be over the 3.3 Voltmax for the GPIO pins! You have also only connected the Data+ line and not the Data- one but this is largely academic as your current circuit cannot IMHO work.