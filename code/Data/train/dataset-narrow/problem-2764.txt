For a section of my game, instead of having a perspective projection, i would like to display an isometric view of an object. So i don't want things to appear smaller if in a distance, etc. Basically a proper isometric image. Is there any way to do this in XNA? 

Ended up using the example on the site. Realized i was using it wrong and should have used it more like a library. 

Looking at websites such as mixamo.com or some game's development systems such as the animation editor for Overgrowth ($URL$ i see that the skeleton in these situations is automatically being applied to the models. I really don't expect (though wouldn't mind) code that does this, but i really am looking for some sort of pointer in the direction, or how they go about this. If any of you have done this, or know how to, please do reply, i don't want to spend the next week trying to crack it, then another to actually code it :P Thanks all :) Just for a bit more information, i am in C# working with OpenTK with my own custom model loader, etc. but i can easily adjust any given code / concept to fit with mine :) 

lets rephrase it a bit you have a point and a direction , find the smallest such that has one of its coordinates on a whole multiple of cell size in the same dimension. then it is easy take p.x and find how much you need to go in the x direction so that we are on a multiple of width then you find how many you need to add take to get there, if d.x is negative then replace with and negate v.x then you do . repeat for each of the axis and take the minimum of the s 

Exactly, the actual values in the resulting matrix is just the coordinates of the view direction (), up and right vectors next to each other; 

I'd have rendered 2 different images; first the full background and then the characters and then the foreground image which I would have pre-rendered, Ã  la painters algorithm when panning the camera you can offset the further images less for a parallax effect to create some perspective 

I made an isometric game in flash once. Never finished it (unreliable artist) but for me, sorting was simply a matter of organizing according to y coordinate. The further down on your screen the block is, the closer to the top layer it should be. Your character, for example, in the stuffed up picture. The Y coordinate of his foot is greater than the y coordinate of the block that overlaps him. Therefore, he should be in front of it, not behind. Then if you start having multiple layers in your world, each individual layer of the world is sorted individually. Then drawn bottom upwards. Just comment if you need more/better explaining 

Diverse terrain can be created using various arithmetic adjustments of randomly generated numbers. As I'm sure you realize, adjusting your generated values (for example, multiplying by two) would change the result you have. If you are familiar with programs such as Photoshop or Paint.net you've probably heard of the concept behind multiplying colors, or burning, adding, etc. These are pretty simple concepts which wouldn't take much googling at all to find code for. If you had a variety of heightmaps, using these effects you could start creating pretty diverse terrain. So where am I heading with this? Expand your skills with random generation. Change your code so that it merely generates a single canyon throughout a flat terrain (or 'flat' around your planet). Try using diamond square algorithms and mucking around with the variations to create extremely mountainous terrain. By creating all sorts of effects, you're essentially creating a library of algorithms which you can now mix and mash to get your final product. 'But these are still all the same effect around the entire planet!' Well this is where those image effect concepts come back in. Say for example, I am making a terrain out of two perlin noise maps and a diamond square generation. For a single vertex, I generate the height as usual for each map. This may give me the values p1, p2 and ds1. In your current implementation, you are straight off using p1 as the height. What I am suggesting, is you use something like (p1 * p2) + (ds1 * (1 - p2)) as the height. Just to clarify, the 'lower' the second perlin noise point is, the more the vertex is based off the first perlin noise map. the 'higher' the second perlin noise point is, the more the vertex is based off the mountains diamond square calculation. Given the nation of perlin noise (especially when scaled up a lot), this will create effects where some patches are mountainous, and then that dies out to be the hilly nature of perlin noise in other areas. Of course this is an extremely basic example for the potential behind the idea. TLDR; mash multiple terrain generations together, not necessarily simply with averages or additions. Multiply some generations by others, then add them to a third and then multiply by a fourth! Think photoshop layer effects 

just append the data and adjust the indices: if the hilt has X vertices and the blade has Y then you first put the X vertices of the hilt and then put the vertices of the blade. Do the same for the indices but add X to each index of the blade. This will then force you to use only a single texture for the entire model. 

You don't need to rebind the VAO or reset the vertex attributes. You can just overwrite the data in place: 

method 1 can be expanded to use arrays to abstract out the number of matrices in the code: (assuming java) 

option 1 divide your area up into a grid and assign each object to a cell according to there position, now you only have to check the cell it is in and the neighbouring cells (those only if the new object gets close enough) option 2 sort the objects according to 1 axis and then you can easily find all objects that overlap a certain interval on that axis (this breaks down in dimensions higher than 2 though) 

OK been googling nonstop for ages... My problem is, i need transparent models in my game. After a lot of annoying fiddling around with my code, i changed the blendstate to alphablend. This allowed me to start having transparency in my models. However now i face another problem. Any other part of the same model that is meant to be view THROUGH the transparent part of the model, is not shown. Basically it is only showing the outermost part of the model, even though an inner part is meant to be seen through the transparent part. Any help? Thanks 

i want to be able to loop through a hole bunch of textures, and render them on an object. I then want the rendered image to be placed onto a texture2D. The point? well hopefully i will end up with an array of Texture2D's containing a model with multiple skins. Here's my code: 

In my limited experience with atomics I haven't found a way to have the threads pick their buffers without needing a lock. But the critical section is only a few memory operations so it's not a huge deal (a busy-wait lock would suffice most of the time). 

takes I believe a rotation while angle is an rotation. In other words take the difference between the current angle and the wanted angle and pass that to rotate. Or pass just the angle into . 

Lens flare is always in front of any thing rendered so you may as well just disable the depth test when you draw it as the last thing. A sun/skybox can be drawn first with depth writing disabled. Changing the size is as easy as doing the perspective divide in the vertex shader explicitly and clamping the Z to -1,1. Or instead of putting the far plane at your sun, put the sun at the far plane. 

So after a bit of mucking around i sat down and took a different approach to the problem. Now I have it all working, and have put loads of comments in so hopefully anyone else with the problem will be able to use this as well. The only things that need to be changed to put into your own project, is: filedOfView, minZ, maxZ, minX, maxX and groundElevation. 

I decided it was time to stick in a bit of multiplayer into my game, but came across my first hurdle when i quickly downloaded an example from the XNA website. It prompted me with a login to live. However i really DO NOT want my game to use live accounts. This is PC btw. Basically i wanted to know, is it possible to have multiplayer with XNA without logging in through a live account? Also, is it better to stick with the built in XNA networking, or use a totally different library such as lidgren? 

look at the security framework in java, which is the same framework that should prevent java web applets from deleting for the scripting engine you can then decide exactly what the script has access to, do be careful because opening holes can have unintended consequences 

If you have a method of getting the quaternion of the rotation matrix then just get the lookat matrix and use that method. otherwise you can get the rotation from (0,0,-1) to the look vector, This results in a lookat transformation with an arbitrary up. then find that arbitrary up with and then find the rotation between that and the resulting up with the look vector as the rotation axis. Concatenate the results and that will be the final transformation. 

you first create a set of parameters that you will generate, for example elevation, humidity, temperature then you can define a function that will return a biome from any combination of these parameters how you generate those parameters is usually with perlin or simplex noise but you can let it depends on other (previously generated) parameters like elevation and prevailing wind to create a rain shadow.