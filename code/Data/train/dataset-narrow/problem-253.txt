The layer-3 packet gets encapsulated in a layer-2 frame before it goes out, so, in effect, the address on the envelope is the MAC address. ARP (Address Resolution Protocol) gets a layer-2 MAC address from a layer-3 IPv4 address. You PING to a layer-3 address, but need a MAC address to send the layer-2 frame. When you PING the layer-3 IPv4 address, you must ARP to get the layer-2 MAC address in order to know where to send the frame. IPv6 uses a different process. 

The MTU on any given link is the MTU on the link. What PMTUD does is to discover the smallest MTU of any link in the path from one host to another host. Because network routing is dynamic, the path may change, so the smallest MTU in the path may change. If you are concerned about the MTU in your business network, that will not change, unless you make some type of change in your business network (things like link failures or bringing up new links can change the path). Packets are routed one packet at a time, without regard to any other packets, so a change to a network can change the path taken by packets, even within a single packet flow. You should have some type of monitoring on your network to inform you in the case of failures or other changes. The real concern is the MTU between two hosts across the public Internet, where paths (so possibly the smallest MTU in the path) do change all the time. 

Edit: Based on your edit of the command, your redundant supervisor slot is not actually using any power. Your switch simply doesn't have enough power to power the chassis and all the line cards you want to power. The 6748 line card uses a lot of power (a significant chunk of the power supply output). Not all the power of the power supply is available to the slots; much of it is used to power the chassis itself. You could get a bigger power supply (the one you have is pretty small for a 6509; more appropriate in a 6506 or 6503), or you could add a second power supply. Depending on your power supply, you may be able to use 220V to increase the available power. 

Per your comments: The LAN diagram to which you linked is something that cannot be reasonably supported. Yes, networks sometimes grow in an unreasonable manner, but that network would need to be redesigned to introduce layer-3. We no longer live in the layer-2 world that existed when STP was developed, where it was, "switch where you can, route where you must." We live in a layer-3 world, and almost nothing requires you to have a large layer-2 LAN. You can drive just about any protocol to its limits, but that should be avoided. Recent best practices really limit the usefulness of STP to be a failsafe because depending on STP can make your network more fragile, and experiencing an STP problem will render a LAN useless. With a LAN, such as you depict in the drawing, a business can lose millions of dollars per hour/minute/second due to STP problems, which are notoriously hard to correct. No sane business will allow such a LAN. STP, itself, has some default values for things like diameter, and you change those at your own peril. 

Directly connected networks Statically configured networks Networks learned through a routing protocol 

You have not set the clock rate on the DCE side of the connection. The command is . See Cisco IOS Interface and Hardware Component Command Reference. Another problem is that you have a network statement that does not match the actual network. Your interfaces are in the network, but your BGP network statement is for the network. BGP will only advertise the exact network that exists in the routing table, and if the network statement doesn't match, it will not be advertised. You are also creating a routing loop with your redistribution. eBGP has a lower AD than EIGRP so any routes received from both will prefer eBGP. You should be careful about redistribution. You can use tags and communities to prevent receiving routes originating in your AS from being received from a different AS, or you can drop the redistribution in BGP and only use network statements. 

The RA IPv6 packet will have the router address as the source IPv6 address. A host doesn't really need to know the router's IP address to send packets to other hosts. On a LAN, frames are sent to a layer-2 (MAC) address. The layer-3 IPv6 packet will have the destination host IPv6 address, not the router address. If a host is on a different LAN, the packet will still have the destination host IPv6 address, but the frame will have the destination MAC address of the router. 

You are going to have very mixed success with the different Cisco OSes, and different versions (IOS, IOS-XE, NX-OS, etc.) and how things are presented. For IOS, the command shows what's in the RIB like , and I suppose it depends on the IOS version, but I see output on single lines where shows output on two lines. The command shows what's in the FIB, in a very compressed format, just: 

As Zac67 points out, some versions of ethernet, e.g. 10BASE-2 and 10BASE-5, actually used coax. Ethernet uses CSMA/CD (Carrier Sense Multiple Access with Collision Detection). Only one device on the coax can transmit at a time. A device must listen to the carrier to see if another device is sending, but it does take time for a signal to fill the medium, so it can happen that two devices start sending at the same time. If two devices try to transmit at the same time, you get a collision, and both devices back off for a random time so that they don't both start sending at the same time. This is really a rather large subject, and there is much literature on it if you search. 

What you are asking for is not really possible. Ethernet at layer-2 is just a group of equal peers (all look like like they are directly connected to all others). 

Yes. There are many layer-4 protocols. You can get the full registered list at Assigned Internet Protocol Numbers. There are things like IGP protocols, e.g. EIGRP or OSPF transport protocols that do not use port numbers. Port numbers are addresses for some transport protocols. Most of the registered transport protocols do not use port numbers. Some use other addressing, and some do not use any addressing. The port addressing allows an OS to multiplex the protocol, but many transport protocols do not need to multiplex, or they use something other than port addresses to multiplex. There may be only one application that needs the data being transported by a protocol. With something like TCP, you will have many applications using it for communications, but you may have a transport protocol dedicated to a single application. 

BGP, like other routing protocols just looks at layer-3 to route traffic. BGP does use TCP (layer-4) to exchange routes with other BGP speakers, but it is a routing protocol, and it only routes at layer-3. I'm not sure why you would consider BGP an application-layer protocol. 

You can simply use the IPv6 delegation assigned by your ISP. Each site should get a delegation shorter than (see RFC 6177, IPv6 Address Assignment to End Sites) as a delegation. You usually use the first as the transit network to your ISP, and you can then assign the other networks from the delegation as you would like in your own network. 

Your layer-1 (cabling) labels really have no relation to the layer-3 (IP) addresses. You can probably go into the network devices and look at the ARP and MAC address tables to figure out to which switch port a device is connected. Beyond that, you will need to trace cables and try to relate closet labeling to the labels on the floor jacks. This is why using DHCP is so useful since you don't need to manually change IP addresses on the hosts. 

No, there isn't. Switches are transparent devices. The frames which the host sends will be the same frames as the host (a router is just a host to a switch) on the other end of the switches receives. Frames only get modified on trunks, where a VLAN tag may be placed, but then removed as it reaches the next switch. Managed switches just have a virtual host which manages the switch on a VLAN attached to the switch. Managed switches are still transparent to any traffic traversing the switch. 

What you need to understand about the IPv4 TTL or IPv6 Hop Limit value is that a router (supposed to be the end-host, too, for IPv4, but most OSes don't do this) will decrement the IPv4 TTL or IPv6 Hop Limit when it receives a packet, and it will discard the packet if it decrements to . That means that a packet with a IPv4 TTL or IPv6 Hop Limit of entering a router will result in the router discarding the packet because it will be decremented to . 

A network must be routed since there is no default gateway for a device on it to use to get to addresses off the network (every other address). In some cases you may see a route like this which is also contained in another route in the routing table. For instance, Cisco routers with later IOS versions will show a route for the actual interface addresses using an , but the network route will show with a . In this example, the route is the address applied to , while the route is the network connected to that interface. 

The simplest way to achieve a failover is by using floating static routes. You are going to need a default route () to your ISPs. Cisco has AD (Administrative Distance) that basically tells you which of identical routes is preferred. Static routes normally have an AD of (lower is better, like golf), but you can give a static route a specific AD. When an interface goes down, the route is withdrawn from the routing table, and an identical route with a higher AD will then take over. For example (where is ISP 1 and is ISP 2): 

If you didn't save the configuration, you could just restart the switch, but you will need physical access to the switch. You may be able to get someone at the site to restart the switch for you. Simply unpluuging it, waiting a few minutes, then plugging it back in should work. Also, Cisco maintains a Password Recovery Procedures web page with links to the various device recovery procedures, but you are going to need physical access to the switch to perform the recovery procedures. 

Cisco maintains many documents, and all you need to do is search. For example, ASA TCP Connection Flags (Connection Build-Up and Teardown): 

You could try something like this to have two separate routers for the same networks on both switches (the VLANs on the two switches): Switch 1: 

Without the specifics of the ethernet standard supported by your SFPs, and the short haul distance, it is hard to determine the problem. Gigabit ethernet at 1310 nm wavelength on single-mode fiber is good for 5 (1000BASE-LX), 10 (1000BASE LX10), or even 40 (1000BASE-EX) kilometers. Suppose you are using it for a distance measured in meters instead of kilometers, the light signal can be too powerful and overwhelm the receiver. In such cases, you use optical attenuators to cut the signal down to something that the receivers can handle. Your cable vendor should have tested and provided you with a report for all the cables that were installed. You need a certain amount of loss that will depend on the specific SFPs. The SPF manufacturer can tell you the power output and correct receiving power range. 

I think you need to understand a little more about the network layers and how a device implements a network stack. This question is almost off-topic as it is really particular to the OS running on the device, but I will try to give you a general idea. In a device, you will have a physical interface at layer-1, and your ethernet card with two interfaces has two separate physical interfaces. The card will have a driver that installs in the OS, and the driver will have the layer-2 (ethernet) software for each interface as separate interfaces. The OS usually implements the layer-3 (IPv4, IPX, IPv6, AppleTalk, etc.) and layer-4 (TCP, UDP, etc.) software. The layer-3 software registers with the layer-2 software so that the layer-2 software knows where to send traffic up to layer-3. An ethernet frame header has an EtherType field that tells the layer-2 to which registered layer-3 module the frame payload should be sent, e.g. 0x800 is for IPv4, and 0x86DD is for IPv6. IANA maintains the IEEE 802 Numbers for the various EtherTypes. The layer-3 module registered with the layer-2 module for an interface will be assigned the layer-3 address for that interface. The same type of thing happens for layer-3 and layer-4. For example, IPv4 has the Protocol field in the IPv4 header (IPv6 has a Next Header field that is the same thing). Again, IANA maintains a list, Protocol Numbers, that tells IP to which registered layer-4 module it should send the packet payload.