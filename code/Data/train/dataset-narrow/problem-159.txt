The originating host will pick a random port from which to initiate a conversation, in this case, it was port 64009. The destination host will reply to the originating host on that port. Machine A sends from port 64009 to Machine B port 21. Machine B will replay to Machine A port 64009. The next time Machine A tries to start a conversation, it will use another randomly chosen port, probably not the same one, and Machine B will need to respond to that port. FTP uses two ports: port 21 is the FTP Control port and port 20 is the FTP Data port. If the two networks use the same addressing, Windows has a bridge mode to bridge two network segments. If they are different networks altogether, that is what routers are for. 

You don't have a route to the ping source address () on R3 which goes back through R4. Your route to R3 from R1 is only for the network between R4 and R1, not the network on which the ping originated. You are not pinging and replying to routers; you are pinging and replying to addresses in the IP packets. Without a route back to the source address in the destination router, the reply will be lost. 

Back when the RFC for private addressing was proposed, classful addressing was still common. The reasons for the three address ranges are found in RFC 1918, Address Allocation for Private Internets: 

In the original ethernet specification, 64 bytes would fill the cable from end-to-end, allowing collisions to be detected by all hosts. The original ethernet standard also specified 14 bytes for the header, and 4 bytes for the frame check sequence. That is 18 bytes. subtract 18 from 64, and you get 46 as the minimum payload. Since then, you can add a four byte VLAN tag. So, with the VLAN tag, the minimum payload size is 42. Without the VLAN tag, the minimum payload size remains 46. 

Switches are transparent devices, and they simply don't care about the payload of a frame. A switch is only concerned with the source and destination MAC addresses, and a VLAN tag if the frame happens to use a trunk. A switch will use the source MAC address to build or changes its MAC address table, and it will use the destination MAC address to figure out to which interface it should forward the frame by comparing the destination MAC address to its MAC address table. 

Your Cisco VoIP phone is also a switch which negotiates a trunk link with the switch to which it connects. It shows up on both VLANs because it is on both VLANs. This is normal behavior. This is the reason you need to be careful when configuring port security on your switch. You would probably need to allow three connections, two for the phone, and one for the PC connected to the phone. 

If you are running layer-2 to a router, then the only network you have between the switch and the rest of the network is either an address on one of the VLANs between the router and switch, or, as John K. says, some Cisco switches have a physical management interface that must be connected to somewhere else on the network. 

What you fail to understand is that the addresses that can be assigned to hosts in a network start with but you are allowing all addresses starting with the and extending through the . Any address from to is covered by . What a router allows is not subject to what addresses can be assigned to a host in a network. 

Your question is very broad, but I will give you some broad answers because the detail is far too large for this site. You are also touching on topics not allowed here, e.g. protocols above OSI layer-4 and applications. 

See the drawing about where PIM is between routers, and IGMP is between the router and the hosts. IGMP snooping is a switch command which is not necessary for the operation of multicast, but it lets the switch snoop on the IGMP messages between the hosts and router. Even without IGMP snooping, you still need IGMP; the multicast listener application sends an IGMP message to the router to tell it to start sending the multicast group out the router interface. All that IGMP snooping does is to let the switch target the specific ports instead of flooding all the ports. The drawing shows the older CGMP instead of IGMP snooping, but the purpose is the same. 

That's one way. Another would be to place the IP address of the backup server in the server's host file so that it doesn't need to do a DNS lookup. 

With a very few exceptions, IPv6 will use networks: 64 bits for the Network ID, and 64 bits for the Interface ID. You may see for a host address, and or for a point-to-point link. When you see anything less than , e.g. , you are seeing a network block that is to be divided into networks. IPv6 notation only uses the CIDR notation, not a network mask. IPv4 addresses are 32 bits, so the maximum mask length is . IPv6 addresses are 128 bits, so the maximum mask length is . You should investigate RFC 4291, IP Version 6 Addressing Architecture, and RFC 5952, A Recommendation for IPv6 Address Text Representation. 

Cisco has all sorts of guides to configuring SNMP. For instance: Configuring SNMP. It is possible that some switches or IOS versions will vary. There are also some decision to be made, such as SNMP ACLs, which notifications, etc. You will need to make some decision and customize your configuration. 

A routing table will have entries for the directly connected networks, any static routes you have configured, and any routes learned through routing protocols that you may be running to exchange routes with other routers. The routing table entries for each network will include the interface to which traffic destined for that network should be sent. Based on you drawing: You could have three routes for the directly connected networks. You probably have a statically configured default route for the Internet, or you may be running BGP with the ISP router to which your layer-3 switch connects, in which case, you may have other routes learned from the ISP router. 

Ping uses ICMP, but traceroute doesn't necessarily use ICMP so different results are not necessarily unexpected. Some OSes use ICMP and some use something else like UDP. The traceroute seems to stop in the 185.52.26.xxx network on its way to the next network. Who owns that network, the ISP? It would be beneficial to have the owner of that network see what is happening since that is where the traceroute is failing. The network to which you are trying to trace could be blocking the traceroute, too. Both ping and traceroute use small packets, so the odds of an MTU problem are fairly small. Notice that the trace to Google goes a completely different route. There is some sort of routing problem. EDIT: For what it's worth, I can't ping or trace to the website, but I can load it in my browser. That has everything to do with my router configuration.