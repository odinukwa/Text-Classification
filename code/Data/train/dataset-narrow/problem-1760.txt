SSH will validate the server based on the signature of the public key used (a simple hash). It's up to the user to make sure that signature is valid (i.e. you usually need a secure channel for that also, in practice, clients usually just remember the first signature sent by the server and simply warn you if that signature changed). This means that validating the server (correctly or incorrectly) isn't going to be influenced by your selection of symmetrical encryption algorythm. That being said, I can more or less guarantee you that changing the symmetrical encryption from AES to RC4 isn't going to yield any noticeable performance improvement: even with a very slow (or starved) processor, the difference in speed between the two isn't going to be noticeable. if you need more information, someone actually performed a detailed analysis if the performaces of AES vs RC4 (including several mode of operation for AES) 

Open your PHP.ini and look for the "error_log" value. Make sure it points to a file where the IIS worker process can write. Also check the "error_reporting" value and make sure it includes "E_ALL". After that, open the file pointed at by the "error_log" value: it should contain more information about what broke. 

Your question is too broad, really. Explaining you all the details would be out of scope for this place (that's probably a few days worth of consultant work) so let me suggest to you a few steps that you should take first (since I had to answer the same question from several customers over the last 12 years, I'm starting to figure out what the pattern for getting these rights is): Get your requirements right I means, really, do that first. You state that you developed the application so you will need to go back to your developers and ask them to write the specifications. They should contains things like: 

AFAIK, you have two way of doing that: - Install a WSUS Server and don't push any updates to the machine group your TS server is member of (create one for this). - Disable automatic updates altogether and, when needed, do a manual update. There is no way to prevent an admin user from changing these parameters, but at least, it won't be automatic. You might consider finding a way to run your CMS software without admin rights, though. It's usually possible to do so by changing permissions on files, registry keys and database objects (although, obviously, is the application checks if it holds admin rights, you're not going to go very far). Another option would be to use virtual desktops but that's usually waaaay more expensive. 

This is typically bound to the hardware you're using. On most hardware (including intel) the MMU controls the whole process. When a program allocates memory, it will request it to the MMU and get back a virtual address. In turn, the MMU will register that page as being "in use" in the global address space map. When the program actually access that memory space, the MMU will lookup the page into the address map. If that page is in "live" memory, it will send back a "live" pointer to the OS which will handle the memory read/write in behalf of the program. If the memory isn't currently allocated, then it will trigger a page fault. This processor exception is then caught by the OS which is then responsible from figuring out where the data is in the swap file, load it into physical memory and give the page back to the MMU so that the initial process can continue. This means that, unless the memory page is accessed, it will never get back into "live" memory once put into swap. That is why there is usually an OS API that allows programs to specify that a particular memory block is NOT to be swapped to disk and should be kept in memory (I don't know about Linux, but in Windows, it's the VirtualLock function). 

Actually, you can and it usually works without any issue (although not always) What you do is rename the file without moving it and move the new file over it. That will keep the handles to the file valid and working so that pre-existing instances still will be able to access the file properly and new instances (or new handles) wil go to the new file. Obviously, if a program re-opens the same dll file and expects it to stay exactly the same (for instance, if there is resources to be loaded from the dll and that references to these resources is extracted from code running when the dll is loaded), this will cause issue but this is definitely not the norm. 

Do you still have access to the old AD DCs ? I came across a tool that claim it can recover an AD from a non-bootable machine assuming your SYSVOL folder is still around: $URL$ Waring: I haven't tried that utility at all so I do not imply anything - one way or another - about its quality. 

That should return the name an address of your DC machine. Try it and report back. Also important. check your event log and report any error you see there. 

What you're asking for is really an installer framework. AFAIK, there is no free tool that does all of what you want (if there is, I'd like to hear about it). You can, however, do all of this using PowerShell scripts but it isn't completely trivial. A good starting point, if you're already familiar with PowerShell, would be the Windows Core Management Framework: that tool is designed to do most of what you want, at least at the OS level, and it's written in powershell: you can therefore check the source code to see how various tasks are performed. Another source you can tap is the script center repository. You will find pretty much all you need in the manner of sample scripts for your other tasks. Finally, you will need to use SVN's command-line to check out your code. It's rather easy. That's for the general point of view. In more specific instances, you can use a combination of automated OS deployment tools and continuous deployment tools to achieve the same goal (I suggest you check out the "software" section of the wikipedia article for software to try out). 

This bubcheck code means that some critical thread or process has been terminated. Now, the way to deal with bluescreens (beside the usual "let's google the error code") is to: 

First, the way to address a specific SQL server instance is: SERVERNAME\INSTANCENAME So, first step is to see if you can resolve SERVERNAME (use ping or change it for an IP address). The second step is to see if the specific instance exists. Typically, the first instance of MSSQL server is using the default instabnce name (. or MSSQLSERVER). If that's the case, you can omit the instance name in your connection string and keep the server name only. To check your instance name, open the service manager on the server and find the "SQL Server (xxx)" service. The "xxx" will be the instance name. Once you've done that and made sure you're using the correct SQL address, you should validate the connection. Check if both your machines are on the same subnet. If they aren't, make sure the firewall isn't set to only allow the local subnet to connect (typical in "home" network profile). Then, if both machines are on the same WIFI network, make sure your AP isn't setup for client insulation. If that's the case, you won't be able to communicate between two WIFI devices connected to the same AP. Finally, make sure you have a login that works. The simplest way to do that is to create an explicit login on the SQL server, give it all necessary rights on your database and server and test it locally by passing the credentials in the command string. If it works, try it from the remote machine 

If that command doesn't return an empty list, it means you have already something bound to 0.0.0.0:443 You can then use the command to find out which process is using that resource. What to do afterward depends on what process you find. 

If your server OS files have been corrupted, trying a manual repair is pointless: restore from backup or, if you do not have OS backup, reinstall from your original media and restore the data. The reason behind this is that it's hard to know if all the files that make up your running OS installation are intact. Think about other types of file that could have been corrupted: data files, not just application binaries. These are next impossible to restore one by one and a single missed file can cause your whole server to become unstable. Overall, it's not worth your time trying to recover manually from that kind of event: scratch and restore is typically way easier and faster and it's also far likely to be successful. 

The license allows you to run two VM on the same hardware without purchasing any other server license. However, in this case, you will not be allowed to run anything on the host OS (the one running on the hardware) than the hypervisor itself: you'll have to run AD, RDS and all other windows services in the VMs. 

This is a fairly common problem with FTP when there is a NAT system between the client and server or a firewall that isn't configured for FTP. Your first sample uses so-called "passive mode" FTP while your other two samples uses "active mode". FTP works through two different TCP connection: a command channel (on port 21) that is used to transfer simple commands (login, list directory, etc) and a data channel which is used to send any data back (that is: a file but also the result of a directory listing request). In active mode, when transmitting a file or a directory listing, the client will specify an IP address and port number (PORT command) to use and the server will establish a new connection from port 20 to the specified connection. If the client is behind a firewall or a NAT device, it will prevent that connection from succeeding. In passive mode, the data channel is open in the opposite direction: The client will send the PASV command and the server will start listening on a random free port (typically in the dynamic range) and tell the client to connect to that port. Passive mode is much more commonly used because it is relatively easy for a firewall configured on or close to the server to detect the command and allow the new connection. On the other hand, an active mode connection requires the client to be able to accept a connection coming from the server and that is usually not working well at all when behind a NAT device or corporate firewall. the solution is typically to disable the active mode on the server altogether or make sure the clients all use passive mode. this is usually not a problem with modern client (which all default to active mode) but can be an issue with older ones or FTP scripts. 

So, assuming you type in "nslookup 1.2.3.4", you will generate a DNS query for "4.3.2.1.in-addr.arpa.". This request will then be processed by one of the DNS servers of all the following domains: 

Create a bash script, start it with "sleep 50s" and then call the program or command you wnat to run. 

Depending on your DNS configuration, it might not be entirely possible. You can do that for most A record but, if your NS records point to servers that are in the same zone, you will need to use A record for these. There might be incompatibility with some services as well but for the usual things you place on a personal web domain (mail, web) this isn't going to be any problem. 

The PTR record is of no great concern: it's only used to lookup names based on IP addresses and have no effect on RDP connection so it's not the cause of your problem. (However,you might want to have a look at the standard answer from MS regarding this event and how to investigate it). You should try a standard network diag (in this order): 

Normally, I'd create a scheduled task that runs the app and configure it to run as the local admin (or whatever account is necessary). In your case, however, i don't think that's your problem: the app simply isn't using the security context it's run from when trying to authenticate: that's why it's prompting you. 

That solution has one drawback: DNS answers are cached, usually for several hours. This causes a situation where users will not really be able to navigate back and forth between internal and external domains. The typical solution is to setup a relay server that can be reached both internally and externally with the same IP address. 

As it turns out, we have useful information stored in the "description" attribute of the source OUs. Unfortunately, it doesn't seem that this information is part of the data exported by the Get-ADOrganizationalUnit commandlet. So, could anyone suggest a way in which I could get the same information from the source AD but including the Description ? In truth, I can work very well if the only attributes I get back are , and so if you have another way to list all OUs under a specific OU in AD that includes these attributes, (and can be piped to ), it'll work as well. 

(Same thing with the slot 0 which is the embedded controller) Any idea ? OS is Windows 2008 R2 (x64), the ACU CLI version is 8.50-60 

KB 2823324 has a bug that causes some win7 machines to BSOD and others to launch chkdsk at every reboot. It seems to be more specifically linked linked to Kaspersky AV (although I've heard of issues with machines running NOD32) See this from Kaspersky: $URL$ 

I'm having a very annoying issue with an HP printer (CM2320): all of a sudden, any user who has that printer installed locally as default printer would crash any Windows 2003 terminal services or Citrix server (XenApp PS 4.5) as soon as he connect, causing the session to hang and other users to be unable to connect to the server. To restore functionality, an administrator has to connect to the server's console session and acknowledge the error message about spoolsv.exe having crashed with an AV. I tried downloading the latest drivers from HP (an adventure worthy of Lara Croft in itself) and install it on all servers but that didn't seem to have helped the situation: the spooler is still crashing. Anyone has a suggestion about what I could do about this ?