There are other options which allow you to look at the bandwidth of individual traffic flows on a port such as IP accounting and NetFlow, although these do not usually work properly on L3 switches as they rely on traffic being process switched. 

It looks like this is Wireshark reassembling a HTTP PDU that was split between multiple TCP segments. The PDU was split between segments 78, 79 and 80. Wireshark reassembled the PDU as frame 80. I have carried out a similar capture in Wireshark. 

First, a ping from PC1 (192.168.1.50) to router E1/2 (192.168.2.1) with TTL of 1 (PING SUCCEEDS): Router debug output: 

First, does R3 support BGP and does it have enough RAM to support all the routes on R1 and R2? If not, then BGP isn't an option. Second, do R1 and R2 receive a full Internet routing table? If so, then redistributing several 100k routes into OSPF would not be wise if at all possible. In this case I'd recommend using iBGP. On the other hand, if R1 and R2 are only receiving default routes, or a small number of routes, then redistributing into OSPF would be the preferred option and would allow the routing information to reach other OSPF only routers in the internal network so that they can make more informed routing decisions. 

If you had multiple peerings with an ISP you may choose to advertise specific prefixes marked with the NO_EXPORT community as well as advertising an aggregate route. The specific prefixes would provide more detail for the ISP to route to those prefixes, providing a more efficient path and better fault tolerance. Outside of your upstream ISP those routes are less useful and it is best practice to aggregate, so they would not be advertise upstream to other ISPs, only the aggregate prefix would get advertised. If you want a reason specific for not advertising to a geographic region, security would be one. You may have a VPN server that should only be accessed from the UK. You could mark that prefix with a community so that other countries have no routing information to reach that network. It's pretty easy to circumvent though. DDOS would be another reason. If you were being attacked by a botnet in a certain region it may be beneficial to stop advertising your prefixes to that region. 

We live with our history. The distinction between address of the network and broadcast address was not so crisp as it is now. Some software treats the all-0s as a broadcast, some allows it to be a host, some neither. Rather than find out exactly what everything in your current and future network requires, you can just "waste" the address to avoid any potential incompatibilities. Interoperatbility is for many organisations the overridingly important characteristic of IP. The RFC "Requirements for Internet Hosts -- Communication Layers" (after the corresponding part of RFC 791) puts it like this: 

You'll need to have a hostname and a domain and generate the keys for ssh to work. My notebook says: 

The various regional internet registries have varying policies for bulk whois. I know that RIPE has rate limiting for personal information; and may well have for queries in general. You might find that one of RIPE's other interfaces is better suited for what you're doing, as it has many APIs, not just conventional whois. See $URL$ EDIT: RIPE is pretty clear about its policies and limits, see its Query Reference Manual, and Acceptable Use Policy, which give the details. 

You can use VLANs of the routers to make a new network for the server. There are any number of ways of numbering your VLANs, this is just one. If you have an extra switch you can do this. 

The HTTP PDU is split between three TCP segments: frames 22743, 22744 and 22746. Wireshark shows the first two segments as-is, but for the third segment, the HTTP PDU is reassembled as frame 22746. The Ethernet/IP/TCP headers for frame 22746 are that of the original frame, but the TCP payload (the HTTP PDU) is the reconstructed PDU from all three segments. If you look at the detail for segments 22743: 

This is the IP address on router 4.4.4.4, the advertising router With OSPF P2P links, you should see two links for each P2P adjacent router within the router LSA. The first link is of link type P2P with a Link ID of the other router's router ID (2.2.2.2) and Link Data should be the IP address of the advertising router on the adjacent subnet (10.0.1.1) You will also see a second link, which is a Stub Network link to the subnet on the adjacent interface. This will have a link ID of the network (not sure but could be 10.0.1.0 in this case) and Link Data will contain the subnet mask (255.255.255.0?) This is all in the RFC 2328 page 129 This may seem confusing as you would expect the IP address to be that of the adjacent router. This information is not needed when calculating the SPF as OSPF only needs to see a connection to the other router and any onward networks reachable by that router. When the router needs to actually forward a packet to an adjacent router it uses the neighbor IP address's associated MAC address to forward the packet onwards. This IP address can be seen using show ip ospf neighbor on a Cisco router. Set this up in the lab: 

I've used a lot of their equipment: various kinds of serial port to TCP/IP devices. They're very flexible and very reliable. Typical uses are to convert a device (perhaps a weather station) outputting messages once a minute over RS-232 to send UDP packets to a given port on a given server. Another would be to connect via telnet to an RS-232 device, perhaps a modem. Or a router console socket. Jonathan. EDIT I forgot to add the virtual com port, where a PC uses the Lantronix device as if it was a local serial port, without having to connect to it by telnet/putty/whatever. Connection is RFC 2217 or various other methods. 

Regarding "looking online", make sure you read the definitive IANA page, which is $URL$ Unless you're looking there, you'll miss some of the obscure and infrequently-used special assignments; along with their defining RFCs. 

I entirely agree with previous answer that you really want a professional outfit with the correct test gear to properly pull, terminate, label and test each wire. And redo anything that fails certs. You have to make sure you have good specifications though, and many of the expensive test manufacturers will provide good sample contracts (which more or less specify you use one of their testers.) Many of the specs the cables have to satisfy are terribly difficult to explain, never mind measure, but you need them if you want to run your cables anywhere near the spec (for distance and speed). Most Pull-It-Cheap outfits skimp dreadfully in my experience, and it's an incredible amount of effort to get them to fix things or make good the labelling or testing. If for whatever reason you can't get a fully professional outfit, in my opinion the next best are the people who will actually use it: ie the client's IT team or similar people, who are interested in how well it works, and who can take the time to do it at least carefully. Just some experience from the field. 

It looks like you are using serial interfaces which use OSPF point-to-point network types as there can only be two devices on a serial link. DRs are only used on multi-access networks to reduce the number of adjacencies. They are not used on point-to-point networks, so both routers should be fully adjacent with each other . 

If this is a Comware based switch then configure the following: On the source switch: First, configure an unused port as the reflector port, do not connect anything to this port: 

What you're saying is correct, I can't see any reason it would require a default gateway unless there is something either misconfigured or a bug. You should not need a default gateway if you are on the same network. Did you see anything in the ARP cache on your PC or switch before you changed the default gateway? 

The MAC address in this case is actually 00000c07ac0a, the representation is just a way of formatting the MAC address so it can be easily read, and it can vary depending on what command you are using. The actual address doesn't have any separators (: - or .). There isn't a common standard way to represent the address, they are all interchangeable. 

The way I see it, forwarding applies to forwarding at any layer. A frame/packet/cell arrives at a device, a header address is inspected and that address is looked up in the forwarding table, the forwarding decision is made and the datagram is sent out of that interface on its way. Routing describes this function when the forwarding decision is made at layer 3, using the IP destination address. Switching and bridging refer to the forwarding decision being made at layer 2, using the destination MAC address. I know there is some confusion around this as I have seen layer 3 forwarding referred to as switching when it is carried out on an L3 switch. 

I am strongly in favour of putting your static devices in the DHCP too, with bootp "reservations" or whatever your DHCP software calls them (so they get the same address indefinitely). That way you have a single source of the addressing. My recommendation would be against DHCP on your Windows servers unless you have overriding personnel or policy reasons to do it, but certainly it works fine if you want to use it. In general, DHCP is considered out of remit here, but it is nonetheless an important feature of your network design. 

It's exactly like two independent setups. Each router is .1 and does DHCP in the ordinary way, and is default gateway for its network. But it's also .2 on the other network, and doesn't give out DHCP there. By dint of its interface route, it R1 will send 10.0.2.X to the right network; R2 vice versa. To move a department or a PC you replug into the other switch. In real life you'd do this with a VLAN-capable switch, but in addressing terms it would be identical to the above. 

You don't say what kind of service the server is giving. Although not very fine-grained, you can sometimes get good-enough balancing by configuring the server with two distinct IP addresses as if they are two different servers: Idea 1. on different DNS names (eg and ); Idea 2. alternatively as two A records for one name and let DNS's round-robin behaviour randomly allocate to clients. My starting point would be to partition the switch into a top-side and a bototm-side. Best if you have proper modems (not routers) and you configure two Dialer interfaces on your router (via PPPoA). Do all DHCP on the router not the switch. Configure the server as if it's two servers. Get router to send traffic according to which server its for.