One thing to be concerned about is the timers. Broadcast networks have a 40 sec dead timer, but PTP is 120 secs. That may be an issue for convergence/recovery time in the event of a network failure. 

You can, or you can create multiple VPN groups (according to your security requirements) and adjust your ACLs to allow appropriate access for each group. 

Mike, What you want to do is pushing the limits of any protocol implementation, so there is no good answer. Both OSPF or iBGP could be made to work. Any solution we (you) come up with will necessarily be a tradeoff between router processing power, memory (ie. cost), bandwidth, and convergence time. For example, you can break up OSPF into some number of areas to reduce the flooding, but at the expense of memory and CPU. Convergence time is important, because the faster you want your network to converge, the more CPU and bandwidth you require. As an extreme example, if you want to converge in a second or less, the hub router must generate, send, receive, and process 14400 hello packets per second (2 x 4 x 1800), and you use significant bandwidth doing so. That is in addition to actually routing traffic. That’s a lot to ask of any router. Both BGP and (Cisco’s implementation of ) OSPF can filter routing updates to the spoke routers, reducing bandwidth. But the hub router will still generate them internally, and that takes a lot of CPU and memory. I don’t know how much you actually save. I will emphasize @MikePennington’s point that for a network this size, you should really look at a hardware router. If not for your remote sites, then certainly for the hubs – that’s where all the processing is going on. 

The dotted decimal (x.x.x.x) notation is tripping you up. IP addresses are 32 bit binary numbers. The dotted decimal notation is only to make the numbers easier to read by humans. If you convert the addresses into binary, you'll see that your first example falls on a bit boundary, but your second example does not. 

It comes from the operating system. The IOS creates default values in the running configuration for things like interfaces, etc. 

There is no election process, so your question doesn't make sense. From a practical standpoint, you're suggesting that all switches would stop forwarding traffic anytime there was a change in the network -- not a practical idea. 

Yes, as long as the DHCP server is configured to assign the correct IPs (see answer above). If you include your router model and configuration, we can help you set this up. Note that consumer-grade devices are off-topic for this forum 

Repeat after me: "Classful addressing is obsolete. Classful addressing is obsolete." Say that to yourself ten times. There is no relationship between public and private addresses. Your devices can have either public or private addresses -- it's up to you. But if private, they can't be routed over the Internet. There is nothing special about private addresses. Routers treat public and private addresses exactly the same way. The only difference is the Internet community has agreed not to route private addresses on the Internet. Network Address Translation (NAT) is used to translate private addresses into public ones so your PC with a private address can communicate over the Internet. There are lots of explanations on how NAT works just a quick Google search away. Since private addresses are local to networks under your control, you can use any address you want. Fun fact: some organizations actually "borrow" public addresses to use on their internal networks, and translate them to their assigned public addresses. This is poor practice, yet it's more common than you'd think. 

PC1 will have R1 as its default gateway. When PC1 sends data to PC5, PC1 determines that PC5 is not on its local network. PC1 will ARP for the default gateway and forward the packet to it. R1 will forward the packet to R2, which in turn will forward the packet to PC5. 

You obviously don't know the AP's MAC address, so you want to send it to everybody. You use the broadcast address FF:FF:FF:FF:FF:FF. Every device will receive this packet, and APs will respond with a probe response. Listening for beacons is not enough. Often, SSID's are hidden, so you have to actively probe for them. 

The packet capture feature stores data in pcap format, which can be read by Wireshark and other analysis tools. So, yes, that would probably be more useful for packet analysis than syslog messages. 

There are philosophical differences in the design of OSPF and EIGRP and they are reflected in the protocol operation. For example, OSPF relies on a strict hierarchy/star topology to prevent loops. EIGRP uses the concept of successors for loop prevention, and this allows for more flexible topologies (not always a good thing). EDIT: OSPF and EIGRP stubs solve somewhat different problems. The purpose of OSPF areas is to save resources by limiting the flooding of route updates to just inside the area. OSPF stubs save resources in the stub area by blocking external routes inside the area (except, of course, NSSA). EIGRP stubs are confined to individual routers, not areas. They save resources by limiting the size of the DUAL route query, and therefore speeds up convergence. An EIGRP stub advertises its own routes, but doesn't advertise routes it learns from other parts of the network. An EIGRP stub router tells its neighbor that it doesn't know about the rest of the network, so there's no point querying it about other routes. That speeds up convergence by limiting the number of queries a router has to process. 

If the packet's destination address belongs to the IP subnet on VLAN 10, then the router will forward the packet onto that VLAN. I am assuming that the IP subnet for VLAN 10 is different at each site. 

You don't "need to." Some reasons for doing so are it gives you hit counts when you type "show access-list x," and you can add the logging command (deny ip any any log). 

In addition to @RonMaupin and @JeremyGibbons' answers, many organizations use a physically separate network to manage their devices to improve device security. The idea is they can connect to the devices using a network that has highly restricted access, and no access from outside the organization (e.g. the Internet). Only administrators are connected to the management network. Many devices have separate ethernet interfaces just for this purpose. You will see it labeled as "management interface" or "service port." You can configure the device so that it only allows the management interface to gain access to the device configuration (CLI, GUI, etc). 

Dual stack means that an interface can communicate with both v4 and v6 clients. It DOES NOT mean that it will translate between the two. For that, you need to implement NAT-PT, to translate between the different layer 3 protocols. BTW, I've never seen NAT-PT work at any scale. 

3a. No. A physical channel can be half or full duplex. It can also support multiple simultaneous transmissions. Actually, it depends more upon the capabilities of the endpoints. 3b. Again, they don't have to be physical. Consider the "aether" (space-time) as a medium. You can transmit radio energy through it, and you can do it half duplex or full duplex. You can divide it up into "channels". Many transmitters can operate simultaneously. You can (but you don't have to) multiplex. Depending on how you want to define it, it can fit any of your definitions. 

You can do this, but you will need to get your own ASN. Then you will advertise your IP block to the hosting provider. Usually this is done via BGP, but it is up to your ISP. I'm sure ISP can help you set this up. They do this kind of thing all day long. 

You definitely need a switch. Routers generally don't have enough ports, while even inexpensive switches have 12-24 ports. If your network doesn't connect to anything else, that's all you need. but if you also want Internet access, or you need to connect to another network, then you also need a router. If you're connecting to the Internet, hen you also need a firewall, but some routers include this functionality. If all you have is a switch, but you still need DHCP, you can run a DHCP server (daemon) on one of your servers. That's actually more common than using a router. 

Subnet masks are always in the form (left to right) of contiguous ones, followed by zeros. You can't have ones, then zeros, then more ones. If you convert your mask to binary, you will see that you don't have a valid mask for exactly that reason. 

Yes. You can turn on IP forwarding on a Windows computer. But it would be better to put the switch in front of the first computer and connect both computers to the switch. 

The IP datagram size includes the header, but the TCP segment size does not. The port numbers are contained within the TCP header So: 

The root switch has all its ports designated (i.e. forwarding). Every other switch selects the port with the lowest cost to the root. that's the root port (also forwarding) For every other network, the one port with the lowest cost/priority/MAC will be the designated port (forwarding) Every other port will be blocking 

The Internet is better described as a hierarchy of networks, with small carriers connected to mid-size carriers, who in turn are connected to worldwide providers. This article will give you a nice overview. 

By default, all switch ports are in VLAN 1. Since you've assigned VLAN 1 to your bridge group, they would all be a part of bridge group 1. You can assign a switch port to a different VLAN (for example, port 2 to VLAN 2) with the command 

For simple utilization, txload and rxload will give you the answer (6th line down). The values are expressed as fractional utilization out of 255. So 0/255 is 0 load, 128/255 is 50% load and 255/255 is 100% load. In this case, 9/255 is a little over 3%. For actual byte counts, look at the 5 minute input and output rates. Although it should be obvious, it bears repeating that these numbers are 5 minute averages. 

First: Classful addressing is obsolete and is no longer used. It was obsolete (I'm guessing) since before you were born. A pox on schools that keep teaching it. Second: Dividing an IP address into octets is just for the convenience of human readers. To the computer, it is just a 32-bit address. There is no meaning to the octets other than it makes it easier for humans to read big binary numbers. Third: The subnet mask defines which bits are the network ID and which are the host ID. The 1's bits indicate the network portion of the address. 

Short answer: No. Long answer: You can narrow down your list to a few candidates. The first 3 bytes of the MAC address is called the OUI (Organizationally Unique Identifier) and is assigned to manufacturers. You can look up the manufacturer of a MAC address by using a tool like $URL$ Based on the manufacturer, you can get a pretty good idea of who is who. If the manufacturer is "Cisco," odds are it's an AP. If the mfr is "Dell," it's probably a PC. This isn't perfect, but as you collect more data, you will able to be more certain of your results. 

What is the maximum sequence number you can use in crypto map with IOS-XE? Or to ask a slightly different question, how many sequences can you have in a crypto map? I can't find any limits in the command reference. 

Yes, you can. That is exactly the scenario it was made for. On the far right router (the 3.0) network, use the help command on the LAN interface. For example: 

Imagine a network with three areas: 0, 1 and 2. Area 0 is connected to 1 and 2; area 1 is connected to 0 and 2; and area 2 is connected to 0 and 1. Further, imagine that in this network, there is nothing special about area 0 -- in this network, backbone rules don't apply. Area 1 learns about routes from area 2 from two sources: area 2 and area 0. Now let's say that because of metrics, the shortest path to area 2 is through area 0 (instead of your direct connection). Area 0 also learns about area 2 from area 1 and area 2. But because of misconfigured metrics, the shortest path to area 2 is through area 1. So if you send data from area 1 to area 2, the packets get forwarded to area 0, but area 0 forwards them back to area 1. This is a classic routing loop. Instead, if we make area 0 a backbone, and say areas can only receive routes from the backbone, then there is only one possible path to area 2 -- through the backbone. Area 1 will ignore routes being advertised directly from area 2. In this way there are no multiple paths, and therefore no loops. 

The two routes are there because they are different routes. 172.16.0.0/16 and 172.16.10.0/24 are different routes with different mask lengths, so they are both put in the routing table. Summarization only applies to routes the router advertises to other routers, not routes in its own table. 

Then, you need to specify your NTP servers by IP address, rather than by name. You could manually resolve the ntp.org server names and use those addresses. Two addresses ought to be fine, unless you are doing something with your router that requires very accurate time. But for logging purposes, it only matters that your devices are all synced to the same time source. The absolute accuracy isn't important. 

You mention you get 0.4 Gb "on a good day." Have you tested when only one user is active? If the number is still in the same range, it probably isn't a network problem. You also don't mention the kind of network equipment you have. Some consumer-grade equipment can have much poorer performance than their port speeds would indicate. In other words, they may have 1Gb ports, but be unable to forward traffic at anywhere near that speed (I should also mention that consumer-grade equipment is off topic on this forum).