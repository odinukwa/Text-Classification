You could restrict the level of recursion with the option, if that helps (not following a certain regex pattern). A level of "2" downloads index.html, its subsites/images/etc and the links on the subsite. 

You should start by reading the documentation and come back here to ask specific questions if you run into trouble. 

Usually you need to bind maps/ACLs to an interface. In your case (L3-Switch), this interface should be a VLAN-pseudo-interface (conf t -> int vlan 111) rather than an actual ethernet port. Could you paste the relevant part of the config? 

You could talk to Victor Munoz, who had an interesting talk about AES side channel attacks in 2007. I believe he could give you some interesting pointers. 

Usually RAID controllers are shipped with a piece of software for exactly that purpose (and more - think of alerts via mail and SNMP). If the controller came with the server, it's likely that you find the software in the support/download area of your server vendor. 

The problem here is, that your router does not NAT your internal client's address. Thus, the TCP handshake fails. Let's assume following IPs 

Please try to avoid the SMB share at first... Most errors in the middle of conversion come from network problems. If there are other problems with the source image, you'd have the error right at the beginning (< 5%) or at the end if there's a problem with the destination. Copy the machine to the local disk and start the conversion again - it should work. 

Or you can grep (under Windows: ) for Host- and Domain from or or name and glue it together elsewhere. Edit: fixed Typo. Thanks Benoit Update: The variable is only available when logged on to a domain... The DNS suffix you get from a DHCP server is not put into a environment variable (as far as I could figure out). 

If you installed Apache via , it should have installed an init-Script (have a look at ). Therefore, it should start automatically already. However, you can run to re-install the symlinks of the init-script. Here is a nice article describing what it's all about. 

You could send a series of commands to and wrap it in a shell script which calculates the filename of the too old files (see the script below). 

Generally, a DHCP server is able to provide any IP you like as the default router. Only the GUI used for configuration is often stripped down to a minimal set of features, so you just can not alter the DHCP option. You could check if your main router can serve DHCP, too or move the DHCP service to another server on your network. If you have any Linux servers, install ISC's . The DHCP service for Windows Server is also free of extra charge. The ultimate solution would be slightly different: Create another IP subnet for the wifi and let the AP route beween wifi and wired network (routing instead of bridging). Then, on the wireless-router, use your main router's IP as default gateway. 

Talking to a number of windows guys the 3 NIC solution with a shared multicast segment for the heartbeat has been chosen. There is no advantage in having two separate hearbeat links, if one side fails, the other one should failover, too. But heaving heartbeat traffic on the production networks is generally a bad idea. 

Could you post the config file for the bond interface and the switch connecting to the NICs? You have to make sure that all NICs have the same Aggregator ID configured. Make sure you set an ID also on the switch and set its trunk mode to "active". 

It sounds like the script is called again before it finished - maybe the second instance has no access to called resources or something like that. Hard to tell without some code... What is that perl script actually doing? 

I'm not familiar with Windows servers (I'm some kind of networking guy) but have to setup an ISA server from the networking point of view. It will connect an internal LAN to a DMZ. There will be a cluster of two ISA servers using NLB. Obviously, the cluster will have 2 NLB "sessions", one for internal and one for DMZ zone. My question is concerning the heartbeat: What (and why) would be the best way to go out of the following possibilities: 

In addition, consider using a good loadbalancer, HTTP-cache (e.g. ), PHP-cache (e.g. ) and , if it fits your web application. This may obsolete some backend servers on a reasonably busy site. 

You could use from another Domain-Server. Or leave out the and let it run as a scheduled job on the server itself. 

Is "PersonX" the actual name of the user account? If so, it conflicts with names in the AD. Users and computers are both AD objects and need to have a unique name. I'd suggest to prefix the name with something like and go ahead with the CNAMES. 

The DNS server itself does not contact to your webserver at all, therefor it's impossible "to tell their DNS servers that this IP is wrong". Also, a HTTP redirection to the new IP address will probably not work as expected (named VHosts, etc?). Have your lowered the TTL of the DNS records? If not, do it now... 

First, unsing the pre-packaged binaries is not a bad idea. Or do you like patching by hand and recompiling every time a security flaw is found? Let the package managers do that for you. Second, make a list of features you really need to implement and what could be needed in the future. Read through the documentation of the software of your choice to make sure it meets the criteria. postfix + Dovecot + virtual users + MySQL backend is a fairly common setup - again, read the documentation and/or grab one of the too many articles you found on the web already. I would start with the ISP style mail server-HOWTO or this Blog post. 

Are you absolutely sure you need to do that? It's always a security risk to have a user (or administrator) logged in locally to a server. If you need to start a program or something that is not available as service, have a look at Group Policy (Active Directory) or the Local Security Policy (if not in a domain). You can define scripts that will be run after boot (or before shutdown, after login/logout, etc) without user interaction. 

You could try to sync with an internal NTP server to sort out firewall problems (every Windoze Domain Controller is also an NTP server, or install using ). 

Don't you have some kind of firewall or at least a NAT router between the internet and your server? On this, you should configure a port forwarding for the ports your public webserver is listening on. And you should consider putting the server into a DMZ. This would eliminate the need to let the whole internet into you local network. 

Sure enough, a single DHCP server will not supply multiple addresses to one client and let it choose. But if you have more than one DHCP servers on your network (for redundancy in legacy windows (2003) environments?) a client will often get one from each DHCP server. Then, the client chooses one server to send his to. Usually the client takes the server which answered first. 

Consider that a Systemstate Backup of a 2008 domain controller takes about 8,5 GB now. Don't know about other Roles... But go for 2008, don't set up deprecated Software... 

Usually you keep the IDS on the inside of the firewall to keep the usual "noise" of the internet out of your IDS logs. There's no need to have an alarm for a normal portscan every firewall blocks. What you want so see with an IDS (and/or block with an IPS) is all that funny stuff that passes your firewall. 

If you need raw packet filtering for high-bandwidth traffic between your VLANs, use ACLs in your backbone. But if it comes to connecting your network to another, you may want to control more than layer 4. 

Basically, you need a switch/bridge/router, which slows down your traffic. I would strongly recommend to not use a tool on client or server, but between them on your network equipment. Namely, you need a WAN emulator. These pieces of software let you configure bandwidth, delay/latency and random packet loss. Therefor, you can simulate connections over slow uplinks or just see how your application performs with some delay. If you have some money to spend for an appliance, have a look at networknightmare's WAN emulator appliances. The free solution I prefer is WANem. It comes with a nice WebGUI (easy to configure) for layer 3 operation, if you need to slow down layer 2 traffic, just create a bridged interface with two network cards. 

Sounds like you want to use a versioning tool like /Subversion or rather than rsync. It perfectly fits your need plus the benefit of rolling back if an edit messes something up. Take a look at the Subersion Homepage and/or git HOWTO. 

Personally, I like to take the layer 3 segmentation as close to the access switches as possible, because 

As routeNpingme pointed out, you should configure the switch accordingly. If your NIC driver supports LACP, use is on the switch aswell. Otherwise, you'll have to stick with a static trunk on the switch. Here is a config example for Cisco: 

For the particular example (saved passwords in a browser) I would recommend using the master password provided by Firefox. It encrypts the password cache. In KDE (and Gnome) there are tools like Wallet, which also provide a secure storage for credentials (e.g. for browser, mail app, chat client, etc) using a separate password. I believe something like this is available for Windows, too. Another way would be to encrypt your home directory with TrueCrypt using a container file which contains your profile and documents. 

You could use one of the many well known tools out there to test passwords. One I saw is L0phtcrack. Maybe there is even a way to do this offline with a dump of you authentication database. In "the other world", we use "john the ripper" for stuff like this. 

I prefer using varnish in front of tomcat instead of Apache, because Apache's tomcat connector is quite b0rken. Varnish is a very efficient reverse proxy and cache and speeds up delivery of tomcat's HTML output. Without the hassle of tomcat connector. 

The error means that the user does not have sufficient rights on the target machine. "Something" went wrong with the administrator rights for that user... Is it a Domain setup or standalone? Could you paste the command line you are using (without password and/or public IP)? 

I tried PHP-IP, it's a webapp with a MySQL backend. But its currently v4-only. Another tool I use is RackTables. It's not just an IPAM tool, rather a rack manager, where your can document your devices, store config details and so on. 

If you have some bucks to spend, try Wildpacket's OmniPeek. It has enormous analysis features and decoders, session/flow based views, easy-to-build filters and great support for real NICs with hardware filtering. I often use it for my daily work to analyze problems in chatty customer networks - you can drop some small linux-boxes with tcpdump and use them as remote-NIC for larger setups. You can download a trial version and give it a shot. 

You need to set a higher metric on the LAN interface (or a lower one on the WLAN interface). Or just disable NetworkManager for the LAN interface and take it's IP away (). Don't worry, your VM will not be affected. Just make sure you don't shut down the interface (. 

If it comes to bigger/wider spread networks where two core switches/-routers are not sufficient, the normal redundancy mechanisms like VRRP have lots of drawbacks (traffic passes uplinks multiple times, ...) OSPF doesn't have. There are probably a lot of other reasons to support the use-small-broadcast-domains-approach. 

At first, you should mount your partitions with 'relatime' to optimize ext3's behavior. Then find out what is accessing your disks (logfiles?). I think you're not talking about your root partition or another system disk but rather a optional storage you write to/read from manually? I use hd-idle to spin down an external USB disk on my HTPC. HTH, PEra 

If the mail server's hostname is anything other than "www", you shouldn't have to worry. As Jush Budde pointed out, you just need to change DNS records: 

I've seen a lot of PoE switches powering thin-accesspoints for managed WLAN solutions (like Trapeze or Ruckus). Works like a charm and you only have to get a cat5/6 cable to the point where the access point will be located - no need to bother with power cords and such. PoE itself (802.3af) is a well known standard and well implemented by the major networking hardware manufacturers. Never had any problems with it (speaking of several thousands of ports). 

If you need to port Unix shell scripts to windows or just like to work on the CLI, have a look at GNUwin32. It provides the common tools like cut, grep, etc for Windows. 

If you need a rather cheep plastic box, go for Netgear, LevelOne, 3Com, etc. They all have PoE models. Or take a few more bucks an get a "real" access point. Trapeze MP-71 or Cisco or something.