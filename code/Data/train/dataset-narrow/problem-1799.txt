Nagios installation is stored outside of /var deeply in /usr, so you don't have to worry about mixing Nagios files with your own. 

Try . It shouldn't upgrade your distribution if you have "hardy" in you /etc/apt/sources.list, just the problematic packages. 

I used OSSEC HIDS. Basically, it checks file integrity (/etc/passwd,...) and parses log files (syslog, auth.log,...). It has usable web interface and email notification. But nothing special, I guess. Regards, Martin 

You do not have to delete lines in /var/log/*. These files contains logs of previous actions, not state informations. IP addresses 192.168.*.*, 10.*.*.*, 172.16.0.0 â€“ 172.31.255.255 are called "private addresses" defined in RFC1918 to be used in private networks. 

One way is to configure VirtualHost for prod.webapp.com and VirtualHost for prod.site1.com. And in the prod.site1.com configuration do reverse proxy to prod.webapp.com. Useful howto is here: $URL$ 

I know that you are looking for GUI, but there is no GUI with magic button "SHOW ME WHO HACKED ME". This isn't TV, this is system administration. You need to use proper tools. For starters, you can block all outgoing communication its destination port is 80 via : 

Just plain installation of IPtables is not enough. You have to setup your firewall, and that means you have to learn how firewall works. There is lot of guides and howtos about setting firewall and basic security tips on the internet. Same thing with SSH. Plain installation will allow you remote connection to server, but also it's recommended to make postinstallation setup. For example disable login for root user, allow connection only from specific IP address(es), etc. If your website exchanges confindetial information with users, HTTPS is also thing for consideration. This question is very general.. Regards, Martin 

Capture stream on server and restream it. Again, we use VLC to capture and stream. Usage is based on infrastructure scenario from early of this post. As I showed, VLC on laptop streams video on some port. This port has to be accesible from server. If you have public IP address of laptop, or NATed port, you can test it with telnet: 

About bad local curl - try to . If the server has problem with dns resolve of the domain, and php script is trying to download something from this url, that could be the slowing down place. But it doesn't explain "faster after reboot" Regards, Martin 

You can connect number of cell phones via data cable to computer and send SMS or even make a call. For example good ol' Siemens C35 is perfectly suited for that. 

Sudo is aditional package, which has to be installed during Cygwin installation. Have you tried to become superuser? Anyway, you can always view content of the Cygwin files from Windows... 

The last parameter "src-address=!..." is needed in case which squid machine communicates thru same interface as the other machines. Otherwise it would go like this: 

That means, that no swap partition is available. If you have some unused space on hard drive, you can make it a swap partition (via fdisk). Or you can make swap on file. This creates 2GB swap: 

Filter for outgoing communication from server to internet is also important. Especially SMTP is recommended to allow only for one server. I manage Mikrotik firewalls, and I'm used to do for example: 

And my question is: what licence should I purchase in order to make CLI work? There won't be any change in number of CPUs, memory size or number of physical servers whatsoever. Thanks for answer in advance. Martin 

This magic command will 'bind' your laptop port 8081, to server port 8081. That means when you connect on server to 8081, you will silently connect to your laptop port 8081 via SSH tunnel. Cool, huh?:) So all we have to do is simple VLC connect and stream: 

I would install ssh on the finished notebook and then boot the other one from livecd. LiveCD should contain ssh and rsync at least. Then save MBR from the first: 

So you have two integer values and you want to grep lines which starts within this range. There are many ways how to do it (awk, sed,...) Sed example: 

Laptop is connected with public IP address OR you can NAT port to laptop. This scenario is much easier, since you can connect from server to laptop nice and easy. Big disadvantage is, that you're bound to one location (one IP address). Laptop is not connected with public I address. This is little bit tricky, but will work from any network which will allow you to SSH to your server and have sufficiant upload (1 Mbps should do it). 

Try to access the samba server with ip address instead: \_ip_address_of_samba_server_\upload Also check samba logs in /var/log/samba/log.smbd and see, if the windows client really tries to log in. Otherwise, there is problem with network. And the error seems like it.. Best regards, Martin 

Completely another aproach how to be warned that you work on productional machine is to mark the terminal. For example the text could be red at production machines, green at development, etc. Here is nice tutorial how to do this: Color Bash Prompt 

Which will transcode video stream to FLV format with MPGA audio (MP3 is not available in my Ubuntu). Samplerate is somehow mandatory, it won't work without it. But you can choose smaller, like 22050. This will transcode video stream 'as is', so the scale is 1:1. You can append width and height parameters, or even scale parameter. Look into VLC documentation. Stream it from laptop. Now you have to make local stream, on which will server connect: 

After this, directory ./input/ is stripped from files modified more then 10 days ago. This should be appliable on remote directory via SFTP. 

You can use sticky bit on directory which affects ownership of newly created files and directories. And combine with umask, which will create new files with certain permissions. Update after comment: Group sticky bit on directory will overwrite group ownership of newly created files within this directory no matter in which group is user who creates this file. Umask can alter the permisions upon creation. Classic usage of this combination is when you have "public" directory where every user can create/update/delete every file. So users has to by in same group ("users") and group rights has to by "rw" for files and "rwx" for directories. In this case, you will set on the parent directory sticky bit for group and change the group to "users". Then you have to set umask in system thru which the files will be uploaded (FTP, Samba,...). This umask should create files with rights 660 and directories with rights 2770. Another usage - FTP. User has to have full access to files via FTP and yet Web server has to have read and even write access to some files. In this case you will set group sticky bit on document root of that web and change the group to www-data (for Apache). Than change access rights to 640 for files and 2750 for directories. For directories where www-data needs write access the rights will be 2770. In FTP server set umask to create files and directories with rights mention upon. Result? Uploaded files will have owner of given user, group www-data and least necessary rights. I'm not sure what is your use case exactly, but changing of owner shouldn't have to be necessary and I personally like to know who created that file (Owner can change it but how many users know how to do that?) 

Computer sends HTTP request RouterOS destinates this packet to squid Squid sends HTTP request to webserver RouterOS destinates squid request again to squid -> loop 

No need of setting proxy in RouterOS. You can route all outgoing HTTP traffic to the server directly thru NAT: 

And few more. I would recommend to read this: $URL$ Syntax of Mikrotik is straight forward and it contains good pointing for beginner. 

If you want to check filesize of every directory right in the root, you can use . It'll take quite a while. 

I currently develop online streaming from 3 miniDV cameras connected via FireWire, which is quite similar to your needs. Quick hint: vlc + flowplayer/jw player First of all, there are two video formats, that you can use in online streaming: FLV and h264. FLV is easier to transcode, h264 has better size/quality ratio but transcoding is much more cpu consuming. Both can be displayed by flash players in web page. Second of all, streaming infrastructure. Since your bandwith from laptop is limited (couple Mbps tops) you need to get stream to your server and there restream it to clients. So the stream will flow 1 time to server and then N times to clients from there. You haven't described your internet connection for your laptop, so the scenario is divided into two section: 

I'll take the preparation of input aside and assume these inputs: Search log - one searched term on line, no repetition, something like this: 

Capture video from webcam. I've never captured stream from locally attached webcam, but there are many examples how to do it via V4L, e.g: Webcam Setup. The only part which you should be interested is: 

First line is destination IP address. Second line is full information about rogue process. Third line is delimiter to optically divide huge output. These commands (at least and ) needs to be executed under root. When you clear your machine, you can delete the blocking command with: 

I would definetely recommend outdoor Ubiquity product - cheap, waterproof and stable. And with PoE, so you don't have to solve power line, just ethernet cable. If you can place it on the top of the building, there shouldn't be problem with full coverage. Omnidirectional antena around 12dBi should do the work. Look at this: $URL$ 

And upgrade finally ends up correctly. This was on Debian, I'm not sure how it will be on CentOS. It drived me nuts, at least I had Zimbra in virtual machine, so snapshot-and-restore was very helpful. This is very good source of informations: $URL$ 

I had to upgrade Zimbra 5.0.11 on Debian Etch to Zimbra 6.0.6 on Debian Lenny. There were many problems, but in a nutshell: Upgrade started with install.sh wants Perl 5.10, but with this version ended on Perl error in the very beginning. The key is to downgrade perl to 5.8, which was in Debian Etch. Then start install.sh, ignore whining about prerequisities and continue with upgrade. Somewhere in the middle of upgrade it fails again, and now is mandatory to return Perl back to 5.10 and start this script: 

I have a USB device and I need to execute a "infinite" script when I plug in this device and pass the /dev/... path as an argument. The real example is: The device is RFID reader (0403:6001), which works as tty device. I need to run a script, which reads data from /dev/ttyUSBx and via xdotool prints them into opened web browser. As there could be potentially more devices evaluated as /dev/ttyUSBx, I need to pass the correct one to the script. The classic way seems to be by udev rule, but I read [1], that the "RUN" parameter is not for long time running scripts. Other than that, I cannot find env variable or %variable that would contain the "ttyUSBx". Another way I found is by systemd, but the classification of device looks like /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.2 which depends on the USB port... I am running Debian 8 Jessie. [1] $URL$