Where the last parameter is how much to wait for an incoming event( can be a pakcet, but can be connection or disconnection request too ) You can use the documentation as a reference. Edit: As per request in comment here is how should your main programloop look like: 

The problem is a typical starters error: you chose both loops iteration variable to be the same, so they modify each other. You should always choose nested loops to use a different iteration variable(usually called i, j, k), otherwise things will get messed up. In other languages completely, but here you got the two objects already and using the keys only to remove, so only the removal part got messed up. The correct code should be: 

I would recommend either leaving this system as-is and worry about performance later or use Assimp, which not only does this all for you, it supports more formats with consistency, and will save you some headaches later with its tangent generation and other useful preprocessing. Some pseudocode for aligning as asked for: 

I am currently using the DirectX June 2010 SDK. Everything was working fine with my installation until recently. Unfortunately I'm not sure what changed or when, but now when I create a device with D3D10CreateDevice1(), it always crashes with a memory error if the device is created with the D3D10_CREATE_DEVICE_DEBUG flag. Even reverting to old code which used to work causes this error. Additionally, PIX always crashes every time I use it with my game. I did some searching and found a lead that I may need to update my SDK installation. This page also indicates that I need to "install the updated SDK Debug Layers". How do I do this? I have no idea how to install the "Debug Layers"... Additionally, is it a mistake for me to be using the June 2010 SDK? Apparently DirectX is now included with the Windows 8 SDK, which I haven't been using because I've no interest in Windows 8 development. Is this foolish? Is there any downside to me using the Windows 8 SDK just for Windows 7 DirectX development using Visual Studio 2010? 

Lets get to the part: Do they use this? Probably not, at least not like this or for this. Do they use something similar? Definitely! The answer is in spatial data-structures which let you get a list of only the nearby walls from the player location. This is done in 2D using Quad-trees or BSP usually. In 3D with octrees and BSPs. What is the best way to handle it? The best way is to get it to work, and when it starts to eat your CPU cycles(You know, because you Profiled it), come back and optimize it. 

This seems like an optimization question. As such the answer, as always is to profile it. If generating the matrices doesn't take too much time on the fly, then it is simply easier to do on the fly, as you don't have to write and export/import of matrices, and add it to your file format. And perhaps you could simply use other file formats natively and not have to bake your resources. On the other hand if your application is very very animation intensive, it may be worth it to move the matrix calculation to the baking stage.(Tough I would seriously doubt that.) In the end this looks like a premature optimization to me. If you are interested, then you should profile it first, and if the results say you spend too much time calculating matrices, then do it. PS: If you do profile it, don't forget to post the results. 

I'm a Flash developer, but I think it's time to think of other avenues. Ideally I want to be able to write once but be able to deploy to as many different platforms as possible, so iOS AND Android....Web AND Mobile. Are Html5 game development platforms good enough to create games that run on the web and mobile? or should I go with say Corona for iOS and Android, and use Html5 just for web? I'm a professional developer so paying out for a decent game dev platform is not an issue, I just want to make sure I'm using the best tools for the job over the next few years. Only interested in developing 2D games. Might well need physics. Corona definately seems a good option for mobile, but if it's possible to create everything in Html5 even if it's more work I'm wondering if it's worth the time learning that. 

I'm a tad confused about the turn based option with iOS5. Does this take care of everything needed to make a multiplayer turn based game?i.e all the game turn data is stored with apple or do I need to still provide a server for something? 

I am now creating a 64 bit and 32 bit executable of my game. How could I achieve so that the executable and dlls lie in a separate folder without changing all the path variables in the game? To clarify I want to have a folder structure like this: 

If you need to, you could use the Assimp file import library's 3ds export function to create the 3ds files directly. The procedure would be as follows: 

You could also not re-invent the wheel and use some already existing library for noise-generation. I recommend libnoise2, which is highly optimized and uses SSE/2/3/4/AVX to speed up the process and does a great job. It also has multiple generators and multiple parameters which make later terrain varieties easier to implement. You could also use libnoise, which has much more options, but is a bit slower. Another way you can speed up your terrain generation is parallellism. Most CPUs already run 4 cores, so your gain can be well above 50%. 

I'm a bit late to this question as I've only just started considering the same question myself. I've just launched a game on FB which we created a global leaderboard for, but it also has the option to display just the friends scores. The FB score and achievements API does look good, but I know for my own game (puzzle game) people absolutely want to see who is scoring well in the game across the network, and also what scores are possible. Also if you just make it friends only than unless each player has LOTS of friends who are all playing it, their leaderboard is going to look pretty empty, which I would argue discourages people from playing, for me the more scores people see being posted the bigger inventive for them to do well themselves. The ideal solution is a global leaderboard and a local one. 

I'm working on a 2D pixel art Unity game. I have multiple layers of scrolling so I need to use a perspective camera, the problem is though that it seems to mess up using particles as when the screen scrolls the particles move in perspective, when I need them to stay just in the x and y. Is there way to achieve this? I don't particularly want to go through every particle in real time and zero out their Z value, but maybe that's the only way? 

I'm making a game in Direct3D10. For several of my rendering passes, I need to change the behavior of the pass depending on what is already rendered on the back buffer. (For example, I'd like to do some custom blending- when the destination color is dark, do one thing; when it is light, do another). It looks like I'll need to create multiple render targets and render back and forth between them. What's the best way to do this? 

I have some screenshot code (pasted below) which was working fine until I enabled MSAA. The first time I tried to use this code, it complained that the texture I'm creating needed to match the sample count of the source texture. Fine- my MSAA value is 8 currently, so I set the screenshot texture to a sample count of 8 also. Now when I try to use the code, it complains: 

When I output a vertex from a vertex shader, it seems to have a world-space-ish mapping. Vertices about 1 unit away have about 1 unit as their Z value. When we input into the pixel shader, the depth values are mapped from 0..1 as defined in the viewport state. Where does this conversion occur? It's late and I'm forgetful, but I can't find a place where I told DirectX what my depth range even was (other than implicitly in the projection matrix). How does it know how to convert it? 

I'm working on a game where players can setup villages, which can contain defending units. Any of these units (each on their own tiles) can be set to "campaign" which means they are no longer defending but can now be used to attack other villages. And each unit on a tile can have up to a 100 health. So far so good. Oh and it's all asynchronous so even though the server will be aware that your village is being attacked, you won't be until the attack is over. The issue I'm struggling with, is the following situation. Let's say a unit on a tile is being attacked by a player from another village. The other player see's your village and is attacking your units. You don't know this is happening though, so you set your unit to campaign and off you go to attack another village, with the unit which itself is actually being attacked by this other player. The other player stops attacking your village and leaves your unit with say a health of 1, which is then saved to the server. You however have this same unit are attacking another village with it, but now you discover that even though it started off with a 100 health, now mysteriously it only has 1... Solutions? Ideas? Edit The simplest solutions are often the best. I referred to Clash of clans below, well after a bit more digging it seems that in CoC you can only attack players that are offline! ha, that almost solves the problem. I say almost because there's still the situation where a players village could be in the process of being attacked when they come back online, still need to address that. Edit 2 A solution to the "What happens when a player is attacking your village and you come online" issue, could be the attacking player just get's kicked out of the village at that point and just get's whatever they had won up to that point, it's a bit of a fudge but it might work. 

First off, I think using the GPU is not suitable. Your usage defeats what the GPUs are made for: One program running on a lot of threads. Also GPUs don't support intercommunication and conditionals very well. But your expectations are quite low. 20Hz for lets say 10 000 computers. Nowadays you can count with a 3GHz CPU, with multiple cores. For simplicity lets assume you only have a single thread for this virtual simulation. I am also going to assume that the Lua code(or the one of your choice) is 10 times slower, than compiled C/++ code(Can be improved with LuaJIT, but will be worse due to constant switching between computers and cache misses, etc.). 20 * 10 000 * 10 = 2 000 000 Hz needed to simulate your virtual computers. or 2 000kHz. or 2 MHz. And you can safely assume a computer with a ~3GHz core. Please bear in mind that due to cache misses, memory operations, and because you probably underestimated your instruction needs you will need much more than 2MHz, but you are safe as long as you don't need more than ~1500 times more power. I think this idea is viable performance-wise. I would recommend using Lua, so you don't have to reinvent the wheel, and have a solid base to build on. Its also easier to program for starters(if you want your players to program them). This is pure speculation. If you want a real answer, profile it. As to whether you should research further or not, you should create a simple prototype(throwaway), which will test both if your game is fun and if its viable performance-wise. 

After looking into this for a while, it seemed that zlib wasn't going to satisfy my needs. It seems to be focused on compressing and decompressing individual files. I need something that is able to handle archives. One potential solution I've found would be to use libarchive, which is an archiving library that will handle extracting files from an archive such as a ZIP file. It even allows you to assign the extracted file to a standard FILE pointer, which would make interfacing with any other libraries (PNG, my model loader) potentially more straightforward. 

I'm implementing Lua scripting in my game using LuaBind, and one of the things I'm not clear on is the logistics of reloading the scripts live ingame. Currently, using the LuaBind C++ class , I save references to Lua callbacks directly in the classes that use them. Then I can use using that object in order to call the Lua code from the C++ code. I haven't tested this yet, but my assumption is that if I reload the scripts, then all the functions will be redefined, BUT the references to the OLD functions will still exist in the form of the held by the C++ code. I would like to be able to swap out the old for the new without manually having to manage this for every script hook in the game. How best to change this so the process works? My first thought is to not save a reference to the function directly, but maybe save the function name instead, and grab the function by name every time we want to call it. I'm looking for better ideas!