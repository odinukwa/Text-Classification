I'm creating a shared storage server for ESX servers. The storage server is 2U Supermicro 24-bay rackmount server with 12x32GB Intel X25-e SSDs and 12x600GB Toshiba 10k SAS drives. Both SSDs and SAS drives are configured as RAID10 arrays which appear to the OS (Ubuntu 10.04.2 LTS) as big virtual drives. The RAID controller has a battery backup unit. The SSD array would be "fast" datastore and the SAS array would be "big" datastore. I'm not yet decided whether I will use NFS or ISCSI. I will try both and decide based on my assessment of the performance and ease of handling differences ratio. The question is: which filesystem to use for "fast" and which for "big" and which mount options? 

CAN I USE FASTER RATED STICKS THAN THE BOARD IS RATED FOR? Generally all DDR is backward compatible and can run at any bus speed slower than it is rated to run. For example if your PC has a 266MHz FSB (Front Side Bus), you will need PC2100 266MHz DDR. If your PC has a 266MHz FSB, you can use PC2100 266MHz or PC2700 333MHz DDR. All PCs that accept PC2100 DDR will also accept PC2700 DDR; however your memory will only run as fast as the slowest link in your system. If you have a PC2100 266MHz FSB or any PC2100 modules installed, any PC2700 333MHz modules that you install will only operate at 266MHz. PC2700 DDR does not offer any immediate benefit over PC2100 DDR if you have a 266MHz FSB. However, if you are planning to upgrade to a system with a 333MHz FSB in the future, you may be able to use the PC2700 modules you purchase now, in your future system. HOW DO I KNOW IF I NEED PARITY, NON-PARITY, OR ECC, NON-ECC MEMORY? The general rule of thumb in deciding what type of memory you need is to look at what’s already installed in your system. To find out if you have ECC, parity, or non-ECC, non-parity memory, count the number of chips on the module. Divide the total number of chips by three. If you can evenly divide the number of chips by three, the module is ECC or parity, if not, then it is a non-ECC, non-parity module. If you"re building a PC and plan to use your system as a server or a similar mission critical type machine, it is to your advantage to use ECC. If you plan to use your PC for regular home, office, or gaming application, you are better off with non-ECC, non-parity memory. HOW TO TELL ECC, PARITY MEMORY FROM NON-ECC, NON- PARITY MEMORY? If your system has ECC or parity memory the chips are evenly divisible by three. How do you know which one you have? One way is to look at the part numbers on the chips of your module. If each chip has the same part number, you have ECC. If one chip is different, you have parity. WHAT IS THE PERFORMANCE DIFFERENCE BETWEEN ECC, PARITY AND NON-ECC, NON-PARITY? ECC (error checking and correcting) memory performs double bit detection and single bit correction. This means that if you have a single bit memory error, the chipset and memory will find and repair the error on the fly without you knowing that it happened. If you have a double bit memory error, it will detect and report it. Non-ECC, non-parity memory, on the other hand, has no error detection and correction capabilities. Using ECC decreases your PCs performance by about 2%. Current technology DRAM is very stable and memory errors are rare, so unless you have a need for ECC, you are better served with non-ECC, non-parity memory. CAN I MIX AND MATCH ECC, PARITY AND NON-ECC, NON-PARITY? When adding new memory, you need to match what is already in your system. Parity modules have an extra chip that detects if data was correctly read or written by the memory module, depending on the type of error. However, a parity module will not correct the error. ECC modules can detect double bit errors and correct single bit errors. Most motherboards that do not have an ECC function within the BIOS are still able to use a module with ECC, but the module will run in non-ECC mode. Keep in mind, there are some cases where the motherboard will not accept an ECC module, depending on the BIOS programming. The only sure-fire way to test this is to place the module in the motherboard and see if the BIOS will recognize the memory addition. WHAT DOES BUFFERED MEMORY MEAN? Buffering (applies only to old EDO and FPM memory) is the process of re-driving the signals through the memory chips. It allows the modules to be built with more chips. With buffering there is no loss of performance. The design of the computer memory controller dictates whether EDO/FPM RAM must be buffered or unbuffered. HOW DO I KNOW IF THE EDO/FPM MODULE IS BUFFERED You can determine if the EDO/FPM module is buffered by looking at the leads next to the first notch. If the leads are evenly spaced, the module is buffered. If the leads are not evenly spaced (a larger PCB area next to the lead) the module is unbuffered. WHAT DOES REGISTERED MEMORY MEAN? The term registered applies to modern (DDR) SDRAM and also refers to how the memory module processes signals. Registered modules contain a register chip that delays all information transferred to the module by 1 clock cycle. Because the registering process takes one clock cycle, registered modules are slightly slower than non-registered modules. This type of memory is primarily used in servers and was designed for modules with 32 or more chips on them to help ensure that data is properly handled. Most PCs will only accept unregistered SDRAM. WHAT DOES UNBUFFERED MEMORY MEAN? For EDO/FPM memory it means that the memory is not buffered. For SDRAM modules it means that the memory is not registered. CAN I MIX UNBUFFERED WITH BUFFERED EDO/FPM? Buffered and unbuffered EDO/FPM memory chips cannot be mixed and they even use slightly different printed circuit boards (PCB’s): If you try to install the wrong type, the first notch on the bottom of the module will be offset. CAN I MIX UNBUFFERED WITH REGISTERED (DDR) SDRAM? You can't install unbuffered (unregistered) SDRAM modules along with registered modules at the same time. WHAT IS CAS LATENCY? CAS latency (also referred to as latency) is the amount of time it takes for your memory to respond to a command. Specifically, it is the length of time between memory receiving a command to read data, and the first piece of data being output from memory. Latency is measured in terms of clock cycles and is often noted as CL2 (two clock cycles) or CL3 (three clock cycles). PERFORMANCE DIFFERENCES BETWEEN CL2 AN CL3 CL2 parts process data a little quicker than CL3 parts in that you have to wait one less clock cycle for the initial data. However, after the first piece of data is processed, the rest of the data is processed at equal speeds. Latency only affects the initial burst of data. Once data starts flowing, there is no affect. Bear in mind, a clock cycle for a PC100 module is a 10 nanoseconds so you probably won’t notice a significant performance difference. Most systems will accept either latency part. However, there are some systems that require either CL2 or CL3 parts. CAN CL2 AND CL3 PARTS BE MIXED? CL2 and CL3 parts can be mixed. BIOS settings should reflect the CL3 setting, as the CL2 module will run at the CL3 setting when it is installed with a CL3 module. CAN YOU MIX AND MATCH MODULES OF DIFFERENT SIZES? Different sizes of SDRAM modules can be mixed together. In other words, you can use 32MB, 64MB, 128MB, and 256MB together. Keep in mind, the largest module should always be placed in the first slot for best performance. The exception to this rule is systems that require memory to be installed in banks of two or more. For example, some systems require modules to be installed in banks of two. In this case, the two modules in each bank need to be the same size. If your system had two banks of two, (four slots), you could install two 32MB modules in bank 0 and two 64MB in bank 1. Your total memory would then be 192MB. DOES IT MATTER WHICH SLOTS THE MEMORY IS INSTALLED IN? In general, you will get the best performance if you put the largest module (in megabytes) in the lowest-numbered slot. For example, if your computer comes with 32MB of removable memory and you want to add 128MB, it would be best to put the 128MB into slot 0 and the 32MB module into slot 1. Read more from: $URL$ 

We need to make those Megaraid drives available to ESX(i) servers, as datastores, via FCoE. I googled around and found no guides how to achieve that. There seems to be a fcoe-utils package in Ubuntu but having installed that, reading the man and trying something logical like creating an instance of FCoE took me only this far: 

Seems that I should not use E and S letters. At first I understood correctly and tried it letterlessly but also got invalid token errors because I was using -aALL instead of -a0 ("If you have only one controller it’s safe to use ALL instead of a specific ID"), and then read from this site that "E is the enclosure device ID in which the drive resides and S the slot number" and hence concluded that I should replace E and S with actual IDs. :( 

We recently needed to add more RAM to our vCenter Server (Dell PowerEdge 860 server). We checked from the Kingston memory search what kind of memory the server accepted. Then we found a listing of 4x 2GB DDR2-667 PC2-5300 ECC Registered Memory HP ProLiant DL180 G5 240-PIN on eBay. This looked like it would work. But when we received the sticks and sticked the sticks in, the server just beeped. Here's how the sticks look like: 

I'm trying to create an All-in-one box which consists of ESXi running from an USB stick. Inside of ESXi there will be a vm which has been given direct access to a RAID controller for sharing it's disks via ISCSI back to this underlying ESXi server and also to other ESXi servers on the network. I'm following the guide posted here $URL$ I purchased a 32GB USB stick for the system and storage vm's data files. The system (ESXi) installs fine onto the stick but after installation there is no datastore and rescanning for one does not reveal one either so I cannot install the storage vm. How to make USB thumbdrive space visible as a datastore to ESXi 4.1 U1? 

I have a PostgreSQL database (OLTP, 10GB in size) server and I'm planning an array of hdds for it's storage. I have various disks I can use. I need to find the best ones for the job with the right kind of RAID configuration. What to look? IOPS, MB/s, 4k/512k, what queue depth? What tools to use for measuring (and in which configuration)? It's a virtual machine so I can use the Performance tab and esxtop, too, if they provide some useful information for the task. 

I need to create a new mailing list in Exchange 2010 which would consist of about 50 external email addresses. I have the list of (external) email addresses in plain text format. I have previously solved this task by manually creating an external contact for each email address and then adding those external contacts to a distribution group. What would be the most efficient way to solve this task with Exchange 2010? Does EMS help here? 

After attaching a ISCSI target to ESXi 4.1 U1, we saw that ESXi created a 740,25 GB partition onto the LUN, even though the device has 2,7 TB capacity. Why did ESXi not create a bigger vmfs partition? How to fix it? 

Is it possible to use .htaccess file to rewrite this: $URL$ into this: $URL$ If it is then how? EDIT: The goal is to avoid any updates to .htaccess when a new customer is added EDIT2: I see that my question has been too vague. I have a CMS that is being used for lots of different customers (www.foo.com, www.bar.com, www.somerandomname.com). Each customer has it's unique files (design, uploads) in a directory /data/www/cms/customers/XXXXXX/ where XXXXXX is the name of the customer. Apache config file has default DocumentRoot set on /data/www/cms/. What I'm trying to do is to have the URL $URL$ to return a file from the given customers data directory, i.e. /data/www/cms/app/customers/foo.com/assets/css/bg.png.