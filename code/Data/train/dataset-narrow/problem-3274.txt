Have a look at htpasswd from apache: htpasswd The steps to create this can be quite confusing, but in the end you can lock out ANY endpoint url/directory on your server with a user/password prompt. Key notes from this link in case the link changes: 

Analyze your running processes with htop or top. Figure out what is installed that you don't need running and disable or remove the packages (not for the feint of heart or linux beginner). Don't start the gui. Disable all logging or send logs to dev/null Make sure the PSU is supplying ample power as others have stated. You can overclock, but I wouldn't do this without good cooling and heat sinks. Externally power any addons. Then you should have as high performance as I could advise. 

Referring to THE LATEST UPDATE TO RASPBIAN it can be done easily. Just place your WiFi configuration on the freshly burned SD card: 

should also work if you run the script from within the same directory or change into the dirctory within your script. 

No, for several reasons. The most notable is that only Pi Models without a USB Hub (Notably Pi model A, A+ and Zero and Zero W) can be backpowered through the usb Port. Also to my best knowledge only Pi Zero's USB port can be used as an OTG port to use it as a USB gadget. As there is a ethernet gadget available which emulates a NIC over the USB port to access the Pi. So with a Pi Zero W you might be successfull if you configure it as a bridge between WiFi and ethernet. 

Radioshack sells a VOM that has a serial port and a API to interact with the meter. You could get a "premade" device such as this if it has a customizable API. Then just code a pi interface to it. edit: requested link RadioShack 22-812 

Boot to recovery with a working internet connection. It should show in the list. If you don't have a internet connection on instal it seems to hang as the win install bits try to authorize your Microsoft account for the install. 

I also personally recommend using php pages and wrapping generated html in echo or return blocks. Thereby not exposing any function code to the browser. Like so (ultra simplistic example, showing only the result of $bar, but not how it was assigned.): 

The reasoning behind the JS popup is, those can trip up generally simplistic written brute force scripts. Then redirect the page to drop session and go to another page for added complication for any automated hack attempts. Additionally you could lock out all IPs but specific ones to allow connections: 

What you really want is a VPN-Server. L2TP would be what you want as the much simpler PPTP is no longer supported by newer devices. I have a RPi running at home for exactly this purpose. I can access any device in my home network remotely from my MacBook Pro, iPhone and Windows 10. There is a fairly easy setup script for that on github. Read everything carefully before you do something. 

No, this particular camera module can't be used with Raspberry Pi 3. While the camera hardware itself would work, the ribbon cable is of a different size and won't fit. 

I think your best bet is to dive into Processing. But to my best knowledge you will only be able to mirror your desktop. But with 24 screens that might also be neat. 

I would think some existing UPS units designed specifically for the pi would be a far better approach. Some can allow for additional battery for longer life. I think if I remember correct, some can initiate a shut down on low battery as well. On top of this, I found a nifty design idea for something that may work. Raspberry Pi UPS Quoted from this link is the part I want to convey here: 

Set the piece in place and use a paper clip to hold it, then use a heat gun on low air setting to solder it in. It will take some time to get it to the right heat and do not bump the unit at all during and for 5 mins after. Flat level stable surface and try to keep the heat off the rest of the board as much as you can. Also since it is near the SD slot where there is likely plastic in it, use some form of shield on the side of that to deflect heat from the slot. To answer the other question, it is likely a capacitor if it boots fine. I don't have a zero nor know where the schematics are off hand. But running it without the capacitor can be dangerous to the stability of the unit. Depending on what circuit it is for, you could "spike" voltage or have a voltage drop which depending on tolerances could fry other components. 

Where XX:XX:XX:XX:XX:XX is the MAC address of your bluetooth device. You have to create the serial device that binds to your paired bluetooth device. 

That would be it. After a reboot your device will mount automatically. If you don't want to wait for a complete reboot you can start the service right away with 

I think you are mixing up signal moldulations. HM-T433 uses FSK (Fequency Shift Keying). Most applications in 443MHz use ASK (Amplitude Shift Keying) and of those most use OOK (On/Off Keying). That means they either send a signal with constant amplitude and frequency for "1" and don't send anything at all for 0. RTL2832 is capable of doing both FSK and ASK. But you have to configure it correctly for your application. The rtl_433 utility is fitted for ASK/OOK so your transmitter does not match. You will need to find another utility that uses FSK. Try GQRX to find out if you receive the signal at all. 

The only way a windows .exe will run on anything linux including the pi is through wine. I am not sure if there is a pi compile of wine as I would never try it. For a .jar these are java scripts. Again not sure if pi has a JRE (java runtime environment) as I would not have a reason to attempt or research this. The .dmg was already answered. You may want to look into linux basics guides and such on files and programs. Then look at specific platforms/architectures. The pi IS a linux box, but on arm not x86 intel. 

I tried Ubuntu 16 once, nothing worked well at all. Slow as you state, the packages that installed were not up to our project standards we have (example mysql was impossible to remote into). Various bugs elsewhere too. Symlinks failed to work correctly. Set a link and it was like running down a tunnel that wrapped back on itself. So far Raspbian runs very smooth and impressed with it's performance as a dev and server platform. I doubt Ubuntu 16 has the needed kernel compiles for the rpi. So it is bound to run horrible regardless unless you compile it yourself and find everything you need. That said, in short, you are not alone and that performance is normally experienced by many. However, I would seriously avoid clocking it up to boost performance on an OS that is not very compatible with it. You will be looking to replace it sooner than later. 

You will need an USB Video Grabber like this one ($URL$ This is no recommendation for a particular device but a hint on what kind of device you need! With that you will get a device where you can grab frames using v4l2 library in python, C or any other language with a binding. Additionally you will need a cable with a 3 or 4 pole Jack on one side and RCA on the other side. (The pinout may vary so not all cable will work. But you can test it with TV first.) 

I've made a fork of shairport-sync which is an AirPlay client. You might want to take a look at it. It does some OpenGL audio visualizing. But it does not do anything more. But to my understanding, Volumio is a collection of programs just like shairport-sync along with other. So I don't see a solution that covers all your audio paths. 

The big thing to watch about any PSU you attempt to use for the RPI is the dead/no load voltage. As @goldilocks stated, I have seen a few PSU questions asked and I also think it is on topic (all-be-it loosely) to find the best PSU that won't fry our rpi. What you will want to do if you buy any PSU is leave the 5v end unplugged. Before plugging the PSU into the wall, connect a volt meter to the 5v side. If you have a volt meter that is quick to read and has a auto "hold" feature for the highest detected reading that would be best. Otherwise watch the meter and plug the PSU into the wall and look for a spike initially and a holding voltage that goes past the tolerances of the pi. Many wall unit PSU's will spike. Thereby fry or weaken your rpi.