I plugged the SD card into my Windows 10 laptop, installed DiskInternals Linux Reader. I then copied the necessary files using that. 

Unfortunately I think you might have lucked out there. Unless the product page explicitly says it works with the Raspberry Pi or you have found someone who has go it to work with the Pi, the chances are it is not supported. You can however try running: 

The real time performance of the OS is going to make an impact on how well OpenCV will work. From the tutorials I have seen online most people seem to be recommending the use of Raspbian. Raspbian is one of the more popular choices of operating system for the Pi. So one advantage to it is there are a huge number of tutorials for various things based around it. This means if you get stuck on something there is a much greater likelihood of finding an answer. The downside to using Raspbian is for real time stuff is it simply isn't going to be as quick as a cut down OS like Minibian. However, if you look at the official Raspbian download page you will notice the most recent version of Raspbian is called Jessie. And that you have the choice between Jessie (With PIXEL) or Jessie Lite. Jessie Lite is essentially a cut down version of Jessie. There is no Graphical User Interface (GUI), and comes pre-installed with less software. Setting it up to work with OpenCV might be a little more challenging than if you had a GUI. But, the benefit is OpenCV will probably run much better. Having done a quick search for Minibian it doesn't look like there is many tutorials based around it. I'm sure you could still get everything to work, although I'm still inclined to recommend Raspbian Jessie Lite. 

I think the reason you found it so hard to find tutorials is perhaps not being specific enough in your search queries. And also not realizing that a Wi-Fi repeater and Wi-Fi access point are quite similar. I'm going to give you a brief overview of how to do what I think you are after. The important thing to note here is the Wi-Fi chip on the Pi 3, BCM43438, is supported by the open-source brcmfmac driver. This is what allows the repeater/access point functionality. Here are the basic steps: You need to install dnsmasq which is the DNS DHCP server. You also need to install hostapad which allows the Wi-Fi chip to be used as an access point. So in the terminal run . To ensure the Pi remains connected to the router you need to give it a static IP address. You can do this in your router settings or on the Pi. To do it from the Pi end: 

You will see an option in there for changing the keyword. There are some voice commands in the file by default, you can however add your own: 

I suggest this cable, it might work. Its essentially a 3.5mm to 3 x RCA. I assume if the feature worked with the B+ they would have kept it for the Pi 2 and 3. There are also reviews on the same page that say the cable worked with the Pi 2. If your trying to use an ordainary composite connector I think you might be out of luck 

Using the Raspberry Pi Camera at night is going to have problems, firstly you will have to increase the ISO to high levels to see anything in the dark. This means poor image quality and would make detecting things like people harder. My solution would be to set up infrared LEDs on one side of the corridor at different heights. Then set up infrared detectors on the other side of the corridor to the infrared LEDS. The infrared from the infrared LEDS will be detected by the infrared detectors, when an object walks down the corridor it will break the beams of infrared light. This is then detected by the infrared detectors, so every time the beam is broken something must have walked down the corridor. Your other problem is things like stray animals breaking the beams of infrared, triggering your relays. This is easy to solve because the animals will only break the low level beam of infrared, a human will break both the high level beam and the low level beam of infrared. So if only the lower beam of infrared light is broken an animal must have walked down the corridor. You can still use the raspberry for this project because the infrared detectors can be connected to the GPIO on the raspberry pi. A simple python script would then be used to process the inputs from the infrared detectors. Generally speaking python scripts use a medium amount of CPU depending on what raspberry pi you are using, so this solves your high CPU problem as well. 

I followed advice from this page and logged into the YouTube application on Kodi twice and it seems to have worked. 

Now run , replace with . You can then exit the file with saving it. now needs to be configured. First run: 

If in the file you see any mention of a MAC address remove it from the file. Then exit the file with saving. To set a fixed MAC address run: 

You have discovered a "feature" of the Raspbian Lite OS. The way Raspbian Lite differs from Raspbian is it has no GUI, (Graphical User Interface). So when you try to VNC into the Pi, you are going to get no GUI, as that is exactly what you would get if you connected the Pi to a monitor using HDMI. However, I can confirm that using SSH will work normally. Also, if you do want to make use of VNC the normal Raspbian distribution will work and I believe it has VNC built-in and enabled by default. Edit: It is possible to install the packages required for a GUI interface, this page on the official Raspberry Pi Forum gives a really good explanation and comparison of the different GUI's. 

Below I have included an example voice command, you can add your own voice commands below the example one. Edit 2: The method I listed above is just one way of implementing voice control. For Python there is the SpeakPython library. The person who created has confirmed that it works well on the Pi. Alternatively there is the SpeechRecognition library which was developed by Python. You can find lots of example pieces of code and tutorials on the site I have linked above. However, I'll post one of the example pieces of code here just to give you an idea: 

The keyword for activating it is Pi, I suggest changing it to something more distinct as Pi sounds very similar to hi. To fix this run: 

It is my understanding that the USB ports on the Pi share the same controller as the Ethernet port. This means if one was to use the Pi as a NAS, data transfer over the network would be restricted, since both the USB ports and the Ethernet port would be used simultaneously. My question is to what effect is data transfer slowed down, and is there a workaround to this problem? 

Click the little folder button and go to the file location of the un-zipped Raspbian Disc Image file and select the file. You will also need an SD card connected to your computer and the location of that can be set under the Device drop down menu. Once you are happy that you have the Disc Image File and correct drive letter for the SD card selected you can press the write button. It will take a few minutes for Raspbian to be written to the SD card. Once a message pops up saying the write was successful you can safely remove the SD card from your computer. The SD card is now ready to be used in a Raspberry Pi. A slightly easier method of installation is to use NOOBS, which can be downloaded here. Once you have downloaded the ZIP file it will need to be unzipped. Once unzipped the files in the unzipped folder need to be copied to the SD card. And from there the SD card can be used in a Pi. If after following these steps you are still encountering problems try using a different SD card. You also need to ensure you are powering the Pi adequately, be sure to use a power supply that can reliably provide 2A at 5V. 

Those two previous commands installs the necessary repositories and the command below ensures they are up to date: 

I think ownCloud might be what you are after. Before following the steps below make sure your Pi has a fixed IP address. Assuming you are running Raspbian open a Terminal window and run: 

Which will show a list of available Wi-Fi networks. If you are connected to a network already you can see a list of the other devices on the network with: 

A quick look into this online suggests that no one has posted any solution to this for the latest version of XBMC. The main issue as Goldilocks pointed out is XBMC wasn't designed with the intention of making it read only. This point is furthered if you take a look at this thread on the OpenELEC Media Center Forum. The general consensus there is its not possible to make Kodi read only. The reason according to the user klojum was: 

You are working on an assumption that the current draw is constant so you have calculated the average current draw. Looking at your calculations they do look correct. If you look through the official documentation, you will note the idle current draw is 0.22A for a Pi 2 B. So your calculated value is certainly in the right place. A better way to measure the power usage of the Pi is to use some kind Watt-meter or data logger to give more accurate numbers. The benefit of such a device is being able to look over how the power usage changed over time. I'm not sure you need that kind of accuracy using the data you collected a sensible suggestion would be to say the max time is 25 hours to give yourself some headroom.