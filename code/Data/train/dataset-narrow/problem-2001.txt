I would recommend that you rearrange your network, as shown in the diagram below. Don't forget that in the consumer space a "Router" typically refers to the following network components in a single box: 

You pointed out (in a comment) that you were unable to place the start of partition 5 where it should be - was giving an incompatible range. To fix this up, you will need to create the partition 5 as per normal... but use the incorrect default start value that is a few sectors larger than your desired value. Once the partition has been created, you can then enter expert mode () and place the start more manually. Then return to normal mode () and re-print the table... if the numbers look good, then write it (). In my example below, I have created the partition, and used the default value that provided (45056)... I then use expert mode to set the "correct" value (43010) which would otherwise be out of range. 

It's also beneficial to enable the "Show custom thread names" option. These "processes" you are seeing are probably actually "threads" - this would be more clear in tree view, or with the "Display threads in a different color" option enabled. 

Just install Wireshark on the PC... you've already got VMWare and a VM, this would be arguably less of an infringement. Find a hub (not switch) and a spare machine to put Wireshark on. Then put the switch between your PC and the wall, and hang the "Wireshark PC" off it too - reference. Again, this should be against the company's policy. 

If I reverse the direction (PC 2 sends echo requests to PC 1), then PC 1 never sees the request. Disabling the Windows firewall doesn't help. As a last resort, connecting PC 1 to the router by Ethernet resolves the issue... however this is not currently an acceptable solution. Can anyone help? 

Here, the open quotes are not a simple ASCII quote (), but are a Unicode / UTF-8 series - , , , or - which the terminal will not handle as you might expect. Kiwy's suggestion of also does the job: 

With this you can connect one piece to each end of the run, and simply ensure that the termination is correct - the LEDs should run 1 through 8 on both ends, otherwise there is a bad link / mismatch. More (much more) expensive tools will be able to provide you with information on the quality of the run - crosstalk, bandwidth, shorts, length, etc... I'm not advising you to go for a tool like this... Call a pro if you need to. Termination I'm not familiar with the terminals you've shown... I can only presume that the RJ45 socket is in a separate piece of the faceplate... and I also have to presume that by removing it you've pulled the wires from the punchdown block. The 'keystone' terminals are fairly popular, shown below with a "punchdown tool" in action. 

This is actually somewhat covered by the USB spec. Section 5.3.1.1 of the USB 3.1 spec has the following image: 

SFTP is file transfer over SSH... there is no such thing as "passive mode" - this is an FTP concept. 

Presuming RS232 (or a TTL variant thereof). Consider each "direction" independently, ignoring flow control lines. There is one signal, which must somehow convey "data", but it must also be able to convey "no data". To convey "no data", we simply leave the signal high - logic 1. It can be like this indefinitely, and everyone is happy. As soon as we want to convey "data" we must inform the remote end, using just this one binary signal, that data is about to come. If we didn't use a start bit and transmitted , it would look something like this (where grey is idle, and green is active data): 

Additionally, a "serial cable" implies RS-232 (possibly RS-422), and isn't really considered to be "networking" within the in modern definition - it's used all over the place for configuration and direct interfacing. In some industries RS-485 is used for point to multi-point networking (with a specific master)... but if you're talking about this, then you're not talking about IP / Routing / X Area Networks. I suspect you don't mean "serial cable" - i.e: DE-9 (aka DB-9): 

This is a scary topic, with a few avenues to investigate... I'm going to cover the two big ones. Have a look at this talk from ELC 2015: Filesystem considerations for embedded devices. Filesystem The filesystem needs to handle writes to the disk carefully. An issue may present itself if, for example, the file's length is extended first, and data is written second. This is a problem that can readily occur, and I was reviewing a log file just today that exhibited this issue - the system unexpectedly lost power: 

exists for a reason - use it. When your command (in this case an interactive CLI) is finished, you're dumped back to your user-level shell, not a root shell. There are very few worthy reasons to be in a root shell. (I'm surprised that this isn't already an answer...) Having said that, don't be a muppet that uses for everything. Understand what you're doing, and understand why it does/doesn't require root privileges. 

Feel free to swap for another - e.g: / / depending on your requirements. Note that this may get slow for large directory trees, in which case you may prefer a more complex script to traverse the hierarchy. 

It is indeed possible that the ISP or router is performing "DNS Hijacking". You didn't mention the hostname of the server you tried pinging, but it's likely that the ISP is returning (localhost) for that DNS entry. Try using , with a known server (e.g: ), and you may well get the correct result. 

Depending on your data, these applications will likely save you a large amount time, and will also significantly reduce the stress put on your hard disks. 

The Maximus VIII Impact uses the Z170 chipset - block diagram below. As you can see, it supports "Up to 10x USB 3.0 ports". 

FEC (Forward Error Correction) is not typically a cause of noticeably higher latency. It indicates that the link has corruption, but this corruption has been detected, and the data corrected. 

doesn't create directories because that's not its job. There is no need for it to do so, it's not a missing feature. If you're going to ask for such a feature, then you need to think about the behaviour as well... For example, does it work like or like ? At this point it's easier to just use in the occasional scenario that you want to make a directory. 

As a follow up, I have just migrated away from Obnam (which is now retired), and have settled on ZFS with snapshots. I've also just been through the process of investigating off-site storage services, and (for the amount of storage I require) have concluded that building and hosting a machine at a remote location will work out cheaper than using a dedicated storage service before the ~1 year mark... though of course, make your own decision. 

Note: when using , you stand a chance that bash will substitute parts of the string you are trying to inspect. This is particularly of concern when trying to inspect components of a script. For example try: 

I can't distinguish the motherboard model number from your photo (probably the white text in the middle of the board)... but... It looks like the nForce 405 supports SATA 2.0 (aka "SATA 300" or "SATA 3.0Gb/s"). I was unable to find information on the Athlon 64 x2 4200+ (particularly the memory controller), but I suspect DDR2. Purchasing faster memory shouldn't be an issue (it'll just run slower than it could), and given the age of DDR2, it might be worth just buying some off eBay and giving it a go. Sadly there is no AMD equivelent to Intel's ARK... 

Parity and stop bits will not be included in this file. The "raw data" refers to the payload... parity and stop bits are related to the framing and verification of the "raw data" on the physical medium. 

is (Control-M, or carriage return). This is likely because the user who committed the file was using windows, which uses for its line endings. Linux uses only , hence you see the at the end of the line. You probably want to do one of the following: 

The application knows how to interpret this, so needs no support. By support I am referring to locating the storage area by name (e.g: filesystem and file name), and sharing understanding of the configuration with a human (e.g: JSON / XML / YAML / TOML). 

I'm working on a network, as outlined below - a BT HomeHub 5, and a Netgear EX6150 WiFi extender. There are other points on the network though I've left them out for brevity, and all of the pink dashed lines are WiFi. 

As @Andriy has stated, using IP alone, this is not possible. When your computer connects to , it is actually resolving this to an IP address, for example: . Once it has the IP address, it will then attempt to connect to the relevant port on host . At this point, there is no concept of a 'hostname' or DNS. 

I'd like to use the command line application in a pipeline, but it doesn't appear to be possible. A working example is: 

Most user-facing systems these days optimise for interactive scheduling, as do more and more servers. Additionally, I have observed "bigger" / "better" processors (e.g: i7 / Xeon) offer much better responsiveness under high load than "smaller" processors (e.g: Atom / i3)... I can't fully explain this, but it could be due to thread count, cache size, etc... 

To answer your question bluntly (and hopefully impart some understanding of subnets): The IP is represented in decimal, but netmasks are a 'number of bits that must match', so you need to be comfortable with converting decimal to binary. 

Type and press Enter Paste the text you would like to use Type on a line of its own, and press Enter 

This argument can change the behaviour of the application entirely - in this case, it presents a different window - you may even be able to locate this window within the application when launched without any arguments. 

Having read this, my understanding is confirmed but I'm still left puzzled... It looks like this is possible, as appears to be configured this way (as outlined in the linked article). Isn't there a step missing between 5 and 6? 

Brilliant! But now we run into another problem... No two clocks tick at precisely the same rate. In the case of the humble UART, this is something that is agreed ahead of time - both ends of the link are "talking" at very nearly the same speed... To give the link a better chance of working, we introduce a "stop bit", which is in effect, just a rest... a pause. Two stop bits are often used on older hardware that take longer to process the received byte - one stop bit is almost ubiquitous today. 

will not alter the mounted filesystem's permissions - thus you'll need to use , or similar approach (as root) to change the owner/group/permissions of the root (or other relevant point) of the filesystem. For example: 

Note that sections need to be at the end of the config file... Don't forget to reload the SSH server: 

I can only presume that the signal of the first element in the pipeline is propagated through to the rest of the elements in the pipeline (even separating them with fails). I've had a look for documentation, and had a play with , but they didn't act as I was expecting. 

In this case, that answer is quite murky. You might be able to see that Person A talks to some important person in law enforcement, and perhaps some people associated with organised crime. But it is going to be extremely difficult (impossible?) to state for certain the motives of Person A. Are they an undercover cop, or a criminal with a judge under their thumb? You can't reliably read anything into such knowledge alone. If you managed to ascertain more information, such as the I/O that is being performed, then you would be on your way to understanding the situation more clearly.