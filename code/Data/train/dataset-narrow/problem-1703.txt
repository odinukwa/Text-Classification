Outgoing email goes from the user's UA to , its MSA. The MSA sends the email to an MX (possibly or ), or directly to an MDA like . The MX may tranfer the email through additional MXs until it reaches and MDA which accepts the email for delivery. If at any step along the way, the email is determined to be undeliverable, it will be returned to sender if possible. At some point a UA may be used to read the email. 

Don't use the current IP address in your code. It is standard practice to listen on '0.0.0.0' which will listen on all available servers. You can add the ability to set the listen address from a configuration file and/or the command line. That should solve the issue of having to modify the code every time you change networks. Getting a static IP address is beyond what I can answer here. It requires a static network. It might be possible to configure a host with a static IP address to forward requests to your server, but the best solution would be to host the server on a host with a static IP address. 

There is nothing in the RFC that would indicate that all records must have the same nameservers. However, in section 8.4 it is recommended that strict validation of glue records be applied. It is possible your server is not supplying the glue records. It is common to setup sub-domains as separate zones. These can be served by the same server or delegated to different nameservers. is a sub-domain of the domain. Having as a separate zone makes updating the sub-domain simpler as only that zone needs to be reloaded. When rotating keys, only a few entries need to reloaded. It also prevents accidental changes to other records in the domain. I haven't tested, but it may make sharing the zone among multiple domain simpler. I'll be testing this soon for my and sub-domains. 

Consider monitoring the system with a tool like or . This will give you information on which component are busiest. I like Munin for its graphical reporting, also the ability to set alerts. sar gives good details on disk and swap activity. Including the service time in the Apache log is useful. I usually change the remote logname (ident) field () with the time taken to serve the request () in the extended log format. 

Try using the package. You may need to install as well. This should enable using as a name service. You will need to add to the entry in . I have the package installed on a Window system, but its address is not available. Media services are announce, but only have the machine name. Adding a static IP to the Windows system would be fairly easy. Using an entry in would make accessing the system by name simple. This could be done on both systems. If you pick addresses in networks like , , or you should have a low risk of address collision when you are connected to a network. Adding the addresses as secondary address should allow the addresses to work even when you are getting a zero-conf address. 

The negative value is the number of bytes in as per the label on the left. It is typical that the number of bytes in is significantly less than the number of bytes out. 

Due to a flood of spam mostly sent by spambots, most sites require senders to properly configure their servers. As well, many ISPs block outgoing email traffic from dynamic IP addresses; and may require users with static IPs to request the ability to send email. If you want to send email directly to the internet you will need to ask your ISP to configure the PTR record for your IP address appropriately. 

I have the same issue. It appears some ISPs are blocking NTP traffic on IPv4 to prevent amplification attacks. I am using a tunnel broker for IPv6 as my ISP does not support IPv6. My tunnel broker is not blocking NTP. 

Typical permissions for the directories the Maildir tree is 700. If you are sharing folders you need to allow 750 access to Maildir and 770 to shared folders. The share must be a member of the group that owns the Mailder and sub-folders. Files inside the directory should not have execute access. 600 is common; with 640 or 660 set for shared folders. If the Maildir itself has 700 for its permissions, the subdirectories aren't as critical as other users won't be able to navigate to theme. 

The rules are cumulative. In some cases, such as this you will have overlapping rules triggered. Bayes 99 to 99.9 Scores 3.5 

It looks like you email is from an automated sender which is sending using one of Google's server. It may be connecting to GMail to send the message. Your server appears to have an SPF record, which neither includes the Google SPF list nor indicates that it should be enforced. Including a Sender header for apache@servername.mycompany.com may help. There are a number of factors that will make you email look like Spam before you even start sending it. 

For directories that don't need to be listed use instead of in the above. Files with known names will be accessible, but auto-index generation won't be. You may also want to ensure only a few files or directories can be written to. The following finds files and directories that can be written too. 

It appears you are missing the column in your users table. You will also need and fields for this query. Dovecot may be able to determine these values by other means. Dovecot may be able to use other mechanisms to determine these values. 

The following commands should be run as root, or at least a user that has full access to the directory tree. You will need an additional check to verify access to the paths used in the find commands. This can be accomplished by running the command as the target user. Failures when running as a non-root user should be dealt with appropriately. Replace with the appropriate directory or directories for your requirements. Change the user and group appropriately for other users. If the user belongs to multiple groups, you will need to add additional tests for the secondary groups. (In many cases just flagging files owned by the secondary groups may be sufficient.) For a system where runs as the following will find files which can't be read. 

I would add backups. You've really gone all out on the network security front. Using only a subset of those tools would likely be adequate. Disable any and all network services you don't need. If you have network service that are only accessed on the server, have them listen on the loopback interface only. 

Normally, a default site is defined within a virtualhost definition. This catches any request that are not otherwise configured. See /etc/apache2/sites-available/default for an example. This should be symlinked to /etc/apache2/sites-enabled. In your case the default server should catch nothing, so you may want to set it up to show an appropriate page. 

You should be getting proxy requests from only a few IP addresses. Firewall these addresses. At a minimum prevent access to HTTP, but I would firewall them entirely. If proxy is a module disable the module. On Linux you can use a2dismod to disable the module(s). 

It would be much easier to match listening ports against known services. Anything else would be suspect. With few exceptions, services run on well-known ports. Others, can usually be assigned fixed ports. In any given organization, the number of active services (ports) is usually much fewer than that which would be found in the services file. It should be possible to generate a list of services that are used in the organization. There are many ports that are used by both malware and legitmate software. A fair number of the lesser known ports I use show up as malware ports when I research them. Scanning servers for listening ports (both externally and internally) and matching against expected services could be more effective. 

I modified the configuration from this post. Edit2: It looks like you can do it with Postfix as well. A solution using a wildcard address for a virtual domain and a maildrop type indirect delivery should do it. 

If you are using log4j correctly using a higher log level should not impact the import messages as they should have a high level. Log the detail locally with local rotation. 

The server distribution does not install a display manger, although it can be added. The display manager (xdm, gdm, etc) handles logging you into the system. If you work mainly from the console the display manager is in the way. However, firing up startx everytime you want to use firefox, thunderbird, or some other graphical tool can be a pain. Although I do most of my work from the command line, I leave gdm running. I often have two or more xterm sessions open, sometimes side by side. Scollback is superior to what is available on the console, and dynamical resizable screen size is quite useful. If I am doing modifications which may result in failures showing up in a log, I can tail the log in a full screen window behind the current windows.