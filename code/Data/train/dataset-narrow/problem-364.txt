In addition to that you will need mls qos trust on the trunk facing the SW, which is doing the classification and mls qos enable on the SW itself 

Do you receive some error message when trying? Are you sure that you are using the correct username ? (Note: "patrick" is listed in the config snipped, "Patrick" can be seen in the running config) 

Most probably you have an application issue on the server listening to the traffic and it is not sending IGMP messages correctly. You can solve the problem by adding ip igmp static group to the outgoing interface. 

You can add ip flow ingress/ip flow egress under the interface (Ethernet0 in your case). This will enable NETFLOW caching of the traffic passing through that link. No worries no risk involved. After that you can execute show ip cache-flow and you will see all the packets passing through that interface. Most probably the rest of the devices have more specific routing and default gateway is not used at all. 

Latency can be extracted from iperf test, but I'd recommend adding SLA probes via some external software like this one 

Please do the following: -shutdown the switch -press Mode button while power on the switch to enter in switch: mode. -set BAUD 115200 -flash_init -copy the file The random symbols are normal since you are transferring the file via console. So you can actually see the data flowing via the link. Just leave it for few hours and image will be uploaded. 

I haven't been able to confirm this in any documentation yet, but I have looked for the "switchport voice" command on the copper ports on my own Nexus 7k and it is not an option for me either: 

I'm running into what should be a very easy problem to solve- I need to see all routes coming from one specific next-hop on a few cisco ASR 1002-X's that I have in my network. Normally this should be as easy as a filter on , but all of the output is coming up on two lines due to the length of the interface names, making the filter useless. Here is some example output: 

802.1x was specifically designed for end-point devices to authenticate to network switches and was not designed for switch-to-switch connections. Because of this, it is highly unlikely that you will find any switches that can be a 802.1x client, so the answer to your Y question is no. To answer your X concern (see XY problem)- preventing a malicious entity from monitoring and intercepting traffic can only be reasonably accomplished by maintaining physical security of your network hardware and cabling infrastructure. As @Ron mentioned, it is trivial to configure a device to act as a network tap that can be placed between any one of your switches -provided that physical access can be attained- that can then passively monitor traffic on your network, regardless of whether you have 802.1x configured. MACSEC would be an example of a technical measure that could potentially prevent this type of attack. 

More specific match is always going to be selected, so all the traffic will go to 234. You can't control how other ASNs are going to do their routing. If they decide to announce more specific static via redistribution then all the traffic will use it. However in normal situation ISP is not going to use static routes for subnet which is not part of their address space. 

If you really want to explore the topic for measuring optimizing TCP perfromance I'd recommend to read RFC-6349 

RSTP protocol which is now widely implemented is sending BPDUs only on designated ports. Those 9 are sent during convergence activity in the past. 

I have personally done that ARP timeout set to 60 sec for a single VLAN caused 0.05% ARP usage on cisco 29XX series. It is running like that for over a month. No problems at all. Still I'd not recommend using the network for solving clustering problems. 

The new SUP-2T can support up to 4000 VRFs. This design has two main drawbacks which you need to consider: 

Imagine a situation when packet arrives at the first router and it's size is nearly to the MTU of the physical egress port of the router, then it is encapsulated with IPSEC headers. Those additional headers will probably exceed the MTU of the egress port In such situation the packet is going to be fragmented after encryption - post-fragmentation. Of course this forces the remote IPsec peer to perform reassembly before decryption. You can avoid post-fragmentation if you set the MTU in the upstream data path to ensure that fragmentation occurs before encryption (prefragmentation). Prefragmentation is really important from performance perspective because it is moving the reassembly task from the remote IPSEC peer to the end host. 

No matter what I do (including increasing the terminal width to 256 chars), the output is always on two lines, removing the ability to use the pipe/inc filter. I'm aware I can redirect to file, copy to my desktop, and then start doing some manual searching via a text editor, but that is all very time-consuming when I'm in the middle of troubleshooting an issue. Is there a way to filter a list of all routes on a router by next-hop IP, even when the next-hop IP is displayed on the second line of output of ? 

My organization currently has a pair of Nexus 7010's (Sup-1's) in one of our smaller data centers as our core switch (we still currently implement a Core-Dist-Access model). Long story short, this data center ended up not expanding out as was originally forecasted and the 7010's ended up being overkill, both in terms of capacity as well as rackspace/power. Due to upcoming EOL's on the 70xx architecture and the age of our current gear, we are looking at replacing these with something newer and smaller. I was initially looking at Nexus 77xx's as it is recommended upgrade path for the 70xx's, but I feel that this is still overkill. Instead I am interested in the Nexus 6004's as a smaller form factor replacement. I know from the documentation that the 6004 provides layer-2 feature parity, but I have not been able to find any information regarding its layer-3 features and capacity as it compares to the 70xx's and 77xx's. Does anyone here have any experience implementing 6004's in a core layer-3 data center role that can provide insight on its layer-3 capabilities? Alternatively, does anyone have any documentation that compares the 6004 with either 70xx's or 77xx's on layer-3 capabilities? Note: VDC is not a requirement for us. 

1) Issue the flash_init command and the load_helper command switch: flash_init switch: load_helper 2) Issue the dir flash: command in order to view the contents of the Flash file system. After you have verified where the Cisco IOS image file resides, try to boot the image. Issue either the 

The thing is that you have an MPLS network in the middle of your traceroute. Actually results from traceroute are not really accurate when it comes to MPLS environment. What happens is that all ICMP TTL exceeded messages originated by a P device first have to be tunneled to the other edge using the original label stack before being sent back to the originator of traceroute operation. Therefore, you will always see end-to-end RTT across the provider core in the output. You need to trace from PE router toward a provider-scoped IP address to resolve this "layering" problem and observe proper RTT. NOTE: DNS resolving is correctly configured. 

You can attach cisco switch with two PCs behind the router. Dot1q trunking can be used with 1 vlan per PC for traffic generation and second one for SLA probes. The router must be used for inter-vlan routing, traffic shaping also should be configured here. IPERF/JPERF can be used for traffic generation. On both switch ports you can mark the traffic with specific DSCP value, which needs to be used later in the policy. Speed can be easily measured with IPERF: 

When the routers on either end of a BGP session first boot, the session between them is in the Idle state. The BGP session remains idle until a start event is detected. Typically, the start event is the configuration of a new BGP session or the resetting of an existing BGP session. At boot time, the start event is generated by the router as the BGP session is initiated. After it detects a start event, the BGP host sends TCP request packets to its configured BGP neighbors. These packets are directed only to neighboring interfaces that have been explicitly configured as BGP neighbors. Upon receipt of the TCP request packet, the neighboring host generates a TCP response to complete the three-way handshake and establish a TCP connection between the peers. While this handshake is taking place, the BGP state for the connection is Connect. If a TCP timeout occurs while the originating host is waiting for a TCP response packet, the BGP state for the connection is Active. The Active state indicates that the router is actively listening for a TCP response and the TCP retry timer has been initiated. Once a TCP connection has been established between both ends of a BGP session, the BGP session state is OpenSent, indicating that the originating router has generated an open message. The open message is an initial BGP handshake that must occur before any route advertisement can take place. Upon receipt of the open message, the neighboring router generates a keepalive message. Receipt of the keepalive message establishes a point-to-point connection, and the BGP session state transitions to Established. While the originating host waits for the keepalive response packet, the BGP session state is OpenConfirm. Source of the information