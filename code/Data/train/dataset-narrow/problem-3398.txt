I'm going to buy necessary stuff for using the GPIO from a Czech reseller to avoid the shipping costs. For this, I need to know: What is the nominal distance of the pins on the GPIO? (I don't have my RPi here to measure it.) 

The choice of Raspberry Pi for this is due to its extremly low power consumption. The question is: Are there any steps in this plan that would not work? I'm especially not sure about the possiblity to install and run Windows in the Virtual Box on this device, since it is not a Win-compatible device itself. 

You can glue a SD-to-MicroSD reduction there, they're sold with most MicroSD cards and you can get MicroSDHC cards, too. This allows you to remove/change the card when necessary, yet it is safely in place. On the other hand, the warranty always depends on the laws of the country where you bought it, and since this sounds like a wrongly made piece, it should be covered by the warranty. Remember that it is not the company who decides what is covered. 

Below to be shortened or deleted # Appendices # # A1. Opto isolated / Photo coupler relay module board and schematic # Opto isolated relay module has a photo coupler which is 4 pin IC. The picture below shows a photoCoupler PC1 (with its 4 pins labelled 1, 2, 3, 4 in green) and a transistor Q1. The ICs are not always marked. In this picture, PC1 is EL354, and Q1 8050. 

In the above diagram, if GPIO is Low, relay is triggered/activated/switched "on", electrical circuit is "closed" (therefore electrical current flows), motor is switch "on". Your "open" seems to mean my "on", your "closed" means my "off". I am still confused. Let me try again. Do you mean that if you run the following statements: 

Actually logic level shifting might not be the easist solution for you. You may consider throw away your BJT transistor input module and get photocoupler based module. Then you can keep you gpio pin signal at 3V3 logic level, and the 5V0 power at JD Vcc is strong enough to energize the coil. There are many advantages of using photocoupler. You might like to google to know more. 

I have got a Huawei E220 modem and I connect it with . Recently I switched to a 4G network with 40Mb/s speed. However, with this modem I still get only 2Mb/s, because I think I connect through 3G. I suppose that this model simply doesn't support 4G. I can get a Vodafone K5150 modem, but I'm not sure about the drivers for RPi. I have found the information that "the product carries the linux drivers", but I'm not sure how much are the drivers unversal for all distros. So the question: Can I use K5150 modem easily with RPi? And can I use for connecting to a 4G network? 

Install Windows into a Oracle Virtual Box. Run the GPRS USB modem from there. Tunnel the connection to the LAN port of the Pi and to my home WiFi router. 

You can buy small aluminium plates and glue them carefully with a super-conductive glue to the chips. Then you can plug cables to all the connectors and glue the whole device into epoxy. Epoxy itself is dielectric so you should be safe. However, you can still encounter several problems: 

Module spec says 5V High to trigger. That means S input expects 5V to trigger. If your Rpi GPIO outputs only 3V3 actually a bit less), then the current through Q1 is not big enough to turn on the relay. The Led still turns on BUT NOT FULLY ON! To prove that my guess is correct, you can do the following. 

But I don't understand why Sainsmart says that their module can be controlled directly by Rpi, though at the same time each channel takes 15~20mA. 

However, I found a big problem when feeding the converted 5V GPIO singal to the relay module. The relay still turned on and off as before, with the 3V3 signal, but when I used the scope to check out the waveform, I found the very surprisingly that 5V signal dropped by half, to 2.2V. I suspected the reason was that TXS0102 can sink current much better than sourcing current to the relay module. To verify my guess, I fed the 5V signal to another relay module, a pull down photocoupler type, model MK01. This time I found the 5V signal did not drop any noticeable amount. So I quickly concluded that the NPN transistor type relay module is a bad choice. I would stop testing this kind of relays from now, and move on the photocoupler type of relays. I also tested another photocoupler driver module MK101. This module has a jumper to select Higher trigger or Low trigger. I found that for Low trigger, the TSX0102 converted 5V signal level is not affected. But when Low trigger is selected, the converted 5V signal level dropped to around 2.5V, though the relay is still working. 

I have settled up my internet connection as described at it's a clean machine blog . I've settled everything up. However, my ISP informs me by an SMS that I'm getting close to the monthly FUP, and I have no other way how to get this information. Is it possible to reciever SMS messages on my Huawei E220 dongle? I'm then able to set up a cron system that would send me the SMS messages on my e-mail. 

I have got a power source for my RPi. The manufacturer claims that the output voltage is exactly 5V. However, I would like to measure whether it is true, and I would like to find out how stable it is when I connect other devices. Where it is easiest to measure the voltage with a "needle" volt-metre? I was thinking about the 5V GPIO pins but I'm not sure if the voltage there is the same as on the input to the device. 

I have an option of a very cheap internet service over GPRS/EDGE (much cheaper than any other option here, with a reasonable quality). The true problem is that the provider supports only MS Windows. My current plan is to: 

DIY your own module using 2N2222 If you are a DIYer or maker, and you want to build everything yourself, then you can use a Songle or How does an Electric Relay work? $URL$ Built Your Own 5V Relay Module [using 2N2222, driven by rpi] - Nick Momrik 2017jul05 $URL$ 

Then connect input S to 3V3, then blue led should grow brighter, the relay might turn on (because 3V3 is a bit higher than you GPIO signal). If relay is still not on with 3V3, then you need an external device to shift your GPIO signal higher, to above 4V perhaps. There are many ways to level shift up your GPIO's 3V3 level signal to 5V0 level. You can google SE for more info. 

Specification Power Supply: 5V DC / 400mA (relay all ON) Input control signal voltage: 0V - 0.5V Low stage (relay is ON) 2.5V â€“5V High state (relay is OFF). Input control signal LOW state current: 2.5V: 0.1mA. 3.3V: 0.18mA. 5V: 0.35mA. JD-VCC or VCC: Power supply input, 5V DC. (JD-VCC RELAY POWER VCC:SYSTEM VCC) GND: Power supply ground and control signal ground. CH_x: Control signal input, Low: relay ON, High: relay OFF. COM / NO / NC: (C1=COM1, C2=COM2) Control signal state low, the relay ON, COM - NO disconnected, COM - NC connected. Control signal stage high, the relay OFF, COM - NO connected, COM - NC disconnected D. How to wire a Raspberry Pi to a Sainsmart 5v Relay Board D1. Pi and MCP23017 Based Heating Control system E. Simple relay circuit getting noise spike form AC line F. Relay noise problem although flyback diode is used G. Transient Supressor - michaelkellett The fan may be a much more difficult load than the lights - but if switching the relay makes it go wrong only if it's the fan that is switched then it is probably something to do with the characteristics of the fan/regulator combination. I should mention that you need to be very very careful using the Sainsmart board to switch mains voltages - you must be very careful with your wiring and make sure things are in a box and firmly screwed down. You could try putting a transient suppressor across the relay contacts for the fan - something like: Transient suppressor EPCOS 1004329 B72205S151K101 H. Introduction to Transient Voltage Suppressors