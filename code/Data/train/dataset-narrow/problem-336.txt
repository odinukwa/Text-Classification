Until you set a route in your PCs they don't know what to do with the packets. Type "route print" in a command prompt of your windows PC. You will see a route to your local network but no route to anywhere else. Once you set the default route then the machine knows where to send packets. 

No. When you are transferring data between computers on your local LAN that data is only traversing the gig E switch you speak of and doesn't touch the router. 

Short answer is no. Link speed and duplex negotiation is between a NIC and a port on a network (usually a switch port) not with the network itself. Collisions can only occur once you have established your connection to the network and are attempting to transmit a frame. 

Once your local machine has the MAC address of the device your trying to reach it then assembles an ICMP (ping) packet with the destination MAC/IP combination. So your correct that the destination packet is a particular IP but that packet is then wrapped in a MAC frame and sent. Hope that helps. 

The preamble is simply a series of 1s and 0s that signal the start of a packet. At the end of the preamble is a sfd (start frame delimiter) that signals the actual start of the Ethernet frame. The very next byte is the beginning of the destination MAC address. So yes the synchronization bits (preamble) are on the same signal path. 

Iperf is a great tool for measuring actual TCP or UDP throughput. It is a client server tool so you need access to a machine at both ends of the link to be tested. There is a nice graphical java (jperf) front end that allows you to graph the results. Check out link. 

I think the easiest way is going to depend on the capabilities of your switches. If they have SFP ports then the easiest way would be to install the correct fiber module and connect the new fiber port in your switch to your existing fiber with a patch cable (pay close attention to connectors). If your switches are void of such technology and you don't have the budget to procure new ones then you are relegated to media converters. (Keep in mind, media converters are a stop gap measure.) Single fiber optics I believe are not very prevalent, so sticking with your desire for easy I would not pursue them unless you are low on available fiber and desire to preserve what is left. 

So when a packet comes to an interface, it checks the destination IP, see if it matches any of the networks defined in it's routing table, and sends the packet there. If it doesn't match any of the defined routes, it sends it via the default route/gateway ("all other destinations"). If the default route/gateway is not set, it sends back the "destination unreachable" icmp message to the packet source. If you have NAT turned on, it also keeps a NAT table, where it keeps all the connections. So when your internal PC with an ip from a private range (eg 192.168.1.2) sends a packet outside, the router replaces the private source address, in the IP header, with a public one, assigned to the router, and stores the connection in the NAT table. So when a packet comes back, to the routers public interface, it checks the NAT table to see where it should send it, and changes the destination IP (public one on the router) to an internal one (eg. 192.168.1.2). 

For most people, this means nothing. Telcos still have alot of addresses (used, some even unused). What happens, depends on the country and telco. Most probably outcome is, that the cheapest internet packages (for end users) will be behing carrier-grade NAT, and power-users will be able to pay a few $/â‚¬/... more to get a public IP. Since alot of users have no idea what a public IP is, they wont pay for it. Service providers (CDN, etc.) will continue buying/renting IPs, like they've done until now... until the price gets too high. 

IPSEC with nat-traversal turned on (upd header added) works with most setups simmilar yours. Depending on the firewall settings, this might also be blocked/disallowed, so there is no way to know without knowing the firewall setting. 

If you have IPv4 connectivity, or some kind of translation mechanism, then yes, your computer will use IPv4. Otherwise no. But you shouldn't worry about this much... when there are alot of IPv6 only-people, and those sites start losing visitors/customers, they'll switch to IPv6. 

Mostly, no. Most home routers don't support such translations. But this won't be a problem due to carrier grade NAT (so you still get IPv4 connectivity). 

It might be helpful for you to start a packet trace (with something like wireshark) you will see that the first thing your local machine does when you issue the ping command is broadcast an APR packet (assuming it isn't already in the arp table) to the IP address you are trying to reach. Example: 

Short answer is no. The piece of hardware you are referring to is called a PoE injector. It is designed to sit between your network and a the device needing power to inject power for that one device. Non PoE switches do not have the circuitry to pass this electrical current to all ports. So reversing a PoE injector and attempting what you are surmising would probably result in a dead switch. 

Just for clarity I am assuming your layout is: Internet - FW - 10.1.1.0/27 - r1 - 10.1.1.80/30 - r2 - 10.1.1.64/28 You mention that you are running a routing protocol (RIPv2) on all devices. Assuming that includes the firewall and all things are configured correctly the firewall should have a route back to the other 2 networks (10.1.1.80 & 10.1.1.64). Can you confirm that you can ping these from the firewall? You state that you can ping all interfaces on both routers but you don't specify the source you are pinging from. You don't mention a default route in your routers so I will guess that is where the problem lies. If your routing protocol is operating properly your firewall is going to be a node hanging off of the 10.1.1.0 network. If you don't specifically tell R1 and R2 to utilize it as the default they won't. Here is a document on the Cisco website on the subject: Gateway of last resort. 

To permit a range of IP addresses you need to apply the proper inverse mask. The concepts are covered in Configuring IP Access Lists. However your range of addresses is dictated by the mask you choose. You cannot pick a range that crosses mask boundaries like you are requesting. So an ACL for a range of 100 addresses could be 0.0.0.127. Example: permit ip 192.168.1.0 0.0.0.127 This permit statement will give you the number of addresses you require but it dictates that the available range is 192.168.1.1 - 192.168.1.127. If you absolutely must use the range of addresses that you laid out you could permit in several smaller masked ranges. For instance - permit ip 192.168.1.128 0.0.0.63 

Not really. "Names" are used for TLS. You might have problems if you use ancient software which doesnt support IPv6 at all, but this is not TLS specific. 

By default it is set to 20, but you can change the value to 40 (or more). Proper way to do this would be via sysctl setting. For the second part, if all the devices were in the same multicast group, all the devices would recieve all the other packets from all the other devices (as in broadcast), which can cause more power usage and/or processing power usage on embedded devices. 

Yes, it will be accessible (that's the point!), but it will probably be firewalled by default on your router. 

TCP header is located after the IP header, so the TCP/IP stack knows all four (and many more) values. Those four values are used to form a unique connection ID ("socket"), which is used to recieve and send packets to/from the remote host. 

What will happen (and is happening now) is that most of the users (eg. home users) will be put behind carrier-grade NAT. There is pretty-much enough IPv4 addresses for those who really need them (globally looking, not saying company XYZ has enough of them). This means you will pay X money for an internet connection, and you will have to pay Y more money, to get a public IPv4 address (where you can get one at all). This means most home users will still have a working (but NAT-ted) connection, and people needing a public IPv4 address will be able to buy/rent it. This will free alot of addresses in some places. IPv6 will be (and currently is, depending on the country, ISP,..) deployed in parallel to current IPv4 infrastructure. Depending on access type, this may need just a click in a dashboard, software update, or a hardware upgrade too. For your questions: 

Not really. If you signed up for an internet connection, you'd probably get put behind NAT or be dual-stacked, but most users wouldn't notice that (they usually have no idea about IPs, addresses, etc... alot of people called my ISPs helpdesk when Facebook was down for ~30 minutes, complaining that their internet doesn't work) 

Shortly someone will tell you that questions about home networks are off topic and will give a link to the rules for this forum. However, an Ethernet's link speed is always predicated upon the device it is plugged into at the physical and MAC layers. The IP (network) connection to some other device has no impact on your link speed. So, if your switch is Gigabit and the machines plugged into it have Gigabit interfaces then they should negotiate a Gigabit link speed. As you mentioned your router being FastE will negotiate a FastEthernet connection with the switch. Your wireless devices with always negotiate some link speed within the capabilities of whatever 802.xx protocol you are utilizing. 

pfsense will bridge. Seems to me the easiest route would be to isolate the two machines behind your pfsense box and bridge the outside interface with the inside. No reconfig of IP yet you have the separation you desire. You could even do some port forwarding if you wanted access to your server from the outside LAN. 

It appears to me that the only real questions that you ask is for comments about Fortinet. You probably aren't going to like this but I can see what might have been some motivation for their decision. (Please keep reading I promise I have a point to make.) One of the true shortcomings (my opinion of course) of VRRP has to do with the amount of idle hardware that it employs. That is, if you want redundancy for LAN-A you must install and configure 2 routers - one as a primary router and the other as backup. The backup does very little all day long but monitor the primary router and if the primary never fails the backup might never route a single packet. If you have a need for secondary addresses then you can possibly split the workload (maybe even load balance) across those very two routers. Allow me to attempt to demonstrate: Let's say you have 2 IP subnets (172.22.1.0/24 and 172.22.2.0/24) in use hanging from the same router interface and desrie to employ VRRP for redundancy. You could (add a second router obviously) service the first subnet (172.22.1.0/24) with VRRP instance 1 utilizing router-A as primary and router-B as backup. You could then service the second subnet (172.22.2.0/24) with VRRP instance 2 utilizing router-B as primary and router-A as backup. Thus tasking both routers with full time duties (possibly load balancing) at the same time you are providing redundancy for both subnets. Now you no longer have idle hardware. Having said all of that you are correct that interoperability might be difficult with other manufacturers if/when one of them doesn't employ an entire standard. I desperately hope you find this helpful in some small way.