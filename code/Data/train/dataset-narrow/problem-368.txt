Then set your re-write rules for that forwarding-class appropriately. If you are happy with just DSCP markings, you can assign these statically using: 

The ZTP set up is pretty well documented here: $URL$ We have had issues in the past with some EX3400s where the time setting out of the box from the factory is back near Epoch (Jan 1 1970), and this caused ZTP to fail due to certificates on the software packages not yet being valid. Try consoling in and setting the date to the current time (or even close to it) and see if that resolves your issue. Yes, I realise the irony of having to console into a box to set the date to enable "Zero" Touch Provisioning ;) 

If you are set on using a loopback address to manage the device, then you will need to add two IP addresses - one in-band l3-interface attached to the VLAN, and one on the loopback interface. Your upstream device will then need a route to the loopback with a next-hop of the in-band VLAN address. Otherwise, just use an in-band address attached to a dedicated management VLAN trunked between your devices. I'm not sure there is anything to be gained by plugging me0 around into the front ports. 

There is no broadcast in IPv6 - all one-to-many communications are handled via link-local multicast groups. That said, if your switch(es) are not configured to snoop this traffic, it will be flooded across all interfaces in the same VLAN regardless. To answer your question though - these domains are both identical - they both exist amongst all ports within a VLAN. The only difference would be that if you have your switch configured to snoop, your IPv6 domain will be limited to IPv6 speaking hosts, where as IPv4 broadcasts will be sent to all hosts - even IPv6-only speakers. 

In short, No - in MSTP, RSTP and STP the bridge priority is fixed to the configured value (e.g.: no additional VLAN-ID is added). This is primarily because none of the IEEE-based standards acknowledge VLANs - all BPDUs are sent untagged - in the case of MSTP, MSTIs are linked to common VLAN groups, but are not influenced by the configuration of VLANs on underlying interfaces. As you have surmised - in PVST, the VLAN-ID should be identical between nodes, so the priority will always be weighted towards the lowest configured bridge priority. 

BGP doesn't have to be a complex beast, and like any design: Good documentation should address any concerns about supportability into the future. If your management aren't supportive of building it right, then I'd advise that SaaS is not a space they should be getting into. Outsource to a player like AWS and make it Someone Else's Problemâ„¢ 

Under normal circumstances, this would be represented by a single flow entry, provided your firewall only logs an entry at the start of a flow and doesn't log periodic updates on the same flow. Now - if the user was idle for 4 hours eg: no traffic passed over the RDP session for that long, then most firewalls would age the session out, and would require the user to reconnect, thus creating a second flow entry. Similarly, RDP is a fairly resilient protocol and in some implementations may re-establish a failed connection. This is an RDP implementation though, and nothing to do with the firewall 

If your PC changes IP address, then yes, the router will need to ARP for it when next it needs to send you traffic. Simply renewing your IP Address via DHCP is unlikely to change anything, as most DHCP servers will simply re-allocate you the same address you have already leased which your router will already have stored in ARP cache. 

I agree - I don't think the claim that label switching is faster than IP routing is true (regardless of what the current "label switching" article on wikipedia says). Maybe back in the day on platforms that did forwarding in software, IP routing look-ups might have been expensive and time-consuming when the routing table got bigger, but I don't see how there would be any difference today in a label lookup vs. a route lookup in a FIB implemented in ASIC. 

Having an out-of-path router inject a route into another BGP speaker is quite common - consider the way a route-reflector works - they are often BGP daemons running on servers with no transit traffic. In fact an RR is probably a good analogy for an SDN controller - it receives all paths, computes the best from it's point of view, then advertises this to all it's clients. 

Yes, this is quite common and I've seen it first hand for many years on both Cisco (ASA) and Juniper (SSG/SRX). As for the amount being dropped, it will depend on your PPS and your SA timer, but I generally see 1-2 seconds of loss during a re-key. 

For a HDX7K I'm pretty sure you need an ISDN module to make this work, but once you've connected it, and enabled ISDN (as per the instructions in the Admin Guide) you will be given the option of the call-type on the dial window (H.323, SIP or ISDN). It seems nuts that anyone would want to go back to ISDN - are you sure they don't just want you to dial via E.164 over IP via your gatekeeper? 

It's hard to tell without seeing a diagram, but I suspect what is happening is that Side B is using the interface address of the tunnel (or the borrowed address of the underlying external interface) as the source address of the DNS request (e.g.: from the "proxy" on Side B to 192.168.1.2) and sending this down the tunnel. When Side B sees this, it responds to the DNS request, but sends it out via it's "Untrust" rather than tunnel interface (since the tunnel most likely has no route back towards the external interface address of Side B), and it is then dropped by Side B because it enters on the wrong zone. It's been a LONG time since I've used ScreenOS, but there are a couple of ways you might be able to fix this: 

There are a couple of things that you may require root access for from time-to-time - an example that comes to mind is that if you attach a USB storage device and need to mount it to copy files off, you will need root privelige to execute the command. As others have suggested - the best method of dealing with the root account is the way good SysAdmins would - disable all remote access to root, limit access to shell via RBAC and login roles, and then only when absolutely necessary, use from shell to elevate an authorised account. 

I've got a single MX router connected to two physical interfaces on an SRX chassis cluster - each interface being a member of a interface. In order to make this work, on the MX side I have the interface from each SRX node connected into a bridge-domain, which in turn has an configured on it for the L3 interface. This all works fine. I now want to schedule egress traffic from the MX (received and classified on another interface) into an appropriate forwarding class, however the MX (currently) does not support applying a scheduler to an interface. Has anyone come across a way of doing this on the MX? 

Not via ZTP, but I've just put together a couple of Ansible modules for you to handle both of these tasks here: $URL$ They're pretty self-explanatory - for saving the rescue configuration, and for executing arbitrary Operational mode commands in Junos. There is a example in the README specifically targeting the removal of the EX3300 default vc-ports. Feedback and improvement suggestions welcome. 

So in short, yes - a router should be able to autoconfigure an IPv6 address for its WAN interface. In reality though, most ISPs implement DHCPv6 and DHCPv6-PD (RFC3633) for downstream address allocation, along with prefix delegation. This ensures that your router not only receives an address on it's WAN interface, but that it also receives a prefix it can use on it's internal LAN interface as well. 

It would be a trivial usage of resource on today's PCs to populate the entire ARP table for the local subnet(s) the machine resides on, but perhaps not so for a networked machine back in 1982. [1] RFC826 - An Ethernet Address Resolution Protocol - $URL$ 

From hop 5 to hop 6 I can infer that I crossed from Sydney to San Jose based on the DNS name associated with the router interface and the latency spike, but I have no guide as to whether I went direct via the Southern Cross Cable Network (SCCN) system, or via Guam over PPC1 and then AAG. Also, if these are Internet links, traffic may cross AAG to get to you regardless (upstream provider may use AAG), so I'm not sure how you or your provider(s) could possibly enforce this requirement. 

An LACP PDU is around 110 bytes, so running them every second isn't likely to even register on an Ethernet link of any speed. I would recommend running in "fast" mode at all times for rapid detection of faults.