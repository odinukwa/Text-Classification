If I understand your problem you want to get to raspi-config. Open a LX-Terminal and type . This will bring you to the configuration menu. Otherwise, see below. If you are talking about the "asplashscreen" try this. Navigate here: and look for the function. Then insert as the first line in the function: . Possibly, you could change these to fix your problem in config.txt. 

When you download, run the .bat file. Password is "raspberry" of course. To get to GUI and Desktop enter "startx". Make sure to shut the simulator down correctly just like on a real Pi. 

I am running a custom version of Raspbian on my B+ with a touchscreen. This OS was customized to work with the WaveShare SpotPear A screen they sell. It is configured to auto login to to the desktop as the pi user. I wan't to disable that so I tried the following: 

Surprisingly, it works to turn it on and off and so far hasn't stopped working. This is interesting because it seems like it would leave the screen in its original state because the commands appear to cancel each other out. However, running it once turns the screen off and again turns it back on again. EDIT 3 The above stopped working suddenly and would not work without a reboot. EDIT 4 I ran and and it still is not working so I know it is not an issue of using an old kernel. EDIT 5 I found a solution although I still am not sure why the above doesn't work. Instead of echoing 0 or 1 to the bl_power file I echo 0 or 255 to the brightness file which does the same thing. This has worked for over 4 hours now. It might be a hardware problem like the comment below this question. 

I am using Minibian(a minimal Debian based OS), and trying to set up bluetooth so that I can stream audio to a bluetooth speaker from my Pi. What are the minimum packages I need to get bluetooth working? Looking at the Official Raspbian image(which I was able to get the speaker to work with), I see these installed: 

Then select 'Advanced Options','GL Driver','GL (Full KMS)' Once you've rebooted glxgears should run at close to 60fps with the correct colours. 

Change options in Minecraft to reduce render chunks to 2, this should avoid running out of memory. Turn everything down to low in the video settings (and turn on things like fast math) Suggest running in the default sized window for best performance - full screen may crash. $URL$ Hopefully Minecraft should run :) 

This will start the config utility. Select 'Advanced Options', then select 'GL Driver', then select 'Enable' (latest utility requires selection of 'GL (Full KMS)' ), then select 'Yes' to reboot and enable the driver. 4 Install OpenAL Audio & glxgears demo 

Buy the official 5.1Volt 2.5Amp 18 AWG cable power supply. $URL$ Looks like that Moto charger will only supply full power to a compatible Motorola phone. 

Download Rasbian Stretch with Desktop $URL$ Flash Raspbian (no need to unzip) to sd card using Etcher $URL$ Place sd card in Pi and boot 

I believe your relay board works like mine so the relay is on when the output is low, the relay is off when the output is high. Change your code accordingly: 

If you get any questions or prompts during raspbian update press ‘q’ ‘enter’ 2 In Menu\Preferences\Raspberry Pi Configuration : System Tab - set Splash Screen to Disabled Performance Tab - set GPU Memory to 64Mb - if using Pi2 set overclock to High(1000MHz) Reboot 3 Enable ‘GL Driver’ from a terminal window 

Your code worked fine on my Pi3 Check that the negative pin (shorter pin) on the LED connects to ground (black lead in image, pin 6). Check that the output is connected to the correct pin 12 (yellow lead). $URL$ I'm using a 220 ohm resistor between the output and the LED. 

Download 'Raspbian Stretch with Desktop' and flash that direct to your sd card using Etcher. Instructions : $URL$ Raspbian image : $URL$ Etcher : $URL$ 

Login with Minecraft email and password If your using a newer Minecraft.jar click 'edit profile' and select use release - 'release 1.12.1', then 'save profile' Click Play to install game You will then receive an error Close launcher 8 Copy libraries 

Other questions have addressed this question but the answers above worked. I haven't had success with any of these. Does anyone know further configuration possibilities that could fix this issue? 

For more configuration that might help and more explanation, see this post by Adafruit about Retropie and touchscreens. Hope that helps! 

I wanted my RPI to boot to the GUI so I set it up in raspi-config. However, now it boots into the pi user without a password. Is there a way to make it boot to a login screen where you can choose a user to login to? EDIT I was confused I didn't mean startx. I went to raspi-config window and chose boot to desktop and it is giving me this problem. 

Firstly, if you only want to be able to have a local server you could use a router that supports wifi(no internet needed) and attach your raspberry pi. You would need to do some configurations of course. Then when you turn your Wifi on the phones can connect to it. With only the Pi and your Edimax adapter, basically, you would be setting up a wireless access point(without a connection to the internet). I do not know specifically what you are going to be doing but you might want to get an external hard drive for extra storage(its up to you). A great example of someone doing this is the Pirate Box(one of many variations of the original idea at piratebox.cc). Some use more components than others. Here is another variant. Hope that helps! 

Because Android is so under-developed on the Raspberry Pi I would definitely go with Raspbian. There is much more support and more packages available and there are already smart mirrors that have been made with Raspbian as the OS to guide you. Android would be nice if it worked on the Pi but there are still thousands of bugs and right now its more at a proof of concept stage than an actual working platform for developing. 

After a reboot this script works fine. However after an arbitrary number of runs it stops turning the backlight on or off. However if I the file, the number has changed...the screen is just not turning off. A reboot fixes the problem but then it starts happening again. Any ideas why this is not working? EDIT I also have this line in so I don't have to use sudo. Without this file and line I cannot echo to the bl_power file even with sudo. 

I can avoid getting multiple events by cranking up the value of , but I'm still getting them when the button is pressed rather than when the button is released. I guess this is expected behavior; I assume that the culprit is noise when the button is pushed so that a spurious logic change triggers the rising edge detection. I've tried to resolve this by adding logic to the callback to explicitly check the pin value... 

I haven't used it myself, but it is on my list of Things To Look At If I Need More PWM :). Assuming it works as advertised that sounds like it might be the solution to your problem. Alternately, get something like the servo HAT for multiple hardware PWM channels. 

doesn't communicate with your gps. It talks to the daemon, which is responsible for communicating with your GPS. Some diagnostic steps you can take: 

While you can use cron to start something when the system boots, it's not a great solution: it's not terribly flexible, it won't handle restarting the service for you automatically, and it doesn't provide you with any easy way to stop or start the service. Your device has a facility to automatically start services when it boots called "systemd". To have systemd launch your script when the system boots: 

This works fine and results in a perfectly respectable framerate. However, any solution that involves re-encoding the video (such as using the filter and the encoder) drops the framerate down to 1 or 2 fps. Is there any way to add a text overlay on the pi zero in a way that won't kill the framerate? I see the ffmpeg has some support for the Pi's hardware h264 encoding (via the encoder), but I've read elsewhere that introducing a video filter into the mix means that encoding no longer happens on the GPU. 

I would like to add a text overlay (the date and time) to a live camera stream that I'm capturing with a raspberry pi zero w. At the moment -- without any text overlay -- my pipeline is basically: 

No, the camera input can only be used for cameras or a few video input boards. If you need usb ports and ethernet how about a combined 3 usb port hub including ethernet: $URL$ 

The Raspberry Pi requires 5 Volts - if you've fed it 12 Volts you've killed it. Powering the Pi using the GPIO pins bypasses the fuses that might have saved the Pi if you had used the micro USB connector. If smoke came out - you've provided too much power to the Pi somehow. That board appears to be designed for an Arduino which has 5V outputs, the Pi's GPIO outputs are 3.3V. 

I'm assuming your using RealVNC on the Pi. You need to turn on the 'experimental direct capture mode'. 

13 Edit runOptifine1_12_1.sh Update MINECRAFT_LOGIN, MINECRAFT_USERNAME and MINECRAFT_PASSWORD to your own (may need "" for special characters) 14 Start Minecraft from terminal window 

Not sure why you've got Ground and 3V3 used in your circuit, you want one or the other depending on whether the input is pulled high or low. You are also using the wrong pin (12) if you are using GPIO.BOARD - should be pin 32. If you were using GPIO.BCM then 12 would be correct. There is also no need for your 2nd while loop. $URL$ Here is a circuit using 3V3 with the input pulled low : I've amended the code for pin 32 : 

You need to use the new 'RetroPie 4.3.15 Stretch image'. This includes changes required for the Pi3B+ otherwise you will see issues that look like lack of power. $URL$ 

Assuming your running the latest Raspbian Stretch with Desktop. To enable OpenGL, from a terminal window: 

My tutorial for Minecraft 1.12.1 includes the ability to connect to servers: $URL$ Copied here for completeness: How to setup Full Minecraft 1.12.1 (with Optifine) on Raspberry Pi 3 Please note : Do this at your own risk. If you have any doubts use a spare SD card. The OpenGL drivers are experimental - they may not work with all screens. If unsure make sure you can ssh onto the Pi from another machine to turn back off. Most likely to have success with OpenGL drivers if using Raspberry Pi 3 with heatsink, genuine 5.1 volt 2.5 amp power supply with heavy duty 2 core power cable, 1080p screen. This should also work on the Pi2. This tutorial was tested using Raspbian Stretch with Desktop - release date 2017-08-16 Video tutorial : $URL$ 1 If you need to update an existing version use