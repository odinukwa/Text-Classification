For historical reasons that sysctl has in its name, but the setting does in fact apply to both IPv4 and IPv6. The default range is 32768 - 61000. If your question is not what it will use for new connections but rather what it is using for currently open connections, you can use the command. For example I usually use: 

According to the current RFC, window scaling cannot be negotiated dynamically. The RFC explicitly states: 

The transport layer (TCP/UDP) does not decide which route a packet takes. And the sending host only decides where to send the packet for the first hop. Often there is only one option for the first hop, in which case the sending host doesn't get to decide anything. However if Equal-cost multi-path (ECMP) routing is being used, the sender can try to influence the path a packet will take by varying the fields inspected by ECMP. Usually that means retry the connection using a different source port number. If you are using Multipath TCP (which must be supported by both endpoints before you can use it) different underlying combinations of IP and port number will be attempted which can give you higher throughput and better resilience to failing network links. I know of no way to achieve the same with UDP. Protocols on top of UDP can build their own ways to influence routing decisions. For example if a DNS request receives no answer a client could retry with a different source port number which may cause the packet to take a different route. There is also the possibility for ECMP to include flow label as discussed in RFC 6438. Using that it could in principle be possible for the sender to change routing decisions without the need to change IP or port number. However changing flow label for an existing connection could potentially cause breakage in other ways. 

If the hosting provider for some reason refuse to route a prefix to your physical machine, then you can instead bridge between virtual and physical interfaces. This has multiple drawbacks: 

Linux will choose a new local port number for each connection you open. To see what range of port numbers your kernel is configured to use you can type: 

Those numbers are assuming the provider only hand out prefixes on nibble boundaries and that you want a /64 per VM. The overlap between the ranges is because I allowed for an HD-ratio anywhere between 80% and 95%. The reasons I would recommend getting a prefix routed to the physical machine and subdivide that into a link prefix per VM are twofold. 

If you announce the two different /48 the traffic will be routed across the internet to the right data center, which keeps things simpler for you. If on the other hand you announce just the /47 in both locations you have to get the traffic to the right data center. This may be desirable if you have a private connection between the data centers that you find to be more reliable than the public internet. Doing both of the above will serve as a sort of failover. Usually the traffic will go straight to the correct data center. But your private connection will be there as backup. However if other networks think you are sending them too many announcements they may decide to ignore your /48s and use just the /47, and your private connection will see some more traffic. If you don't have a private connection between the data centers the best choice will most likely be to advertise the two /48 and not advertise an aggregated /47. All of the above applies to IPv4 as well, just with different prefix lengths. What to do if you can't get more IPv4 addresses If you go ahead and advertise a /25 from each data center there is a significant risk the advertisements will just be ignored. Even if it works today there is a risk it will stop working in the future, so you will need a different plan. If you don't have a private connection between the two data centers there is the possibility to use an IPv4 over IPv6 tunnel between the two data centers as a private connection. The obvious drawback of the tunnel approach is that the tunnel is not going to be more reliable than the internet connection between the two data centers. And avoiding using the tunnel by only advertising the specific prefixes isn't an option because those specific prefixes would be too long. An option worth pursuing if you are using the same transit provider at both locations is to advertise both the aggregated /24 and the more specific /25s. What you would need from the transit provider to advertise to the world is the /24. The two /25s you'd only need the transit provider to accept and use within their own network in order for the traffic to be routed to the correct of your two data centers. Obviously before you do anything like that you'd have to discuss it with your transit provider to ensure that it is a configuration they are willing to support. Other caveats with a tunnel Another caveat in case of any tunnel is MTU issues. You need to ensure that you aren't doing something silly on your tunnel which would cause large packets to be silently dropped. Moreover you'd better configure your servers with a low enough MSS that it will work even if the people you are communicating with are silently dropping too big errors. For a setup like the one I describe setting the MSS to 1200 should be safe. If your setup is going to involve any sort of DSR load balancing it is worth keeping in mind that the load balancing may need a tunnel as well. In that case make sure your DSR load balancer is configured such that the tunneling it is doing will be instead of the tunneling to connect your data centers - not another layer of tunnel on top of it. Conclusion The simplest solution is to just get enough IP addresses. But alternatives exist if you absolutely need them. 

We have two separate networks with SRXes on both sides (router, firewall, and site2sitevpn). On one side (Site A), we have two ISPs (BGP), and currently the VPN is setup to the IP address of one of our ISP (ISP1). but if ISP1 line should go down our VPN also goes down. is there a way to Automatically change the VPN tunnel IP address to the IP of the second ISP (ISP2) in the event that ISP1 should go down? or is that a stupid way to do it? Is is perhaps better to setup a 2nd VPN tunnel to the ISP2 IP address? if so, how can I automatically start the 2nd VPN if 1st fail? Map: 

noteA: vlan.12 is just a vlan that could easily have been a port such as ge-0/0/2, I have just setup the vlan to be able to use other physical ports on the SRX just in case. noteB: SITE B only uses one physical port to one and same ISP, but uses two different IP addresses. thanks again for the help so far. I will setup a service window to test tome of these things soon. update2: BGP setup on SiteA: 

so, we have a SRX100 in one site (call it site B) and a SRX240 on our main site (Site A). the ISP at site B asked us to change our IP address from one network to another. (due to some routing issues they were faceing). the problem is that we have a site2site vpn between the two (ike). so, tonight I am sitting at site B, and want to fix this. I change all the setting on the VPN on both sites, to reflect the changes, and update any firewall rule that need updating for this to work. note 1) on site B, at this point I ADD the IP address in addition to the old ip address (I dit not replace it), but I did replace the default route, and the vpn connection end points. I then commit at site A first (since I have to do it while I can still reach it by vpn). then commit site B. I notice that I have internet stil on site B, which is good, but the VPN did NOT come up at all. I look in the logfiles on both sides (I have a secondary vpn to reach the site A switch). and there is nothing there! no trace of the vpn at all.. which is strange. then I notice that my ip as seen from outside is still the old ip address on site B (whatismyip.org or such). to, then I remove the old ip from the firewall.. and committ again (siteb). then, the VPN comes UP, and it shows in the logfiles like it should. so, I try to add the ip address back again to test, and the vpn goes down. and finally I try to remove the old ip on site B again... but the VPN does NOT come up.. and again nothing in the logs.. 

and the vpn seems stable. I did not find this solution on any of the juniper FAQ, and googled a lot, but managed by a bit of luck to solve it. so I wanted to document it a bit here just in case someone (like me) need it. IF: I am completely wrong here, and what happened here just luck and not related, I do hope that you will comment or edit thanks! 

I have a juniper SRX340 running as default gateway, I have a linux server (virtual machine actually) running debian 8. juniper ip: 192.168.1.1 Debian ip: 192.168.1.101 (eth0) I would like to add more ip addresses on my Debian box, so I create a new sub-interface and give it an ip debian ip2: 192.168.1.102 (eth0:1) when I do this, I can not ping the juniper box from the new ip address.. and juniper can not ping the new ip address. I CAN ping other hosts on the same network from the new ip address and they can ping it... all is well. so.. the new ip address can not see juiper box, and the juniper box can not see the other ip... so then I try something. I change the ip address of eth0 to be 192.168.1.102 and now I can ping the juniper box, and the juniper box can ping me back. then I change it back so that eth0: 192.168.1.101 and eth0:1: 192.168.1.101 and now juniper can ping both ip addresses, and both ip addresses can ping juniper. so.. then I take the test further and add a 3rd interface eth0:2 and give it the ip 192.168.1.103 and I have the same problem... I can not see juniper, and juniper can not see new ip... again, if I change the original eth0 to use 103 as ip first, then go back, it works again.. this is very confusing. any suggestions what is going on here? junos version 15.1X49-D100.6 update: I got some help on a juniper forum, and there is a solution (it is not perfect, but it works so I will use it for now). the solution is to add a static ARP on the juniper. 

this worked right away. I am still interested to know why juniper does not add these automagically like you would think, but I have a deadline and this will work for me today.but I doubt that this forum will help any. 

PS: site A has its own AS and ip series, and used BGP to route traffic to/from the two ISPs UPDATE 1: I have some clarifications, and also some new information (to futher complicate things). 1) SITE A has only one SRX, with each ISP on a separate port. ge-0/0/4 = isp1 ge-0/0/3 = isp2 today the site2site vpn St0 (used ip range 192.168.21.0/30 on the vpn), uses only isp1, but I would like to have isp2 as a backup. 2) Site B actually only has one ISP, but they have given us 2 different IP addresses, one of the addresses uses a special routing to their upstream provider (but only that network!), wheras the other IP address uses BGP and will use whatever routing upstream work.. so we have vlan.12 ip address 1) 6.6.6.6/29 (the one we use today) vlan.12 ip address 2) 5.5.5.5/29 (another ip we also want to use). So, the ip 6.6.6.6 gives us very fast speeds between the offices, as the route goes to the shortes path.. but it is limited to one provider, so the chance that it goes down is quite high. ip 5.5.5.5 is quite a bit slower, but is more robust to faults between the two networks.