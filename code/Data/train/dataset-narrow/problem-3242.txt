If you have changed your password use the new password. You are now logged in. Write down the IP address of your device so you can connect to it later, It is something like 192.168.1.24. Key in 

In case anyone was interested, I've now been able to make an install script that worked on my current vanilla Raspbian install. Plus, ascii art!: 

Please before you start commenting about breaking the law etc etc notice that there are many freeware programs out there which you can download and share freely. Also, I would have posted more links for the software you need to do this, but I do not have enough reputation First of all these are the things you need to start your project 

Next we must make our pi to have all times the same network address (static). For this we must use a text editor names nano to edit the file /etc/network/interfaces. 

You want an RCA connector. Most TVs manufactured since about 1990 have them. The video connector usually has a yellow (not red or white) jacket. 

I timed it on my Pi, and it took 24 seconds from powerup to login prompt. This is with a Transcend Class 6 4GB SD card loaded with Debian Squeeze. This is the card that is recommended by RS for use with the RasPi, so this may qualify as "typical" as many users will probably have this type of card. 

The icedtea-6-jre-cacao package contains a JIT compiler, and reportedly works on the RasPi. I have not tried it myself. 

I would like to attach a SRAM module to the RasPi. My idea is to store sensitive (encrypted) data on the SD card but keep the key on a SRAM module. It would have its own backup battery (or supercapacitor) and an anti-tamper switch that would erase the contents if the enclosure was opened. Is there any way to interface to the SRAM with only the 8 available GPIO lines? The SRAM module itself would need a capacity of at least 128 bits (the size of the smallest AES key) but even a 1-bit wide memory would seem to require 7 address lines and one data line plus 2 or 3 control lines. Can it be done? I am thinking it may be possible to cheat by reusing an I/O line that was designed for something else. 

assign 0x01 to the first byte in the array, which will basically tell the bluetooth device that you are working with a keyboard input report. the second byte is used to specify any modifier keys (alt, shift, ctrl etc.) which is useful if you need to hold down shift to sprint in the game. the third byte you shouldn't touch. The other 6 bytes you should use to specify which keys you want to simulate in form of Bluetooth key constants provided in the keymap.py file. 

All you need to do is to pass an array with this content to Here is an example of what the structure could look like: 

I persume I have a resource leak in one of my applications but all I'm doing is communicating via UNIX sockets and an Arduino via serial using wiringPi. I've been very careful to cleanup all my memory that I allocate dynamically and it doesn't seem to be any issues with heap memory anyways since the cached memory seems to be what's giving me issues. 

...and a keyboard to start with Now we have to go to our windows computer to format our USB Disk and prepare the SD Card. I prefer this free Mini tool Partition Wizard. You can get it from here $URL$ To prepare the SD Card. To do that you need a program called Win32DiskImager Extract the exe an install it. Then we have to download the Raspberry Pi distribution. I use the latest distribution from Pi’s official site. The image I use is the 2013-05-25-wheezy-raspbian. Extract the image file and start Win32DiskImager, Select your downloaded image, you SDCard device and press Write. Wait until the image is ready. Now we are ready to start. Put the SDCard to your Pi and put the power cable in. In this step you need to have a keyboard connected to your Pi and a monitor to see what’s heppening. Now you are ready to start. First of all you have to setup your device to run the raspbian. Also as you will use the Pi for torrenting you don’t need the GUI. Finish all the proper adjustments and press finish. Your device will restart and you have to log in. The defaults are 

To enable ssh at startup, backup on the boot partition on the SD image and replace it with I don't know about your router, but you may be able to configure it to reserve a fixed IP address for the MAC address of your Pi. 

Most likely some USB peripherals will not work because they will not have adequate power. Do you have a keyboard and mouse connected? If so you may have been lucky to find ones with low power requirements (please list them on this wiki page!) I am also guessing you do not have a USB hub or flash drive connected. There is a good chance that they will fail to work (and possibly crash the Pi.) 

No. The reason a DVI-to-VGA adapter works on your PC & laptop is that DVI includes analog (RGB) pins. The adapter is passive; It just connects the red analog output of the PC to the red analog input of the monitor, ditto for green and blue. They are included on most PCs and laptops for backward compatibility. HDMI-to-DVI cables are also passive, but they carry digital signals only. The analog RGB signals are missing, but that does not matter as the DVI monitor does not need them. HDMI contains no analog signal so it is not possible for any combination of passive adapters and/or cables to convert it to VGA. Active adapters work because they use DSPs and DACs to convert from one standard to the other, but of course they are more expensive than passive cables. 

and wait for the device to shut down. At this point you can remove the keyboard and the monitor and connect the HDD and the HUB as above. Start the Pi and leave it there. You can go now to back to your Windows computer. I use PuTTY to connect via SSH on Windows. It is freeware and you can download it online. Run putty and write the address of your pi (in my case it is 192.168.1.24) Log in the Pi using pi as user and your password I have renamed my device as mypi the default name is raspberrypi And now it is time to start. What I usually do is that I shutdown the pi and put the SD card back into the computer. I start Win32DiskImager and save my work to an image file (you can give to it any name) so if (better is when) I make a mistake I will not lose all my work. If you press read the program copies the SD Card to an image file which you can write back Now we are back logged in the pi. 

Now I was back up to just about 56 MB of memory! What might be the source I am running several processes that communicate via UNIX sockets and I might just have missed a huge resource leak in one of my programs, but how would I detect it? Furthermore since I want my project to be up and running pretty much all of the time I want to somehow detect when the memory is low (say < 10%) and then run these set of magic commands to free up my memory. 

I have my raspberry pi A+ in my embeeded project and every byte of memory is important when I've only got 128 MB to my CPU (I need 128 MB for the GPU because I use the camera module). Unfortunently the memory is eaten up by linux quite quickly. Freeing up the cache makes a huge difference Before I ran a few commands on my raspberry pi I had less than 4 MB of memory left! 

We do this when we are plugged into a wired network and we don’t use a wireless, else we leave wlan0 in place. To write the content of the file to the SD we press Control-O [^O] and then ENTER. To exit nano [^X] (control and X simultaneously). In the address you can put at the fourth number any number between 2 and 255 but I prefer to use the address it was automatically assigned. The gateway is usually 192.168.1.1. In my case it is 192.168.1.2 because of the router I use. In some cases might be 192.168.0.1 because the network address of the DHCP server (usually the router). The gateway address is the address of your router which is connected to the internet. If you change the address you better restart the pi. If you want to have access from the internet, you should get an address from $URL$ org or any other provider. You'll also need to forward your external IP to your Pi's IP address on your LAN. It depends on your router. Usually there's NAT, or Virtual server or Port forward. Use port 80. If you haven't yet changed the default password, do the following: