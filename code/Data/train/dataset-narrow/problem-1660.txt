Report Library is a MOSS feature only. The Reporting Services add-in should have given you a new web part called "Report Viewer" that you can add to any web part enabled page. This gives you a view into SSRS reports. The Report Viewer 2.0 web part (and Report Explorer web part) gives you the ability to view reports on your SSRS server. The Reporting Services add-in I mentioned above only works when you are running SSRS in SharePoint integrated mode - it includes a Report Viewer 3.0 web part that pulls reports out of a SharePoint library. The Report Viewer 2.0 web part doesn't use SharePoint libraries - it acts as a view into the reports hosted on your SSRS server (and Report Explorer lets you view a listing of available reports). See this documentation for more details. Although it is for SQL 2008, it still applies to 2000 and 2005 versions as well, though the path to RSWebParts.cab changes depending on your version. Sorry for the confusion. 

You appear to be missing the required parameter to the cmdlet. If that doesn't help, you may need to run the Powershell console as administrator to get the command to work properly. $URL$ 

anything that ends with a number is a web site. After filtering that list, you can use it as input for another adsutil.vbs command: 

Yes this is possible, and is not considered a bad path to be going down. This is a very typical situation for people who have a geographically dispersed workforce (use a local my site but a centralized main site) or who want to separate out the my sites for performance reasons such as yourself. The only questionable part to to me is why run the my sites on separate servers at this point? I would think you'd get better bang for your (server) buck by separating the regular site from my sites, but keeping the 2 my sites together so they can share resources (and possibly have some failover capabilities? Depends on how many servers you are talking about.) Anyway - the proper way to do this is to have multiple farms. In your scenario it would be 3 farms: 

These seem pretty good, and go beyond Microsoft's governance recommendation for site deletion. The only thing I might add would be checking any web parts that might be accessing or putting data on the site to be deleted. For example, there is a custom workflow on codeplex that allows you to copy items into a list on another site. Some of the web parts that do cross-site data rollups/etc. may also give you issues. One other thing to check out would be the MS IT Site Delete Capture tool available from CodePlex. This basically acts as an administrative "site recycle bin" that allows you to quickly restore an accidentally deleted site. 

What service pack level of sharepoint are you on? mergecontentdbs was introduced in 2007 SP1 so if you aren't up to that level yet it won't exist. If this is the problem (you aren't upgraded to SP1 or higher yet) there is a hotfix that can be applied to add mergecontentdbs. 

I don't think there is a direct command line equivalent, but there are a couple of things that could get you close. First, has an argument that will tell you the signed status of the drivers. It also has an argument that will dump the output to CSV. The weird part of using this command is that if you use the argument, you can't get the full path to the driver file (and if you use the option to get the full path, you can't get the signed status. Second, if you want to go down the PowerShell path, you could use the cmdlet. This one is weird because you have to pass a driver path into the cmdlet, so you need to build the driver list yourself. You can get that from WMI though, so something like this may suit your needs: 

Officially I don't think this configuration is supported yet. See the ASP.Net 4 breaking changes whitepaper. Unofficially, you should be able to fix the problem by changing the trust level in your web.config file from to . This is NOT recommended though. 

Under SQL Server Agent, you need to go to the Operators category and add a new Operator (with an email address). You will then be able to select it in the notifications drop down. 

Hyper-V does not support promiscuous mode in the guest NICs. See this technet discussion for a little more detail: $URL$ 

This still won't let you do a in the web.config/modules though, because many of the core modules are locked individually. 

Unfortunately there isn't a simple answer as to why this would happen. Essentially, it means that the process has run out of threads to continue processing requests. You need to have IIS generate a dump file that you can then analyze and determine the cause of this. $URL$ $URL$ 

If you can't connect to it to even run this though, you will most likely need to start your server in single-user mode (or possibly minimal configuration mode) and go from there. To do this, you stop your SQL Server, then run it from the command line with either the option (single-user mode) or the option (minimal configuration mode, which also enables single-user mode). You should be able to drop the triggers from there, or enable DAC from there, whichever you are more comfortable with. sqlserver command line reference single user mode reference 

Try using the .Net process provider (you won't be able to see the results of the call, but it will give you some information about it that might be useful): 

It sounds like your environment is a little messed up. Here are a couple of extra troubleshooting steps, hopefully one of them will give more useful information: Try to run the command using the full path: c:\windows\system32\ipconfig.exe Try the invoke-expression cmdlet: 

Is it possible Client Integration got turned off? In Central Admin/App Management/Authentication Providers, click on your provider. There is an option for "Enable Client Integration". If it is set to no Connect to Outlook does not work. 

SBS comes with Windows SharePoint Services (WSS) - not full Microsoft Office SharePoint Server (MOSS) - the screenshot you linked to is from a MOSS installation - the features you see are all that is available in a WSS installation. 

ADSUtil.VBS is your friend here. You can use it to get a list of all sites on the system (which you will have to edit a bit to get the proper results), and to set the application pool for a site. 

Use the .NET framework classes. Here is a good article that walks you through this process. It includes an example using alternate credentials. Use the Quest Active Directory Management cmdlets. These are wrappers around a lot of AD stuff that make a lot of things easier. They also let you pass in alternate credentials. 

Sysinternals has a utility called psloggedon that will list who is logged onto a remote computer. It probably isn't much better than your qwinsta based stuff though. 

Some other ($$) options that offer different capabilities than the ones provided by MySQL/Sun/Oracle/ are: Toad for MySQL Navicat for MySQL 

HTTP Redirection is not installed by default in IIS7. You need to add the Web Server role "HTTP Redirection" (in Server Manager.) After that is complete, go into IIS manager and when you are in Features view for the site, you should see the "HTTP Redirect" module. $URL$ 

I'm a fan of pyinstaller over py2exe, but have used both pretty successfully in the past. Agree with @Satanicpuppy that more info is needed. 

Piggybacking a little on Richard's Powershell answer, I've found the Powershell WMI Explorer to be a great utility for browsing around to find thing within the WMI structure. 

Your first query should work, but you'll need to put the LdapFilter in double quotes - PowerShell doesn't expand variables within single quotes. 

Backup your databases Verify your database backups are valid Really, make sure you have good backups of your databases Stop your SQL Server Start the SQL Server in Single User Mode (add the -m option to sqlserver.exe) From an (administrative) command prompt, run the following in sqlcmd: sqlcmd -S ADMIN:server\instance -d master -W -s "," -Q "SELECT Name, Value, Minimum, Maximum, Value_in_use, is_dynamic, is_advanced from SYS.Configurations Where Name = 'affinity mask'" of course replace the before running. Also, the at the beginning of the server name is important - this connects you on the dedicated admin connection. Assuming this returns the value you are expecting (the incorrect value), you can try to update the affinity mask to 0. Do this with the command: sqlcmd -S ADMIN:server\instance -d master -W -s "," -Q "update sys.configurations set value=0 Where Name = 'affinity mask'" Shut down the single user mode server. Startup SQL Server as you normally would. Cross your fingers. 

I think I would argue that trying to force IIS to do something it is not intended to do is more overkill (in terms of work required) than using a simple, known solution. If you want to keep it all on one VM, then how about using a product other than IIS in front of IIS? Something like nginx can load balance between the 2 IIS sites (or vdirs), and it should all run on the same VM. 

This isn't exactly real time, but you can use IIS Debug Diagnostics tool to generate a user dump when it detects a memory leak occurring. You can then take that user dump into the DebugDiag to have it generate a report of memory usage in the dump. 

The first thing I would check is the user's "region" settings. A user can set a time zone and calendar type to be whatever they want, and it overrides the settings from the web application. Some of the calendar types do change the date to match up with whatever calendar system is chosen. To change the regional settings for a user: 

Is it possible you have Windows firewall (or a 3rd party firewall) enabled that is blocking the WMI call? Port 135 needs to be open for WMI to work properly. See this article for details about connecting WMI through a firewall. Edit: I did some more digging about this - you problem is how WMIC uses your credentials when it tries to connect to networkPC. You are running WMIC in it's default impersonation mode of "Impersonate" - this allows WMIC to Impersonate your account on the local computer (the computers in compList.txt) - but when it tries to connect to a remote computer (networkPC) it cannot impersonate you, so it connects as NT AUTHORITY\ANONYMOUS LOGON. I think you have 2 possible solutions here: 

The Web Deployment tool comes into play when you talk about wanting to script all of this. It makes it super easy to create a package for your application and deploy it from the command line. You can also then rollback that package easily if there are problems. ARR is also scriptable using the dlls. One other thing - if you are actually on Windows 2008 R2 (which is IIS 7.5) take a look at the Application Warmup module - it should make the warming up portion of this easier on you as well. 

You are using an old version of the PDF ifilter (and instructions...) Try getting the PDF iFilter 9 for 64-bit platforms, and follow the instructions at the bottom of the page for setting it up in SharePoint. 

My favorite one is this: $URL$ But some people find that a little too technical. I have also used the following in the past: $URL$ $URL$ $URL$ 

Are you running IIS in worker process isolation mode? If so, a better solution would be to use the application pool recycling features. You can put the offending application into its own pool, then restart only its process based on various criteria (every X minutes, or when memory usage reaches Y megabytes, or when you have Z requests to the app, etc.) $URL$ 

You need to "pass" the parameters into your script block using the parameter on . This should do it for you: 

While I agree with what Robert says - STSADM should still run on 2010, it is just deprecated. (This is to help with the migration from STSADM stuff to Powershell based stuff.) My guess is that you are still running the 2007 version of STSADM. I copied a 2007 version of STSADM to a (fresh) 2010 server, and got the exact same error as you. Are you going directly to to run STSADM? Or do you have the hive setup in your environment variable (or in a batch script, or something else that would set it automatically?) Check to make sure that you are going to and not