Full info of components of Linux Traffic Control can be found here. UPDATE: by the way, in a regular linux box you can see the status of the traffic shaping queues by using tc -s. For example you could try to issue the following commands in your phone and they should work too: 

The first word in the DNS entry clearly says its a DSL connection. That would be an example of an easy one. Another example: 

I think you can see the point. If you are not familiar with military timezones here is the list: $URL$ You can also try to use zdump to see if your zone file is not really what you are expecting: 

You should edit your expect script to allow for timeout and expected result after rsync. For example: 

You could either have a firewall rule blocking access or Your /copos directory does not have full permissions. You should be able to figure it out by doing a: 

You asked for "up to date", so something from 2007 shouldn't be too far off: $URL$ If that's too old, then it doesn't look like there's 1 specific tutorial covering what you're looking for (maybe you could write one when you get done?) but a combination should work: No date given, and not debian specific, but "apt-get install dovecot postfix" should get you to where you can use this: $URL$ and for virtual users and dovecot: $URL$ 

It might also be worth your time to investigate an MPLS network. Most large providers can provide you with this service at a nominal fee above the normal price of the bandwidth. Essentially, MPLS is point-to-cloud (diagram cloud, not magic-server-hosting-cloud), but you get your own private cloud. So suppose you have three offices, A, B, and C. Each of them have a, say, T1 to the MPLS cloud, and the provider itself routes traffic through the cloud to the destination, without ever touching the internet or anyone else's traffic. The benefit of this is that you don't need to use VPNs on your MPLS links. They're inherently secure, since it's a private network already. Lots of people do run encryption on their links because they don't trust their provider, but that's something you have to judge and weigh the price versus how important your data is. 

The above will exit the script in case of 60 second timeout or if received a denied response in case of bad password. Otherwise if it receives a "sent" text it continues. 

As you can see the first parameter ($1) is the device interface, for example it could be the wifi interface. It also resets interface ifb0 which is an alternative to tc filters for handling ingress traffic, by redirecting it to a virtual (ifb0) interface and treat is as egress traffic there. The idea is that you can shape egress traffic but not ingress traffic, thereby if you can make all traffic egress then you can shape it. This line creates a scheduler (qdisc) for the traffic on the interface supplied in paramter $1: 

But to answer your question, I have seen this behavior many times (at both the ISP level or the individual router level). If I read you correctly, your existing sessions still work during the "incident" but new ones do not. This is caused by either your ISP placing a limit on the amount of sessions an end user can establish, or because the router simply choked on the high amount of sessions established. It could also be the ISP's modem/router having a limit on the amount of sessions per IP. That would explain why your 'computer 2' with another IP continues to work fine. ISPs place these session limits to prevent malware like bots/trojans/viruses spreading like wildfire and bringing a network to its knees. Just imagine a home user with a 50Mbps connection opening hundreds of thousands of sessions all over the place. Then multiply that by X users and you see how this cascades down into total chaos. I suggest you retest under a more controlled environment. Maybe just one PC and in safe mode to prevent any strange software from loading that is opening the sessions (maybe a bot/virus/trojan). Then put a permanent ping (no -c or -w). I would be pretty confident that you would not see the loss of connectivity every 15 minutes. UPDATE Here is a new test for you to narrow down the issue. Since you say the failure lasts 40 seconds, it should give you plenty of time to do the following. As soon as the failure is detected, change the wan IP of your router (from 192.168.0.10 to maybe 192.168.0.20). If the connectivity is restored, it will prove to you the ISPs modem is limiting sessions based on IP. 

OpenSSH supports 2 protocols, called creatively, "1" and "2". "1" is old, allows things like DES encryption and other insecure things. You're going to have to get your users putty certificates in order to connect now. The easiest way is to use PuttyGEN, which is available at the Putty site ($URL$ Hope it helps! 

hrm. My kneejerk reaction is that it sounds like a bad idea, but I can't think of any technical reason that it wouldn't work. So you're doing this because machine3 is unable to talk to machine1? 

RAID 5 isn't exactly known for its performance enhancing properties, but it's unlikely that the RAID level is causing problems like what you're experiencing. Tell us some more. First, how big and how many (and how new) are the SSDs? Are they the only drives in the machine, or do you have a system disk, and your RAID array is separate? I'm guessing they're SATA...attached to an add-in card, or to the motherboard itself? 

then its a permissions issue. Also keep in mind that doing a capture on port 69 alone will not show you all the trace. The tftp server will use a different source port than 69 for the transfer. This is why tftp usually breaks down if there is some NAT involved. So the full exchange usually goes like this for example: 

Then anything you type on either end should be reflected/visible on the screen. If its not then your port is being blocked along the way. 

The first thing to check is to see if the DNS request is actually leaving for the right destination. Open 2 terminal sessions. On one type: 

if $TZ is unset and /etc/localtime is UTC then why are you using timezone T (Tango) in the date command? On my system I have a localtime of EDT. 

here you create another scheduler for the virtual interface and a class with a rule defining a rate of parameter $2, which is ingress, in kilobits: 

I'm going to assume that, in this case, you aren't doing centrally managed profiles, in other words, every user has their own local home directory on every machine they log into? In that case, maybe it would save you some time to create a "skeleton" directory that you can insert for that user? A while back, I learned how to setup the default profile for my users ($URL$ so maybe the instructions in there could be modified for what you want? 

The magic here is that the -perm flag (for permissions) can take a / preceding the permission argument, which causes it to search for a logical OR on each of the bits. From the man page: 

For the same reason that I thought it was important to point out the problem, I think it's also important to point out that Dell announced that it was rolling back this policy, and that in the 2nd quarter of 2011, they will release a firmware update to the H700 and H800 controllers that allow 3rd party drives. Thank you Dell. I'll be writing a new blog post when I get confirmation from Dell. 

here you define a class to which a rule is applied (in this case a rate of parameter $3, which is egress in kilobits): 

Your sendmail.mc looks ok. Apart from stopping and starting sendmail again (which I would guess you have already done). I would look at the actual configuration file which would be called sendmail.cf. Make sure you see the lines: 

If you do not even see the outgoing packet, then there is an internal problem with the name resolution config on your server. 

As you can see it is a "mostly free format human readable date", it will pick up the timezone from anywhere it sees fit. It is very easy to test it. For example: 

As you can see a tcpdump capture on port 69 will not show you the full dialog. Also if you have NAT, once the server attemps to send a file from a source port other than 69, most NAT implementations will fail to forward the packet (only a full cone or restricted cone NAT will work, but Port Restricted or Symmetric NAT will not). 

What you're attempting to do is not a simple thing, so looking for a simple solution is a snipe hunt. Your best bet would be to pick up the Zenoss VM image and use that. It's the closest non-commercial turn-key solution you'll get. Easy. Cheap. Good. Pick two. 

Have you considered moving to virtualization? This would be a great time, because you're changing hardware, but you want to keep the actual installation. Any of the p2v (physical to virtual) converters should be able to handle that. 

If you have an ESX(i) machine, you could use the vmware converter product to back them up. Essentially, you point vmware converter at the guest VM's IP address, give it root login credentials, and tell it which ESX(i) server you want it to appear on. Then hit "go" and wait a while. I've been very impressed with how reliably it's converted my machines. The only limitations appear to be on older machines that aren't supported (for example, a Win2k machine that hasn't been updated since the dawn of time didn't work, but would have if I could have updated it. Long story) 

So what you need to do is add mydomain.com as a permited host in the users table, mysql database. For example: 

The only way one can guess at it is to check its reverse DNS entry. For example if the server detects a connection from 

Make note that in my example the secondary IP is not controlled by NetworkManager, hence the NM_CONTROLLED="no". You don't need to tie it up with a another MAC address, it should work fine without the HWADDR line. 

The first thing I would do before proceeding further would be to test port 25 end to end with a tool like netcat. The tool comes standard with most linux distros. For example on CentOS I would stop postfix to release port 25. Then I would start netcat like this: 

while you attempt to download a file. If you don't get any entries then its a firewall issue, if you get something like: 

Get rid of it. Thats is not an openvpn parameter. UPDATE Yes, I see you needed to add the client parameter as well. I am in the habit of setting up OpenVPN between networks with static keys and IP addresses. I never need the client parameter in those cases. 

Is there any way for the nagios server to query the NAS directly? That would be the most direct course of action. 

I call myself an IT Administrator, because I do servers (~100 total) and networks (~6/7 WAN links) across 4 physical sites. A consultant is, in my view, someone hired by the company to accomplish a specific task, where as a full time position of monitoring and maintaining the infrastructure would be considered outsourcing. 

I think this is usually dependent on your window manager. In WindowMaker, this doesn't happen unless the app figures out the resolution itself and then changes window size to that, as opposed to letting the window manager handle that itself. 

It may (may!) be possible to assume the identity of the terminals that you want to assume (oh hell, might as well just say hijack at this point) using a custom written program that conveniently overlooks certain safety measures, like the pre-existence of the file descriptors you want. It's probably much less work at this point just to concede defeat and lose the data.