Short answer: no, this is not possible from subnetting perspective. You can do /18, /18 and /17. /18 and "all the rest" is not possible. Long answer: depending on your topology and goals it may be possible to use /18 and /16 range at the same time. E. g. you create one space as 10.94.0.0/18, and the second one as 10.94.0.0/16. Make sure that you actually allocate to 10.94.0.0/16 starting from 10.94.64.0. This way if packet comes to 10.94.0.0 - 10.94.63.255, it will be routed to 10.94.0.0/18 because this route is more specific. If packet comes to 10.94.64.0 - 10.94.255.255, it will be routed to 10.94.0.0/16. As long as real allocations (hosts, nested subnets, etc.) don't overlap, this will work just fine. 

All your assumptions are correct. Subnet mask determines subnet length. So in cases you described length of network changes, but host remains inside of the network. The difference is .145 will not need routing entry (except connected 192.168.1 one) in order to reach, say, .200 with /24 and /25 mask, but it will need route in order to reach the same .200 host with /26 mask. And similarly it'll reach .1 without routing entry with /24 mask, but not with /25 and /26. 

Why would you need filters to begin with? It is in Cisco IOS. Copy all the interface config into you favorite editor, and replace with . Then just paste result into console. Make sure it is pasted properly using some technique. For instance you can simply paste not all 100 at once, but 10-20. If you need to change priority for plenty of noncontiguous vlan interfaces, delete unnecessary ones manually or use regexp. 

MAC address consists of 48 bits. It is 2**48 or 281 474 976 710 656 addresses, which is more than enough at the moment. Plus there is practice to reuse MAC addresses of obsoleted equipment. MAC address is usually represented in hex, which is n in your formula. But one "element" has 00 to FF - which is 256 - combinations. So 256**6 should be used for calculation. 

VPNv4 is the "transport". Your VRF route-targets match on both devices. Long story short, RT is extcommunity that is sent over VPNv4 session in BGP update. If one of local import RTs matches received extcommunity, routes are being imported in VRF with this RT configured. Actually VPNv4 is quite complex and complete explanation is beyond the scope of this site. VPNv4 is not required in order to run routing protocol inside VRF. Cisco calls it VRF-lite. Your problem with state here is related to routing. 

There's bug with some line cards on this platform which leads to card crash when reboot occurs after long uptime. If this happens, the card is subject to RMA. Cisco can determine potentially risky cards by serial number. Best solution for you is to contact technical support and ask them. You should use specific version of software based on features you're using. Again, best advisor for you is Cisco. They can verify all potential bugs and recommend good variant for your needs. 

You're not actually telling BGP to run inside VRF. I would say you're activating address family ipv4 vrf inside BGP process. I. e. BGP process is always bgp 2, but it may contain different address families. Correct. 

Tier X is formal reference. Traffic flows according to IP routing table. Basically you can access some resources without even leaving your provider's network. And some others require traffic to flow through several ISPs with different "tier". 

Router can't advertise "source address". When you see some prefix in RIB, router talks about destination as opposed to source. In case of S/RTBH packet from specific source should be dropped. uRPF checks whether source of the packet is reachable via some interface except "null" one. S/RTBH technique uses null routes along with uRPF. So if detected source of the DoS attack is reachable via "null" device, and packet from that source comes through interface with uRPF configured, uRPF check will fail and packet will never reach destination. On the other hand all the healthy packets will be permitted by uRPF check. 

Generally all the devices at the AP communicate through AP. There are technologies as Wi-Di and Wi-Fi Direct, but those are beyond the scope of this question. So devices can't communicate directly in common Wi-Fi network. Regarding traffic interception, you should take into consideration ciphering here. Though there are ways to intercept traffic and read it contents, with WPA2 those attacks are very complicated. 

Clarifying exactly what the performance issue is with ssh. Since it's an interactive application, delays are expected. Test with some other protocol/application and get captures. Inspect the switch for physical layer issues on that interface. 

The first version of was written by Van Jacobson and it used ICMP but it didn't work very well. The vendor interpretation of ICMP in RFC792 was that routers should not send an ICMP error message in response to an ICMP packet (see edit notes below). Therefore most routers would not send a "time exceeded" message in response to an echo request with a TTL of 1 or 0. So he changed it to use UDP and lo and behold it worked great and there was much rejoicing (and adoption). The tool on Linux and FreeBSD (and I assume Cisco) is based on Van Jacobson's work. The spec was later changed to "in response to an ICMP error packet." The world progressed, vendors made changes to their stacks allowing ICMP error messages in response to echo requests, and with the rise of firewalls and ACLs, stray UDP packets sometimes get blocked, but ICMP echo request could get through. Of course, your success on that today varies wildly. I would expect the and other tools were written at a time when using ICMP echo responses wasn't so problematic. These days you can't really say UDP is better than ICMP. Or that either of those is better than TCP. It completely depends on the path you are traversing and the security policies in place. You may need to try one, both, or all three implementations. Sources: $URL$ $URL$ Edit: Changed RFC from IP (RFC791) to ICMP (RFC792) that says in the intro: 

That's the bit that caused vendors to not send "Time Exceeded" errors for echo requests. RFC1122, Requirements for Internet Hosts, in section 3.2.2. is the update that says hosts shouldn't respond to ICMP error messages. 

In general, the number of retransmissions doesn't bother me. However, the fact that this is your laptop plugged directly into the switch with no router or other devices to drop packets does present a potential problem. The retransmissions are strange. Every one marked as a retransmission that I looked at had the original TCP segment present in the capture i.e. the data wasn't dropped. In some cases your laptop ACKs the segment but the switch retransmits anyway. Maybe the ACK from your laptop got dropped. In other cases the switch sends a segment, say 50 bytes, then within 10 or so milliseconds sends it again but with more data in the payload e.g. 100 bytes. This is repacketization and is fine. But your laptop hadn't ACKed yet and it's extremely doubtful the switch has a retransmission timeout of ~10ms. At first, I thought your switch was extremely busy due to the large difference in IP IDs between the original segment and the retransmission. You can sometimes tell how busy a machine is by looking at the difference in IP IDs of consecutive packets it sends. Your laptop, for example, is using sequential IP IDs e.g. 1234, 1235, 1236. But the switch's IP IDs vary so wildly, I imagine it's using IP ID randomization. So it might not be crazy busy. A few ACKs from the switch have ethernet checksum errors according to wireshark. I'm not well versed in ethernet so I don't know when it has checksums in use and when it doesn't because clearly not every frame has one when I inspect it in Wireshark. The ones with the error are 0x00000000. So it's wrong in the sense that it's using a checksum but not calculating it. However, if it was really incorrect checksums, you wouldn't see that frame in the capture unless you're capturing on the wire between the two endpoints. 

I would probably post this as a comment, but this is my first post on stackexchange and it won't let me. ssh isn't the best application to test performance due to its interactive nature. Unless you're saying that you see delay for the characters being echoed back to you. Without knowing more about what you were doing with ssh, the things I noticed are: 

RFC6598 defines 100.64.0.0/10 as prefix for Shared Address Space. If you get an address from this prefix you are very likely behind a provider based NAT. Same is true for addresses from RFC1918 prefixes (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16). Providers may also use public address for shared addressing. You can test if you are behind a NAT by using websites like this (Looks like it's no working right now.) 

You can send as much netflow traffic to a host as you like. Without some software listening on the host you wont collect any data. There are several options to choose from, my Debian box here comes with nfdump, pmacct, ntopng ant probably several others. There are many more options from a free and open source to very expensive commercial software. Where the data is stored depends on the software you use. In the past I found a combination of nfdump and nfsen (web interface for nfdump) quite useful. 

http.host - show all packets where http.host is set http.host != "" -show all packets is set and not an empty string 

The standard ping command does not use TCP or UDP. It uses ICMP. To be more precise ICMP type 8 (echo message) and type 0 (echo reply message) are used. ICMP has no ports! See RFC792 for further details. 

I doubt that you'll find any downloads for Catalyst 3500XL. They are out of support for many (12) years now. Downloads for supported devices can be found here. Note: You'll need a Cisco account and most likely a support contract. Installing an update can be done via (t)ftp. 

Not all Cisco devices support all features. In addition to there are also differences between IOS versions feature sets. You have to check the documentation for the exact hard- and software version you are running. A quick search on google showed that the 3750G does not support Netflow. One possible workaround might be to setup a monitoring port and setup a Linux box to capture the traffic an export the Netflow data. This will only work as long as you don't exceed the the maximum capacity of the switch port your capture box is connected to. 

RADIUS stands for Remote Authentication Dial-In User Service and was develop to authenticate, authorize and account (AAA) Dail-In users. Today it's often used as a centralized authentication server for the management interface for all kinds of networking devices. Another common use is 802.1X 802.1X is an IEEE standard used in wired and wireless LANs to authenticate clients. You'll have a client (called supplicant) an authenticator (a switch or access point) and an authentication server, which is a RADIUS sever. 

Using /31s is specified in RFC 3021 (Using 31-Bit Prefixes on IPv4 Point-to-Point Links). Not all operating systems support this, especially Windows. And there are probably other system out there which do not support this RFC. So using a /31 will not work with every connection and router gives you a friendly warning. 

Decoding HTTPS traffic to / from google will only work if you have the private key of Googles webserver imported into Wireshark and the connection is not using PFS (Perfect Forward Secrecy). Otherwise any form of TLS (SSL) encryption would be pretty useless. For more Details on TLS/SSL see Bulletproof SSL and TLS by Ivan Ristić. 

As Ron mentioned you are probably looking for anycast. Be aware that on the Internet you need at least a /24 (IPv4) or /48 (IPv6) many (all) providers will filter larger prefixes to save valuable memory on their Routers. The most popular use case for anycast on the Internet is probably DNS. Most of the root DNS servers are anycasted, e.g. there are 157 instances of l.root-servers.net (see $URL$ reachable under the same IPv4 and IPv6 address. To setup such a service your service, a routing protocol daemon (on the inernet something that speaks BGP) and a peace of software that monitors your services and removes this instance from the routing table in case of failure. One example is $URL$ 

Checkpoint has the fw monitor command which should provide similar informations. This reference looks pretty good. 

Register a IPv6 Multicast address with IANA and make your software listen to that address. Make your service (or the host running the service) send Multicast DNS packets to make itself known to the network.