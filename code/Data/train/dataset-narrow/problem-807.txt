i looked around google and stack exchange, and found that i need to check the error log file at mysql..after long hours of determining the problem i THINK i found my problem is with a corrupt table: (i couldnt post all lines of error reporting here cuz they're too long) so from between the lines i found this: 

Good day, just today morning i was using drupal to add some content, it crashed and mysql shutdown unexpectedly at xampp!! last thing i was doing was inserting a data into a field with "auto complete entity reference"..but after inserting, it gave me an error in red: "no data exist in entity reference", next thing i did to fix my insertion, it got this error for mysql crashing! i tried to restarted it many time, but each time it started, it doesn't respond to anything, then shuts down again. sometimes i was hardly able to logon to phpmyadmin, check the database, (all looed ok to me) but before going deep, it crashed again! (its been just less than 1 min time, and slow response before the crash!) i tried writing any sql statment(i thought it has something to do with drupal cache, so i wanted to delete their data), but it hangs and eventually mysql shuts down again. here's a screen shot of drupals' initial error: 

My understanding (I haven't worked with this in over a year) is that "merge replication" requires a sql server instance to act as a publisher. If you want to only have an SQL CE database at each end, you need to write your own code with sync framework (if you see articles on "sync services" they are using the sync framework). 

At a previous employer, some of the reports would take hours to run. The month-end and quarter-end reports were the worst (8 and 20 hours respectively). By computing the results, and storing them into a permanent table, the user could look at the results of the report at whim without recalculating the numbers on the fly. The process that calculated the reports was able to restart if it was interrupted, so that also helped: in that part of South Florida, there were multiple second-long power outages each day. While the company had a generator on-site for the bad weather days, not all of the staff had UPSes. Some of the "power users" wanted to be able to access the data and crunch the numbers in Excel, so they had read-only access to the reporting tables. 

then, i replaced the corrupted file back again to try if it becomes recognized or not, and started mysql..and it worked!! mysql never crashed again and complain about that file being corrupted anymore, and that saved me from deleting or affecting any data. 

ok, i best solution which suited me well. for being cautious in choosing the above solutions provided in my question above.. (cuz the solutions didn't guarantee 100% that my data would be intact), i made a backup for my drupal database folder just in case. chose solution (2), which is adding the force_recovery..but no luck in fixing the problem.. so i went to the location of the corrupted file in "C:\xampp\mysql\data\bitnami_drupal7", and moved the corrupted file to another folder (NOTE: i did not delete the corrupted file). then started mysql service, and viola! my drupal was back to life again. and i was able to access phpmyadmin with sql queries. (back then, mysql couldn't execute sql queries because it was in a state where its about to crash). i went straight to the cache tables of drupal to clear them.. (back then, i wanted to clear drupals' cache since the error started, cuz ever since i knew that mysql crashes because of a table in drupal; but mysql couldn't have enough time to execute sql queries in phpmyadmin, again cuz of the the crash). hence, after clearing all drupal cache at "bitnami_drupal7" with this code: 

Give them logon and view data rights; however to perform DBAly duties, use a separate login with elevated privileges. I know one financial customer that does this - the regular windows authentication based logins were limited in the damage they could inadvertantly do. Restores and running DML required running with the separate SQL authentication login. One government agency I worked with used 2 separate logins for each server/db admin. So if was my domain login (this login would have regular privileges), then would be my separate login. You get into trouble if you use your admin account all the time, but then it lacks permissions to other things (like no email. Oh, you say that like it is a bad thing...). The current government agency I'm working with has each server/db admins having privileges elevated above the standard user, but not quite admin (think of it as the group). Domain admin functions are performed with a shared domain admin account. A common error is restoring the wrong database (like QA restored over the production server), and this isn't going to be solved via restricted rights or multiple logins. Doing potentially destructive things in pairs is one way to minimize the risks. 

I have a column that is when I attempt to edit a cell it randomly inserts characters and does other weird things. The column has French text in it. What could be causing this and what could fix it? I assume there might be a offset problem but I never dealt with that before. I've googled around and haven't been able to find anything on it. E.g., 

To be clear these are just me brain storming. As of right now I think it would be better not to do any of this and just do it manually with tooling on the front end to help out. It seems like bad practice to me to do any of that. But just in case someone has dealt with this and come up with a good solution I thought I would ask. Thoughts? Thanks in advance. 

I've used both and I thought that Red Gate's was a slightly better interface and easier to use (that probably meant I was overlooking something in VS). They both produce reasonably similar scripts. 

This option is only reasonable if cars and boats have the same properties and that the existance of those properties aren't going to vary based on vehicle type. If cars and boats will have different properties, then they really belong in separate tables. As an aside, some people make modifications for Microsoft's Flight Simulator to fashion a boat simulator. In these mods, a boat is a boat-shaped airplane (look, no wings) that has a maximum altitude set to 0. I am suspecting that if you end up adding properties, you will have strange bugs when "accidentally" setting boat-specific values to things that only relate to cars (oh, the license plate column only applies to cars and should be null for boats) and vice versa. 

so, the reason im asking here is that, are those methods safe? will they not affect my drupal tables? it would be disastrous for me if anything goes wrong, because 1st solution says "FORCE" which sounds scary and could end up corrupting things based on what i read. (im not entirely sure though) also, 2nd solution which is deleting that file (im not sure wht that file is or does), does that file contain any database stuff that affect my database files? or is it only for configuring purpose? i mean maybe some people are not having serious stuff in database so they tried it and worked for them. but for me its very critical if anything bad happens to my data from those solution. I'd like to know if those solution wont affect my data. I'm pretty new to this database stuff, so im not sure..thats why im trying to take a cautious step to ask here. Please guide me from your experiences. Thanks 

Ideally, for an operational production database, you don't want developers having any access to the server or any database on it at all. That sort of thing is one of the first things you'll have to do for SOX compliance. For the sort of rights that userIDs run under, the only rights they really should have are , and explicit (for each stored proc and user defined function for the userID ). If you need to be running traces in production, you have some problems and it will take a Great Wall of Textâ„¢ to explain it all. My first recommendation is to have a QA environment that is locked down just like production and if traces need to be run, restore a back-up of the prod db to QA and run the traces there. Again, if you have SOX, HIPAA or PCI-DSS requirements, then you better sanitize the prod data before restoring it to QA. 

It turned out to be a character that was imported into the record. Did a query on the data and removed it and updated the record. Not having issues anymore. 

And then later recombine the phrase base on what age range is being called. Is there any precedence for this? To make things even more difficult, it is multi-lingual. Right now I'm leaning to not do this since it seems overly complex and might be easier to have tooling on the front end for find and replace (well the find will be done on the database side) where they can visually check all the replacements and make sure it is what they really wanted. Another variation of this would be Fahrenheit vs Celsius where we might do something like (or some variation maybe even in a different table): 

i was surprised that a whole service is shutdown because a simple table, how come? and why would a table be corrupted by itself? i mean i was just minding my own business with drupal contents and adding setting and thing(not even coding, nothing), how could such a thing happen? i found some solutions, (the one with increasing the packet size didnt work btw, cuz it happened before and it solved, but now it seems different), here are some solutions which say: (1).