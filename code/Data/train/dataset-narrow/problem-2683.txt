I'd like to use some pixel characters as a base for tweaking into characters for my browser-based-game $URL$ . (In other words, I take a base template and I modify it with colors and pixels slightly to make character variations) Now, my bbg is mostly ninja oriented, so a ninja avatar to work off of would be great, but more varied character types would be good as well. And I can probably fudge a "ninja" from some other template. But, err, free-to-use-for-commercial-purposes (e.g. public domain) would be necessary. I'm already makin' a little money off the site from Ads, and would certainly like to make more, so I can't use stuff for "non-commercial use only", unfortunately. So any source for free-for-commercial-use pixel-y 32-bit-y characters to use as a starting design base? 

I currently have a ship that can orbit around a sphere freely controlled by a joystick. There is a separate joystick that controls the gun and starts shooting when it is touched. Right now the bullets start shooting and then orbit the sphere until their lifetime has elapsed. Instead of having them orbit the sphere I want them to orbit for maybe the first half of their life and then shoot off into space. Does that make sense? It would give the effect of a kind of glancing off the atmosphere, instead of staying in orbit for the whole time. I am working in Unity3D and using the method to get the bullets to orbit. I'm thinking I need to take a snapshot of there position at half life, and then figure out the vector that would shoot them off into space. If someone could help me get going in the right direction with that, that would be great! 

I find the most interesting method of player vs. player protection to be one that somewhat models itself after reality. IRL, it is the threat of inevitable and pervasive society reprisal that keeps violent elements of society calm. In game, it's great fun to have a system where npcs around the pcs react to unsanctioned violence by attacking the aggressor. So if you provide strong npcs in the general area of safe location, e.g. town guards in a starting city, that attack people who initiate pvp. The system isn't foolproof (there are a lot of chaotic effects that can occur: players can initiate attacks with full knowledge of the backlash, bystanders can be drawn into fights, for two example) but it's much more interesting and vibrant than any kind of mathematical "you are level 5, so you cannot attack a level 1" system. Non-cities become wild places where attacks can happen, and population centers generally become safe-zones. Pretty realistic result. 

I'm coding a 2D sidescroller using only JavaScript and HTML5 canvas, and in my game I have two problems with shooting: 1) Player shoots continous stream of bullets. I want that player can shoot only a single bullet even though the shoot-button is being held down. 2) Also, I get an error "Uncaught TypeError: Cannot call method 'draw' of undefined" when all the bullets are removed. My shooting code goes like this: When player shoots, I do and after that: 

I don't have a huge, high bar for 100% secure communication in this case because I just want to add fun, and give some minor/non-overwhelming benefits from the mini-games, not build a fort-knox system. And if someone is smart enough to hack up a solution to the mini-games to automate them, I won't be excessively broken up about it. Techniques? So with that in mind, are these two approaches valid? Are there other approaches to try with this? Any examples in the wild that I could learn from? 

That rotates the ship around it's local axis correctly. My problem is trying to get the joystick to move the object around the sphere based on the axis that the joystick is on. This would mean the object moves in the angle it is pointing but staying at the same radius from the center of the sphere which is located at (0, 0, 0). Then I also need to have the camera follow the object as it moves. Any ideas? Edit: I got the orbit to work based off of the joystick using the code below. But the rotations seem to get messed up as soon as it gets to a certain point. Around 180 degrees? Also what is the correct way to have the camera follow the ship? I tried to make the camera a child of the ship in the hierarchy and that is when I really notice the messed up rotations and the ship doesn't respond correctly to my joystick. Also now the joystick doesn't rotate the ship around it's local axis anymore. Hmmm. 

I am currently trying learn javascript in form of HTML5 games. Stuff that I've done so far isn't too fancy since I'm still a beginner. My biggest concern so far has been that I don't really know what is the best way to code since I don't know the pros and cons of different methods, nor I've found any good explanations about them. So far I've been using the worst (and propably easiest) method of all (I think) since I'm just starting out, for example like this: 

I haven't been able to find a lot of the old, open source mud source codes. I find the way they did things very applicable to text-based/browser based games, and I'd love to be able to skim through parts of 'em for inspiration. For instance, we have this huge list of muds and the relationships between them, but little by way of access to source code. $URL$ Often (I'm looking at you, dikumud, $URL$ ) the sites of the mud itself doesn't even have a working link to the source. $URL$ has a copy of merc that I found, which certainly contains other works within it's history, but the pickings seems sparse. Does anyone have better resources for gaining access to MUD source code than these? 

I have tried adding to the main game loop before the above draw&update calls, but I still get the same error. 

I am trying to replicate the wave gun from Super Metroid where the bullets fly along a sine wave path. The cool part is that you can shoot in 8 directions and the bullet still follows the sine as if the whole sine function is rotated. I've tried using a 2d transformation to allow shooting in every angle but I cant get it to work. Here my code so far (JSFiddle.net). If you uncomment the line "Axis.dir += .02;" in the fiddle to start the rotation you'll notice that the black box doesn't follow it's axis at all. 

I have a sphere in my 3D world located at the origin. I have models orbiting it and I need to keep track of each models' position (x, y, x coordinates) as well as update their bounding boxes for collision detection. I have calls to and but I'm not sure how to keep track of this. Should I create a matrix and apply rotations and translations to it? Any help on that would be great! Also if there is a better way to do this I am open to anything. 

I'm working on a 2D platformer game, and I'm having a lot of trouble with collision detection. I've looked trough some tutorials, questions asked here and Stackoverflow, but I guess I'm just too dumb to understand what's wrong with my code. I've wanted to make simple bounding box style collisions and ability to determine on which side of the box the collision happens, but no matter what I do, I always get some weird glitches, like the player gets stuck on the wall or the jumping is jittery. You can test the game here: Platform engine test. Arrow keys move and z = run, x = jump, c = shoot. Try to jump into the first pit and slide on the wall. Here's the collision detection code: