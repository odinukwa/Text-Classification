If using MSSQL you can also create a CSV file with python and import it using bulk insert or SSIS. I would recommend the python module - but if you don't have a SQL user with the permission to connect and insert into your table MS SQL tools are a great alternative. for inserting a variable you can try something like this: 

There can be different points why you cant connect your PI. The error message indicates that the domain can't be resolved. Try: 

This should work fine. You should just ensure that the thumb drive is pluged in, the mount path is correctly set and the file will be found there. Another thing to ensure is that a text file created with windows might have different line endings and could therefore not read correctly. Edit: It seems that you want to give the Pi to persons that haven't to much experience with Raspberry or Linux. If it is for many persons there is maybe another approach: Until the Raspberry has a valid wpa_supplicant for wlan0, the Pi starts in a config mode, where wlan0 brings up an AP and a www-server with a form to put in the routers credentials. After the input is submitted and validated, trigger a few scripts that run wpa_passphrase to generate a wpa_supplicant file. Then a script can rewrite the /etc/network/interfaces so after a reboot the Pi will connect wlan0 and wlan1. A nice add-on to this you can use the other dongle to create a list of available wifis with 

can I somehow turn off the default "console" when booting the Raspbian or at least change the logo into something else? And most importantly, can I do this without recompiling the install image of Raspbian? is the logo stored somewhere I can change directly somehow? Reason for asking: the users who are going to turn this thing on, on a daily basis shouldn't see all these technical details nor the logo if possible. Okay, the logo is okay, if I could just remove the console-logging. If only there was some kinda "verbose off" unless key is pressed or something? 

You write "bittorrent" and that triggers my guess/answer. The torrent protocol receives packages in random order from random seeders. Once you start to use torrent on any filesystem, it becomes rather fragmented. This will hurt performance bigtime. From what I know about the SDCARD, its running FAT/FAT32 and thas even worse for handling fragmentation. So find a way to defragment your SDCARD, or copy all the files away from it and then reinstall the OS. Lastly, writing a LOT (as the bittorrent engine will) will tear your SDCARD more quickly than normal usage. I dont say thats its wrong to do it, infact I had considered to to similar myself. But - that might be the reason for your problem. I wish there was a torrent client that automatically would transfer/move the downloaded files to a whole other destination once the download + "reserved upload time" was completed. Then the defragmenting would go a lot faster. 

There are many approaches. Guess the simplest is to use a HTTP form that send to a cgi (in your case directly a python script) You need to 

If you later want the webserver starts again on default just type ' With the comand you bring up the web server on demand. 

Do you already have pub key in .ssh/authorized_keys? You need to enabled key based authentication in : 

with this settings your raspberry will boot without showing output and present a custom boot screen. if you dont want something else on raspberry that a browser and your web page in kiosk mode, raspbian-lite with Matchbox as window manager is sufficient. 

Considering your script, the code could be like this. It is also possible to open and clode the DB Connection once, outside of the while loop... both have advantages and disadvantages. #!/usr/bin/env python # -- coding: utf8 -- from os import getenv import pymssql import RPi.GPIO as GPIO import MFRC522 import signal import time 

I was reading lot and tried some approaches last days. The comfortable function from Rasbian Jessie, where you can copy a wpa_supplicant.conf to /boot which will be moved to /etc/wpa_supplicant/wpa_supplicant.conf after next boot, was announced here in the blog of raspberrypi.org. In the raspberrypi.org forum, the user ShiftPlusOne (a Raspberry Engineer) indicate that this function is a part of the raspberrypi-net-mods package (but has dependencies to X gui.) I guess because of this dependencies the package isn't in Jessie-lite. On a Windows system there are some 3rd party tools, which make the ext4 read/write accessible. i have successfully edited the /etc/wpa_supplicant/wpa_supplicant.conf on the SD card with both ExtFS (free for personal use) and Ext2Fsd (Open Source). Well in my opinion the easiest approach would be a pen drive Linux booted instead of windows or a Virtual Machine with Linux. 

I believe I have found the correct answer now. You can use something called "mono-service" to run programs in the background or you can place the program in the boot scripts. All you need is to call the program with either mono-service [program path and name] or mono [program path and name] 

Online help (gives you all of the command-line options available) pi@raspberrypi ~ $ /opt/vc/bin/raspicam Taking a simple photograph pi@raspberrypi ~ $ /opt/vc/bin/raspicam –o file.jpg Recording a simple video pi@raspberrypi ~ $ /opt/vc/bin/raspivid –o file.h264 Please note that when recording video the camera module will not record any sound – this unit will only capture HD video images only. Taking some time lapsed images (in this case the images are 30ms apart) pi@raspberrypi ~ $ /opt/vc/bin/raspicam –tl 30 –o file%d.jpg Note the filename – the %d will be replaced with an integer (creating file1.jpg, file2.jpg etc). This software will continue taking images until you press ‘CTRL-C’ to terminate the program. Using the image effects when taking photographs or capturing video This command will take a picture in ‘negative’ pi@raspberrypi ~ $ /opt/vc/bin/raspicam –ifx negative –o negative_image.jpg For a full list of image effects when taking photographs type: pi@raspberrypi ~ $ /opt/vc/bin/raspicam To read the help screen and all available command line options. For a full list of image effects when recording video type: pi@raspberrypi ~ $ /opt/vc/bin/raspivid To read the help screen and all available command line options. 

Based on your comment, I recommend to check pigpio where a Java wrapper exists. The library​ is maintained by another user of this community. The wrapper is also well documented. I think with this you can develop bit more efficient. 

I use Owncloud for a similar use case. As for Google Drive, OneDrive, ... you need a dedicated app (existing for iOS or Android) or you can access your own Owncloud with the browser. For desktop existing clients for Windows, OSX and Linux. For installing the Owncloud server on your RPi you need a Webserver with PHP support. If you want to access the files over internet, i'd suggest to use HTTPS. You can use self signed SSL certificates or a SSL cert from a trusted CA. Here is a tutorial for setting up a Owncloud with "Let's encrypt" certificates and here a tutorial for self signed certificates My Owncloud is running with self signed certificates, but the Let's encrypt certificates should be now the preferred solution (nevertheless it's good to learn more about generation of certificates). In my idea, if you just want to share few files with few persons a SQLite3 data base is sufficient. As storage you can use a flash drive for storing the files, this will minimize IO on your SD card. 

does the response give the IP of the Raspberry? If not there is a DNS issue. If you know the IP of your Raspberry try to connect using the IP: 

I would like to identify which RaspberryPI hardware instance is booting on my network. I have plans for using a LOT (not just 10) of them as clients in a larger solution, but I would like to reuse the SD-image for them all. Is there any kinda way to identify them from each other, unless I place somekinda serial code in a file somewhere in the OS? Btw. I use MONO/C# for programming, but I am just curious to know if the PI has a hardware serialnumber somehow or not? 

I work with C# myself. I haven't played with camera capture, but other sorts of hardware. You can install MONO (opensource version of .NET incase you didnt know) and then you can make your application in C#. You can either write the application on a "bigger" platform using MonoDeveloper (Visualstudio kinda thing) or you can just use command line compiling directly on the PI. I havent done the latter, as my hardware was only USB driven so I just developed directly on Windows and tested as far as I could. It's not the "complete solution" to your answer, I am afraid, but... look for "install MONO on raspberry pi"... that ought to get you started. NOTE Just researched a bit. It looks like it's installed with a driver on the Raspberry PI, so you might just be able to execute the commandline interface in a console kinda behaviour. Anyways, found some docs: $URL$ on this page: $URL$ Directly copy/paste from the last pages in the PDF Once your Raspberry Pi computer has rebooted, you can login again and run the camera software to take photographs or record video. 

The question has already a great age but has been pumped by Community. Some months ago I stumbled again about a Linux distribution that i used a decade ago. This project offers a rpi packages. Unfortunately it is still in development and not feature complete. Here are is a tutorial (translated to English w/ Google). As others here mentioned, a PRi as DSL cant replace a dedicated hardware - it works more as PoC. 

and a script that scrape the SSISD form the output and write this to a text file. Use this text file to provide a select list in the config web site. This "get ssid" script run periodical you can use some ajax to refresh the config web page... ... but this is maybe just an approach if you have many users or like to fiddle around. ;) 

some of this are CPU / IO intense processes. Open a second terminal and check if CPU is on 100%. Try to shut down some of the processes that consume high CPU. There can be different reasons why the system becomes unresponsive. Maybe you can find an hint in the logs. 

With this little change the buttonStatus should be set correctly. Edit:fixed elsif .1 as C Malasadas suggested in comments. 

now you need to config the display manager /etc/gdm3/daemon.conf and let the pi unser log in automatically