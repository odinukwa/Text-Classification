Well, it looks like there is no way to do it from the SD card, but because I installed Windows IoT, there is a built-in FTP and file sharing server. To access them, just turn the raspberry on and: 

I got a 16Gb micro SD to use in a raspberry pi 3, and today I installed the OS with the program downloaded from microsoft website. However I noticed that the SD card was formatted in a strange way: a main 64Mb FAT partition, a 600Mb,a 4.2Gb and another 2,5Gb all unkown and not recognized by windows. Also 8Gb of unallocated space. I know this is normal, but how can I access the data partition? What if I want to deploy a large file inside my card? 

I'm trying to use my wired xbox 360 controller with my Raspberry Pi 3, however xboxdrv seems to not recognize it. I read it could be a power issue because the USB ports on the Raspberry could not deliver enough power. However the 4 LED on the controller blink so it could be another problem. 

Apparently, even though xboxdrv doesn't recognize my controller, I managed to write some code that in fact gets the input. In particular, I've used this class. It says to install xboxdrv, and at this point I don't even know if it uses this driver or the default one, but I'm leaving it as it is. Also the driver is not perfect: some axis are wrong and the left trigger isn't fully detected, but it's OK. 

First of all, every UV4L option documented in the man pages can be passed via both command line and configuration file. If the UV4L Web Server running on the Rpi3 cannot (easily) be reached in any way from the Internet for a simple p2p, your other option is to "push" (in one direction) the audio/video streams from the Rpi3 to a Janus Gateway deployed somewhere on the internet. You can automatically do this (e.g. at system boot) by carefully following this example. Another interesting way introduced recently is to make use of the UV4L REST API in your own application or smart script, which provides more functionalities than the older (but still supported) API used in the example above. 

The "fastest" and most efficient way to stream HDMI-out (and optionally audio too) remotely to .e.g a web browser is UV4L. It does not require any plug-in installed on the browser. This is a demo which clearly show this. You can also control the Rpi from the browser. 

Have a look at the UV4L demo and this post and the following posts on the Raspberry Pi forum for a working command line. I think UV4L is actually the simplest way, as it does not require any configuration. It can cast the screen, a tab, a window and the camera from Firefox plugin-free after having set the proper authorization (i.e. the host where UV4L is running) in the config/preferences. 

If you do not want flash and want something modern for the Raspberry Pi with adaptive audio/video streaming to web browser in the fastest possible way (< 150ms), the only solution is UV4L, which works out-of-the-box (just install and use). You can set the min, start, max bitrate as options in the configuration file. For it to be played in the same Raspberry Pi you will need a browser supporting WebRTC running on it (e.g. Firefox). 

I've been using my raspberry pi over SSH for quite some time now, and still one of the most annoying things that I couldn't fix is that everytime a certain amount of text is displayed, the connection will freeze and I have to disconnect myself. Most of the time I use putty, because I work a lot with my windows PC, but the problem also happens with a default session with linux mint, so I guess it's the raspberry's problem. First of all the problem is seemingly random, sometimes it happens when I call or I paste some commands, very often when using nano, but it happens 100% of the time when the shell is filled with programs that use a "GUI shell", most notably the connection freezes everytime I try to open . I have a relatively slow connection with the raspberry, but it is able to handle a VNC connection so it should definetely be fast enough. 

I'm trying to directly power a Raspbery Pi 3 by wiring it to the 5 volts rail of a power supply (5v to pin 2 and GND to pin 9), in this case a peripheral 4 pins connector. However, it never manages to boot (green LED blinking 3-4 times). An ampmeter shows a current of 0.1A, which seems rather low, so that's probably the matter. I've tried connecting it to the motherboard ATX 20 pins and the floppy connector, but current is always limited to 100 mA. I thought that the problem could be that the PSU may not start properly without a big enough load, but even connecting it to a running PC hasn't changed anything. Does anybody have any advice? EDIT: after another test (I've removed the 5 volts fan from the raspberry) the red and green LED are costantly glowing) 

In case I missed any detail about the situation/configuration that's necessary to solve this problem, just ask me in the comments. 

To me the whole situation just seems kind of weird right now, because every single part of the whole thing is working, just not as one system. (The current configuration is working at home and I have access to the network and the internet with a spoofed MAC address using my laptop). I hope, anybody of you can help me out with this one, as I have no more ideas left how to get this working. Maybe someone of you has ran into any kind of similar issue once. What may be configured badly in my case? Do I miss something? Is there any plausible explanation why it worked once and now, without any major changes, doesn't? I greatly appreciate your help! 

EDIT Stupid as I am, I never actually took a look into . While going through it, I found that often there's a reply from looking like this: after is activated and working. May the rest of the log help to solve this issue. 

Situation There's a intranet with access to the internet. However, you can only gain access to this network, and therefore the internet, if your device has a whitelisted MAC address. This is no problem though, as you can easily use a MAC changer to bypass this barrier by using one of the already whitelisted addresses. Goal As this network is only accessable through a wired connection, a Raspberry Pi shall be used to make a wireless connection available. Thus the RPi needs to be connected to the mentioned network and is supposed to work as a WLAN access point. RPi configuration The RPi (3 Model B) is running Raspbian as OS. To create the AP, I'm using . And to for the DNS and the DHCP stuff, I'm using . I won't list all the steps I did to get a working configuration, but if you want to get an idea of it, I used the following (here and here) tutorials (they're in German, but at least, you can see the used commands, sorry). However, the current configuration seems to be correct to some extend, as I can successfully use it at home without any issues. Problem Altough I'm able to connect to the RPi with my laptop or my smartphone, I have no internet connection. Connected to the RPi via SSH (using ), there's no answer when pinging (or ). Things that are working and possible solutions First of all, I got this setup (with a slightly different configuration I'm not aware of anymore, damn it) working once. Also I'm able to connect to the network and the internet with a spoofed MAC using my laptop. The accessablility of websites varies using different browsers though (best one seems to be /). Things that are already working: