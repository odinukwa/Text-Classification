If this doesn't work right away, make sure to power cycle your Raspberry Pi (, disconnect all cables, wait 10 seconds, connect all cables and let it boot again). Then try to make user pi owner of the root folder of the USB device. 

If you feel like file corruption is one of your major problems, consider moving the entire OS away from the SD-card. On a Raspberry Pi 1 / 2 / Zero (W) you need at least some boot files on the SD-card but you can run the rest from a USB device. With a freshly downloaded image: 

Going further into the FAQs we see more useful numbers for the Pi 3 based on average & peak consumption. Peaks: 0,75A when booting, 0,55A for video playback (H2.64) and 1,34A under stress. I'd say that if you are able to boot the device, you'll be able to do video playback. You won't break the Raspberry Pi 3 by testing this, worst case scenario is that it won't (fully) boot or shuts down. Give it a try on your USB 3.0 port. Let us know what happens! 

Done! Shut down, remove the SD-card from the Raspberry Pi 3 B and boot again. This will take longer than usual. Mine did a strange sequence on it's own: I put the power in, then it showed a color image, it rebooted on it's own, showed the color image again, rebooted on it's own again, showed the color image again and suddenly booted into Raspbian. The next reboots were much faster. Make sure to remove the line in on the SD-card if you plan on reusing the SD-card in other Raspberry Pi's that don't need USB boot mode enabled. 

But that didn't seem to work, and I'm out of ideas/googlefu. Anyone have an idea how I might be able to achieve this? 

I've downloaded Raspbian wheezy from the Raspberry Pi downloads page and following the RPi Easy SD Card Setup wiki page. I formatted the SD card, and ed into the folder containing the Raspbian img file, but when I run , this is the output I get: 

I've noticed that I don't get any HDMI output to a monitor if I connect the HDMI cable to the Pi after I plug in the power supply, because I have two RPis for one monitor -- one running Raspbmc, the other running RetroPie. Does anyone else have this problem / is this normal? If it is normal, why? And if not, what am I doing wrong with my setup? 

I like being able to see the / files in my file explorer as I'm browsing my videos, just to be able to know if the video file has subtitle files before I play it. After looking at this wiki page on the advancedsettings.xml file, I've tried adding an file under with the following, thinking that XBMC would consider it a video file and, therefore, display it in the file explorer: 

If you've already fixed the typos that @thpani mentioned and that didn't work, you could also try running just to double-check that you've got the SSID exactly right; I had a similar problem, and it turned out I had an extra space at the end of my network name I wasn't aware of which was causing the problem. 

Shared hosting is not that bad - their servers and infrastructure is much more reliable than your RPI or your internet connection are. If you don't need the history of data and only want to display current figures - why not have your Arduinos UDP-broadcast temperature data or send it over to a message broker hosted on RPI and just display current figures on the screen. This approach enables you to plug and plug a data logging device into the network and log the data at any time without having to rebuild/change anything. If you need the history, take a look at RDDtool, database targeting the sort of data you are wanting to manipulate. It provides integration means for different languages - whatever you find easier to code. 

Run terminal on your mac and do You should see two lines, one with local loopback (127.0.0.1) and another one with the IP obtained from the router (192.168.XXX.XXX) Check that the IP you are trying to reach is within the same subnet with yours (only the last number on the IP should be different) Another way to check if you are on the same network is doing a traceroute to this IP - should be one hop, not many. SSH to it and answer "yes" when it's asking you if you want to establish the connection. 

Are you editing /etc/crontab or /var/spool/cron/crontabs/*? can you copy the output for the whole file? 

Is there a way to programmatically control LCD brightness of the screen connected to RPI over HDMI? As far as I could figure there is really no way to achieve this with RPI over HDMI. What about RPI HDMI to LVDS boards? Does this method give this control? There is a board by chalk-elec that mentions this capability yet I would still like to understand if getting this board is my only way of controlling the brightness of the screen. 

I found my answer in the very next section of the wiki; silly me. I found that the solution didn't go much into detail about what kind or error messages you see though, and thought it might be helpful to have the exact error message "googleable". I also found the instructions slightly unclear (especially around step 8/9; I wasn't sure if the partition had to be left unmounted), so I tried to rephrase some of it: [this assumes that your SD card has been formatted already] 

I've noticed that when I stop a video near the beginning, it sometimes doesn't let you resume playback if you've stopped a video within a certain time period, but I can't seem to find any setting that lets you tweak how long this time period is. Does anyone know how to adjust this time frame in which resuming playback isn't available? 

I have played other avi files on OpenELEC with success, but when I try playing certain ones, the video doesn't play - all I can hear is the sound playing in the background of the folder explorer. I got some basic information about the video file using ffmpeg: 

You should make sure that the USB hub is: (a) a powered hub, (b) for USB 2.0, and (c) preferably verified on this wiki page with a list of verified powered USB hubs for the Raspberry Pi. I also did a bit of googling and found PiHub, which is one that has been specially designed to be compatible with the Pi. 

I should also mention that some people are using SSH over USB for the Raspberry Pi Zero (without using WiFi or ethernet). This is done by enabling "gadget mode" on the Raspberry Pi Zero, allowing the Raspberry Pi Zero to become both host/slave over USB. 

Yes, that should work. You need 1 ethernet port on your Raspberry Pi and 1 ethernet port on your PC to connect your Raspberry Pi to your laptop. You can use a USB to ethernet cord when you don't have an ethernet port available. 

Since the Pi Zero and the Pi Zero W are identical in hardware (except for the addition of WiFi and BT) and you can install RetroPie on top of Raspbian (which supports WiFi and BT), I don't see a reason why it wouldn't work. 

Attention for the next 2 steps / edits: these paths are followed by a number. Don't edit or remove the number! ( becomes , becomes , etc. ...). 

Done! You can make the partition your SD-card read-only (but there wouldn't be any writes anyway). Also, if the SD card would ever fail again, you have a backup of the partition on your USB device. Optional If you have a Raspberry Pi 3 B, perform these extra steps (on top of the previous steps) to not need an SD-card at all. 

Before we continue, a default Debian/Raspbian installation has read-only support for NTFS. Try installing ntfs-3g for read & write access: 

I don't know how familiar you are with GNU/Linux, but here is the explanation of the suggested commands: 

Downloaded the image here and then copied it over to my SD card Booted it up, configured it for wifi, and then ran to configure the file system expansion (option 1), internationalization (option 4), enabled SSH, and 256 memory split (both under option 8; I have a Model B). ed over some ROMs to the correct folders under ; for example, I copied over a Chrono Trigger rom ending in under the folder. Rebooted it and started EmulationStation. 

Run to locate the SD card's partition, which will be in the pattern , where is an integer. In this case, it's (the other two are external USB hard drives). And yeah, I know I gave it a weird name... 

I'm not sure what's happened but if anyone has any idea why the wireless interface suddenly dropped out, any advice or suggestions would be highly appreciated! UPDATE: It started working after I plugged the adapter straight into the Pi, versus in the USB hub. So, the question, rephrased: why did it suddenly stop working on the hub after it had been working for so long? 

I was using sqlite to connect to when I noticed that the usual method of getting "un-stuck" from the sqlite prompt (entering a semicolon) wasn't working: 

Check that it's been unmounted/it no longer shows up when you run (otherwise that's what causes the error above - see here). 

Whoops, I'm a doofus. Turns out it had nothing to do with the add-on at all -- I was playing around with the permissions of my external hard drive (which is where all my media is stored), and I accidentally set the permissions to for the "others" class, which is, I presume, what the user that runs the XBMC subtitles belongs to, and so it could no longer write to the video directories. My bad. 

It doesn't have to be given a specific extension, you can name it anything - it just has to be executable in order to run: 

@goldilocks provided a very sound answer on sources modification and why you don't really need that. I wanted to add that your real goal is probably getting some specific things configured - for that you can follow this simple route: mount the card image and modify its content to meet your specific needs, including semi-installing additional software or change default configuration (network interfaces, autoruns, additional scripts you may want to add). This is what I do for my RPI boxes - I'm using them as smart home agents plugged into network in different areas of the house - they are able to discover network and start acting as soon as powered up. 

I checked on my RPI and it looks like executable permissions is set automatically by g++, so you might be missing the './' bit before the program name you are attempting to run if you are in the same directory with the binary: 

What happens when you enter 'yes' to the SSH prompt though? You are playing with two different IP addresses, this could be the problem. Best way to get the IP is logging into your router and checking for the right one. If you can't do this for some reason, try this: I would assume you are wirelessly connected to the same router/hub with your RPI 

I'm currently building an application core for my smart home project - there will be 6 to 10 devices on the network each controlling its own area and performing different tasks and operations - security, notifications, sensors reporting, controlling lights and devices, et cetera. RPI can be treated as a regular computer able to run regular and odd operating systems. It does meet your requirements although you seem to mix hardware and software requirements into a single stack which is bit odd. It is not clear from your question what the primary focus of Internet of Things you are attempting to build. I see two key fields Internet of Things is valid for - knowing/sensing and controlling/operating. Both are possible to a good extent with RPI in its current hardware and software state. Sensing and computing for anything complicated may not be always possible with RPI - things like face/voice identity and recognition without assistance of other hardware will be either slow or impossible, reading data off sensors and controlling servos and lights is easily done - most of stand-along solutions for this types of tasks being sold are done using hardware that's way behind RPI specs. I'd suggest that you identify your key priorities and look for example implementation with RPI.