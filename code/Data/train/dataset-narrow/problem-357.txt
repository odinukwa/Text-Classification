I think you are confusing a couple of concepts. Looking at the last configuration section of the document you have linked: 

According to this Cisco document, Cisco Unified Border Element (SP Edition) on Cisco ASR 1000 Series, CUBE on the ASR 1000 series is designed for carrier-grade use: 

NAT with an inside source means that the conversation needs to originate from inside (web server). I think you want to use inside destination to specifically let outside originated conversations get to the web server. Inside destination NAT will also allow you to load share across multiple servers. 

You may be confused about something. You application may create threads for execution on your PC, but routers switch packets one at a time, regardless of what came before, and routers have no expectation that anything is coming in the future. Each packet is handled as an individual packet to be switched. The router may not be able to handle the throughput at wire speed, but it doesn't spawn threads to handle your individual traffic flows. It has to deal with serialization, buffers, routing table lookups, etc. which can overwhelm it when it starts receiving more traffic than it can handle. 

From what I see in your network, you are redistributing from RIP into OSPF, and you are not originating any routes in OSPF. You are then redistributing OSPF into iBGP, but the original RIP route is being seen in the other router through OSPF, not iBGP. That would be normal because OSPF has an AD of 110, but iBGP has an AD of 200. Basically, R6 trusts any routes received from OSPF mare than the same routes received from iBGP, so the OSPF routes get installed into its routing table instead of the iBGP routes. 

When you need this sort of information, you can search on Cisco's web site. It is in Cisco IOS Configuration Fundamentals Command Reference: 

Assuming you have the correct licensing, you would need to globally enable IP routing on the switch: 

The router itself is what is responding to you, and it will be using the interface closest to you because that is how routing works. When a packet with a TTL of comes into an interface, IP will decrement the TTL to . Then, the device will send back an ICMP message telling you that the packet timed out. The router will send the ICMP message packet out the interface back toward you because that is what its routing table tells it is the path to you. If it sends it out a different interface, the packet with the ICMP message will not reach you, but it will head in a different direction. Traceroute depends on receiving the ICMP message in order to show you the hops. 

I'm not sure why you are stuck on ARP (Address Resolution Protocol). It is not used in receiving bits on the wire. It resolves a layer-3 address into a layer-2 address in order to build a layer-2 frame, but when receiving, you are stripping off the layer-2 frame. Some things, like serial interfaces, may not use ARP or frames the way ethernet does. The process inside a router, or other device, will vary greatly, depending on the vendor, model, and OS. For instance, many modern routers do much of what you describe in hardware using ASICs (Application Specific Integrated Circuits). First, read up on the OSI model and learn about the layers. It is theoretical, but it gives you an idea of how things work in independent layers. Understand how the independent layers work with each other, then concentrate on the specific mechanics inside each one. 

There is no inherent latency difference between any of the layer-3 protocols (IPv4, IPv6, or multicast on either). Multicast requires all the routers in the path to run multicast routing, and that's why you can't multicast on the Internet unless you do it through a tunnel. You need to be more concerned about the layer-4 protocols. TCP has more overhead than UDP, but it reliable. You may be able to transfer more data in UDP during a specific time period, but if any data are lost en route, UDP does nothing to try to recover from that. Beyond that, the question ventures into an area which requires opinion-based answers which are off-topic. 

Seriously, there are some very, very smart people who do nothing all day but think about this sort of thing. RFCs must be peer approved before they are released as proposed. If nobody has any real objections, they are promoted to RFCs. The whole world has these under a microscope from the very inception of the idea, through, and after the release of the RFCs. If there really was a flaw in anycast, it would have been discovered, and solutions proposed, years ago. There are multiple RFCs for anycast: RFC 1546, Host Anycasting Service (November 1993), RFC 4786, Operation of Anycast Services (December 2006), and RFC 7094 , Architectural Considerations of IP Anycast (January 2014). These RFCs will explain how Anycast works. 

Note: this should really only be a temporary situation, and you should strive to resolve the conflict. This is not something you want to maintain as a long term solution. Another possible solution is to create VLANs on the switches just for the RANCID server connections, and you can set up different IP addresses for the switches on the server VLANs. This will not affect the switches and the existing LAN addressing, it just adds new addressing specifically for the server connections. 

Each interface, including logical interfaces, e.g. subinterfaces, is a separate interface, and it is configured independently. Normally, with subinterfaces for a LAN, you will use 802.1Q encapsulation, and that places each interface in a different VLAN. The physical interface will be in its own VLAN. VLANs can have completely different addresses and masks, independent of any other interface configuration.. If this is a WAN interface with something like frame relay, each interface, or subinterface, will have its own DLCI, and those logical links will each have their own IP addresses and masks, independent of any other interface configuration. So, yes, you can configure the physical interface with a different address mask, as long as it doesn't overlap with any already configured network. 

Since I don't understand your ultimate plan, I will give you a couple of other options. What Ron Trunk is giving you is what you should do if you route between the VLANs on the firewall. You will somehow need to let the router know what routes are behind the firewall. You can either use static routes (doesn't scale) or a routing protocol to tell the router what routes are behind the core switches. You could run OSPF on the the firewall, and the router, and you could inject a default route into OSPF on the router. If you have layer-3 core switches, and you want to route between the VLANs on the core switches (may be better than on the firewall or the router), you should enable routing on the layer-3 switches, then set up routed links, not trunks, between the core switches and the firewall. The firewall and the router will then need to know what networks are behind the core switches. You can either use static routes (doesn't scale) or a routing protocol to tell the firewall and router what routes are behind the core switches. You could run OSPF on the core switches, the firewall, and the router, and you could inject a default route into OSPF on the router. Your third option is to route between the VLANs on the router. If you route between the VLANs on the router (probably the least attractive option), you will need to set up the firewall as a transparent firewall so that the VLANs can pass through from the core switches to the router. You would then need to set up the VLANs and addresses on the router in a similar way (subinterfaces) that Ron told you to do for the firewall. 

A multicast group is a destination IP address on an IP packet. The destination IP address is determined by the sender, and modifying an IP address on a packet is called NAT (Network Address Translation). Cisco switches cannot do NAT, only the routers can. Also, NAT does not duplicate packets, it only modifies existing packets. The point of multicast is that one packet is sent to multiple devices on a layer-2 LAN that listen to the same multicast group. If you have three devices that listen to three different multicast groups, your multicast source needs to send a packet to each multicast group. You do not solve this problem with network devices, but with the multicast source or receivers. 

Some LAN protocols, on some media, are half duplex. That means that only one host on a LAN can send a frame at any given time. The classic example of this is the original ethernet, but the modern example is Wi-Fi. The original ethernet ran on coax, and it used CSMA/CD (Carrier Sense Multiple Access with Collision Detection) to detect collisions where two hosts were sending at the same time, and it would then send a jamming signal because the data were corrupt. Each host would back off a random time and try to resend, but hosts first listened to the medium to see if any other host was sending. Today, Wi-Fi uses a shared medium: the airwaves. Only one host at a time can send. Wi-Fi uses CSMA/CA (Carrier Sense Multiple Access with Collision Avoidance) to try to avoid collisions. In human terms, each frame used on the medium is fairly small, and it doesn't stay on the medium very long, so by taking turns and sharing the medium, the hosts appear, to us slow humans, to simultaneously using the medium. 

I suppose it depends on what you mean by similar trie structure. Both IPv4 and IPv6 use a 256-way trie, and the data are stored in separate tables. In fact, the separate data structure for the MAC header rewrite information are nearly identical, except for minor things like the ethertype, since MAC headers don't care much about the upper-layer protocols. 

Broadcasts will not cross a layer-3 boundary (router). If the switches are connected to the router in separate subnets, the broadcast will be limited to a single switch. If the switches are bridged at layer-2, the broadcast will be propagated to any switch in the bridge group. Basically, if traffic from one switch to the other must be routed (different subnets), broadcasts will be limited to a single switch. If the switches only connect to the router at layer-3, broadcasts will be limited to a single switch. If the switches are connected to the router in a bridge group, the router acts like another layer-2 device for any traffic between the switches, and will pass layer-2 traffic (like broadcasts) between the switches. If the switches are connected together, layer-2 traffic will pass from one switch to another switch. You need to define the layer-2/layer-3 boundaries in order to properly answer this question. Once you do that, you can tell where a broadcast will travel since it will not cross such a boundary. 

NAT is used to translate network addresses, either source, destination, or both. IP and NAT do not know anything about public or private addresses, which were arbitrarily assigned. There is nothing inherent in IP that defines public or private addresses. Simply put, the ISPs have agreed to not forward traffic based on some address ranges, but it has nothing to do with IP or NAT. It is entirely possible to use NAT to translate Private-to-Private, Private-to-Public, Public-to-Private, or Public-to-Public addresses. Having said that, NAT should be avoided if at all possible. Since private addressing cannot be used on the public Internet, that would be a scenario where you would want to use NAT. It is entirely possible that someone will use NAT to translate any of the other scenarios, but there should be a good reason to do it because NAT breaks the end-to-end IP paradigm.