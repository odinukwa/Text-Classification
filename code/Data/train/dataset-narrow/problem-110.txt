As you can see, each one of the three RFC1918 ranges cuts out a private block from one of the old "classful" network ranges. (Class A, Class B, and Class C in this case.) To quote Dumbledore, "From this point forth, we shall be leaving the firm foundation of fact and journeying together through the murky marshes of memory into thickets of wildest guesswork." The IANA had been assigning addresses for many years before the inception of RFC 1918 (February 1996). (Actually the private ranges were first put forth in RFC 1597 in March 1994.) For example, if you conduct a lookup, you can see that Level 3 had this block assigned on 1992-12-01. Therefore it can be assumed that the authors of RFC1918 had to work with the IANA/Jon Postel to find available ranges, giving us the private ranges listed above. But again, unless someone directly involved with the process* speaks up, this may remain guesswork. *Or just someone with better Google-foo than myself. I was unable to find a good primary source for this information. 

How do you configure HSRP on a Nexus 7000 series switch? I know in IOS the commands are in the interface configuration, for example: 

The tunnel source interface needs to have VRF forwarding enabled You need under the tunnel, to instruct the tunnel to use the specified VRF 

To answer this question, we have to define the term "domain". Easily spoken, the Internet is a network of networks. In BGP terminology, there are many Autonomous Systems (AS) on the Internet, each of them being a network (or domain). One company for example may have a very large network, but is represented by a single AS, hence is a single "node" in BGP. The term interdomain routing describes the process of routing prefixes between Autonomous Systems, whereis intradomain routing refers to routing inside a single AS. Im not sure however what you mean with your last sentence. When two paths to the same destination have the same cost (that is in most basic BGP the length of the AS path, hence the number of ASs the route has crossed). For detailed discussion how BGP chooses paths look for example at this Cisco document. Update As turned out in the comments I might have mis-interpreted the OPs question. The question actually is how load-balancing is performed and where are the differences in load-balancing in common interdomain routing protocols and intradomain routing protocols. Interdomain Routing BGP, being the de-facto standard for interdomain routing, will not perform load-balancing by default. It can however be configured to do so. Two main options exist here: 

Next, with the IP SLA tracking in place, I installed the CISCO-RTTMON-MIB on my monitoring server, and walked the value of rttMonCtrlOperTimeoutOccurred (1.3.6.1.4.1.9.9.42.1.2.9.1.6) for it's True/False output. The key item to note is that since we are polling whether a timeout occurred or not, that False means that the destination is reachable, and True means that it is not reachable and a timeout has occurred. 

This would take care of only allowing "known" PCs into the VPN, as well as allowing you to explicitly blacklist PCs. I'm sure there are other ways to do this as well, and this may not even be the best way by far. The main thrust is, once you've paid for the Anyconnect Premium licenses and have deployed Cisco Secure Desktop, you're only restrained by your ingenuity with regards to what kind of "better mouse trap" you build. See the CSD Admin Guide for more information on all of it's bells and whistles. 

When a new path to an NSSA External (LSA type 7) route is brought up in the topology below, the existing path's cost to that route increments to exactly match the new path's cost. Therefore, both paths are entered into the routing table, which is NOT the desired behavior as it causes asymmetric routing. The asymmetrical traffic fails the inspection process on the ASA and we see the traffic being dropped. I can increment the cost manually on an interface in the new path, and expected routing behavior is restored. However, I don't understand WHY a preferable/lower cost path suddenly has it's metric increased when a separate path opens up... Consider the following topology. 

After all, its for CCNA-level study. So the short answer is: No you cannot. You could use GNS3 or Cisco VIRL to experiment with that topic. 

The page will then provide you with IOS versions with this specific attributes that support your MIB. 

Find out the user's MAC address. There are multiple ways to do that, but possibly you have an IP Address Management (IPAM) system or you can find it out using the IP address. On the switch or router being the layer 3 gateway of the user's VLAN, try to ping the end PC. It does not matter if it answers or not, the device should however ARP for the MAC address of the user's device, which you can find out using , which should give you the MAC address. The next step is to track the path of this MAC address using the layer 2 forwarding information of each switch. Use which will give you the entry in the MAC address table including the outgoing interface of this entry. Find out which switch is connected to this port for example using CDP. 

I don't believe there is a way to directly poll the results of the via SNMP, but you can certainly poll for the IP SLA results and calculate it yourself. Using the CISCO-RTTMON-MIB (1.3.6.1.4.1.9.9.42), you can check the timeout value of your reachability checks, take the true/false value it returns and do the in whatever scripting language you're using to poll via SNMP. 

When I am configuring an interface in Nexus OS, the standby command isn't there. My output of "?-ing" around in the interface config mode doesn't give anything that looks likely... What am I missing? 

The short answer is, your proposed additional fiber in the diagram will not gain you any real advantage for VLAN 3. All traffic from Packaging or Fiberglass, destined to the server in Shipping on VLAN 3, will still traverse the Core. (Presuming that you have already properly tuned your Spanning Tree settings to make the Core switch stack the root bridge.) This is due to the Dell 5500 series switches only supporting regular 802.1D Spanning Tree and 802.1w Rapid Spanning Tree. What this means, is that in your entire switched domain in the diagram, there is only one Spanning Tree for all VLANs. 

Proceeding from the assumption that you are talking about Cisco gear, it is basically as you said, they complete each other. Neither an access-list nor an access-group on its own will have any effect. In fact, you configure an access-list first, which contains the rules permitting or denying the traffic. You can match on things like source and destination address, layer 4 protocol and layer 4 port information (source and destination port as applicable). You however cannot specify where this policy should be applied. This is where the access-group comes in. Using the access-group, you can apply a previously defined access-list to an interface and further configure the direction of traffic that should be filtered. Consider the following example: 

I am tasked to do conditonally advertise a default route using RIP only if a specific IP address is ICMP reachable. (Yes, CCIE study, not a real network design). My idea was to use the track object matching feature to accomplish this task: 

Sure, this is possible, depending on the router model and software. OSPFv2 is for IPv4 only and OSPFv3 for both IPv4 and IPv6. There are however differences in the implementation of both protocols (as these are two completely independent protocols), depending on the vendor and sometimes even on the model. Consider Cisco for example: In regular IOS and IOS-XE, you can run both protocols at the same time, even for IPv4. Note however, when running both OSPFv2 and OSPFv3 for IPv4, routes learned via OSPFv2 will always take precedence, ignoring "normal" OSPF route selection rules, which are only evaluated within a process. On IOS-XR, for example, OSPFv3 is not even supported for AF IPv4, only for IPv6. 

Gathering of information with , , etc. Changing configuration on a devices via . Alerting via SNMP Traps, which will give you similar information to your Syslog events. 

Mixing versions like this, depending on which version of CME and CUE you are using, will work in some instances. In your particular case however, it appears that the answer is no. 

You can't have the same IP range within another portion of your network unless you use Network Address Translation (NAT) to mask the addresses of both sides. This is a less than ideal solution however. Within your sphere of administrative control, at all costs keep addressing unique. That way you don't have to use NAT except at your internet edge. You could potentially solve this with a VPN between the endpoints as well. Basically, I could solutioneer workarounds all day long, but the bottom line is this: Without some other mechanism, and relying solely on routing, how would the routers in the middle (or the hosts on either end really) know WHICH 192.168.1.0/24 you were wanting to reach. 

Notes: This testing was done with the following configuration, so your milage might vary with a different terminal emulator, different router, etc: 

I'm not a POE expert but I don't think this is possible. A PoE switch or router negotiates the power with the device on the other end of the cable. To connect two cameras to the same cable, you would need some kind of switch, especially if you still need IP connectivity, which would be this device in the PoE switch's perspective. The cheapest solution might be another switch and two PoE injectors. 

In my lab network I have a Juniper MX 80 configured as MPLS router. On one site there is a customer connected (simulated by a single PC) and on the other side is an MPLS network. I use tcpreplay to generate traffic load. The PCAP file I use has been prepared as follows: 

The packets do actually arrive at the router. I am sending ~140Mbit/s traffic stream, and SMTP counters show the following (read using SNMP): 

To extend the other two answers: The issue here is IGP routing inside the AS64500. The actual question is, why does R5 send the traffic to R1 instead of R2? R5 only has one BGP route, which is the one without prepending. This is because R1 learns both the eBGP routes including the prepending and the iBGP route from R2 and prefers the route from R2 due to the shorter AS-Path (assuming, no weight or local-pref is set). Hence R1 will only advertise its best path to its neighbours, R5 ends up with only knowing the path without advertising. The actual paths depends on the IGP routing. The BGP routing update received by R5 contains the next-hop field, which is most likely either set to R4's address on the R2-R4 link or to one of R2's addresses (next-hop-self configured on R2). This next-hop is then resolved using the configured IGP, which dictates the actual routing of the packet. To answer your second question (you hardly can influence IGP path decisions in another AS via your BGP configuration), have a look at R5, check which next-hop is advertised on the BGP routing update and have a look in the IGP-resolution of this next-hop. This should give you a fairly good idea why the traffic is routed the way it currently is. If you can modify the BGP config of the ISP, you could also use any other "BGPish" way to accomplish that. There are many ways, including local-preference.