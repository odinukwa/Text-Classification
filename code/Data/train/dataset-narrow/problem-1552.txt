Whether you go for NFS or iSCSI, you should budget for dedicated networking equipment for storage. Don't run your storage on the same network as your servers or PCs normally connect to. Buy a couple of 1Gb switches (10gb if you can afford it). Make sure you have two NICs per VMware host just for storage. Get Storage hardware with dual NICs. Make sure your storage and hosts are connected to both switches. If you have anything else that needs to talk to your storage, add NICs for that purpose. That way you are not contending I am sure that RAID 5 will be fine. I'm sure you can find all the above for less than $5k (not including your VMware licensing). 

Does anyone have any thoughts on these options, or any other way of achieving this? Sharepoint 2007 is running on Windows 2003 with IIS6. We don't currently have plans/budget to upgrade to Sharepoint 2010. 

It depends on how the alerts will be handled. You want someone to notice when a threshold event occurs. If they are generating emails that will not be ignored, or you know that someone is regularly checking the Nagios trends, then it is probably ok to just use the standard Nagios behaviour. If you don't think that will get anyone's attention, then you would want the service status to be "sticky". I'm not aware of any Nagios checks that have this behaviour, but I'd be interested to know about them too. 

xnet.exe available from a few locations (e.g. $URL$ can list all the services running - you can then use something else to search the output. Handlily xnet also reports the short name of a service, which can be used to manage it. 

Currently using Groundworks Open Source Community Edition 5.3 - although support has fallen by the wayside on that version now. May upgrade to GWOS 6 or perhaps jump ship to Zabbix or similar Open Source system. I tend to favour those based on Nagios, but wouldn't go for vanilla Nagios due to the nightmare of managing all those interdependent config files. Groundworks' WMI Monitoring plugins for NRPE work pretty well. Nagios triggers a WMI service check on a windows box using NRPE, which then does the WMI querying of your other windows boxes. This gets around the requirement to have NRPE agents on your windows boxes, and also the nightmare of trying to get Nagios running on *Nix to authenticate on Windows. Another nice option is to set up SNMP on your windows boxes as part of your base build. There are some options out there to expose WMI checks via SNMP (SNMPTools) (although you need to install this on each Windows box, making it not agentless). There are a number of Windows tools which can monitor Windows logs and send an SNMP trap when certain events occur. 

in place of what you would normally see. For Linux, the ping command uses different flags. sets the packet size, and sets Do Not Fragment. So the above command would be: 

I'll assume here that you are upgrading because you have reached the 50 Windows Servers and/or 500 Client Windows PCs limits in SCE, because I don't see any other clear business case for switching. My experience with SCCM didn't see performance hits from installing the SCCM clients, or any specific conflicts with other software we run - but if you are running mission critical systems here, it would be wise to do some testing or get some (paid for) advice from your supplier. What may be of interest depending on what you are running, is that there are some features of SCCM agent which require a reboot of the client before they will function correctly, or require .NET which will require a reboot. If you can't afford downtime to FULLY install the client and its prerequisites, then you may not get the value you were hoping for. One such feature is the Desired Configuration Manager, which allows you to define "baseline" configurations which all your computers should meet, and then report on systems that don't meet that. It also allows you to push registry and other configuration changes out to your systems - if memory serves correctly, it was that part of the client that wasn't clear cut. In terms of pushing windows updates and deploying software, SCCM just wraps around WSUS and other deployment mechanisms. If that is all you are looking for, you may find WSUS or deployment kits are all you need. For example, SCCM helps you deploy Windows to servers and PCs, but you can achieve it all with other tools and a little more effort. Actually, the learning curve for SCCM is quite steep, so you may spend less time figuring out unattended installation scripts etc. Basically, my advice is to look at what you are expecting to get out of SCCM before you buy. If you only need a small number of its many features, spend some time looking at the alternatives for those features. 

Use traceroute (tracert in windows) against Google. This effectively gives you the latency to each hop between you and Google, and will give you an idea if it is your router, or further upstream. 

If you have any links in your web app that are hard coded to port 85, obviously those will break. However, if it is well written using relative URLs, and where necessary using a config script to deal with the hostname:port part of the URL (which you can update), then you should be fine. If you are running in a development environment, you should change the port number in IIS and check to see what happens. If you are using a different port because you developed on the production server then your job will be a bit more difficult, with a higher risk of end users seeing issues. If they do, then you probably made a good case for a development environment for future development :-) 

I have a number of remote sites connecting back to head office via Cisco ASA 5505s and Cisco PIX 506es. At head office we have an old Cisco 3000 VPN Concentrator, and a new Cisco ASA 5510. The remote sites use Easy VPN to connect (so they show up as Remote Access sessions, not Lan2Lan). I am in the process of migrating the remote devices to connect to the new 5510. I can have multiple VPN Servers in the config for failover, so I am adding the VPN Concentrator there. However, at the head office end, we currently have static routes set up to direct traffic for our remote subnets to either the 5510 or VPN Concentrator. This means that in a failover situation, manual intervention would be required to update the routes at head office. We have Dell PowerConnect 6248s as core switches at head office - all the routing is configured on there at present. I'd like to get some kind of failover routing in place so if I take the ASA 5510 down for any reason, the connections still work. The endpoints can handle this failover, but the routing is currently all static. How can I achieve this? 

Currently this outputs the MailboxGUID as a string type GUID (e.g. {21EC2020-3AEA-1069-A2DD-08002B30309D}). I want to look up users in AD by this, but AD stores them in octetBytes format. I have found some powershell functions which will do the conversion but only when the curly braces are removed. The Guid.ToString method should supply this, but I can't get it to work in the above. However, if I could figure out how to do that, the Guid.ToByteArray method might get me even closer. Has anyone cracked this? 

These day's they aren't so fashionable, but it used to be normal to use Terminals to access servers. The user spaces may be kept separate in a number of ways, including things that to all extents and purposes are similar to virtualisation, for example jails. You will need some sort of hardware to do this, ranging from cut down computers that have just enough functionality to be clients for Terminal Services or VDI. Back in 2005, at the TechSoup conference in Seattle, I saw a number of vendors touting hardware that would enable multiple access to a single Windows computer. Unfortunately I don't recall any of the brands, but I would expect that they morphed into VDI solution providers - vendors providing those services might have some entry level options that meet your requrements. 

You have probably detached your Sharepoint server from the config database, and effectively from your farm. So what I would do is this: 

Active Directory user objects include a number of fields that can be considered an identifier. The following lists some of these with their label in ADUC and their attribute name: 

I was contacted by a copyright troll after a site I had hosted used a copyrighted image. Annoyingly the site was no longer active, only visible through the holding URL I had set up during the initial development of the site some years before. Google was crawling that site allowing discovery by the troller, and then they got my contact details from WHOIS. They had no legal recourse but they harrassed me for months. I will never ever put my own details in any WHOIS record ever again. Lessons also learnt about holding URLs and disclaimers on 404 pages... I can't say what is the value for having a private registration, but there is definitely considerable value in not having your own personal contact information available via WHOIS. Also, everywhere I have ever worked, and personally, I have received through the mail dodgy "renewal" notices that obtained address details through WHOIS records for domains we own. It is definitely abused for both spam and snail junk mail. It would be pretty interesting to do some kind of audit using honey-trap addresses for both email and physical addresses in WHOIS. 

A traditional DMZ would have a firewall between the DMZ and the internet, and one between the DMZ and the inside network. You can do this all on an ASA, but it depends on the model and licensing. 

I'm looking to do this too. See Cisco Forums for a discussion how how someone else got this working (I'm guess you saw this too). Editing the DefaultRAGroup seems a bit nasty. There is some discussion that AnyConnect will work in future because of a Cisco Android project (Cius), but the licensing costs for AnyConnect are a bit high compared to IPSEC. I'm holding out for a IPSEC/L2TP or pure IPSEC solution.