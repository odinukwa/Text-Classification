You should not bridge links with different network addresses, this can cause problems. Bridging is the same thing as connecting the links on the same VLAN with a switch. Layer-2 traffic is transparently passed through the bridge. If you were attacked through one of the links, you had those links anyway. Your attack could come through any link attached to your system. 

do not match the actual network addresses, which range from to . BGP will not advertise networks which do not exactly match what is in the routing table unless you you use the command. Network statements in BGP will not make up routes that don't already exist. 

The currently used authentication method for PPP is CHAP, and it doesn't send the actual password across the wire. Instead, it sends a challenge, and the respondent will hash the challenge with the password and return the result. The challenge/response happens during the setup of the link, and it will also happen randomly during the life of the connection. This happens at the datalink layer, and it is transparent to the layer-3 and above protocols. 

It really depends on which side of the ACL from which the ping is originated. If you have an inbound ACL on the LAN ports, pings originating on the LAN won't even enter the router, but the pings from the router are already in the router so they never cross or are evaluated by the ACL. There are standard and extended ACLs, and ACLs are applied to interfaces in one direction (either inbound or outbound). The ACL does nothing unless traffic crosses it in the correct direction, then the traffic is evaluated against the ACL, and the traffic is either permitted or denied based on the ACL rules. Test: 

Depending on your switch models, you may be able to use COS to prioritize different traffic. Remember that VLAN tags are only used on trunk links, which are normally between switches, not to end-devices. When using QoS, you usually give large file transfers the lowest priority. Typically, you want real-time traffic, such as VoIP, to have the highest priority, then network control protocols, e.g. routing protocols or VoIP control, to have the next highest priority, then normal traffic, and large file transfers the lowest priority. Layer-2 QoS is usually pretty limited (switches have tiny buffers that are easily overrun, and most business switches will switch at wirespeed). Your biggest QoS bang for the buck is shaping, queuing, and policing on routers, but that only happens when sending traffic from one network to another network. The first thing you want to look at in you switched layer-2 network is the bandwidth oversubscription ratio. If you have a 1 Gbps traffic flow from one device to another on the same switch, then you have no problem, but if you add a second 1 Gbps flow to the same target device, then you need a connection larger than 1 Gbps to the target device, otherwise you will drop half your traffic, regardless of QoS (QoS cannot create bandwidth, only manage fairness). Between switches, you want to have faster connections than the aggregate of the access connections, but it can get very expensive to have a 1:1 access to distribution bandwidth ratio. 

You seem to be confusing things. DHCP is for layer-3 addressing, but HDLC is a layer-2 protocol. How each vendor assigns addresses is vendor-specific. For example, Cisco HDLC has two addresses: and for broadcast and unicast, respectively. The Cisco broadcast address only means that the layer-3 protocol has a broadcast address. 

Layers are independent of each other, and layer-2 headers are very simple and are not usually concerned with anything above layer-2 (PPP is an exception since it has a bridge to layer-3) since the point of layer-2 is to switch frames as quickly as possible. Some switches can use COS on trunk links, and trunks add 802.1Q tags into the existing frame header, including a three-bit COS value, which can be used for prioritizing frames, and this may, or may not, be employed with VoIP (depending on the switches or layer-2 protocol involved), but it really doesn't add another header. Your second question depends on several things, not the least of which is that there is no single VoIP protocol, and some VoIP protocols are proprietary. Your link only gives the example for one VoIP encoding method (G.729). It also explains that you could have GRE, or not, and, since VoIP is normally unicast traffic, GRE is probably unnecessary. You don't provide enough information to accurately answer your second question, and, if you are using a proprietary VoIP protocol, it may not be able to be answered with certainty. 

Think about this very carefully. Inside source means that you want to translate the source address from traffic originating inside your network. This is the typical "home networking" arrangement which allows you to use private addresses on the public Internet. Of course, this is not the only use for this version. Inside destination means that you want traffic originating from an outside address to a particular destination transport protocol and port to go to a particular inside address. This is what home users do to allow something like a web server with a private address to be accessed from the public Internet. Of course, this is not the only use for this version. Outside source translates traffic originating from outside to look like it originated from an inside address. It can useful in cases where companies with overlapping IP address ranges merge and need to start connecting the networks. You can translate the source addresses of traffic originating from the outside, which would normally have outside source addresses which conflict with inside addresses, to source addresses addresses in an available inside address range. Outside destination doesn't really make a lot of sense since it is the inverse of port forwarding. This would limit any traffic originating from the inside, destined to a particular outside transport protocol and port, to a single outside address. 

The command doesn't change the feasibility condition; it changes the minimum metric allowed. Any paths must still meet the feasibility condition before they are considered for balancing with the command. Your reported distance through is , and only one of your paths meets the feasibility condition. The metrics for paths through and are greater than the FD, so they are not feasible successors. In other words, a path must have a feasible successor in order for EIGRP to consider sending traffic over that path. See the portion I have highlighted in the document below. How Does Unequal Cost Path Load Balancing (Variance) Work in IGRP and EIGRP? 

Since you are simply using the foreign network to get access to the public Internet, you can get an IP address and subnet for your router from the foreign network, but you need to know beforehand what the address and subnet are. You can run NAT on your router to assign your inside subnets as any private address subnets which do not belong to the foreign network's subnet to which your NAT router is connected. I strongly urge you to also run a firewall, either on your router, or as a separate box. This will allow you to send a turnkey network, but only if you can be assigned your outside NAT address and subnet prior to shipping the equipment. If you happen to use a subnet which falls in the subnet to which your NAT router is attached, you will have problems. That's why you want to know this up front. 

By default, EIGRP will not use more than 50% the bandwidth configured on the interface. It could use more than 50% of the actual interface bandwidth if the bandwidth command is greater than actual the interface bandwidth. EIGRP could use up to the default 50% configured interface bandwidth if the interface is relatively slow slow, or the configured interface bandwidth is lower than the actual interface bandwidth. Depending on the interface speed, if the configured interface bandwidth accurately reflects the actual interface bandwidth, the EIGRP bandwidth could reach the default 50% if there are a lot of network changes which require many updates, such as flapping links, but it would need to be an extreme circumstance in modern networks. This was important in the past with slow WAN links, but the reality is that EIGRP uses a relatively small amount of the bandwidth available on modern network interfaces. It's probably something you won't need to deal with outside lab scenarios or exams. 

Just like with IPv4, you subtract the mask length from the size of the address (32 for IPv4, and 128 for IPv6) to get the number of host bits. Take two to the power of the number of host bits, and that is how many host addresses you have. With IPv4, you must subtract two from that number (except for and networks) because you cannot use the network or broadcast addresses. With IPv6, you can actually use any address in the hosts addresses. The standard IPv6 network size is , so you will have host bits, and that is host addresses in a standard 64-bit IPv6 network. 

This network is designed for local links. You will need to take steps to make sure that OSPF doesn't include these addresses in what it advertises to other routers. Also, "The 169.254/16 address prefix MUST NOT be subnetted". This means that only one interface in this range per router since the router will complain that this network is already in use when you try to add it to another interface. See RFC 3927, Dynamic Configuration of IPv4 Link-Local Addresses 

You have a speed mismatch when using fiber. You are trying to connect 1 Gb to 10 Gb and that won't work. You can get the C3KX-NM-10G for your Cisco 3560. It can have either four 1 Gb SFPs (copper or fiber), or two 10 Gb SFPs. This will allow you to connect the Cisco and Dell in the way you are attempting. FYI: Be aware the the Cisco will default to use PVST for STP. I don't know if the Dell can do that, but you should probably change that on the Cisco before connecting to non-Cisco equipment. 

You are confusing me with the "default gateway" thing. The source address is the address on the device from which you are pinging, not the gateway for that subnet. Suppose I have two addresses, 10.11.12.13 and 172.16.17.18 on my computer. I want to ping on the respective interfaces (logical or physical). I ping from the source (-S) with each of the addresses on my computer, not the gateways for those addresses. For instance, I have a VPN tunnel and a physical interface on one of my computers, each with IP addresses. The VPN doesn't allow me to ping outside the network on the other end of the tunnel. Assume they are addressed like this: Tunnel=, Ethernet=. 

A router, receiving a packet on an interface will look at the destination address of the packet, and it will look in its routing table to see if it knows how to forward the packet toward its destination. If the router doesn't find any sort of match in its routing table, it will discard the packet. If the router finds a match, even if it is only a default route, it will forward the packet out the new interface toward its destination. The interface towards the packet destination can be connected to another router, and the new router will repeat what the first router did. This router lookup and forward goes on until the packet gets to the network where the destination host is. 

Cisco recommendations are actually pretty close to what you have, although you do have VLAN 1 going to all the switches. The current best practices allow multiple VLANs on an access switch, but no VLAN on an access switch should be trunked to another access switch. Also access switches should not be connected to each other, and no access interfaces should be allowed on the distribution switch. This will almost completely eliminate any spanning tree problems. In fact, the best practices are moving toward running layer-3 connections, instead of trunks, to the access switches, and that will completely eliminate any spanning tree problems. In either case, you leave spanning tree enabled as a failsafe. 

You should go to the source document, RFC 793, TRANSMISSION CONTROL PROTOCOL. Section 3.8, Interfaces describes this: 

That depends. Are you using a single SSID and comfortable with the WAP management address on the same network as the wireless users? If so, an access interface should work. If you want to offer multiple SSIDs, or you want to manage the WAP at an address on a different network, then you need to connect the WAP to a trunk interface. 

I don't believe there is any facility for logging details of each binding. You can log when high or low thresholds are met, and you can configure the SNMP server to send traps on some events, but I don't know of any way to log details of each binding. This is where you would use central, full-featured DHCP server(s), instead of IOS DHCP servers. The switches could then simply use helper address(es) pointing to the central DHCP server(s) on each VLAN, so you interface configurations could be identical for this. You would just need to add a scope for each VLAN on the DHCP server(s). 

The slowest link in a path will dictate the transfer speed, but a raw bitrate is only one part of it. You also need to consider the packet size and protocol overhead. The smaller the packets, the more packets are transferred, the more protocol overhead eats up bandwidth. 

That depends on what type of packets you are looking at, and what you want to glean from the packets. For example, IPv4 and IPv6 have different packet headers. IPv4 packet header: 

You need to take it one router at a time, and make sure that you are advertising the routes you think you should between the two routers on a link. 

You connect your hosts, including the DHCP server to untagged interfaces that are assigned to one of the VLANs. Set up DHCP scopes for all your networks on the DHCP server, and configure DHCP relay (Cisco ) on the VLAN interfaces in the router. Some servers can be configured to understand VLANs tags and use a trunk. Unfortunately, server configurations are off-topic here. 

First, routers do not forward broadcasts, but assume it was traffic destined for a different, unicast address. Routers route traffic between networks, not from a network back to the same network. Assume Router A has four interfaces, one for each of the networks. Any traffic from one of the networks to any of the other three networks will enter Router A from its source network. Router A will then forward the traffic to the appropriate interface for the destination network. That is the end of the story. No other routers need be involved because Router A can reach all four networks. Now, assume Router A connects to only two of the networks: and . Router A shares with Router Z, which is also connected to . If traffic needs to get from to , the host will know that the destination is on a different network, and it will send the packets to its gateway (Router A). Router A will need to know where to forward traffic destined to a network to which it is not directly connected, otherwise it will simply drop traffic to any network that it does not know. Either you have manually configured a static roue toward Router Z for the network, or Router A and Router Z share a common routing protocol, and Router Z has told Router A that it knows how to get to that network. Router A will forward the packets sourced from and destined to to Router Z. Router Z will know it is directly connected to the destination network, and it will forward the packets to the interface to which the destination network is connected. 

My example will translate source addresses in the range which come in the interface and leave through the interface. The address on the interface will be the one used for the above traffic leaving that interface. 

You should get familiar with the Cisco documentation, and how to search for it. For example, OSPF Design Guide, Virtual Links: 

Intra-Area (O) Inter-Area (O IA) External Type 1 (E1) External Type 2 (E2) NSSA Type 1 (N1) NSSA Type 2 (N2) 

Edit: Thanks to richarb for providing the link to Clarifications and Extensions for the Bootstrap Protocol: 

A host that needs to send something to another host on the LAN needs to resolve the layer-3 (e.g. IP) address to the layer-2 (e.g. ethernet) address. That is what ARP (Address Resolution Protocol) does. A host will maintain an ARP table in which it can look up a layer-3 address to resolve to the corresponding layer-2 address. If the layer-3 address is not in the ARP table, then the host broadcasts an ARP request to get the necessary information. 

The main thing to think about is traffic competing for the bandwidth resources of a single Interface. This may be less important for a end-user PC, but it could be very important for a server, firewall, or router. It is less likely, but not unheard of, for an end-user PC to saturate a single network interface. More likely is that servers, firewall, routers, etc., will saturate a single network interface. For instance, it used to be common practice to use a router-on-a-stick to route between subnets, but that limited the bandwidth on each of the VLANs in the trunk. The modern approach is to move the routing down to a layer-3 switch which can have multiple layer-2 inputs, spreading the load to individual VLAN interfaces or multiple trunk ports. NICs are relatively inexpensive so it is a cheap solution to use different NICs for different things on PCs and servers, albeit more expensive on fixed devices like firewalls and routers.