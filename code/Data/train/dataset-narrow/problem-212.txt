While this is quite possible as JFL has pointed out, your network design lacks the ability to (easily) enable communication between VLANs/subnets through a router. The router would be connected to both VLANs but with the same network address on both sides, it isn't able to distinguish between them and route properly. Additionally, the PCs/clients wouldn't have a way to distinguish their local partner from their remote one. 

On the switch, configure a new WAN VLAN on port Gi1/1 untagged and port Gi1/2 tagged (as VLAN trunk). On the firewall, add a VLAN subinterface to the NIC with the same VLAN ID as on the switch. Set up NAT between LAN and WAN VLANs. 

There are various tools around for relaying UDP packets - the idea is to send them to the relay first and then resend them to as many IP addresses/ports as you like. 

In most respects, yes. A bridge may be just a switch, but it may also be more: there are (were) bridges that could connect different MAC-oriented layer 2 protocols like Ethernet, Wi-Fi, Token Ring, ARCNET, ... These you wouldn't call switches since switches only support a single layer 2 protocol (but may support several layer 1 media like 1000BASE-T, 1000BASE-SX, 100BASE-TX, ...). With the ubiquity of Ethernet, real bridges have all but vanished - except for Wi-Fi WAPs, thx Ron! 

A NAT router doesn't know when to remove a UDP mapping - it guesses. The router simply ages (or times) out the entry when it hasn't been using for a period of time (a few minutes usually). With TCP, there's also a similar aging/timeout to make sure that forgotten or lost sessions don't pile up but it's much longer. UDP or TCP aging is a trade-off between router resources (fast aging) and compatibility with slow low-bandwidth sessions (slow aging). Sometimes the default settings require tweaking for your workload. 

PS: All shared electric media are extremely obsolete and only of historical interest. Slightly more modern variants use separate transmit and receive channels and all seriously modern variants additionally use switching with full-duplex transmission without any collision domain. 

Make sure there's a notable performance difference between jumbos and standard frames - without it, there's little reason to dive in. Hardware offloading tends to make jumbos obsolete unless you need the final 4% throughput. You should consider your latency and QoS requirements. Jumbos increase latency and may hurt QoS. Check your equipment for the jumbo size where it's still reliable. Several devices support jumbos but behave rather poorly with them. Buffers may be too small. 

CSMA/CD is (was) a trade-off between material cost, required logic and performance. When logic became cheaper Ethernet evolved away. 

Additionally for 1) entries allow for much easier structuring. Suppose you want to permit a single user/IP SSH access to another subnet while denying all other SSH: 

Question A: with non-conflicting adresses/networks there will be no problem Question B: you can set up all routes through the tunnel but on site A you need to make sure that the already present 172.16.0.1/30 has a lower metric/higher priority than the 172.16.0.0/12 to site B. That means that you can't reach B's 172.16.0.1 from site A. Solving this would involve destination NAT which is rather messy. Making A's 172.16.0.1/30 reachable from site B will also be tricky and messy. Do really need it? Is renumbering an option? 

A logical switch is a switch function implemented in software-defined networking. This isn't necessarily connected to VXLAN tunneling. Whether a logical switch is virtual or not is a matter of perspective. A virtual switch is a (somewhat) more common L2 switch that's integrated in a hypervisor (or otherwise non-physical). VLAN is no virtual switching concept but layer 2 virtualization (usually 802.1Q). VXLAN is a layer-2-over-layer-3 tunneling protocol with inherent subtunnels. It not only relates to virtual or logical switches and is roughly a combination or L2 tunneling and VLANs. There are many differences in virtual switches, e.g. VMware and Hyper-V vSwitches behave somewhat differently. One of the variant families is distributed vSwitches. All in all, you seem to be throwing together technologies and terms for very different aspects. I think you should look at each of them and understand what they do and what they can be used for. 

A gateway is like a door leading to other subnets. In order to reach a subnet in question you need to know which door to use. On R3 you'd need: 

(Assuming you're referring to CSMA/CD) This is not correct. A host first listens to the medium (Carrier Sense) and if it is idle the host may start transmitting. During transmission it needs to monitor for a collision (Collision Detection) and if a collision is sensed it ceases data transmission and transmits a jam signal. The jam signal is only sent by those hosts whose transmissions collided. It is propagated through repeaters and repeater hubs (within the collision domain). So, when a host is connected to a switch which has a hub connected to it and there's a collision on the hub, the host doesn't receive a jam signal. Actually, it can simultaneously receive data orginating from another switch port. A switch doesn't propagate jam signals but it participates in CSMA/CD like a host with its half-duplex ports. A collision (domain) ends on a switch port in any case. All this is valid for repeaters, repeater hubs, half-duplex transmission and such, and obsolete. Gigabit Ethernet and faster speeds don't use half duplex and shared access. 

The PLC splitter is a passive optical device, so there's no way to make it split less than it was designed for (other than to replace it). As far as I know there are PLC splitters with uneven ratios though. There are also FBT splitters that are adjustable. Small split ratios are required for maximum reach or maximum uplink speed, short reach allows higher split ratios. 

You can't map (private) IP addresses to (public) IP:port combinations. The NAT router always maps IP:port to IP:port combinations. For private to public connections (dynamic source NAT), these mappings are somewhat random and change over time. The private port is chosen by the client, the public port is selected from the NAT router's pool. To enable connections from public to private - a host behind the NAT router - a public port on the router's public IP needs to be statically mapped to a private IP:port combination (destination NAT). 

The switch / NIC looks for the tag in each frame and since it's got it's special TPID value 0x8100 (where otherwise the Ethertype would be) the following two bytes are interpreted as PCP and VLAN ID values, and then the true Ethertype and the rest of the frame follows. An untagged frame coming in from a VLAN trunk port is simply interpreted as belonging to the untagged VLAN.