Because it takes decades for legacy equipment that was made in massive volume to completely go away. 

The MAC or repeater (hub) is is notified of a collision by the PHY When a MAC is informed of a collision it goes through the collision detected procedure (random backoff). When a repeater (hub) is informed of a collision it generates a "JAM signal" on all ports to ensure that the collision is detected by the MACs that sent the colliding frames and that other hosts correctly detect the line as busy. How the phy detects the collision is media type specific. For coaxial ethernet it is based on the DC voltage on the coax $URL$ The common variants of twisted pair and fiber ethernet are full duplex at an electricial level but for compatibility reasons and to allow operation in networks with repeaters (hubs) they needed to be able to operate in a half duplex mode. This is done by treating simultanious activity on the transmit and receive datapaths as a collision. Note that links running in full duplex mode do not use CSMA/CD, collisions simply can't happen there. At 10Mbps CSMA/CD was the norm. In the early days of 100Mbps CSMA/CD was still used to support hubs (repeaters) but as switches (bridges) took over and autonegotiation matured full duplex became the norm. At 1Gbps half duplex mode exists in the standards but afaict noone ever sold a hub making it kinda pointless. At higher speeds half duplex is not supported at all. CSMA/CD nowadays is a feature for compatbility with legacy equipment. 

Time spent travelling through the physical medium Time spent sitting in queues Time spent serialising and deserialising data Time spent in processing 

Not really. Yes there is certainly a correlation between ping time and distance. However there are many factors other than distance that can lead to a high ping. Congestion, crappy routing, Satellite links etc. So attempting to use ping time as a geoblocking measure is likely to have an unacceptably high false positive rate. 

There are two aspects to speed, data rate (often called bandwidth though that is confusing) and latency. Both can have an impact on the time taken to complete actions (viewing webpagages, typing characters in a remote terminal, downloading files etc). Data rate is how much traffic the connection can carry per unit of time. Latency is how long it takes a packet of data to get from one end to the other. Normally we measure latency in the form of round trip time since measuring one-way latency is tricky and usually fairly irrelevent. As a rule of thumb latency will dominate the performance for actions that only involve a small ammount of data while bandwidth will dominate the performance for actions that involve a large ammount of data. Latency can roughly speaking be divided down into processing delays, queueing delays and cable delays. Cable delays do increase with distance but the delay from the cable that forms your "internet connection" is likely to be small compared to delays further back in the network. Processing delays on some forms of DSL can be significant due to interleaving. Processing also tend to be higher on low-datarate links as often a complete packet must be received byfore it can be forwarded. The achiveable data rate depends on the Characteristics of the cable. As a cable gets longer the signal integrity (for a given signal launch power) will get worse and so the achivable data rate will go down. Some technologies (notablly modern DSL) are rate-adapative. They will tailor the charateristics of their signal to match the observed performance on the line. Other technologies use fixed modulation parameters and will start dropping large numbers of packets and then fail completely if the signal integrity is too poor. 

Filters get ugly, insertion losses, phase distortion and all manner of badness. I'm not saying it couldn't be made to work but designing the filters would be non-trivial. However there is an alternative. We can borrow an idea from the POE folks and use transformers to run the POTs like between two pairs while running the Ethernet signals within the pairs. I will admit I haven't actually tested this but I would be extremely surprised if it did not work. 

No, Dumb multiport repeaters (hubs) are not allowed in full duplex networks. Bridges (switches) queue frames for each port in an output buffer and send them out one at a time. Note that while frames cannot collide on the wire in a full duplex ethernet network they can be dropped if the buffers overflow either because of a speed change or because multiple sources are sending to the same destination. 

The problem is that your router doesn't know why the traffic is coming in slowly. Maybe your ISP is flaking out, maybe the server is slow, maybe that particular data stream just doesn't have very much traffic. You could have a script that periodically ran speed tests of course but aside from wasting bandwidth the network conditions between you and the speed test server may not be the same as those between you and the sites you actually want to visit. A possible solution to this is some form of multichannel VPN, the VPN is hosted on a reliable internet connection elsewhere. Since the multichannel VPN system controls both ends of the connection it has a far better chance of being able to intelligently balance the load. The downside of course is that there will be ongoing costs in maintaining the VPN and there may be extra latency involved. Unfortunately having not been in this situation myself I can't provide reconsiderations for particular multichannel VPN solutions. 

There are two issues to consider, latency and signal integrity. Latency is directly proportional to cable length. However, assuming we are talking about twisted pair Ethernet cables insidea a building the latency will be negligable compared to delays in equipment and in the long distance connections that make up the internet. The other issue is signal integrity, if it gets too bad then the link will start dropping significant numbers of packets. TCP thinks dropped packets mean congestion and will drop it's speed accordingly. If your cable is in-spec and your devices are in-spec and your distance is in-spec then packet loss should be negligable. However there is a lot of out of spec hardware out there, so I would be wary about operating right at the limit of the distance specification. 

At larger message sizes the interaction changes. Depending on the exact rules the server uses for delayed acknowlagements there can still sometimes be delays but they don't seem to be too significant in your case. Possible fixes for this problem include using the TCP_NODELAY socket option and/or reworking your application code to build the complete packet before sending it to the OS in one peice. 

I don't think the default gateway has anything to do with your problem. Local traffic between two devices on the same subnet doesn't flow through the default gateway and in any case the speeds you are reporting for your local traffic are 10 times higher than the speed you report for the link to your default gateway. A couple of possibilities spring to mind. Firstly are you in the correct ports? from some searching it seems only two of the four fibre ports on that switch are 10G. Secondly I have heard reports of some early switches which have 10G ports but which can't handle a full 10G for a single flow because of their internal forwarding design. 

Those addresses cannnot be used directly on the internet. If you only need to make outbound connections to the itnernet then you can use NAT to hide multiple private addresses behind one public address. If you need to accept inbound connections then the NAT would have to be configured to forward those connections or you would need to get public space instead (which is gettign increasingly difficult nowadays). 

Umm no. The pair as a whole is protected from crosstalk with other things by a combination of the twisting and the use of differential signaling. The sheilding helps a bit too but it's not the main line of defense (witness that most categories of twisted pair don't have it. The two wires within a pair most definately interact with each other. You need to make sure that the wires are paired correctly (that is that the pairs of pins that are supposed to connect to a twisted pair or wires are actually connected to a twisted pair of wires) or the cable will have terrible signal integrity and crosstalk and will most likely be unusable for anything over 10BASE-T (and even 10BASE-T is probablly a crapshoot)