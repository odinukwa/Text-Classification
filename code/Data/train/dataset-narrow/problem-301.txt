You are correct, just by looking at a bit of DHCP traffic, it is impossible to determine if a server is out of addresses. You cannot distinguish an empty pool from a crashed server, since in both cases the server will not respond to a DHCPREQUEST. Theoretically, if you have access to all of the server's DHCP traffic from the very start, and have some info about its configuration, you could keep track of all the leases it hands out and completely emulate its bookkeeping. This would allow you to know when the server has allocated all available addresses. Note that you would need some knowledge about the DHCP pool. A DHCP range is often a subset of a subnet, so you would need to know which addresses are available. Also, when the admin sets up stuff like addresses to be handed out to specific MAC addresses, things become even more complicated. I'm afraid the best place to determine if a server is out of addresses still is... the server itself. 

What happens at the time-out is actually pretty clear from the drawing... The congestion window size drops back to its original value of 1 and slow start is run again. The specifics of how a TCP stack will handle congestion events depend on what variant you are using. This drawing looks like an example of the TCP Reno algorithm. When seeing 3 duplicate ACKs, TCP Reno concludes there is congestion, but the network is still working since some segments were ack-ed. In case of a time-out, the situation is worse: the network seems completely unresponsive. Actually, the fact that duplicate acks are being received before a retransmit timer expires means segments are still being received by the other side, even though some may have been lost (or re-ordered). So, in case of the 3 duplicate acks, the congestion window is cut in half and then increased linearly. This is known as fast recovery, and its goal is actually to avoid waiting for retransmission timeouts. When a retransmit time-out does occur, the reaction is more drastic. TCP Reno starts over with slow start from a congestion window of size 1, and a slow start threshold of half of the value of the congestion window when the time-out occurred. When the threshold is reached, increase becomes linear again (additive increase). TCP Tahoe did not include fast recovery, and would react the same way in both cases, resetting the congestion window to its initial value and executing slow start. TCP Reno's fast recovery basically skips the slow start, immediately setting the congestion window to the threshold value and starting the linear increase. Note that many more variants exist and actual implemantations can be more complex. Also observing these algorithms at work is not easy because other TCP mechanisms can interfere. I do not know whether what you had in mind (using fast recovery in both situations) exists as a known and implemented congestion avoidance algorithm. It was probably tested and discarded when Reno was implemented. Feel free to do some digging around in the scientific papers in this area. 

From a routing perspective, Understand the concepts of VRFs ( virtual routing forwarding tables ). Generally, a lot of ISPs use MPLS to route traffic across their core, and this would mean using either L3VPN or L2VPN for providing a circuit between your sites. Each customer could come into the ISP core on a different VRF ( research on 6PE and 6VPE ) and carried across to the other location. In case they don't use MPLS, they could still use VRFs with IP to route traffic. In Such cases, you would not have those routes leaking between the 2 ISPs, and you should not have any problems with loops ( unless your branch sites are connected via another backdoor link) From a redundancy perspective, If you need to think about redundancy only, you don't even need OSPF as such. Static routing with SLAs could help. An easy reference could be this IP SLA on NE In terms of loops, if you are really interested in understanding how loops could happen in OSPF , read this Loop prevention in OSPF and BGP Loop Prevention. Basically within the site, you could have transient loops but not permanent ones in the long run. 

Syslog streaming is independent of the router resources since it sends configured logs to an external Syslog server. Losing the syslog would mean that these logs go back to the internal buffer. The internal buffer is allocated a piece of memory by the OS itself, but is user-configurable with values ranging from 4096 to approx 2 billion. However, setting a larger value for a buffer means that you are eating up into that precious memory which could be needed for other router tasks. So, if you set the internal buffer value to a value that you feel would not starve others ( this could vary depending on where the router is placed in the network) and you lose the syslog server, you should do fine. The only thing you would lose are the logs since internal buffer is similar to a circular queue which means newer messages replace older ones. NOTE : We have 4 syslog servers in our network, and I think that gives us a good amount of HA 

Each interface on your NIC should be assigned a different IP address or there will be an addressing conflict. You can either receive an IP address via DHCP or set one manually as you see through your GUI. Each interface also has its own MAC address for layer 2 communication. 

My internal private IP addressing and another person's internal IP addressing may be the same or similar, yes. On a NAT router or Firewall, you have an inside interface and an outside interface. Using an ACL, or depending on your manufacturer's OS, you determine what internal traffic source is NAT'd to an external address when it crosses the Firewall or NAT router. Out on the internet your public addresses are bought and assigned; there are no overlaps in Public address space. Overlaps in Public address space would cause serious problems. 

Default BGP keepalives are sent every 60 seconds. If a participating device does not receive a return response within 180 seconds, the default Hold Time, a reconvergence will occur. So by default, it will take 3 minutes for your devices to determine a neighbor is down before reconvergence. 

I have an interface that is Gigabit connecting to an interface on a carrier ATT router. The bandwidth of the ethernet circuit connecting to this interface is 10mbs. Is there a way to set the speed of the interface to match the bandwidth of the circuit? If QoS is then applied to my gigabit interface, will it be applied and aware of the 10mb rate limit? 

A Ethernet Repeater extends the usable range of ethernet cabling so it is not the same as a hub. This is a layer 1 device. You might be getting confused with the name "Repeater" and the function of a hub. Or you could be referring to Multiport Repeater which is just another name for a Hub function. A Hub is also a layer 1 device. It repeats data out from a source port out every other port. Collision is heavy on a hub. Bridges are layer 2 devices. They exist to physically seperate LAN segments. One of the only decisions a bridge makes is whether to forward or drop a frame. They are different than a switch as a switch can separate LAN segments on the same hardware using VLANs.Switches generally consist of a multitude of ports, while a bridge may only have one. 

TCP Syn-segments are always sent uncompressed. After each host has received a SYN-segment, they know the other side's IP address. They can then compress the following segments' headers, because the IP address is remembered and re-entered in the header by the decompressor. 

You could indeed increase the window size beyond 1+2a, but it would indeed not increase the efficiency beyond 1 (or 100% if you like). I guess the correct formula would be Efficiency = min[1 , N/(1 + 2a)] If the window size exceeds 1 + 2a, and assuming the network delivers all acks, the sender would never be able to fill the window. After sending 1+2a packets, the ack for the first packet will be received. So the number of outstanding packets will stay at 1+2a, even if the window size would allow for more. 

Is it possible to do this without VLANs? It can be done without VLANs. The simplest way might be to connect the Wifi router directly to the Cloud Core router/firewall instead of to the HP switch. This way, the firewall functionality in the CCR can prevent 192.168.2.0 from reaching 192.168.1.0. A quick and dirty solution that might meet your requirements is configuring your wifi router as any home wifi router, NATting the wireless subnet onto your network. No vlans, and the rest of the network cannot contact the wireless subnet. I would advise against this because NAT is not necessary inside your network, but it is a quick fix. 

According to the headers of the packets that were tranmitted uncompressed, at least the first two (SYN) segments of the connection, one in each direction. 

I don't know if you can fix the SSH directly through SNMP. However, a lot of Cisco's suppport SNMP triggered config downloading or uploading from/to a TFTP server. You should be able to upload a new config containing the SSH stuff. You need the CISCO-CONFIG-COPY-MIB, available on IOS >= 12.0. If you have the device config, you can create a new version including the SSH stuff and upload it. If not, first download the running config from the device. Important note: uploading to the running config merges your upload into the existing config, but uploading to the startup config overwrites what's already there. Cisco's instructions can be found here 

I have a layer 3 3750 advertising its vlan interfaces via EIGRP to two routers. R1 and R2 connect to MPLS via 2 different carriers using BGP. R1 is the preferred path. My question is, how do I configure a default route for Core1 using EIGRP that will be aware of failures on either of these carriers. 

Any ideas on how to troubleshoot? The issue is widespread on almost all interfaces that house servers in the company. 

I'm having trouble finding the actual temperature point where a C2821 router will send out the trap for temperature. So far, I know the operating temperatures are from 0C to 40C. But at which point does it send the trap? 

1.) Yes, the gateways should reside on the L3 switch. If you were running Routing on a Stick, you would instead house their gateways on the Router. Your current configuration is inline with what is called a "collapsed core" design. Where the L3 core performs both switching and VLAN routing and acts as a distribution layer. 2.) No, your L3 routing should be occuring on your 3750. 3.)If the cable modem is in bridge mode, there should be no double NAT. Bridge mode should disable all the routing features and leave the cable modem as just a cable modem. 4.) I would, just so you can hit devices on the seperate VLANs. 5.) The address of the inside interface of the Cable modem may be .1. Leave it as it is. Like Ron said, it doesn't need to be changed. Can we see the NAT configuration of your router? It will be helpful in identifying your NAT issue. ****EDIT**** This link may be helpful: Configuring NAT I failed to take note of the NAT statement you had originally. This brings into question the claims made by your ISP. You're both able to hit the internet and your being PAT'd with the correct commands. Are you experiencing any problems? 

I looked up the ASA documentation, and you are right. Only FirePower allows configuration of HTTP blocked page responses. But I want to suggest an old school method for doing this. I believe you know the destination IPs that need to be blocked, since you are already filtering the traffic. So you could use static routes for these destinations and point them to a server in your LAN, that could act as a proxy. The "blocked" page response could be served from that location. 

If the switch is capable of performing routing, is there a default route or a static route for R1's loopbacks pointing to e1/0's IP address. If the switch does not support routing, then make sure the default gateway is set to e1/0's IP. If the switch is CISCO's then the command is "ip default-gateway " 

This is better suited to a comment, but my reputation doesn't allow me to do that. So here goes: I am confused with your physical diagram and your logical representation. According to the physical diagram , if R6 connects to SW1 on E1/0, then fa1/6 on the switch should be configured as a trunk. Which means, you should have two sub-interfaces e1/0.67 and e1/0.46 on R6 to cater to the different VLANs. If I understood this incorrectly, then my apologies. Also Hung Tran is right. If you have subinterfaces, then configuring on the main interface is not optimal. From routing perspective, you should check 2 things: 

Ron already mentioned this in the comments but let me try to offer a little more explanation. SD-WAN, from a vendor perspective, is offered as a solution which involve a set of technologies designed to simplify deployment and traffic management over WAN. It's a child of the "SDN" umbrella, and basically means you would have software doing a lot of automation for you for device provisioning(instead of a NE popping into the hardware and configuring the CLI) and you(the user) can manage a lot of things(mostly) from a dashboard. Capabilities offered as part of solution vary by vendors. Viptella's vEdge, CISCO's IWAN, VMWare's VeloCloud are some examples of this. MPLS VPN, on the other hand, is a VPN created over a MPLS underlay. This VPN can allow you to route packets ( L3 VPN ) or switch frames ( pseudowire, VPLS ). 

You could try if the frames can be blocked using a MAC ACL on interfaces and/or on vlans on the access switches. By applying the blocks selectively and checking if the error messages on the 4500 disappear or not, you can home in on the source of the traffic. Moving cables around to see if the port mentioned in the error message on the 4500 follows could also help, but might prove tricky in a production environment. 

without the remark about automatic VLAN id assignnment. I only have EX devices so I cannot verify this. 

SA is the 3GPP Technical Specification Group on Service and System Aspects. There are subgroups on different topics: 

Q1: The modem does not see the MAC addresses of the devices connected to the router. When a packet is routed from a device to the modem, the router will create a new ethernet frame to forward the packet to the modem, using its own MAC as the source address. Q2: If the router is doing only routing, the modem will see the IP addresses of the devices since source and destination IP addresses in the packet remain unchanged. But if your router is performing network address translation (NAT), it will replace the source IP address on the outgoing packets to the router with a different address, hiding the IP addresses of the devices (the original source addresses) from the modem. The fact that the modem can see IP addresses does not mean it looks at them or uses them in any way, that depends on the type of modem and what other features are in the device called a modem. To be sure on Q2, you would have to look at the specs of your modem and router and possibly check their configuration or default behaviour.