So pool members which responds faster get more requests. That may make them slower to others, so those will then get more requests. This can work quite nicely. 

Nope, since a /20 isn't on an 8-bit boundary this notation won't work, which immediately shows why it isn't useful to use wildcards to represent CIDR-blocks this way. 

This depends a bit on what exactly you're trying to achieve. For some services, changing DNS labels when one of the connections may work if the TTL is low enough. Or you can offload the your using for example CloudFlare or Akamai, and switch to another backend IP address. Both these options require manual intervention or maybe some smart scripting. If you need to have one set of IP addresses available through different networks, you're mostly stuck with BGP. 

RIPE NCC has a set of route collectors and offers their routing tables for download: $URL$ They have historical data going back to at least 1999. 

So, to solve the problem of IPv4-only hosts not being able to talk to IPv6-only hosts (and vice versa) you need to implement another protocol: IPv10. Then, why bother with that and not just implement IPv6 on that IPv4-only host and be done with it. In addition, as can be read in RFC7059, there are already more than enough tunnel mechanisms available which can be used to solve parts of this problem. To be honest, I think the author is hoping on some commercial success by claiming copyright, as can be read in these tweets: 

You made one network on layer 2, but put each switch in a different layer 3 network, so your MDF is a switch and it should be a router with the IP addresses you configured. The solution is to make each port towards an IDF a routed port on the MDF, and thus giving the MDF an IP address in each network, or have the MDF configured as a switch and put all IDF's in the same network. 

you can copy the configuration from the 'source' switch like this (assuming you've got a domestic software release supporting SSH): 

To (finally) answer my own question: This is not possible the way I want to implement this with the currently supported versions of JunOS. Yes, there are other ways to reach the goal as were mentioned in the other answer and in comments, but my specific question was to be able to signal blackholing using a BGP session. 

iperf can be used to test transportation protocols like TCP and UDP. VOIP is an application protocol. This is another layer of the Internet Procol Suite. So the answer is: no, you cannot test VOIP, but you can test the transportation protocols (typically UDP) used for VOIP calls. 

The only answer we can give you is 'talk to your ISP'. Remotely triggered blackholing (RTBH) is an often used technique, but we can't tell if your ISP supports this. When using RTBH, you can announce to your upstream which target IP's should be blackholed, either over a dedicated BGP sessions or by tagging target prefixes with a specific community. 

Port 21 is used FTP Control. You should limit port 20 (FTP Data) if you want to limit FTP traffic, and create a similar rule for port 80 if you want to limit HTTP traffic. 

For traffic analysis sampled netflow is often used, because 1:1 sampling (or non-sampled) netflow can be quite a burden on both the router sending the flow data and on the flow receiver. Most setups I've seen use a sampling rate varying from 1:100 upto 1:4000 (depending on the size of the network and the amount of traffic pushed), and they're perfectly able to do traffic anomaly analysis (DDoS detection) or even customer usage billing with that. 

AS23456 is a special ASN called "AS_TRANS". When 4-byte ASN's were introduced to deal with the shortage of AS-numbers, not every router was running software able to handle that. AS23456 was used so routers only supporting 2-byte ASN's are able to properly handle routes to 4-byte ASN's without needing to upgrade them. You can read more about this in RFC 4893. I'm a bit amazed your router still logs that AS as its local ASN though. 4-byte AS numbers have been the standard for a long time now. 

All the SCSI errors indicate a broken disk, or a disk about to break. Request an RMA at JTAC if you have support. If not, you may be able to find some hints on the internet on how to replace the disk, I personally haven't tried that. 

If you enable 'BPDU filtering' on the ports you're discarding the STP packets, thus breaking spanning tree. Either use STP or filter the BPDU's, don't do both. 

No, that's not correct. You don't need a router for two hosts to communicate using IP as long as they're in the same network. 

You're mixing up various layers of the Internet Protocol Suite (or OSI model if you like). Routers do not interact with browers directly. Routers interact with hosts, which have IP addresses. As far as the router is concerned, both requests come from the same IP address, so return traffic goes back to that IP address, and it's up to that host to decide what to do with it. Each browser on the host uses TCP/IP to communicate with the remote webserver, and each browser uses a different unique TCP source port to send traffic from. The host can distinguish based on this port number, so the TCP/IP stack on the host uses that to pass return traffic to the correct browser. 

Most likely they mean a wavelength on a DWDM path. With DWDM, a fiber operator can use one single pair of fibers to carry a number of different colors (wavelengths) of light using multiplexing. Each of these colors can then be used to transmit its own signal, for example 10Gbps ethernet. This way, they are able to use a fiberpair more efficiently. 

specifies your local AS-number, not the peer AS-number. A router can be part of only one ASN. It seems that you're just making a typo though: and are two different numbers. So you can configure more peers by starting with (unless your entire BGP config is wrong, and your ASN is actually 203725). 

As @RickyBeam pointed out, is not a routable address. However, in access lists in firewalls it can be used with a netmask other than the implicit to indicate the entire IPv4 address space: . In that case, any IPv4 address would match the condition. 

For those unfamiliar with libbgpdump: it's a library for analysing dump files generated by Zebra/Quagga and MRT. It's maintained by RIPE NCC: $URL$ The AS-path recorded is . So AS37089 originated the prefix, AS7500 announced it to the router on which the dump was generated. 

A virtual interface will always go down if the corresponding physical interface goes down, it's nothing more than an interface which is used to handle traffic with a specific VLAN tag on the physical interface. 

Many routers prioritize routing packets over answering ICMP requests, they often have rate limits and queueing in place to reduce load on the router. As a result, latency on intermittent hops can be shown as higher than the latency to the end node. 

NLNOG Ring nodes could be useful for this. $URL$ has a nice parseable list of nodes, $URL$ shows them on a map. 

They don't NAT, use multiple WAN IP's for NAT, or use proxies, WAN accelerators or more levels of NAT to reduce the number of outbound connections. 

Routing a more specific prefix (the /24 in this case) taken from a larger block normally wouldn't be a problem, since a more specific route will win over a less specific one. However, there may be another challenge here, if the /16 is assigned to your current ISP and you're planning to announce the /24 from that /16 via other networks. In that case, those networks must accept that you're announcing a prefix not assigned to you. I can imagine that your ISP will not allow you to do so if you would want to stop using their services (since they own the aggregated prefix from which you're using a /24), but if you remain a customer but decide to connect your network via them and possible another network, there's no technical drawback. Possibly you'll need to create valid route objects in a routing database like RIPE or RADB (a bit depending on where you're located) so networks will accept your prefix. Your current ISP will most likely need to coorperate to create these objects. As long as you keep the ISP owning the /16 as an upstream network, even networks not accepting your /24 would still be able to reach you via your ISP. So to sum it up I don't think there are any unsolvable technical issues here (unless there are more details I'm not aware of), there may be policise or commercial reasons why your ISP says this is not possible. Your second question is hard to answer without more details on the current network topology. You may consider asking this in a seperate question and providing some additional details there.