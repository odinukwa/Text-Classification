Do you have direcive in site-enabed configs? PS. You can also listen on another IP/PORt for server status. 

Solution 1: Hide untrusted PC under another router. This will solve arp-spoofing/mitm problem. Solution 2: Use any router with DD-WRT firmware. There you can setup different Wireless LANs and even put them in different VLANs. Too bad that ADSL modems aren't supported by it. 

One of pretty straightforward solutions for your problem is to use link aggregation technique. There is device with failover mode for that. There is config from my notebook which always stays on fastest available link: 

I'm backing it up at night with If I restore backup using on the same server then I'm getting not quite the same data, for example: 

L7 solution: You can use nginx as a reverse proxy and redirect all requests from old IP to new with simple config like this: 

Judging by your output raising and lowering both and may slightly help. I assumed you are using somewhat recent kernel e.g. . You can see 's source code here: $URL$ 

If I understood correctly one is for input drops other for output drops (i.e ). PS. For additional information refer to Section 3.3 " structure" of the TCP/IP Illustrated Volume 2, Stevens & Wright. Or source code of you OS. 

Problem most probably cased by SAN malfunction. When FreeBSD looses disk there almost no way of leaving panic log entry. But in VM environment (and also in very few motherboards) there can be msgbuf () left after reboot. You may try to examine it. For debug you can try using instead of reboot after panic. PS. If you have system programmer at hand you can ask him to write something like Linux's for FreeBSD 

If this is a temporary solution you need, and don't have the time/inclination to set up a VPN, Webex is pretty good. You can check it out, here 

3.) If you use HP in a large corporate setting and have a vendor agreement or something set up with them, check into HP StorageWorks Storage Mirroring, however it's a bit heavy-handed for two windows folders. 4.) Finally, there's also, (beta warning! Beta warning!) Windows Live Mesh, but it's.. You know, beta. :) Personally, I'd go with the robocopy option. 

We enforce a 90-day password expiry on everyone here, (including ourselves.) Mostly because it's simply best-practices. Chances of someone using a "weak" password, vs. a stronger one is greater and the longer you leave it the same would possibly result in a long-term, undetected security breach. 

Symantec's "Altiris" will patch as well, and is a general all-round good management/inventory/ticket tracking system. That being said, we migrated from using Altiris to patch, to WSUS. WSUS can be configurable to impact your users in the least-disturbing method using it in conjunction with GPOs. 

Since this is subjective, I thought that I'd just toss out the ones that help me the most. All of `em can be found elsewhere, cribbed from "How to do better at time management!" articles, etc. They're just what help me. They may not necessarily help YOU. i.e. Your Mileage May Vary. Also, while they're not necessarily a direct and succinct answer to the question at hand, I believe that when used, they contribute overall to improving time-management, which has the direct overall effect of helping me free up some time, to complete those important-yet-not-urgent-tasks. 

Setting to higher values is only needed on highloaded servers where new connection rate is so high/bursty that having 128 (50% more in BSD's: 128 + 64 ) not-yet-accepted connections is considered normal. Or when you need to delegate definition of "normal" to an applications itself. Some administrators use high to hide problems with their services, so from user's point of view process it'll look like a latency spike instead of connection interrupted/timeout (controlled by in Linux). manual says - acts only upper boundary for an application which is free to choose something smaller (usually set in app's config). Though some apps just use which means set backlog to the max value allowed by system. Real cause is either slow processing rate (e.g. a single threaded blocking server) or insufficient number of worker threads/processes (e.g. multi- process/threaded blocking software like /) PS. Sometimes it's preferable to fail fast and let the load-balancer to do it's job(retry) than to make user wait - for that purpose we set any value, and limit application backlog to e.g. and set to 1. PPS. Old versions of Linux kernel have nasty bug of truncating value to it's 16 lower bits (i.e. casting value to ), so raising that value to more than can even be dangerous. For more information see: $URL$ If you want to go into more details about all backlog internals in Linux, feel free to read: How TCP backlog works in Linux. 

Two things. I usually put the IP address on the bridge. Also, I don't use the xend config file for this scenario. See an example here: (you can modify it to use eth1) $URL$ 

The answer is more of a physical to virutal hardware mapping. What you need to be able to do is to create a virtual machine environment that maps to the equivalent physical resources that you are planning to sell. If you are looking for software solutions for this take a look at things like Eucalyptus, CloudStack, OpenNebula, OpenStack, etc. What you really want to make sure you handle well is the monitoring aspect, which it sounds like you have some handle on in terms of your current QoS monitoring already, but you may want to look into monitoring tools such as Cacti/RRDTool, Graphite, Nagios, Zabbix, and Zenoss. This blog talks about benchmarking and the physical to virtual mapping that they did: $URL$ 

Xen best practice is to disaggregate (in other words - split up) the functions of the management domain (dom0) as much as possible for security, overall system reliability, and even performance. ( $URL$ ), See also Ian Pratt's comments on a XenReference architecture ( $URL$ and $URL$ If you put your NAT firewall in a domU there is also the added benefit of isolating the firewall rules to that system and so they won't conflict. 

We implemented Aerohive. Specifically because it met each of our requirements, a.) ultimately manageable by the helpdesk, b.) reliable security, and c.) good support. (Personally however, I would have opted for a Cisco wireless AP solution, but that's just me. :) 

We use the default Microsoft quota system on the file servers, specifically when it comes to home drives. Other than that, one of our admins down south of us has a tendency to let the users' project spaces fill up, then encourages them to run duplicate finders and large-file/last-accessed programs such as "Doublekiller", "Easy Duplicate Finder" and "JDisk Report", which is one of my personal favorites. Another solution we're looking at implmenting is Symantec's "Enterprise Vault" especially if you're doing disk-disk-tape or have the tape storage available to shuffle files off to. 

Try restarting the netlogon service on your DC? (Or probably in your case, just giving it a good reboot wouldn't hurt) 

After reading all the descriptions of what's going on, (greyed out controls, unable to RDP, etc.) I'd bet a soda pop that your RPC service is having great difficulty, (and/or is possibly affecting your server service.) If this is the case, none of the pstools will work, (psexec, pslist, etc.) And if time is of the essence, suggest wrangling a user on-site to perform a hard power down/up. I'd probably also have the user watch for RAID errors, during boot process. Good luck, mate.. I've been where you are, before :) 

The error message is probably accurate, but there is a better way to do networking. It is recommended to do bridging manually and has even become the default for Xen 4.1+. You can set up the networking bridges manually on any version of Xen by following: $URL$ The basic idea (which is different than what you are used to) is that the xenbrN device gets the IP address and the ethN device is used only as a port for the xenbrN device to communicate over. By following the instructions above you should then disable the bridge scripts in the xend configuration file (/etc/xen/xend-config.sxp). 

First thing to take a look at is xentop and drill down into network usage. Beyond that you can also take a look at iftop to see if you notice any unusual traffic. There are several common symptoms and problems outlined here: $URL$ And several approaches to optimize things: $URL$ Take a look at those and do so more troubleshooting and data collection. That guide ( $URL$ has other general suggestions as well that should apply to Xen in general. Some things to think about looking at include CPU utilization or other over constraint symptoms (low memory, swapping, etc.). The other thing that is useful to think about is what type of guest is it (PV or HVM)? What driver is being used? Is there a better set of NIC configuration options that could be used? 

First of all, you've got good backups, right? :) Always a good idea to make sure that you're all backed up, just in case a disk decides to not spin up, etc. when you bring everything back online. Nothing like breathing easy after a power outage then realizing that one critical SQL server never came back. :) Second, you're right, gracefully shut down and turn off all servers, etc. If it's not a modern building and/or you don't have a UPS in-line with surge protection, (which it sounds like) or anything like that, it's always better being safe rather than sorry, and I would suggest unplugging equipment. Bringing power back online could result in a power spike. Also, a little FYI; bring your core servers down last, (such as DNS, etc.) You don't want to bring down your DNS servers and find yourself unable to resolve the rest of the servers if you're shutting them off remotely :) When bringing everything back online, bring the network equipment up first, then your core critical servers, then finally your app/file servers. Good luck! 

I, personally am a big fan of restricting accounts that are logged into the machine as non-admins, but providing them the ability to invoke installations, etc. with the "run as" command. You could create a local admin user on the box, granting them privs and allowing them to use it to install programs? 

8CB0701A0C8B7D97653888E8B959A6420AEC7679 becomes 8CB0701A0C8B7D9765383FE8B959A6420AEC7679 after restore A9986D2E961E1F407E74E9D18D811DDB702924F5 becomes A93F6D2E961E1F407E74E9D18D811DDB702924F5 after restore and so on... i've noticed only 88h and 98h characters corrupts, but there can be more. Is there a way to backup-restore data without corruption? 

Basically most are related to physical memory failure. But in presence of virtualization it may also be a hypervizor bug. But I would suggest you first check . [1] $URL$ 

I guess that "server's control panel" software can be rewritten to be more efficient and not to degrade performance over time. NB! Do not copy/paste s from production servers - there could be some sensitive information inside that JSON e.g. logins/passwords/session/API-keys/etc. 

To answer this question you should probably checkout changelog for you kernel package. This can be done for example via . But general recommendation is to always use latest kernel version provided by distrib's security team unless it introduces visible regressions for your workload. PS. To upgrade system packages under Ubuntu one should use PPS. Also as suggested in comments if you have more than one server it's usually a nice idea to use Chef/Puppet/Cfengine. 

Setup switches to generate snmp traps on port down. On trap server catch them and call omshell script that deletes old lease. 

The problem is you don't have any files to build. Start with obtaining the kernel source codes. Then use link petre provided or use this one 

A few things to try: 1) Boot the guests by using kernel and ramdisk instead of bootloader in the domU config file. You can use the dom0 kernel and ramdisk 2) Try PV-Grub ( $URL$ ) 3) Boot the guests HVM and use the PV on HVM drivers ( $URL$ + $URL$ ) 

The Xen Cloud Platorm (XCP) is a good solution and provides a lot of functionality and management options. It compares well with Citrix XenServer see: $URL$ There are also many management options: $URL$ Although not yet ready for production, you may also want to start taking a look at Project Kronos: $URL$ Using Xen the hypervisor and xentools for a small deployment is OK, but if you plan to do management of a larger set of machines or cloud orchestration (CloudStack, OpenStack, OpenNebula, etc.) then you should consider XCP, Project Kronos, or similar solutions. In the past new deployments (such as Amazon, Linode, etc.) came out on Xen, but new production deployments are likely to want to make use of the features of XCP and Project Kronos. See also: $URL$ 

You can use: 1) xentop (and drill down on I/O) 2) monitoring tools like xenmon ($URL$ 3) Standard I/O monitoring tools that you would normally use should give a good indication of the I/O usage of the guest as well. 

You do not need an additional ethernet card. You can follow the instructions here: $URL$ The configuration that you describe is the probably the most common way to use Xen (bridged networking). The Xen wiki page referenced above is out of date, the updated general Xen.org wiki page for networking in Xen 4.1+ is: $URL$ 

Of course you should care. After all, any job worth doing is a job worth doing well. 1.) It's already been said but it needs repeating for reiteration. Document, document, document. Use excel spreadsheets, notepaper, quill and parchment if you have to. Several thousand mead notebooks like in the movie "Se7en" if need be. Either way, lay it out clear, concise and easy-to-read for whomever is going to have to replace you when you get hit by a meteor. 2.) Once you've begun documenting everything, you should be in the writing mood. Time to start a side project detailing the last few years' changes made on the servers. Start building a change-management process, but go through it historically. Make sure you note how often you've changed those disks on some of those finicky servers. How much they cost, etc. These provide great metrics for you to rely on anyway, even if that meteor misses you and takes out the neighbor's dog instead. 3.) Implement a monitoring system that monitors and emails critical failures. What's that, you say? You have one already? Sweet! Now document it. How it works, what you monitor, why you monitor it. 4.) You've got a responsibility to take it to your management types again. And again, and again. As many times as you can. Be polite. Be respectful, but come bearing what the cost to the business would be, if that meteor came down and you disappeared. This is not a responsibility that you can blow off, it's an ethical requirement of your job and comisserate to the position you hold as the proverbial `keeper and guardian of the keys to the kingdom'. Think of it this way. If you can avoid and forget worriyng about this and feel OK doing that, then why aren't you combing the accounting fileshares for company salaries to see what and how much more those management types are making than you. Why aren't you exploiting confidential corporate data for your own use? Why aren't you reading people's email? Simply put, (and hopefully) you aren't doing these things because of a good solid sense of morals and ethics. You know, the whole right from wrong sort of thing. Thus follows, if you have that, then you know that it's clearly your responsibility to document and prepare countermeasures against the worst-case scenerio. That being, your uninterrupted-by-work and relaxing vacation trip to Hawaii. :) (Sans meteor, that is.)