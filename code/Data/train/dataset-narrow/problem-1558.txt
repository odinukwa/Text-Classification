Just remove the NTP server under System>General Setup. You can't use any of the rc stuff from stock FreeBSD. 

Most likely because the client can't communicate with the server on UDP 1194. Why, there are a number of possibilities to check, two most common: 

There's no such thing as a configuration to increase upload speed. Most often, if there are no limiter or traffic shaper configs in place, that's because you have a duplex mismatch. Your provider expects you to force speed and duplex and you're set to auto, or vice versa. That tends to affect upload more significantly than download. Make sure your WAN port is set how your provider expects it to be. 

You likely don't have a need to allow that. Just add a block rule on LAN, any protocol, any source, destination network 239.192.0.0/16, and don't enable logging. It has to be at the top of the list, before any other matching rules. The rule you added there for that UDP won't ever match because the rule above it matches first and first match wins. There is also a bug in 2.2.x versions pre-2.2.3 where all packets with IP options set are logged regardless of whether the matching rule has logging enabled. 2.2.3 release is coming soon, or snapshots are available now at $URL$ which fixes that. Until you're on 2.2.3, it'll log that multicast traffic regardless of config. 

You can't NAT like that, it hits IPsec before the NAT. You'll have to use 2.1 and its IPsec NAT capabilities in the phase 2. You can only map a /24 to a /24 so you won't be able to map your entire internal /16 to that /24, only a /24 out of the /16. 

Guessing maybe you still have block private networks enabled on WAN? If you're connecting in from 192.168.1.x at least, and WAN is really a LAN in your case. On an unrelated note, it's always preferable to use UDP for VPNs unless TCP is required for some reason (can't pass UDP between client and server). 

It's unlikely you're having a web interface problem, almost certain it's a general network connectivity problem. Troubleshoot it as with any network problem. Can you ping it with no loss? You don't have the same IP in use somewhere else on your network? eg 192.168.1.1 on the VM and that IP is also the router on your physical network. 

Everything is a default deny. Nothing is allowed that you aren't passing via your configured rules. The way to disable routing is to block the traffic you don't want routed. An alias containing RFC1918 is helpful to block traffic to non-Internet destinations. It's also possible to use the alias in your pass rules as a "not" destination, but it's usually more logically clear to people if you just put in a single block and allow destination "any" for the Internet. 

ca_root_nss is included by default. openssl probably just needs to be pointed to the cert.pem file if you're calling it directly like that. Using fetch instead, 'fetch $URL$ will verify whether the cert is recognized by the OS in general. 

With SSL/TLS site to site VPNs, you need the route on the server, and the iroute in a client specific override. The description here sounds like you're missing that iroute. Unlike shared key, where the route on the server suffices. In the case of VPNs like this, the route on the server sends that traffic to that particular OpenVPN instance, and its internal routing, via iroutes, must know which client to route that particular network. Under VPN>OpenVPN, Client Specific Override tab, add a new entry. For the "Common name", put in the CN from the certificate on the client side. In the Advanced box, fill in "iroute 10.34.43.0 255.255.255.0" (sans quotes). Leave the rest at defaults, click Save. Restart the OpenVPN client from Status>Services on the client system, and once it reconnects, it should work if it is indeed the missing iroute. 

pfSense 2.0 has back ported Intel drivers from FreeBSD 9 so that will definitely work, and is generally the preferred release for new deployments anyway. m0n0wall snapshot versions should work too. 

You need to use whatever the real mask of that subnet is, as provided by your ISP. It won't be /32. /24 may be too big of a subnet depending, in which case you'll break connectivity to other customers of your ISP. 

Read the book. $URL$ The ordering is described in detail there and is all applicable to 2.0. In short, port forwards and the server load balancer both win over 1:1. You can't do CARP on the WAN IP, each WAN must have its own IP and it cannot fail over. Same as HSRP, VRRP, etc. 

You don't need to restart it, it'll handle that itself. You do need to fix the config problem you have there. Invalid netmask of "255.255.240" somewhere, and apparently more than 100 routes which is almost certainly excessive (if you have a lot of 10.x.x.x networks for instance, use "route 10.0.0.0 255.0.0.0" instead or similar summarization). 

Aside from the push, which probably isn't enough to break the connection, the logs look normal. You're likely missing a route, or have the route wrong, on one or both ends. 

Firewall rules are correct. Probably a host firewall, or wrong subnet mask on a host, or missing/wrong default gateway. 

It's not that Squid is changing it from HTTP to HTTPS, it's that NAT reflection doesn't apply to traffic initiated by the host itself (which is the case for Squid). Traffic from the LAN hosts would hit the reflection. So what you're hitting is actually the web GUI of the firewall, not your internal server. That's where the HTTP to HTTPS redirect comes from. You'll need split DNS for Squid to be able to reach your internal sites, so git.gitserver.com resolves to 10.10.10.11 internally rather than 1.2.3.4. 

You're running the embedded version, which stays read-only mounted to not kill flash media with its limited write lifetime. You can mount to read write by running /etc/rc.conf_mount_rw and when finished, mount back to read only with /etc/rc.conf_mount_ro. If you're running on a hard drive or SSD you can run the full install version, which stays read-write mounted all the time. 

Possibly Windows firewall on your servers that only allow some types of traffic from the local subnet? Also verify that the clients are using the appropriate AD DNS server. If you're allowing all traffic between the sites on pfSense, it's not the culprit. Packet capture on the LAN facing the DC would be telling, if it's a local firewall on that server only allowing local subnet traffic, you'll see the traffic leaving LAN and never getting a response. 

Sticky connections allow you to maintain a single WAN per remote IP, but that's not enough for some sites as they involve communicating with different IPs. I generally recommend not load balancing HTTPS for that reason. In most networks it doesn't use a significant amount of bandwidth, and doing only failover for HTTPS eliminates nearly all the problem scenarios with sessions being bound to a specific IP. 

You can use the static ARP in the DHCP server and only allow defined hosts to get an IP. You'll want to use 2.0 if you go the full static ARP route, there were some issues recently found there in the stable release but it works fine in 2.0. 

Yes, how depends on whether you're talking about an authoritative DNS server to host DNS for your domains (in which case, use the dns-server package), or whether you just want something to use as the DNS server on your internal hosts. In the latter case, the built in caching DNS forwarder is great for that. 

What you're describing is fine, and widely done. Your description makes it sound like it's all correct. My first guess is you have the routes wrong on one or more of the connections for site C, like trying to route the same network across two different OpenVPN instances. 

Your traceroute seems to indicate your routing is screwy. Should never see your default gateway as the hop multiple times. Maybe you have a subnet mask that's way out of whack or something similar. What does Diagnostics>Routes show? I doubt you're blocking it, seems more like a routing issue. 

00:50:56 is a VMware MAC address. If ESX and this FreeBSD system is a VM, you must enable promiscuous mode on the port group that VM is connected to on both its ports. Though tcpdump on the VM should still show it in that case, it'd just be dropped at the ESX level. Post the output of 'ifconfig bridge0' and 'ifconfig bridge0 addr'. 

Generally no need for that, as being a full blown DNS server is usually done elsewhere and host overrides suffice. You can use the --mx-host syntax for dnsmasq in the advanced options box if you really need that. Described in the dnsmasq man page. $URL$ 

Looks like you don't have DPD enabled on the Sonicwall. Make sure it's enabled, and that the settings match, or else disable DPD on the pfSense side. 

NAT only defines translation, not direction of traffic. You'll need to policy route that host out the second WAN if you want that NAT to apply. That's documented in detail in the 2.1 book, and the multi-WAN hang out recording from earlier this year, both of which are available to gold subscribers @ portal.pfsense.org. 

In addition to what Chris S mentioned, which I agree with, I would also go with CARP because what happens when you're upgrading a firewall or doing any other kind of maintenance requiring a reboot or power down? With FT, you're down while it reboots, with CARP, it's completely transparent. Or if you need to change something on the VM that can't be done while it's live, you have to cut off everything. Use CARP and you're in good shape in all those scenarios. FT is mostly to protect from hardware failure, where CARP accommodates any imaginable maintenance needs with no downtime at all, as well as protection from hardware failure. 

Traffic that matches your SPD (local and remote subnets as defined in your IPsec connection(s)) goes through the VPN, regardless of your routing table. Anything that doesn't, won't. Change your IPsec config so it matches what needs to go across. Or switch to OpenVPN, which is easier to deal with from a routing perspective since it uses the routing table. Refer to the pfSense book for details on either of those scenarios. 

Nothing wrong with mixing IPsec and OpenVPN, nor is there a problem doing OpenVPN with HA. When using OpenVPN client instances on an HA pair, you must bind them to a CARP IP so they only run when CARP has master status. 

The arguments people generally have against that are security of the hypervisor itself, which history has pretty much proven isn't much of a concern. That could always change, but there haven't yet been any really significant recurring hypervisor security issues. Some people just refuse to trust it, for no good reason. It's not about attacking other hosts if someone owns the firewall, in that case it doesn't matter where it's running, and of all the things that are likely to get compromised, the firewall is WAY down the list unless you do something stupid like open its management to the entire Internet with the default password set. Those people have some irrational fear that there's going to be some magic "root ESX" packet sent in from the Internet through one of its bridged interfaces that's somehow going to do something to the hypervisor. That's extraordinarily unlikely, there are millions of more likely ways your network is going to get compromised. Numerous production datacenters run pfSense in ESX, I've setup probably in excess of 100 myself alone. Our firewalls run in ESX. From all those experiences, the only couple slight drawbacks to virtualizing your firewalls are: 1) if your virtualization infrastructure goes down, you're not going to be able to get to it to troubleshoot if you aren't physically at that location (mostly applicable to colo datacenters). This should be very rare, especially if you have CARP deployed with one firewall per physical host. I do see scenarios on occasion where this happens though, and someone has to physically go to the location to see what's wrong with their hypervisor as their virtual firewall and only path in is down too. 2) More prone to configuration mistakes that could pose security issues. When you have a vswitch of unfiltered Internet traffic, and one or multiple of private network traffic, there are a few possibilities for getting unfiltered Internet traffic dropped into your private networks (potential impact of which would vary from one environment to another). They're very unlikely scenarios, but far more likely than making the same kind of screw up in an environment where the completely untrusted traffic is not connected in any fashion to internal hosts. Neither of those should keep you from doing it - just be careful to avoid scenario 1 outages especially if this is sitting in a datacenter where you don't have ready physical access if you lose the firewall. 

Creating queues under your limiters, weighted to give VoIP priority and then rules configured so VoIP goes into the appropriate sub-queue, is your best bet there. 

Not clear exactly what you have there with two NICs on the same broadcast domain, you have a public and private subnet on the same broadcast domain? Don't do that in general, really bad practice, separate those out. One vswitch (using ESX terminology, replace as appropriate for your hypervisor) for the public IP subnet, one for the internal network. In general there isn't anything to keep that from working properly, it's fully supported and works fine in pfSense (assuming the network in general is sane, not enough here to tell that). 

If you're keeping the hosts behind pfSense on 192.168.1.0/24 then you can't make it a transparent bridge as it has to route to and from that network. You could bridge if LAN and WAN were on the same subnet. The VPN needs the additional route for that subnet via an additional phase 2 (how Linksys refers to that in its GUI I don't recall offhand), you need a static route on RV082(B) for the 192.168.1.0/24 network, and to disable NAT on pfSense. 

I suspect this has more to do with Sharepoint than anything else, and I'm not familiar enough with it in this regard to offer suggestions specific to it. For VPNs in general and pfSense, make sure you're on 2.0 release or newer, which include MSS clamping by default to 1400 on VPN traffic. Generally hit and miss connectivity problems (if that's what it is) are because of large packets getting dropped. I suspect that's not likely the case though since it opens in WordPad but not Word, the network and firewall have no idea what application you're opening files in and would be impacted in the same way if it were the cause. 

Packet capture of the traffic is the way to figure out what that traffic is. You can do it right on the firewall, no need to setup a span port in this case. Just go to Diagnostics>Packet Capture, choose interface LAN, set count to 1000, and click Start. A couple seconds or so later, browse back to that page and you'll be able to download the capture. Open it up in Wireshark and you should be able to see what's happening. 

Hm, first I've heard of that happening. A quick fix should be to apply the update for the version you're already running, which will basically reinstall the system (overwrites all the system's files at least). 

You can just port forward TCP/UDP 53 to your server on your existing WAN IP, if you aren't already running a DNS server on that IP. But I wouldn't recommend doing that in most cases, it's better to keep your public and private DNS separate. Especially if you're running Active Directory, you'll expose a good deal of information about your internal network to the world if you open the DNS server serving your AD to the Internet. 

You shouldn't use TCP unless that's your only option, always preferable to tunnel anything in connectionless protocols. Not directly related to the issue, but I would change that to UDP. Doing so would possibly help this problem (though it's probably indicative of some other root cause). The "connection reset" is the cause of the issue, it's a question of why the TCP connection is being dropped or abandoned. If your config kills states on gateway failure, and your gateway monitor isn't reliably replying, it could be repeatedly killing states. Checking a packet capture of the traffic would be telling. The logs you posted don't show any signs of issues with keepalives. I wouldn't touch that, and revert any changes you made related to that. 

Sounds like you're either missing a firewall rule on the second interface to allow Internet access, or your NAT is missing the other subnet if you're using manual outbound NAT. 

The option to "Provide a WINS server list to clients" in the GUI sets the "dhcp-option WINS ..." accordingly in OpenVPN. 

Maybe preferring old SAs where it shouldn't be? System>Advanced, Misc, "Prefer older IPsec SAs", uncheck that if it's checked. 

Three possibilities. One, you're expecting an already-established connection to change, which won't happen with any stateful firewall. You'll have to kill the state(s) matching that port forward first, Diag>States. Two, you're running an old snapshot build. Upgrade to the latest stable release, regardless of whether the above fixes. There's a chance you got a snapshot that was in the middle of a set of changes and that snapshot didn't reload its ruleset correctly. Three, you have a buggy package of some sort installed that's hosing up the filter reload process. Running /etc/rc.filter_configure_sync at the command line may spit out what's happening if that's actually the case. But check one first, and upgrade to 2.0.3 before doing anything here.