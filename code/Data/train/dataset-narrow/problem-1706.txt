The problem here is that the recipient mail server is blatantly lying. It's sent an SMTP error code 554 5.7.1 that means it is refusing to relay mail, but in the human readable text, it states "Unknown recipient". Both cannot be the cause of the failure. Someone has deliberately configured the mail server to confuse and mislead. In the case of the mail server refusing to relay, the problem is that the recipient's mail server is misconfigured; it has an MX record for the domain pointed to it, so it should be accepting mail for that domain. Not doing so indicates that it is misconfigured. Further, blatantly sending back wrong error messages is confusing and leads to the loss of legitimate mail in the best case. Your recipient needs to get their email service fixed. Until it is fixed, you'll need to find another way to contact them. 

This obviously applies to mail servers attempting to deliver mail to its destination. It's utterly irrelevant to situations where you are delivering all mail to a smarthost; the smarthost that you deliver to is responsible for following this, but you are not. 

You set everything up correctly (except for politihacks.com having no A record at the moment). The 301 redirect from digest.politihacks.com to politihacks.com is coming from the wordpress.com service. You will need to contact them to have this corrected. 

The %i represents a particular instance of the unit, of which there can be no limit. You refer to an instance by using an sign followed by the instance name, such as: 

You have roughly one packet per second coming into your interface for the better part of a day. Best guess is that someone else on the same subnet as you was sending IPv6 multicast traffic of some sort (neighbor discovery, DHCPv6 requests, whatever). Someone on your subnet could also have been pinging you. You'll have to decide what that means, based on who and what else is on your subnet. 

You've replaced the standard EL5 kernel with a newer custom kernel, in which the programming interfaces (ABI/API) are different. To quote from the you should have received along with the source RPM: 

It's not the process name you need to adjust, but your tool. Press c while is running, or just start it with to see full command lines. For example, without : 

This is just plain old filesystem corruption. You didn't give enough information about your environment to make an educated guess as to what happened, but the most common causes I've seen are: 

So on my system, I see that it's needed by puppet. Since I actually need puppet, I will not remove ruby. Similarly on Debian-based systems: 

You don't. GPT support is available on EL6, but not on EL5. So Hetzner should never have offered you this distribution. To resolve the issue, install CentOS 6 instead. 

To change this behavior, edit (or your particular interface) to specify that IPv6 must also come up: 

Most likely: The remote service is not running. To resolve, start the remote service. Less likely: The remote service is firewalled. To resolve, open the firewall. 

It's best to build the source RPM with , or better yet with as this tool will keep the build environment clean and separate from the system it's running on, by performing everything in a chroot. This does not need to be done on the actual system which the final RPMs are intended for; you can always spin up a virtual machine running the same target operating system and perform the build on that. And if you can't, there is always the new COPR service from the Fedora Project. This build service lets you submit source RPMs for EL 5, 6, 7, and current versions of Fedora, builds them on Fedora servers, and creates yum repositories which you can then use directly. It's very similar in functionality to the PPA service from Ubuntu. Of course, since this is a package which came with the OS distribution, you could simply install the existing binary packages which you can find on any CentOS mirror. 

Here, any file that doesn't end in will instead be routed to of your application, with the filename set in $_SERVER['PATH_INFO']. What happens then depends on how your application handles this. It may deliver a 404, or serve your home page, for instance. Don't execute PHP files in a particular folder at all (your original question): 

Postfix doesn't care; it can be run on any ports you want just by editing its file. Gentoo's blocking the package is entirely artificial and unnecessary. (And why on earth are you using Gentoo for this?!?!?) 

For IPv6, you need rules to deal with the RH0 security issue. They should appear at the beginning of each table. 

Of course you can't get mail in. You don't have a mail server listening on port 25! Servers trying to deliver you mail are getting a MySQL server instead of a mail server. Restore both services to the correct ports. 

You can't do that on EC2, since all instances are behind a 1:1 NAT and never interact directly with the public IP address. 

You can use a tool such as to work with the backup images as if they were actual hard drives (see its man page) or just restore them directly by reversing and in the command. 

You're trying to install a package for Fedora 17 on Fedora 16. This isn't guaranteed to work, since the package versions for the package's dependencies may change from one version to the next. These dependencies do exist on my Fedora 17 box, though at least one of them appears to be different or missing on Fedora 16. You have three options: 

The current way to stop SELinux enforcement for a single type is with . For instance, the Apache web server runs under type , so to make this type permissive: 

This fixes the IPv6 Routing Header Type 0 security issue. It should appear before any other rules. (Note that modern kernels since 2.6.21.1 automatically drop this traffic and do not need these rules. If you have a previous kernel, contact your distribution vendor for a patch for CVE-2007-2242.) Explicit rules for RH0 is many years obsolete and no longer necessary on modern Linux systems. 

Run to get a dump of the current running configuration. This requires nginx 1.9.2 or later. And for the love of gawd, set up backups. 

By default SELinux prevents the web server from making outbound connections to foreign hosts. You can change this and allow outgoing connections by setting the boolean. 

There's no pre-existing variable, no. But you can use whatever socket you need to use, so long as the socket file exists, and php-fpm is configured to use it. 

You have both the 32-bit and 64-bit packages on your system now, so in order to update them you must update them both at the same time with the same invocation. 

It sounds like your server thinks it is domain.com and is therefore trying to deliver the mail locally rather than sending it out to the Internet. The easiest solution is to rename the server. But this won't cover the case of getting local mail to be delivered remotely. In that case, move on to: Next easiest is to configure the mail server to send all mail to a smarthost (in this case Google). How you do this depends on which MTA the machine is running (sendmail, postfix, etc.) but instructions can be found easily enough by searching the Internet. 

I also note that your postfix configuration has been significantly altered from the defaults (which generally work). I expect you to have a lot more trouble... 

You appear to have installed RPM Fusion repositories for Fedora, rather than for Enterprise Linux. These would not be compatible with your CentOS system and therefore would cause this error. To resolve the issue, remove the repos (e.g. ) and replace them with the correct repos. Then, check your file and remove any inappropriate s. (The error 503 is a temporary failure and will resolve itself when the upstream fixes their web site. You can ignore that for now.) 

Your is trying to load the file you specified, , which doesn't exist. Remember that you need to specify the path relative to the document . 

For running my own personal vanity email domain, I find a VPS to be acceptable. Of course I am also sweeping every bit of mail off the server onto my home computer every minute via POP3. If I were going to host other people's email, I would do so on my own physical server colocated in a data center with reasonable physical security measures in place, in addition to securing the server OS and system services. 

You had everything right, up until . It's not necessary to do this if you resized the existing disk partition instead of creating a new one. If you actually ran it with the force flag, then it destroyed all your data. If you did not, then you are safe. The next step, of course, is to restart the system and your desired logical volume. ( here automatically resizes the filesystem in the logical volume, so you don't have to do that separately as the outdated KB article indicates.) 

Best guess: Your server is restarting because some piece of hardware in it is failing. It is, after all, an antique that should have been decommissioned years ago. The symptom you describe is also strongly correlated with failed hardware components, regardless of the age of the system. 

A user can place a user unit in , and the admin can place user units that are usable by all users (which is uncommon, but sometimes helpful) in . The user then can manage the service with the usual systemd commands with the flag added, e.g. 

This looks like a kernel divide by zero bug that was fixed in version 3.1.5. A patch is available if you want to attempt to backport it. 

This is a Red Hat Software Collection. It's meant to live outside the normal filesystem locations so as to not conflict with original system packages (in this case, the original MySQL 5.1). This means that, yes, you have to perform additional steps to use the software. See the documentation for complete details on how to use Software Collections. 

Your PHP runs in a chroot in , but your document root is . So when you load up the becomes . But, in the chroot this doesn't exist! It is at instead. What you can do is to change the directory here so that it matches the view from the chroot: 

Use for an interactive root shell. Use or to run a command as root. The option sets up a shell and environment before running the command. 

Your user's home directory may not be group or world writable, and the directory and may be readable only by the user. Once you fix the permissions, you should find your logins working again. 

Copy the failed partition to the new drive using or better . This may take some time. Perform all further operations on the copy Here I assume that you have copied to and that you will recover files to . Since the journal is corrupt, we will remove it: 

It sounds like you forgot to install the intermediate certificates. A copy of these should have been included with your certificate, named or something similar. If not, download this from Comodo. Place it on your server, and set its location in Apache's directive. 

Now, it appears you run a web hosting service and have numerous web apps. If one of these is compromised, it may begin sending spam. These often make direct connections to remote mail servers by looking up their MX records and connecting to port 25, as if they were actually a mail server themselves, rather than delivering mail to the local mail spool or an authenticated mail service on ports 587 or 465 as legitimate web apps do. One way I stop this is by implementing a firewall rule that prevents outgoing connections on port 25 unless the user is the mail server user. For example: 

So it's likely a previously expired domain that was used for something else. The KB article was last updated almost a year ago. 

Debian will eventually have systemd, so this is the way to do it on a Linux system which uses systemd (and many do already; you might consider switching distributions). Systemd can handle keeping the service alive for you automatically; no other tools are required. Simply make sure that is set in the service file's section. 

Once a service is started and listening on a port, no other program will be able to bind to that port number. So start your service on whatever port you want; you have nothing to worry about. 

What's wrong with using macvtap? This is completely painless and doesn't require any further configuration on the host. 

Your system seems to be trying to mix packages from RHEL 6.0, 6.2 and 6.3. This isn't going to work very well. My first thought is that your yum caches are stale. Try cleaning them before you install the packages again: 

Your must be set to the directory of your Rails app. For instance (it seems you're trying out the demo from the Rails book): 

WordPress has a simple 503 "maintenance" page which you can (and should) enable during a code deployment. If you upgrade WordPress from within itself, then it enables and disables this page automatically. If you want to enable it yourself, simply create a blank file in the top level WordPress directory, and delete it when the deployment is complete. Example: 

This error is about Unix permissions, and so that is what you need to check. It may also be caused by SELinux in some circumstances. In particular it means that Apache could not search a directory somewhere above the requested file, so you need to check the permissions on the entire path. Fortunately Linux has a tool to do this, called . Run and you can then inspect and fix the permissions on whichever directory is the problem. I bet it will look something like this: 

Give up and change the system root password. WHM will allow a root login with the system root password, and if neither you nor the client actually knows it, you are going to have to reset the password anyway. You simply cannot avoid this without also avoiding doing any actual work, which defeats the purpose. As for other processes using the root password, that seems unlikely, as even the most junior of admins will typically resist hard-coding any root password anywhere. People, on the other hand, might, and you can simply deal with them if they complain. 

Tor does not actually make any attempt to verify the authentication information that a SOCKS client provides to it. It can be used entirely unauthenticated, and it has no configuration to force authentication. As such, you are strongly recommended to not expose the SOCKS port to any IP address that you don't want connecting directly to it. From the man page: