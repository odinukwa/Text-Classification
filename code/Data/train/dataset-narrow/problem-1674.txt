According to the this cisco documentation, "dispersion, reported in seconds, is the maximum clock time difference that was ever observed between the local clock and server clock". With ntp servers that are not totally broken, a high dispersion should never occur. The only feasible scenario is when your client inits ntp and so far has only its local clock available. And even then, a dispersion as high as you report corresponds to clocks that are off by more than two weeks. It should be sufficient to ensure that the local clock is not too far off in the beginning (even a couple of hours would still be acceptable), either by adjusting the clock (and date even!) in the BIOS or by issuing once before starting on the client. 

Is there any way for the users to update the login credentials with the second scenario above? Preferably, is there any way to configure the profile such that connection failure due to login failure makes the username/password dialog pop up, thus allowing the user to store the changed credentials? 

Question 2. Could any of these things cause this problem? Currently, we dropped the server farm completely, i.e., we only have "poor man's load balancing" via DNS round robin (and we especially miss the reconnect-to-previous-session feature of course) Main Question. How can I get my farm into working condition again? 

Probably the best practice (if possible) would be to move your service from "Alpha" to another, separate network. And put 2 firewalls between this and Alpha & Gamma. This is a concept similar to DMZ. Consider a worst case scenario - what if your service gets compromised? That way a malicious user from Gamma network gained access to your whole Alpha network if you have service there. Even if you proxy it via HAProxy, he can still execute arbitrary commands on your server on Alpha network via HTTP(S) doorway. If you put the service in separate network even if it's compromised he still needs to penetrate your firewalls to reach other services. 

Do you run it on shared hosting? Has you tried reaching your hosting provider support on that? You might also test it with services like webpagetest.org to see if it also lags from other locations. Besides you can get some or sort of webserver test suites, and temporary place it on your web server to see where the problem is. But if thats a shared hosting I say thats not your problem, just ask them to check and solve it. 

So even if an update process should somehow take a whole hour, the reboot that might be necessary should happen at 07:00 in the morning and not nine to ten hours later, shouldn't it? I would like to keep the update process as admin-friendly as possible, i.e., without the need to manually install updates off-hours or to manually schedule a reboot. Q1: Why can it happen that the automatic reboot (always?) happens so many hours after the scheduled update installation time? Q2: Is there any way to gobally prevent automatic reboots during office hours, i.e., to automatically delay an auto-reboot scheduled for between 08:00 and 18:00 to happen at 23:00 instead? 

Login to your switch(es) and issue or similar commands (depending on make and model). This will give you all MAC-Adresses of active devices (except thee switch itself). If any of these MACs does not occur among the MACs found with any of the ping or other methods in the other answers, you may want to investigate further what device that is. Maybe it doesn't matter because it does not even speak IP or belongs to a different VLAN, but at least you can get an overview whether your other probes are accurate. 

If that doesn't works, refer to that library manual on how to spawn a shell without , probably will work too. 

I am not familiar with NetworkManager. Personally I prefer "old-fashioned" direct approach with iproute2/brctl/vconfig tools. But I've found this bug report & errata: $URL$ which are very related to your problem. You are just having issue with adding VLAN to a bridge instead of bond interface like there. But a workaround from that bug report will work too. Instead of adding (which will fail because you already have device associated with connection!), you must edit properties to make it slave to . I've tried to reproduce a configuration similar to yours. But without teaming, because seems like you don't have issues with that part as you can ping from team0. I've created a bridge and vlan id 24 on my NIC enp2s0. The link above suggests then to modify bonding (VLAN in our case) connection like like this: 

Your www-data user most likely doesn't has any password set. This disallows logging in with and that user. Your www-data user shell are most likely set to something like which makes sense as this user aren't supposed to log into the system as real user. 

Interestingly, no corresponding error messages occur with deeper subdirectories (e.g. ). What causes this error (or the read attempt in the first place)? And how can I get rid of it? 

A Windows 2008 R2 machine reboots automatically every now and then, typically on Fridays afternoons. The reboots are "announced" in the event log as follows: 

Maybe you can log all real-life DNS requests for a sufficiently long period of time (this may in fact be several months if you want to catch that once-per-quarter-query-all-printer-page-statistics script). Then delete all records never requested for. 

We have a LAN with Cisco switches, redundant cabling and spanning tree. If I understand it correctly, when I pull out a redundant cable (that is currently "used" by the spanning tree) it takes several seconds until the spanning tree converges in reaction. How can I prevent this packet loss (assuming of course I know beforehand that the cable will be pulled)? That is, how can I make the spanning tree adapt "proactively"? I would have guessed that an interface plus waiting a couple of seconds should suffice, but did not dare to try that out yet. Actually, I am afraid an interface shutdown would cause the same interruption times during convergence because I suffered from such an interruption yesterday when makeing a supposedly harmless configuration change at some interfaces. (Edit: I just confimed this experimentally; as expected there was some 20 seconds of interruption after interface shutdown - note that I am looking for a "lossless" soluiton, not just "less loss") 

Now, to create a clustered VG, I've enabled fencing on all 3 nodes in my cluster (with IPMI if that matters). 

As I can see now, from your detailed update, most likely it seems that you don't have those IP's assigned on your local network interface. You've only added 111.222.62.130 on your server. In order for linux S(ource)NAT to work, you must have every IP address you're NAT'ing to (--to-source) to be actually added on your network interface. Check on how to assign additional IPs to an interface. You must issue for every IP you want to have SNAT working for. It will be convenient to write a script to fill those values. Be aware, that once you'll add those IPs on your local interface, you will "expose" your server via them to the Internet. You might use iptables INPUT table to block unwanted local connections to those IPs. By local I mean only to your server. Those coming through NAT are subject to FORWARD table only. PS: If that it's not the case, also please check and post your . 

But you actually don't need to change your user to run a system program. Besides most likely your distro has that www-data user to run web server under it (using system means) and every PHP script you run on your webserver are already running under that user privileges. Just run your command without doing su and that should work. Something like this: 

Now proceed as follows, using two boxes TEMPAD (with ip 192.168.11.100, say) and TEMPDNS (with 192.168.11.200, say): 

If your update is finally selected for installation, you will find additional entries in the windowsupdate.log 

Possibly other variants exist as well. There is of course one important point: Don't shoot yourself in the foot! For example, 

One of my users found a message in his Sent Items folder and claims he has not written it. The (external) recipient address exists and is knwon to us (though said user doesn't know it and had no contact so far), the subject is appropriate and very specific to that recipient address (and to no other recipient), the mail body contains a single word "Einverstanden" (German for "agreed"), which looks like a rply to something, but isn't. This looks a bit strange (though not strange enough to suspect malware) Is there any way to find out in greater detail how the mail was actually produced? (Which Client on which computer / OWA / smart phone with ActiveSync / other user with "Send As" privileges / ...) While "internet headrs" are very informative for inbound mail, the corresponding field is (logically) empty for this outbound mail ..., EDIT: Thanks to hints in the comments I found more logs than I knew before. Here's what I found: 

First of all your iptables command missing part. But this should generate an error as no POSTROUTING table exists in filter table by default. Make sure you are adding this to a correct table. This is very similar to this question: NAT GRE (IP protocol 47) over Linux router Next, make sure your are specified correct $internal_ip and that one matches the one you see on your tcpdump. Sometimes a simple typo slides out of sight and makes things look complicated. Also check your iptables rules doesn't have any preceding rule which triggers before your SNAT rule. Netfilter will trigger only first match on that occasion. Your note that TCP/1723 are natted actually means that you have other rules there. If this doesn't helps, make sure to check & post your detailed configuration with and things like . With switch with iptables you can actually see how much packets was triggered with each of your rules. You are running inside VM. Check your host node iptables rules also! Your rule might worked but host node firewall has overwritten packed source IP coming from your VM back to your internal ip. As seems like you are inspecting packets somewhere else, i.e. not directly on your VM. 

The purpose of records is that an application (mail transfer) can learn about the host to be used. On application level, host names are the right thing to use (not IP addresss). Also, adding the conceot of variant type record to DNS introduces a leverl of complication and hence an entry point for problems, implementation mishaps, security challenges. For example, is a valid hostname (yes, it is, even in the light of RFC1034, 3.5). Specifying this host as in a bind configuration file for example.com might look like 

Additionally, I don't understand why the required microcode is missing (and hence BIOS/firmware update is suggested) given that the underlying VmWare host has ESXi550-201709103-SG installed (note though that ESXi550-201709101-SG comes with a footnote that it mitigates against CVE-2017-5715 but not against CVE-2017-5753) What should I do? Update Meanwhile, I did also install BIOS/firmware (specifically, for the underlying ProLiant BL460c Gen 9 blade, I installed BIOS version 2.54 12-07-2017 (Fixes: "Updated the Intel processor microcode to the latest version."). The blade/host as well as the guest have been rebooted afterwards, but I still get the same test results (FTFFTTTTF and I am still suggested to "Install BIOS/firmware update provided by your device OEM ..."). I even had the guest boot into its BIOS and flipped through the settings to see if something needed to be enabled (apparently this is not the case). Update 2 Out of curiosity, I tried the Linux testing tool as well. That tells me "Hardware (CPU microcode) support for mitigation: YES" even on a blade that had only ESXi550-201709103-SG installed, but not yet ProLiant BIOS 2.54. 

If you don't want to able to log in on serv2 without password when you don't set your non-default identity with '-i' option, you have to remove your default identity stored on serv2 at . It should be the same line as your local key. 

This is because you have your identity (public key) added as authorized key on serv2 in . See section for more information on this file. Your default identity are stored in files and similar files ending with .pub storing respective public keys. When you try to log to any remote ssh without specifying '-i' option, these are offered to remote server. If the remote server has any of these stored under their then you can log in with that key (i.e. without password). Because password based and public-key based are two different methods of authorizing remote user. When you are specifying '-i' option, you are just presenting a different public key, stored in that file. Also you can always run ssh with '-v' option to get more details about which key method/public key was accepted by the remote. Like in this example: 

If you are running a 3 or more node cluster with cman/corosync and you have some sort of shared block storage (SAN) connected only to some nodes in the cluster how can you enable CLVM on that storage device? In my example I'm running a 3 node cluster, there 2 nodes are "main workload" and 1 node are used for backups & archives. Main nodes are connected with FC HBA with multipath to a SAN. Everything works fine, I was able to initialize PV on that device and can see it on both nodes: 

You may have a considerable delay in upgrades because it may take a few back and forth movements antil this mobile WSUS learns which of the updates are actually needed and should be downloaded. 

This handshake should look similarly wrong for any TCP connection to the cluster, not specifically for ssh. (And in fact the same problem should occur for udp). Can yuo confirm (by sniffing) that other (working) services continue the handshake with the virtual address or with one of the member addresses? (Sorry, this should be a comment, but I can't) 

So, while the last check is suspiciuously short before the reboot, the last actual update took place yesterday (Forefront virus definition update, no reboot required). What can be the cause? What can be done to prevent? Please feel free to ask for more details. 

and presumably that is precisely the same an MX record with an IP should look like. And even to transfer the informatoin in a DNS datagram requires some quirky additoins; the simplest way would be to introduce a new resource record type, say, for disambiguation. But then again, why introduce the burden such a new record type when