But if I remove comments from the line to enable getting feeds from the other camera, it takes a lot of time to capture a frame (10 sec or something). Has anyone faced similar problem ? I tested the same program on my ubuntu 15.04 laptop. It works fine on my laptop. Additional info : Output of . 

Raspi-config utility should get installed by following these steps. Try running to check. Hope it helps. 

Unmount all the partition by separately selecting each partition in Gparted and right click and selecting . Once unmounted, delete all the partition. (right click --> delete option) You should be able to see all 7.4 GiB as unallocated space. Create new fat32 partition of 7.4 GiB by right clicking on unallocated space and selecting option After doing all this, click on button in menu bar. 

Rpi's green light flashes for 10 times (It may be only true for raspbian, not sure about other OSes) with a regular interval before getting completely turned off. So, you should wait for that. (Source : Experience) 

Edit: A little digging on troubleshooting page suggests that official screen uses FT5406 controller which makes use of SPI or I2C, and if you want to know internal working of it, its data sheet can be found from here. 

I had the exact same touch screen controller that they have used for running their touch screen. It should work out of the box. You can select USB in those options and give it a go. Also, when you connect it to USB port, try running lsusb. There should be eGalax something device listed in it. It means it's detected as a device. Hope it helps. ======================================================================== Edit : I think Raspbian does include eGalax drivers by default now. I had a look at my electronics junk box and found the same module. Connected to USB of Rpi. See attached. 

Edit: One of the alternate solution could be grabbing package from raspbian repo and install it on Kali Pi since both are debian based distros, it should work out of the box. Again, I've not tested it but it should work in theory. Here are the steps : 

Edit: You can make use of if you're using linux. and use before issuing GUI commands to make it work on your original display. For windows (PuTTy), you will have to enable X11 forwarding support. Hope it helps. 

I think all the things you mentioned can be easily achieved. Timely triggers can be setup as cronjobs. While remote triggering can be achieved by basic web server and binding it to the relevant scripts. It shouldn't be very difficult. Hope it helps. 

I'm facing a weird problem currently. I've a couple logging units based on Rpi at various places which I normally access via remote SSH to monitor things / update program. For a particular RPi, I'm not able to run any command with which I assume that binary has got corrupted somehow since it's giving me . Now my problem is to run any root level command such as or replacing binary by . I will be needing . Now my question is : Is there any alternative of so that I can get root access and fix this issue ? Please note that I only have remote access to this RPi and hence can't go over there physically to fix this issue or replace this card. 

I believe that you can run spotify web client on raspbian as well, so no need to go for custom os unless very necessary or you need those features. & 3. I'm sure there're plenty of IR options for RPi available online with python scripts. (like this one : $URL$ 

I think for this particular UPS, vendor also provides source on their site. You can download source from this link. Untar it and copy it on Raspberry pi. And as per this guide, 

If you're using a USB card reader, replace your device path in or accordingly. Here is a reference for more details. Link Hope it helps. 

You can fetch omxplayer build from this link $URL$ especially on debian based minimal distro and install it. On other flavors, you can get source from $URL$ and compile it by yourself. ======================================================================== Update: I burned the latest minibian image to a spare SD card and ran it on my Rpi 2. Boot time is about 8 - 10 secs. And since It is a debian OS, you can simply type "apt-get update && apt-get install omxplayer" to install it. Although before doing that, you would like to install raspi-config (apt-get install raspi-config) to expand your rootfs size as there is hardly any room for videos. :) And Yes, you can use $URL$ on minibian. I just installed it. Seems to be working fine. Hope you find this helpful. 

Contiki OS is an OS for resource constrained platforms (mostly 8 and 16 bit Micro-controller based) where you can't run a full fledge traditional OS. It's similar to other such OSes like RIOT OS and TinyOS. RPi falls in a single board computer category where you can run full fledge OS with all the traditional stacks. As far as I know, Contiki doesn't support RPi and hence COOJA also doesn't have RPi in its mote list. 

First of all, you need to disable serial console on Rpi which is on by default. If you're running a new version of raspbian. Run , go to , Go to and select . It will disable your serial console. You will have to reboot to make it effective. If you don't want to make changes using way. 

I don't think there's a way. No. However, it is possible to get it without connecting display by connecting it via SSH. But clearly, you don't want to boot it up so it is out of question. Hope it helps. 

There're quite a few tool kits available for GUI designing. Such as ,, ,, to name a few. is python wrapper around Tcl GUI tool kit which is installed on Rpi by default. It's quite simple yet powerful library. Hope it helps. 

As per this forum thread, most likely path is not being setup. You can check if utility is installed perfectly by checking . If it works perfectly, you need to add location to path as it is not included by default in ubuntu. How to do it ? 

I'm running a Ubuntu 14.04 LTS on my RPi 2. I've OpenCV 2.4.9 installed on it. While running a simple camera capture program works fine. Here is a code for it. 

If you just want to use OpenCV and can compromise with version, you can probably install it from the official Raspbian repository by following apt-get command. This is the easiest way if you don't want to deal with compilation errors and don't want to spend time compiling it on your own which takes about 10 hours on Rpi 1 and 2.5 hours on Rpi 2. 

There's no official documentation from foundation regarding the use of those pins or what exactly those pins are for. But I believe that, those external pins are responsible for of the display. There are various i2c based touch controllers (like TSC2003/2007 and many others) available in the market and official display could be using one of those in their displays. (I could be wrong here but it is most likely the case). As far as, INT pin goes, I'm not sure but in TSC2003 based touch screens, it is an input from controller going to one of the Rpi gpio which interrupts Pi to tell that touch screen is touched, and after this interrupt Rpi driver goes on to read co-ordinates from i2c bus. I don't have an official Rpi display with me, but you can test if touch works without those pins connected to Rpi to test above mentioned logic. Also, those external I2C lines are different than DSI I2C lines as those lines are used to flash display controllers if required. Hope it helps.