How can I make stormy water like they did in Temple Run 2. I've tried with Unity Water Pro to achieve the same result but when I include it in the project the frame rate crashes to 3 frames per second. Unity Water basic doesn't fulfill the requirements at all. So is there any other way? 

First of all you need to determine how would you determine z-axis. If you want the z to be constant, just change the position after instantiating or while instantiating. Another way would be to casting a ray from camera, and instantiating the object at ray hit position. Something like below - 

Well I am not sure about good practises or standards here, but I do use (Mostly ) to manage certain aspects of my game. For example, I always have a class which takes care of all the GUI related stuff for me. It has listener methods for every event, for example when player dies the player script calls method on GUIManager, which pops up the message on screen. The change in health is also indicated via method. In case you have too much data or UI elements, let other classes which are responsible for updating them, handle them. For example the life of player will be handled by Player class, the GUI Text or UILabel(if using NGUI) will still resides in GUIManager and will be accessed via Singleton calls by Player Class. Reusing variables via managers is also a way to reduce number of variables. 

Add a Like button yourself and Open a page on it's click. To open external links in browser, you can use Application.OpenURL(). In this method the user have to like the page from the browser itself. I don't think there's any way by which you can make him like it from the game itself. 

If you just want to access the value of a member variable of any unity class or want to call a method of Unity class from Android activity, you can always use JNI for this. You'll need to create a C++ interface between them as well(Dunno if it can be done without C++ interface, but I believe that's required). Check this link for a quick solution. 

This all can be done in single script, don't forget to attach prefabs in prefab1 and prefab2 from Inspector. 

In Addition to 's answer, I'd like to mention that Unity forbids using keyword for any MonoBehavior, since they are present in the scene and are already created. You'll most probably get a warning if you do that. You can create new Gameobject if you just want to have an empty GameObject in the scene. You can't manually create a MonoBehavior using new keyword. You can however use Instantiate() for prefabs and AddComponent for Components. To use one of the already created MonoBehavior or GameObject which is present in the scene, you're encouraged to either make a public variable and drag the GameObject in the script from editor or use GameObject.Find() to use it directly from script without dragging and dropping. First method is faster and thus recommended way. 

If you see the structure of UI files, you can see that every view is a subclass of (Same as class in ). returns the current root view or whatever it's called. This statement can be compared to of Android. Similarly you can call method to remove the view. I instead just set it's visiblity to false, as it's less prone to error. One thing you need to remember is you need to call and in your app's and functions, which gets called at every frame. 

The question is quite old, but I think it's better to answer an unanswered question than just leave it. doesn't need a loop to continuously render the views, it automatically invalidates the views at each frame. doesn't follow this approach. You need a in which runs once every frame. The approach I follow and which is also recommended by Marmalade is to use for every view. are like in Android, where we can create our views statically. The UI file is called on runtime and set as current view using the following method - 

Or if you're using , you can use for this. It'll automatically handle vertical, horizontal and radial progression using part of the image. 

There're two ways to do that. If you have an ($199 one), you can create an or to sign your file and then can send the app to be used by any of your friend. It'll ask for confirmation while running for the first time on the device. Another method is when you don't have the enterprise account, rather you have a simple developer account($99 one), you'll need to add your UDID of your friend's device to your devices' list and create a developer provision which needs to include that device.Just to warn you, you can only add 100 devices at max and once added you won't be able to remove that device unless you renew your developer account. Now you can use this developer provision to sign your ipa. In both ways the ipa needs to be installed via and not via iTunes(I am not sure if iTunes will allow installation of these ipa). Just drag and drop the ipa, select the connected device and hit install. You can add their apple id in your test user's list, which will make their IDs as sanbox ids and then they can purchase anything from your app, without actually paying anything. 

Another way would be to save LastTotalShots in a variable and check if it's the same count or not. It'll remove any possibility of incrementing a level at similar totalShots count twice. Code snippet 2: 

One way would be to use NGUI here and save yourself from the trouble. Another would be to use a boolean flag which will be set to true on clicking the red button. To give you some idea on how to use the flag method, you can use this code-snippet - 

Game ratings are not enforced by any country for any kind of game. They'll just ban your game, if they found it objectionable enough. The rating is more of a de-facto standard used to make the end-user aware about the content of the game, so that kids do not play games containing extreme violence. You'll be required to submit ratings only if you're making games for major consoles, such as PlayStation, XBox or Wii. Microsoft accepts ESRB and few other ratings for games in Windows Phone and Windows RT platform too, although it's optional. Sony, Nintendo and Microsoft will fail your game unless you have a proper age rating, as this is a major compliance criteria for any game submission. The compliance is known as TCR for XBox, TRC for PlayStation and LotCheck for Nintendo Wii/DS/DSi. Update:- There're few countries which requires explicit rating by one of the approved rating agency to be eligible for distribution. As found at WP game rating guidelines , and requires game rating from one of their approved rating agency, while in you need to self declare the age rating yourself. If you don't put any rating while submitting your game, Microsoft will not distribute your game to these countries. Apple in this case asks developers to rate their own game and checks thoroughly if they put it correct as part of their submission process. India on the other hand use their own Govt. agency CBFC to rate a game. However CBFC is primarily for movie ratings and they generally don't enforce any publisher to make a rating submission, although they can use their own discretion to ban a game. Also as mentioned by Andon M. Coleman in the comments below, Australia doesn't enforce you to make a rating submission, however that's only if your game doesn't have any adult content. If it does, then you'll have to submit it for rating analysis or else it'll be banned till you do. In short the the ratings are enforced mostly by the distribution channel you're using, since they don't want to lose their credibility and would like to keep their customers happy. Govt. doesn't have anything in that(except for few countries such as Brazil, Russia and South Korea). So to answer your question, when does a game need an official age rating, it's when your distribution channel requires it and that's too dependent on the region where you want to distribute your game. More info about the rating system being used in various countries can be studied from this wikipedia link. PS: I've tried to put as much info as I could get for the countries which I got to know about. This answer might not be true for few other countries which actually requires the game to be rated. Feel free to let me know if you know something which I've not mentioned here. 

The solution depends upon why you'd want to use Eclipse. If you want to use it for Script editing, you can do that via tools. However you'll be able to use it just as a text editor for C# (I am not aware if you can get syntax highlighting etc. feature for C# in eclipse or not), but for UnityScript you can use it as a full IDE. If you just want to use an Eclipse Android project, then you can export the unity project as from . 

As Byte56 already told you have checkbox turned in your wall. You need to turn it off, so that it can collide with any other object which has collider in it. If you do not want your wall to collide with some other object, you can put both wall and other object in separate layer and then can turn off collision between those layers by going to . However this will turn off any (or any trigger related call) between these layers too. 

I didn't understand your problem exactly, but I guess you're having difficulty in running same script on different clones of a single prefab. If you've already attached a script to the prefab then it should work, or if you havn't, you can attach a script at runtime too. I guess you just need to swap the position of two gameobjects, then you can use the following script -