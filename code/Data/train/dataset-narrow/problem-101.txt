to whoever may run into this issue with the Cisco 7941(G)s, I was able to get it to work by using Microsoft DHCP Option 66. Putting the IP address in the ASCII string field for option 66 DOES NOT work. The string has to be a FQDN resolvable by your DNS servers. For me I created the A record for sip.mycompany.local on my DNS servers and placed that name in the DHCP option 66 field "sip.mycompany.local" no tftp:// ftp:// http:// https:// needed. Short answer Option 66 ASCII String requires a name that the phone will query the DNS servers it is assigned by DHCP. Putting an IP address in this field will NOT work. 

I'm having an issue identifying why my Cisco vWLC with DHCP bridging is flooding my DHCP servers with REQUESTS. These requests are coming in well over 1000/min. 

Having a tough time here getting EAP-TLS to work. I am converting from a EAP-PEAP solution to EAP-TLS and have done the steps required for PKI so as to be not a certificate issue. (server and client certs signed by same CA) I believe there is an issue with MTU sizes based on the logs below and the following Cisco Forums I've found. Listed below are the posts. However after performing the Framed-MTU = 1344 and changing it to different sizes, I see no difference on the Cisco 3750s logs. Always errors with Invalid Eapol Packet length = 1492. Has anyone run into this before? I am using Win2008R2 NPS Framed-MTU workaround = $URL$ and $URL$ Why I'm thinking this is a Fragmentation issue = $URL$ Basically my set-up = $URL$ 

They are quite different. What I'm about to write is in high level terms: Google and ETSI can help you with details. 

WDS is by design intended for forward frames between the edge stations, repeater nodes and the base station (the thing that is connected to the wired Ethernet). It's not clear from your question whether what you call your core router is a WDS base station: if it is, it really ought not to be. Two reasons. If a frame is initiated from one WDS node, it is supposed to be forwarded to all the others. I believe (don't have the standard to hand) that it is not supposed to forward frames that it has already sent, to prevent loops. Broadcasts are one example where failure to do this can get out of hand very quickly. Now imagine that the WDS base station is also your "core" switch. Now it is spamming the wired network with frames too! That is bad. A better model would be to take steps to isolate your wired and wireless networks. This diminishes the scope for problems if a device goes nuts and --even more important-- gives you a place where you can ascribe security policies. Wireless is a common attack path and plugging it straight into your lan without filtering and policy is trouble waiting to happen. 

But: that's not much of a gain. The real promise of NFV is that you can spin up a function on demand, scale it up and down according to need, and generally be much more cloudy than traditional service providers have been. Now imagine that you have got to that state, so that you can, say spin up a call control core, or a application server, or a firewall in minutes not months. Now you can do service chaining In service chaining, you create new products by stringing together functions delivered by NFV. There are some subtleties here best explained by an example. Lets say you (as a service provider) want to sell some new phone product to the government? Ok, you'll need some call control, and a telephony app server. And a firewall or packet inspection engine. With function chaining you string the firewall and the call control/app server together so that the product is defined as the chain of all those things. The subtlety is that SFC can happen at the IP layer ("send traffic to the firewall, then the call control"). Or it can be a logical construct used by a product designer. Or it can be inherent to the elements being strung together (eg an IMS core using filter criteria to send calls to app servers). 

Reasoning is we have some Servers that are local, but if they fail the SLA ping, I want to translate to something else that isn't local. Thanks everyone! 

I am setting up a ISPEC tunnel between a Linux System running Openswan and a Cisco ASA 5505. The strange thing is, the tunnel comes up I believe (based on the screenshots below), but I can't get traffic to traverse. I am wondering if it is an issue with the LAN being a Looopback interface on the Openswan system. In summary ASA side(2.2.2.2) has LAN 192.168.0.0/24 and Openswan side(1.1.1.1) has LAN 172.16.255.1/32 which is a loopback interface on the Openwan system. I am getting the following error and am fairly confident it has something to do with this line: 

Testing in a lab...I have a VLAN directly attached to a Cisco ASA 5520 that contains host machines who use IPs from a public address space, 11.11.11.0/26 for example. The ASA has two interfaces this dmz interface containing the hosts on the 11.11.11.0/26 and an outside interface containing a /30 peering point to an ASR running BGP etc. Is there a way to configure the ASA to allow connectivity to and from this 11.11.11.0/26 without having to put in NAT statements since both interfaces are two different security-levels? 

I have a few /30 subnets connecting OSPF routers over a broadcast capable link.. Should I also configure the interfaces involved in the link to ip ospf network point-to-point? Or does it matter? The only thing I can think of is to prevent the election which from my understanding shouldn't matter since it's only 2 hosts (the routers) in the subnet? 

Things like the Cisco phone system and Windows servers are moot for your question insofar as they are immobile. So the real issue is how to make your mobile laptop clients' sessions persistent as your users move around the building. The best investment you can make here --and also the easiest one to sell to your user base -- would be an upgrade of your Wi-Fi infrastructure to permit seamless roaming on the same SSID. It requires no changes from the users, gives you a control point for policy, and does exactly what you need. 

It's a reasonable thing to do, technically, but I don't believe it will help improve the users' experience, which is really the only thing that matters in mobile networks. And so, why bother? Consider that voice (rtp) is packetized into tiny lumps, 20 ms being typical. That translates into a lot of small packets, rather than a few large ones, that might benefit from the larger MTU. SIP, the signaling protocol, might do, because in IMS networks the messages are quite large, but that doesn't really contribute to the users perception of their experience. Data flows are the other case, eg video or email, but again, the video is is short packets and the email (which is typically really https) is not time and latency sensitive in a way that messing with the MTU would help. 

Essentially because the dial up server has more than one POTS circuit associated with it. By contrast, a residential line has one circuit, so when A calls B who is on the phone, the circuit is already tied up. The dial up server would not have one phone line (circuit) but many, aggregated into an entity known as a trunk. Different size trunks are possible depending on anticipated traffic patterns. Of course, if you get it wrong, it's still possible for a trunk to fill up, and give you the busy signal. 

Latest Interface Config: interface GigabitEthernet1/0/3 switchport access vlan 105 switchport mode access switchport voice vlan 110 srr-queue bandwidth share 1 30 35 5 priority-queue out authentication control-direction in authentication event fail action next-method authentication host-mode multi-auth authentication open authentication order dot1x mab authentication priority mab dot1x mab mls qos trust device cisco-phone mls qos trust cos auto qos voip cisco-phone dot1x pae authenticator spanning-tree portfast service-policy input AUTOQOS-SRND4-CISCOPHONE-POLICY Global configs dad Debugs: 

In a lab using OSPF in which I'm try to mimic our topology that uses EIGRP. The issue I am having is I can't get default-information-originate to propagate the default route from our 2 CORE sites (CORE1-1,2 & CORE2-1,2) to our remote sites across Area 0. I've tried both default-information originate and default-information originate always. Also, I do not have any stub or nssa configured. Perhaps I'm going about this the wrong, but I figured I would pick the community's brain. I appreciate everyone's time looking at this. Here's a picture 

Probably a quick question. I am testing my dotx (802.1x) deployment on an Access Layer switch. I want to know if I plug in a consumer router, like a Linksys or Netgear, will the dotx only see the WAN's ports MAC address during the authentication process? I believe that should be the case, however I am testing with an Aruba Access Point. I've plugged in the WAN of the Aruba into the dot1x enabled Access Switch. Using MAB i've added the MAC to bypass authentication...however periodically devices behind the ARuba will show up in my Access Layer switch's logs asking for EAPOL??? 

Since you're doing static DHCP leases in the same subnet based on MAC I would recommend the following: Use the X0 interface for your LAN and setup the DHCP server with the static leases. To do this look under Network->DHCP Server and select 'Add Static' to set each lease. Use X1, X2 and X3 as your WAN interfaces. Under Network->Address Objects setup 3 objects as ranges for the IPs you wish to group. Such as X.X.X.1 to X.X.X.51 as IP Group 1. Under Network->Routing setup static routes for outbound traffic for each range to use the desired gateway. As an example: SOURCE: IP Group 1 (address object for first IP group) Destination: All WAN IP SERVICE: ANY GATEWAY: X1 Default Gateway (This is the first ISP connection) INTERFACE: X1 METRIC: 2 COMMENT: IP GROUP 1 TO ISP 1 I would also recommend checking 'Disable Route when the interface is disconnected' to allow for low-level failover if the interface gets unplugged. This will allow you to use 1 LAN interface to accomplish what you wanted to setup. 

Above you see that the source is ANY allowing all external IPs, the Translated Source keeps the original information, the Original destination is your WAN IP of your WAN interface, the Translated Destination is your target host, and the Original Service is the ports you wish to map to that target server. You can translate the services if you like, for instance routing port 3390 to 3389 for RDP on a machine to avoid registry hacks but ensure you have a reverse rule enabled for the outbound path. You can also define which interfaces this policy is bound to if you like, so for your example the Inbound would be x1 and Outbound x5. This should allow you to point to your external IP for these services via x.x.x.x:port and route to the target server. EDIT: For the internal routing under Network-->Zones choose LAN and check the box for Allow Interface Trust. This should allow traffic to flow between interfaces. Keep in mind this does open all LAN interfaces to share traffic so any segmentation that is currently configured may be broken. If you do not wish for all traffic to be trusted between interfaces then do not use this option. For specific LAN routing you can manually add a route from x5 subnet to x0 subnet over any service with the local gateway (0.0.0.0) and use the x0 interface. If you wish to route directly to an individual host then select it as your Destination instead of the x5 Subnet. Make sure that there is a converse rule to allow traffic from that host to the x0 subnet as well. 

I don't believe this is possible iwth the Cisco ASA series, but figured I would as the community. If I have an Cisco ASA, can I use the sla feature to track a NAT statement? for example. objReal1=10.1.1.1 

interesting traceroute I am getting thru a firewall where we are NAT'ing both Source and Destination. I am wondering if it is possible to get this to work. We are trying to set up a traceroute monitor to trace routes out on the far end of our firewall. We are using Nagios to report back if the last hop changes to gives us an idea of any fluctuations. I have the Nagios script working internally, however when I cross to a Host on the far end of the Firewall. I am receiving werid info back from the trace route command. I've tried both ICMP and TCP traceroutes. Here is what I am getting. 

I have a Twice NAT routing question. How do I forward an IP packet based on the pre-translated destination? Right now I have conflicting subnets between two sites which is why I am doing the Twice NAT. However, I believe the Cisco ASA is routing based on the post-translated address and therefore not forwarding the packet in the correct direction. Here's my code 

I think Cisco was referring to the interesting traffic is automatically put into a GRE formed tunnel. Which is different than we normally think of when making a GRE tunnel. Usually it has to do with routing and you need a virtual interface to have an IP address so you have something from R1 to push routes to R2. Correct, in WCCP you don't have to specify an IP address for the GRE interface wccp0. Most of the times I've see it set to the same as the physical interface so you can run squid on that IP address only. As long as you have ip_forward=1 the packet is already decapsulated and in the wccp0 virtual interface. You can verify this by doing a tcpdump -i wccp -vvv and you will see stuff. The trick here is WCCP happens after the routing process, which is usually how we use GRE. We are skipping the Tunnel interface IP part because we are using an ACL on the Cisco side, and Squid WCCP process gets the packet since it's automatically decapsulated when it arrives. Squid isn't a router so we don't need a Tunnel interface IP for next-hop statements...the decapsulated packet is ready for processing.... WCCP SSL redirection using Squid3.4+ and Cisco ASA