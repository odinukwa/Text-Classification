I am not sure what your topology looks like, or what exactly your requirements are, but I noticed that there are IP addressing overlaps. 

If you are getting memory allocation errors, a reload should be in order to clear up whatever is going on, at least temporarily. It looks like you are running out of memory (Cause: Not enough free memory). I would look at perhaps upgrading the memory, which is the cheapest option, or if this router is important enough, even upgrading to a new platform that can more readily support your needs. Also, try upgrading the IOS. It may be a minor memory leak. 

SNMP is very handy for this type of monitoring. For just one router, you can download the free version of PRTG and set it up to monitor the interface's bandwidth. On your router you are going to need to enable SNMP access. To do so, enter in global-configuration mode. Setting up PRTG is quite simple as well, and there is plenty of documentation on their website regarding the specifics. 

Because they have the same Bridge ID, the Port Priority will be used to determine which port to block, blocking the port with the higher Port Priority. In most STP implementations, the lower port, in this case port 1, will have a lower port priority unless port priorities are explicitly configured on the ports. 

It really depends on your deployment scenario. 3560/3750s are great switches, have decent buffers, and they usually work fine for most applications. If your data center sees traffic flows that require larger buffers, you should be able to pull statistics from the switches, like buffer usage and packet drops. Convincing management to drop the switches that are dropping their packets shouldn't be too much of a challenge. I think. 

The first thing I'd verify is that the phone is actually tagging frames with that VLAN ID, perhaps with a network tap or port mirror (which might not quite work right on this switch) If you manually had configured the phone to do that and you know it's working, this is probably a bug in the software. If not, manually set it on the phone or configure LLDP-MED (Link Level Discovery Protocol) on the interface to do this automatically. Depending on the type of phone (this includes most Polycom, Avaya, and Cisco), it should listen for LLDP packets and learn what the voice VLAN tag is and start sending on that tag. 

Also, if all you really wanted was a flat L2 topology, you have some configuration left over from someone that didn't: EX: 

To answer this question, I'll go through your configuration piece by piece. Your SRX240 configuration is essentially correct and should work, with one small issue, that is your WAN/Internet interface (ge-0/0/0) appears to be using DHCP: SRX: 

Clear the current configuration of each of the interfaces on the switch Create new blank/default configuration for each of the same interfaces Get rid of the probably unused IP address on vlan 100 Remove SNMP configuration (which is not relevant to your stated goal) Consolidate everything to the default VLAN (all of the interfaces are automatically members of "default" if another VLAN isn't specified.) Change the Management VLAN to the default VLAN, as it normally would be on a factory-fresh JunOS install Set the default gateway to be the Firewall, which is not strictly necessary in this topology since the EX is just acting as a layer 2 switch in this case, but at least you'll be able to ping hosts on the internet from the switch if everything is working. 

It's almost as if you can protect a server from only one protocol's exploits at a time. If that's not the case, how is it done? I haven't seen a single configuration for SRX IDP that shows a specific destination protected for more than a single application/protocol. What happens if you want to protect your webserver from HTTP and FTP exploits? 

You're either being quoted T1 (1.544 Mbps) or E1 (2 Mbps) lines. Those speeds are symmetrical, so you get 1.544 in each direction of a T1 simultaneously. The "A" in ADSL means it's asymmetric, and regardless of your ADSL speeds today, the upload of the circuit termination is a fraction of the download rate. The problem to determine is- where do you need the speed? If the clients you service are needing to pull/download information to them to be happy, then bonding DSL is cheaper and can get you more than 1.544 Mbps of a T1. That's why ADSL technology is so popular in the residential Internet Access market- people send small amounts of internet requests that are fullfilled by webservers that send many multiples of data back (like video or web pages). If they send you more information (for instance, they have to upload backups or reports on a frequent basis) than they typically download at a particular time, you might be tying one hand behind your back with DSL technology, even when bonded. There are so many speeds of DSL it doesn't help to ask here- just determine what your full upload capability is from the client location and compare that to 1.544 Mbps. If it's less, and they need to send you gobs of info versus receiving it, then you need a T1 at their location. Also keep in mind that T1 lines can be bonded as well (in a former life I bonded 4 of them for roughly 6Mbps of bidirectional access). If you are in a region of the world that has E1's, substitute 2Mbps for the 1.544 you see in this post. 

In global configuration mode, typing will clear the interface's configuration in the running-config. 

This sounds very similar to this question and answer. Basically, you need to translate all addresses on one end to another range, and vice-versa, with a NAT device in-between. This is sometimes referred to as "outside source nat" because you need to translate the source of packets coming from outside your network to a range that does not overlap with yours. 

The hosts in 10.0.1.0/24 will not be able to communicate with any other hosts in any other subnets of 10.0.0.0/8 without a default-gateway. The hosts in 10.0.0.0/8 will be able to communicate with all hosts in 10.0.0.0/8, which includes 10.0.1.0/24, but only one-way if the hosts in 10.0.1.0/24 do not have a default-gateway with access to both subnets. 

Besides VRRP not being proprietary, there are a few minor differences between the protocols as well: 

Tunnel interfaces have many uses, including participating in a larger VPN configuration. A VPN setup usually has many parts, including encryption, authentication, routing, and finally, the tunneling. Tunneling is also used for IPv4/IPv6 coexistence setups, such as encapsulating IPv6 packets in IPv4 headers, creating GRE tunnels, and multicast tunneling. The point is that while tunnels may be part of a VPN setup, they do not necessarily represent the entire VPN configuration, but only the traffic encapsulation between endpoints. 

The problem here is that the device is interpreting the first as the delimiter between the credentials and the FTP server address. Perhaps configuring the username and password in global-configuration mode and then redirecting the without specifying the credentials would do the trick. Otherwise, and I know this is a wimpy solution, changing the password to not include that one character may be the easiest and perhaps most secure way of working around this issue. 

I think the best way to answer that is to answer the reverse question- what protocols are part of NIC (sic)? The network interface card handles (primarily, exceptions below) Layer1 and Layer2 of the OSI protocol stack; namely, physical/electrical signals, and HDLC/Ethernet-style framing of other data used in Layer3 (typically these days, IP). Read up on this wikipedia page- $URL$ And anything not listed there is what's not included ;) CAVEAT- most modern NIC's can now perform some sort of feature-set generally-known as 'offloading'- this can apply to Layer2 but typically involves Layer3 activities that would normally be handled by the CPU/OS-network-stack. Instead of burdening the operating system's network stack (and thus the CPU it runs on) most network interface cards have the ability to do things like processing checksums and other mundane activities, freeing the CPU to do more funstuff. Those mundane tasks, per the particular network interface card you are dealing with, might handle some Layer3 work. That's the only caveat, otherwise NIC's deal with Layer1 and Layer2, that's it. 

The problem is that you're using the finest-grained ACL (host-to-host with a specific protocol (icmp)) and it sounds like you're applying it to an interface that hosts a whole bunch of incoming traffic. You're asking the router to pay attention to three different fields to block or allow traffic, so if you could re-work that to two fields you'd likely see better performance. Not necessarily as a permanent solution, but as a temporary alleviation to the issue, can you apply that ACL in reverse on the exit interface that leads to the 'victim' you're trying to protect? And by reverse I mean don't allow your victim's icmp echo-replies to make it back to the 'attacker'. It's true this won't stop a flood of icmp inbound from attacker-to-victim immediately, but often echo requests are stopped (automagically or manually) after there aren't any replies. And in this manner you'd free that previous interface from the ACL burden you placed on it. 

You'll probably want to do something similar for the EX2200-48 that you didn't give the configuration for, but hopefully you can look at the commands above and perform a similar procedure. If you flatten the topology as I've described, all of your clients will get their IP addresses from the SRX240 and will get internet access. 

Likely, your default gateway is provided by DHCP, so you probably don't need/want to define it statically. If 10.129.152.129 is not in your dhcp address/netmask though, JunOS is probably ignoring it, and since you also said that you were able to successfully get Internet connectivity when directly plugged into the SRX, this is probably not causing a problem. To get rid of this for cleanliness, issue the following commands on the SRX240: SRX: 

You can see several IP addresses, vlans and such configured. To get back to the most basic of L2 functionality, we should remove some of that old unnecessary configuration (as long as you're sure that this is your network and you're not a rogue going against the wishes of your network admin.) EX: 

On to the switches. You didn't tell us which port on the SRX240 is connected to which port on the EX2200, so this is hard to answer, but based on the configuration provided I can deduce that your WAN/Internet link is ge-0/0/0 on the SRX240, and that at least one switch is plugged into one of the other interfaces on the SRX (ge-0/0/1 through 15.) With the configuration you provided (for only the EX2200-24, and not the EX2200-48), your topology should work as long as port ge-0/0/0 through 21 are connected to the SRX. If, however the SRX is plugged into ports 22 or 23 on the the EX, you have a problem, because those ports are in trunk mode and the SRX isn't configured for or expecting VLAN-tagged ethernet frames. EX: