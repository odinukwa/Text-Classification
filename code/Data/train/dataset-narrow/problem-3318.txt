Make sure you replace "Your SSID Here" with the name of your phone's hotspot and replace "YourPasswordHere" with the password it gives you. You can wrap it in quotation marks, as in the example, if you like. After that, there is probably a way to get wpa_supplicant or networking to reload properly, but I've never had great success so I just reboot the Pi: 

It's probably better to have your code wait for the state to change with an event handler, but this is just a start for demonstration purposes. Your HTML might include a body tag like this: 

I'm not allowed to comment yet, so I'm posting this "answer" to ask for clarification. We need more context and source code. BlueZ is very tricky to deal with and makes a huge difference if you're using BlueZ 5 vs BlueZ 4 or older. Also, there's methods and methods and methods of accessing the bluetooth device. This is a topic that interests me because I am currently working on a project with bluetooth and have dealt with many problems. The method I used is based on the one at $URL$ because it worked best. Your error means that you are attempting to access the "BluetoothSocket" attribute of a "BluetoothSocket" which makes no sense. I can't say more without more context though. 

In all these methods, the part about is redundant if your terminal is visible on the display you are trying to control. Best of luck! 

The short answer is no. As others have said, there are no DC connections from the Ethernet jack. However if you are ready to make up your own cable, I believe it can be done. First you'll need a PoE (power over Ethernet) device - because your regular Ethernet switch or modem most likely won't be sending 5v over the Ethernet cable. I have set up PoE for an Arduino, but since PoE shields are available for the Arduino, that's not too hard. I used a PoE device from Freetronics, that cost me about $30 NZ. It has a DC input, which i connected to a wall wart. Then connect a regular Ethernet cable from the router/switch to the PoE device. Also a cable with all cores connected to the other side of the PoE device. The other end of this cable goes to an Ethernet plug, but this only uses the regular 6 wires. The other cores will take power from the PoE device and these would have to be routed into the Pi. You might be able to route them to the Pi's GPIO and so power the Pi through GPIO or you may be better off grafting a micro USB plug on the wires and using that to power the Pi. The PoE device takes a power input and routes this through the Ethernet cable. It also passes the Ethernet data straight through from the switch/router. 

I have a script named upload_picture in one of my folders and I invoke this when a picture is ready to be saved. My etc/motion/motion.conf file has a line almost identical to yours. Mine reads: on_picture_save /home/derek/webcam/upload_picture my upload_picture script is quite simple. It sleeps 10 then uses wput to FTP the image to a web-site I don't have an on_motion_detected setting, but looking here It seems the format is the same for the two options. So I'd check that your script is actually being called. And I'd do that by including an echo "Running" > /tmp/foo line to the script. Also make sure whatever account is running motion has access to run the script, and probably that it has a shebang at the top (#!/bin/sh). When you change motion/conf you would probably want to restart motion and the link I copied explains that. Another thing you could try is at the end of the on_motion_detected line put >/tmp/motion.log 2>&1 which will record output from your script to a log file 

Tap your home button. Tap your App drawer button. Find and tap your Settings app. Tap the search button (magnifying glass). Type in "Hotspot". Tap "Mobile Hotspot and Tethering" or something similar. Turn that on, take note of the network name and password. 

Method 2: Turn off the HDMI port and back on. This may result in the monitor itself turning off, depending on the monitor's settings, because it's not getting any signal. Some TVs or Projectors may display an error message about no signal. Turn it off: 

You'll notice my examples are absent of any jQuery, but there are equivalents in jQuery if you prefer. 

Now, if you watch your phone's hotspot settings screen, you should see a Raspberry Pi show up as a connected device. It should also show you the Pi's IP address on that screen. This is the easiest method for a novice. You can set up a Bluetooth PAN on the Raspberry Pi, but it's more complicated and comes with caveats. The hotspot method is better. 

You linked to a very outdated tutorial on how to setup a Tor relay not a Tor proxy. From your question, I'm gathering that you want to set up a black box that you connect through to get all your network traffic routed over the Tor network. That's a Tor proxy. There is a good diagram on that tutorial which shows how Tor networking works. The three nodes between the two users are each relays. The diagram does not clearly indicate the proxies, but both of the users have a proxy on their computer. You are talking about making a Pi operate as a separate Tor proxy. Now, with semantics out of the way we can get on with hardware concerns. I see three options: 

Firstly, I must say that I have not tried this, but I have an app on github that includes code to get data from the BMP085. It's part of a weather station receiver app that I put together - largely using other people's work. Kevin Sangalee (who has done a lot of work on weather stations) had written a file bmp085.c which I included in my app. I don't have this component so the code is just ifdef'ed out on my app. You might get some help from the code, which is in C. You can find my git repo at $URL$ 

You may have already checked, but make sure you have your LEDs the right way round. Short wire = negative, or if you've trimmed the wire to be the same length, there's also a flat edge to the LED on the negative side. Next thing, be sure you have connected the jumpers to the right connectors. I've wasted time looking for software errors when I actually just missed the breadboard connector by one row. You could try swapping, say your connectors for pins 13 and 16 to make sure the On/Off parts of your circuit are wired properly. 

Not quite answering your question, but I find it easier to assign fixed IP addresses to my RPis. In my router I configure the DHCP settings so they allocate in a range (say 100-255) then I assign fixed IP addresses in the range below 100 for some on my machines. Assuming I want to assign the IP address 192.168.0.42 and myrouter (gateway) is 192.168.0.1, my /etc/network/interfaces file looks like: # loopback auto lo iface lo inet loopback # My config, Static IP auto eth0 iface eth0 inet static address 192.168.0.42 gateway 192.168.0.1 netmask 255.255.255.0 # Network address "family" network 192.168.0.0 broadcast 192.168.0.255 

They should show up in a system log, or you could redirect them to someplace specific by modifying the line that calls your script in like this: 

Raspberry Pi 3 has built-in Wifi and Bluetooth, so you could make it a Wifi hotspot or setup Bluetooth tethering to allow other devices to connect. You could purchase a USB to Ethernet adapter and daisy-chain the Pi between two devices. If you aren't conserned about local snooping, you can just connect the Pi to the same router the other devices connect to. You won't be able to use the Pi to prevent leaks though. 

Install Tor on the Pi. There is an Adafruit tutorial at $URL$ which describes the steps, starting with basic install commands. 

Ideally, you could set a static IP address for your Raspberry Pi either through DHCP assignment in your router or by changing your Raspberry Pi's configuration. Having said that, would ping work to answer your immediate question? 

First of all, if you're running the script from you don't need to execute commands with because they already are running with root privileges. It's redundant. Have you confirmed that the commands you are attempting to execute are actually installed? Try running them manually from the command line. A simple way to allow debugging is to simply insert print statements in your code: 

Method 1: Blank the screen without turning the power off to the HDMI port. You might need to set the screen's default state to blank (I didn't): 

I'd backup the suggestions so far. The most likely point of failure would be the SD card. My own experience is that the SD card is fairly fragile. I had a power outage for just a second (New Zealand's electricity network is not that great even in the main cities!) and though the Pi would be able to restart after a power outage, in my case the SD cards failed dramatically. I had two Pis crash and get corrupted SD cards - I had to re-install the OS. My 3rd was able to pick itself up and reboot OK. Of the two that failed one had such a badly corrupted card that I was not able to put a operating system on it, it ended in the bin. For a permanent fixture, you should consider that the power is likely to go off and come on without warning. Make sure your app will start automatically on boot. Also look at avoiding writing to the SD card - which will wear the card out (albeit very slowly). I'd imagine that an art installation wouldn't need to write to files or anything, but if it did then look at having your files in /tmp, which should be in RAM not on the SD card. You might consider ways of including a backup power supply. Perhaps solar cells or LiPo batteries. Another approach would be to think about redundancy. Would your project be able to use two Pis, one that would cut in if the other failed? It could greatly complicate your project but for mission critical applications, that's a standard approach. Sorry I've not included any actual figures as you have looked for, but maybe there's some information here that could help you think round the problem. 

Manually set the time to be somewhat accurate. NTP sometimes won't update if the time/date is wildly wrong. 

Turn on your phone's mobile hotspot and configure your Raspberry Pi to connect to it. That way your phone and your Pi both have Internet access through your phone, and they are both networked together. On your phone (assuming android): 

After hardware is covered, now you need to install the onion router and enable it to accept connections from other devices (which is disabled by default): 

Method 3: This does not apply to RPi 3 with standard Raspbian, but some specialized situations and the original Pi might be able to use this alternative (depreciated?) method. Find out what the monitor's name is by running: 

Try creating another user and see if the default configuration (automatically copied from ) for that user allows you to log in. These commands will create a user named and allow you to specify a password from the command line ( or other terminal window): 

That will attempt to contact your Pi using it's local name. The option limits it to a single ping attempt since it should have located your Pi's IP address by then. I just want to reiterate that there are better solutions out there. This is kind of a hack. 

You specified in your question that does not exist, but I don't think it's supposed to. If does not exist, however, you need one. You can recreate it by putting the SD card into a linux computer and using a text editor as root to fill in the basics: