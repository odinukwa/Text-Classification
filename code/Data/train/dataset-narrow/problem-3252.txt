Outcome: identify the device and make sure that the specific (hardware?)device is making the requests and not mimicked by another device or recreated by an external party for malicious purposes (Helps with licensing and with security, IMO) 

The title is pretty self-explanatory, so please provide info in general (I know this makes the question 'Too Broad', but it is good to know) In my case the Pi will be running for probably 24/7, it will perform about 2-3 sync tasks on its own and the other usage will be to execute simple tasks on demand (from GUI, i don't think it is relevant, but.. :) ). My question is: Will there be any impact on the lifetime of the hardware (Excluding the lifetime of the SD card that is not the issue)? Info: RPi model B used in commercial application I can't find appropriate tag.. 

Since Silverlight is dead since three years at least , it is very very unlikely it will ever work on the Windows 10 IoT Core SKU. Silverlight didn't even work on Windows 8 RT , but only on Windows 8 Home/Professional/Enterprise. As usual, Silverlight on Windows 10 Home does work fine. 

gedit is a graphical text editor similiar to Windows' notepad.exe. All software in Windows and Linux can be started from the commandline irrespective whether they are commandline applications or not as long the graphical environment is running. gedit is no different. Whether a piece of software is a "command" therefore depends solely if it resides in the PATH or not. Both Linux and Windows work with a PATH variable. Learn more here. Please note that gedit is not preinstalled. Use leafpad instead if you don't want to download new software. 

I am looking to get the output of thermal_zone0 (CPU temp) to display on my Sense-Hat. I now know how to print the temp thanks to @Joan but when i try the code below but i got 

I have attempted to re download the library but said that it was the latest version. This is the circuit: 

I don't own a camera but the way to enable it is to run then go down to option 6 and select yes and I believe that this should enable it. 

If you do not care where the files end up use @Bex answer but if you want them to be unzipped to a particular location I would instead recommend the following: This will open the xarchiver utility from which you can click the extract button and then specify a filepath. 

The Python picamera library is only for the official Raspberry Pi camera module connected to the CSI bus. If you want to use regular USB Webcams , look at projects supporting V4L2 . Example : $URL$ 

The Raspberry Pi cannot turn itself off properly. Thats why after a Raspbian shutdown the Pi will still consume an non-negligble amount of current (up to 30 mA). This also means that the 5V rail is indeed always on. 

The custom effects are part of the closed-source GPU firmware which only Raspberry Pi and Broadcom engineers can change. You can add further effects in post-processing (on the CPU) though. 

The KMS driver is meant to someday supersede options 1) and 2) and is IMHO the "proper" way. Currently it doesn't matter much due to lack of stability and missing video acceleration support. 

The login depends on configuration, I got mine from Maplin (UK) and it is set to auto-login with the 'pi' account and launch the GUI by default, so I would assume that it has been configured like that by the retailer you've got it from (As I saw a lot of questions/articles/etc. about how could one login to the raspberry pi and similar) One thing that comes in to my mind is reversing this it is for Raspbian, but I think it should work on other distros as well (although not tested) If you specify the OS distro you are running, I will update with specific instructions As to explain the process of the reversing the tutorial, just: 

By looking to this youtube video I am interested in some way to 'push' a HDD inside a case of RPi or at least to be mountable at the bottom/top of the case with as little wiring as possible (If possible connection over the GPIO and only external power over USB)? The idea behind is commercial and that is why the options with less wires are better :) PS: I am not much of a hardware guy, so excuse me if my question sounds a little bit noobish (I still havent played with the Pi as I am getting it in the follwoing days :)) 

Replace the call to @epiphany to a call to @lxterminal. Epiphany is a browser and obviously the wrong program to execute bash scripts. LXTerminal is the Terminal program of LXDE, the Lightweight X Desktop Environment. LXDE has been heavily customised but is still the foundation of the "Raspberry Pi Desktop". 

There is the 96Boards initiative , which might be what you are looking for. Sadly Raspbberry Pi does not participate in it. $URL$ : 

As of 2017 , Chromium has been modified to use hardware decoding for video on Raspberry Pis. 3D acceleration has to be enabled seperately via raspi-config ("Experimental 3D driver"). 

Only batteries supporting the Smart Battery Standard over SMBus/I2C can be used with Raspbians Battery Monitor applet. The only battery supporting this (AFAIK) is built into the pi-top Laptop. No Raspberry Pi can correctly measure its own input voltage without additional components. 

I've been getting into GPIO recently with the GPIOZero library but when i first tried it today it completely failed. As my first foray into GPIO i set up a circuit to light up an LED with the push of a button, so simple nothing could go wrong, right? I imported the library like so: then i set up my components: then the button: And then this happened: 

what is the difference between these two and what do they mean? I have searched for "action 17 on raspbian" and other things like that but found no helpful results. 

When creating a new motor object from the GPIOzero module like this: , then you need to specify the backward and forward pins. What does that mean and what if the motor only has two pins? 

Only the Raspberry Pi Zero , Zero W , Model A and Compute Module can act as USB device. Other models can not act as USB device. This is a hardware limitation which cannot be worked around in software. You will not be able to make the Pi act as PS/2 keyboard or mouse. Not with the GPIO pins, that is. Here is a guide for turning the Pi Zero into an USB keyboard/mouse using ConfigFS : $URL$ 

All other models do not support USB device or USB-OTG slave mode. Please note that on all models except the Compute Modules and the Zero , it is impossible to transfer data over a Micro-USB port. 

The Raspberry Pi foundation has been endorsing GPGPU on the Pi since 2014 , shortly after Broadcom released documentation for the QPU units inside the GPU. An experimental OpenCL compiler was created by Simon J. Hall (the winner of the tightly related 2014 10,000 $ competition to make Quake run acceptably without using the GPU BLOB) : see here. 

As the title says, are there any major differences in programming with Python on the RPi and a normal PC with linux? And if there are (excluding the GPIO and other platform specific stuff) could you list(or at least provide a basic list with the differences) 

Is identifying a pi device based on its serial number(pulled from the ) and hash of the output of as reliable as username/password authentication? I am thinking of building a native application, which will need to communicate with a server and I am struggling with authentication. INFO: 

Python application Commercial Heavy communication with the server (Eventually long connections, short period between connections) 

Edit: Based on your feedback in the comments, I googled a bit and found this method (as well I have not tested it): 

Many filesystems beat FAT on some points, but only FAT meets them all (esp. 3 and 5). Don't forget that Microsoft being a member of the UEFI forum was almost mandatory due the significance of the the products and the company itself. 

The Raspberry Pi 3 and the Raspberry Pi Zero W use the BCM43430 as combined Bluetooth and WiFi transciever. It is connected via SDIO (for WiFi) and UART (for Bluetooth). Sources : 

After four years , Android for any Raspberry Pi model is still in beta state. You can follow the progress of the community porting efforts here. After 2012 , the foundation took the stance that they see little benefit in supporting Android , as they now percieve it as mainly encouraging consumption instead of creation. 

A direct data transfer connection to PCs via a single USB cable is only possible on the following models: 

I have an embedded zero I'd like to power from a battery pack with 4 AAs. I know I can connect the leads the the GPIO as well as cutting apart a cable to plug in but I am wondering if I could solder them to the pads underneath the power plug. These ones: (pp5 and pp2) 

I was installing and removing packages recently and i noticed that it said: as soon as i ran the command. But, when i ran it still said: When i ran however it also said: 

simulate this circuit â€“ Schematic created using CircuitLab First: what doe this error mean? Second: How can i fix it? 

SSh is disabled by default on all new raspbian installs. To enable it you will either need to physically log in and enable it with or insert your sd card into another computer and create a file called with no filename extension to enable it on the boot partition. Then make sure it's connected to WI-FI and try again.