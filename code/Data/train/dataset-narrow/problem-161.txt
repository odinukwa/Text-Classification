The Window Size field in each TCP header indicates the amount of empty space, in bytes, remaining in the receive buffer. The field is 16 bits in TCP, but with the Windows Scale option, values larger than 65535 can be used. Windows scale option increases the Window Size from 16 bit to 30 bit. Instead of changing the field size, however, the header still holds a 16 bit value, and an option is defined that applies a scaling factor to the 16 bit value. Window Scale RFC is 1323. (TCP/IP Illustrated Vol. 1.) 

If the huntstop attribute is set, an incoming call does not roll over (hunt) to another ephone-dn when the called ephone-dn is busy or does not answer and a hunting strategy has been established that includes this ephone-dn. When the no huntstop command is used on the ephone-dn, the call would ring on the first ephone-dn and go through any hunting defined on the two channels in a dual-line ephone-dn before being sent to the next most preferred ephone-dn that also has a matching destination pattern. This will continue until an ephone-dn with huntstop configured is reached or no more dial peers (ephone-dns) have matching destinations patterns. The difference in configuration between overlaid ephone-dns with call waiting and overlaid ephone-dns without call waiting is that overlaid ephone-dns with call waiting use the c keyword in the button command and overlaid ephone-dns without call waiting use the o keyword. Call waiting allows phone users to know that another person is calling them while they are talking on the phone. Phone users hear a call-waiting tone indicating that another party is trying to reach them. Calls to IP phones with soft keys can be answered with the Answer soft key. Example- A Cisco Unified IP Phone 7910 (maximum two call-waiting calls) has a button configured with a set of overlaid ephone-dns with call waiting (button 1c1,2,3,4). A call to ephone-dn 1 is answered. A call to ephone-dn 2 generates call-waiting notification. Calls to ephone-dn 3 and ephone-dn 4 will wait in line and remain invisible to the phone user until one of the two original calls ends. When the call to ephone-dn 1 ends, the phone user can then talk to the person who called ephone-dn 2. The call to ephone-dn 3 issues call-waiting notification while the call to ephone-dn 4 waits in line The following example demonstrates call waiting for overlaid ephone-dns that are shared on two phones: ephone 1 button 1c1,2,3,4 ! ephone 2 button 1c1,2,3,4 

Short answer: No. Long answer: IP addresses aren't determined by geographical reason insomuch as the geographical region simply might only have a certain block assigned to it. Example: North Korea has a relatively small block of IP addresses, which makes it easy to tell when someone from that country has visited your website. In the case of the USA, France, Germany, South Korea, Japan or others, the number of IP blocks assigned to their ISPs is much greater, so simply glancing at an IP to see if it starts with a certain number won't necessarily guarantee that that entire network is assigned to a single geographical region. With regards to ping times, ping time is determined by a great number of factors, including but not limited to: 

When Cisco says "these commands may adversely affect device performance", they aren't kidding. On the types of devices with the traffic load you describe, this command will likely result in 100% CPU consumption, halting of device functionality and major disruption of your network. Don't do it. 

With regards to your request that Host1 may not communicate with Host2 unless Host2 has already begun a session with Host1, this is the default nature of the Cisco ASA: it is a stateful packet-filter: connections which were not initiated from the inside zone will not be accepted when coming from the outside, unless rules configured by the Administrator explicitly permit them. See the following guide for more details: $URL$ 

So the plan is, two core routers each with a eBGP session to one of two ISPs with full routes. Both routers publish their full tables to each other so they can control traffic flow more intelligently via iBGP. For argument's sake three access routers have a path to each core router. I was going to configure iBGP and publish a default route from each core router so they have some resilience against hardware failure and use filters to control what routes are actually sent to the access devices. I have heard that people use OSPF for their IGP generally, of course there's an element of it being case specific. My question is: What would be the benefit of replacing iBGP with OSPF? 

Not sure if this is any help but sounds reminiscent of a flash corruption i had one time, that or local certificates expire/corrupt - in which case i just regen them. Cheers, 

The short story is that they need to share a subnet between the routers so that they can talk. You can't just just configure a bunch if IPs on one router and totally different IPs on the other without a shared network to bring them together. eg: 3.3.3.0/24 R1 -> 1.1.1.1/24 <-- (1.1.1.0/24 shared network ) --> 1.1.1.2/24 R2 4.4.4.0/24 In this scenario, 3.3.3.x would contact 4.4.4.x via R1's access to 1.1.1.2 Cheers, 

The fix is to granularly apply an IDP policy which applies only to traffic you care a lot about and judiciously choose your applied signatures based upon needs versus performance impact. 

802.3ad Link Aggregation serves to bond multiple, individual physical interfaces into a single, logical virtual interface: a "port-channel". The virtual interface of the port-channel controls the traffic across all interfaces which are members of it. Think of the port-channel being the supervisor and the individual interfaces being the employees: the port-channel tells everyone else what to do. Understanding the underlying code and mechanisms that Cisco uses to perform this task is outside the scope of your studies. The following document should suffice: $URL$ 

I'm refining a Juniper SRX 210 UTM IDP implementation in a small business. I'm new to Junos, so I'm hoping someone will be able to point me in the best-practices direction. The customer initially reported that tests using things like Speakeasy bandwidth test shows OK download speeds, but the upload speeds are cut in half; With a 50mbps synchronous connection, they're getting 50mbps down, but only 25mbps up. I'm hazarding a guess that this is because the SRX is inspecting these traffic types in detail as they exit the device. The SRX 210 data sheet says it is capable of 65mbps IPS performance, but I'm not seeing that. Additionally, the log displays the following messages whenever I run a "speed test": 

I would suggest you to connect NAS to the router instead of switch and camera also(if you have only one camera). 3 different networks would do. 

I don't think this will be possible. PC Port on Phone is an access port and you can't change it to trunk port. Why don't you connect PC directly to Phone and then phone to 8 port switch. One trunk to 8-port switch from data switch and your problem is solved. 

I have a Cisco 3550. I wanted to connect a 9971(used) to it, but it is not going beyond POST. I see the keys blinking but nothing happens after that, and this happens in a loop. Could that be a problem with Phone or with Switch? Switch Information - C3550 Software (C3550-IPSERVICESK9-M), Version 12.2(44)SE6 Model number: WS-C3550-24PWR-SMI 

There are a few more differences between seperator o and c. For further explanation you can check SRND for CME. If there is still some confusion, please leave a comment. I can explain it to you. 

Transmission rate is not same as bandwidth. Channel Bandwidth – the range of signal bandwidths allowed by a communication channel without significant loss of energy (attenuation). Channel Capacity or Maximum Data rate – the maximum rate (in bps) at which data can be transmitted over a given communication link, or channel. A typical method of performing a measurement is to transfer a 'large' file from one system to another system and measure the time required to complete the transfer or copy of the file. The throughput is then calculated by dividing the file size by the time to get the throughput in megabits, kilobits, or bits per second. From the definition I would say they would be considering propagation delay also. 

There are many freeware applications suited for this task, some can even run on your phone. Check out this list by Network World: $URL$ Furthermore, a handy Android app is "WiFi Analyzer": $URL$ The above app will show you graphical representations of shared channel overlap, as well as other stats like signal strength, etc. - very handy for mapping signal strengths. In terms of technique for your survey, a solid course of action would be: 1: Submit your Plan of Action for approval: Since this is a .gov facility, you'll likely need to comply with their in-house Information Assurance & Change Control guidelines - this will entail putting together your plan-of-action (things you will do) and if need be, a back-out plan (how you'll restore service(s) if something goes wrong). Note that this plan of action should also include the software you'll be running to scan WiFi signals, so that they understand you're not doing something nefarious like sniffing without permission. 2: Obtain a floor-plan, and note the zones which your wifi will be required to cover: Mark these zones with unique identifiers like "Zone A", which will allow you to easily name and track your WiFi mesh nodes ie: "GOV-WAP-A2" - this will facilitate ease of maintenance in case someone else is called in to work on your setup. 3: Using your above zones, map the signal strengths of each existing WiFi signal in the areas you're supposed to cover - choose the WiFi channel which is least-used in that zone to be the channel used by that AP (or multiple APs, depending on your type of coverage / service-set). Record this zone data as part of your survey and note it in your design document. 4: After your APs are configured with the proper channels / etc you desire, do a second site-survey and note signal strengths of all APs in each zone as needed, and do a full walk-thru with a constant "ping" running, to watch WiFi handoff between APs, and adjust accordingly. Note all signal strengths in your final report, so that they can see what you've delivered. NOTE: With .gov projects, documentation is a huge part - depending on the agency, you may be held accountable in the future if your work is not up-to-spec with what they expect. Good luck! 

Technically yes there will be a small difference and notability will depend on your devices/configuration. This is because of the different paths the packets have to take, but like i said, depends on how your setup is designed - there are plenty of variables. 1) If you are on the LAN then your path to the webserver via its private IP is merely just switched. 2) If you are on the LAN and you try and access the webserver via its public IP then the traffic has to go out through your LAN gateway (which I am assuming is your router with a public ip address on the other side) , get natted out, get natted inbound and forwarded to the private IP address of the server and then return the traffic. So you can see there will be marginally more resources used than #1 

Totally possible, comes down to a couple of things, (i set this up regularly). If its not already happening (im guessing not) you have either: a) a nat problem where branch A router is configured to only exclude current branch and HO subnets, thus traffic to other branches is trying to go via wan or just getting mangled in nat. b) an access list/firewall issue where the traffic has a path and is being denied by a device. c) a routing issue where the branch A has no path to branch B via any gateway that it has - which you can normally fix with static routing if need be. Typically these are the problems you face with vpns and hub-spoke vpns. Cheers, 

I'm having an issue with an ACL on a VLAN interface. I've followed HP's documentation here: $URL$ I want to do the following: VLAN 101 should only be able to communicate to VLAN 50 - no other VLANs, no internet access. Initially, I tried the following access list: 

This command tells the switch to associate traffic with the appropriate VLAN by source-IP address in packet headers. What was happening is that the return traffic from a client would be dumped into the wrong VLAN on the access switch - the VLAN associated with its source IP, different than that of the client. Removal of these commands on the access switches resulted in immediate desired connectivity across all VLANs. EDITED to add: Credit for this fix goes to a fellow networking professional who pointed out their function and voiced his concern. 

One of the reasons you can't ping is that your ASA configuration lacks ICMP and ICMP ERROR inspect. Modify your configuration to include the following commands: 

You must construct your access list(s) in a a fashion which explicitly targets the traffic and / or hosts you wish to permit or deny, in this case, Host 1 and Host 2. Example: 

bridged adpter in VMWare works as an adapter directly connected to the network. That means it will get IP Address in the range of your NIC IP. If a virtual adapter is configured for NAT then it will get IP Address from internal DHCP of VMWare and the range will be different than the bridged network. You are saying that you have bridged eth0 and eth1. Bridged adapter and NAT adapter can't be bridged(Bridge, Switch are L2 terms). You will have to configure some routing table to connect them. Bridged Networking Bridged networking connects a virtual machine to a network by using the network adapter on the host system. If the host system is on a network, bridged networking is often the easiest way to give the virtual machine access to that network. When you install Workstation on a Windows or Linux host system, a bridged network (VMnet0) is set up for you. NAT Networking With NAT, a virtual machine does not have its own IP address on the external network. Instead, a separate private network is set up on the host system. In the default configuration, a virtual machine gets an address on this private network from the virtual DHCP server. The virtual machine and the host system share a single network identity that is not visible on the external network. When you install Workstation on a Windows or Linux host system, a NAT network (VMnet8) is set up for you. When you use the New Virtual Machine wizard to create a new virtual machine and select the typical configuration type, the wizard configures the virtual machine to use the default NAT network. You can have only one NAT network. Host-Only Networking Host-only networking creates a network that is completely contained within the host computer. Host-only networking provides a network connection between the virtual machine and the host system by using a virtual network adapter that is visible on the host operating system. When you install Workstation on a Windows or Linux host system, a host-only network (VMnet1) is set up for you. Please check VMWare documentation(chapter 5) $URL$ 

NOTE: The final line is required if you wish any other traffic from the same network as Host 2 to be allowed outside your firewall: a silent, implicit deny exists at the end of every Cisco ACL. Then, on the interface which first receives this traffic initiated by Host 2 (inside): 

I'm guessing that the UTM package is somehow putting a strain on the SRX, but I don't know enough about the SRX platform to troubleshoot this properly. Suggestions appreciated. 

Solution: The commands on VLANs on the access switches for VLAN association with subnet are the root cause of the issue. 

Example: I can ping Google's root DNS server 8.8.8.8 from my home internet and get about 40ms, through 12 (!) hops, yet I get a under-1ms ping to 8.8.8.8 from another location in the same city, from a different ISP, on a faster connection, through only four hops. 

Below are the configs (some output suppressed for redundancy / brevity) with relevant portins: CORE SWITCH: 

This configuration results in zero communication on that VLAN: The IP of 192.168.101.2 on port A1 cannot ping 192.168.101.1, the switch VLAN IP. If I change the access list to: 

I've been brought in to troubleshoot an issue on an install performed by a different engineer. The basic topology is: 1x Dell N2000 as Core Switch 1x Dell N2000 as Access Switch 01 1x Dell N2000 as Access Switch 02 Access switches trunk with a single 1gb interface to the core (Gi1/0/24 on both access switches) so there are no switching loops or anything like that so far as I can tell. Essentially, the topology looks like this: (ACSW01)Gi1/0/24 <-> Gi1/0/22 (CORE) Gi1/0/21 <-> Gi1/0/24(ACSW02) Nothing fancy - The VLANs are: VLAN 47 - 192.168.47.0/24 VLAN 48 - 192.168.48.0/24 VLAN 49 - 192.168.49.0/24 VLAN 50 - 192.168.50.0/24 At this point, clients on any VLAN get internet connectivity, but clients on VLAN 49 or VLAN 50 cannot ping a printer on VLAN48 located on Edge Switch 01 (ESW01) - but if the printer's connection is physically moved to the core switch, they can. The problem follows the VLANs on edge switches, not the devices; any device connected to an edge switch that is NOT on VLAN 48 will not be able to communicate with any other VLAN - unless the device is on the core switch. Additionally, those clients experience no issues with internet connectivity (and that works fine across all VLANs too). Below are my troubleshooting steps taken thusfar: 

That is official documentation from Cisco, so I don't doubt that. As far as L2 header is concerned it is added depending on the L2 technology(Ethernet, Frame Relay etc.) The document is not taking L2 header in consideration, but when you will calculate packet size for VoIP Packet, it will be taken into consideration. 

eth 2 Address: 10.0.0.0 Netmask: 255.0.0.0 = 8 Wildcard: 0.255.255.255 => Network: 10.0.0.0/8 Broadcast: 10.255.255.255 HostMin: 10.0.0.1 HostMax: 10.255.255.254 Hosts/Net: 16777214 eth 1 Address: 10.10.0.0 Netmask: 255.255.0.0 = 16 Wildcard: 0.0.255.255 => Network: 10.10.0.0/16 Broadcast: 10.10.255.255 HostMin: 10.10.0.1 HostMax: 10.10.255.254 Hosts/Net: 65534 Both are conflicting. 

A call to ephone-dn 1 rings on ephone 1 and on ephone 2. Ephone 1 answers, and the call is no longer visible to ephone 2. A call to ephone-dn 2 issues a call-waiting notification to ephone 1 and rings on ephone 2, which answers. The second call is no longer visible to ephone 1. A call to ephone-dn 3 issues a call-waiting notification to ephone 1 and ephone 2. Ephone 1 puts the call to ephone-dn 1 on hold and answers the call to ephone-dn 3. The call to ephone-dn 3 is no longer visible to ephone 2. A call to ephone-dn 4 is issues a call-waiting notification on ephone 2. The call is not visible on ephone 1 because it has met the two-call maximum by handling the calls to ephone-dn 1 and ephone-dn 3. (Note that the call maximum is six for those phones that are able to handle six call-waiting calls, as previously described.)