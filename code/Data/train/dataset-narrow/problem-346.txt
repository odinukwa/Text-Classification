We've started deploying cisco routers in pairs (867VAE-K9 in particular) to offer office sites failover using ip sla and HSRP. In testing I've been using 1841s and running the dialer over ethernet instead of adsl to confirm it works 95% but I don't have spare dsl lines to confirm it works with the comlete config that gets deployed so we test with PPPoE dialer and then adjust slightly when installed. I have an 1841 set up to act as PPPoE server and that works peachy. I'd like to use the same box to simulate a dsl line instead and I kind of think you can do some back to back stuff with a WIC 1SHDSL V3. But it looks like I need to use the same card at each end. I want to be able to configure a wic-1adsl at the other end or use the built in dsl connection on one of the 867s. Is it possible and can someone point to a suitable reference to do this? Or does it need to be shdsl cards at both ends for a back to back? Thanks in advance. 

If I'm reading this correctly, the bottom line is a need to hairpin traffic at the ASA? On the old Pix, that's not possible -- traffic cannot enter and leave the same interface. On the ASA (somewhere in the 7.x line) came about to allow hairpinning. 

Each B-channel has a SPID (circuit ID). It doesn't have to have anything at all to do with the PSTN phone number. Many LECs in the US assign the two together, but nothing in the switch requires this. Individual lines can be mapped to a "hunt group" with a single pilot number, and/or each line can be programmed to roll forward to the next ("rotary"). (Good luck finding anyone at the telco who knows how any of this stuff works. When you do find them, get their direct phone number!) 

The short answer is "no". Without visibility into the status of the T1s, you have no way of knowing if one is down (in alarm) vs. just not passing traffic (unbundled). TW will have to give you access to the system (telnet, snmp, etc.), or setup a means of notifying you of status changes (syslog, snmp trap, etc.) 

Which tells you the source address and interface and the destination address and interface. Finally, if you go with 

This will switch the packets between the interfaces in software rather than using fast switching / CEF. As such, you should only do it in a test environment because it slows the process of sending and receiving data. Using image c2600-adventerprisek9-mz.124-15.T14.bin provides some functions that may help, and Cisco's documentation for ping in version 12.1 (first I got in Google) suggests it's been around in general for some time. Assuming you want to monitor Router1 for pings coming from Router2 and they are at 10.0.0.1 and 10.0.0.2 respectively, you could run 

AAA configs on a network device can tell it to pass all authorisation checks back to an ACS / ISE / RADIUS server. The backend server can then send a message back to the device saying "Yes that person can do that command" or "No, they're unauthorised". Additionally, on some Cisco devices at least, you can mark the boot image and config file as being secured - you can make it impossible to edit or remove them except with physical access to the console port. Not sure about actually signing copies of the config though. You'd need to check the signature against a CA which you couldn't do unless the device was online and able to contact the CA. You could save certificates locally, but so could an attacker to work around this. 

Your etherchannel is setup incorrectly. If you look in the logs, you'll see a configuration mismatch because the PoX and G0/X interfaces do not have identical functional configurations. Start over. Delete PoX. Default the G0/X interfaces. The ONLY thing you configure on the member interfaces is the . Then setup everything on ; those elements will be copied to all member ports. 

Based on your diagram, there's no immediate advantage. However, I suspect the internal network is more complex than a single, flat LAN. In that case, the "core switch" is the internal ("inter-vlan") router. It will be much faster at the task of routing than the firewall can ever be. For starters, the firewall is a single interface ("port"), where as the switch has dozens (if not hundreds) of ports. 

I can only speak for Cisco, YES. You can get everything except a trunk monkey to actually install it. (for larger kit, you'll need to specifically add the necessary rack mounting kit to your order -- 19", 23", cable management, etc. But I'm guessing this lab won't be using a 6509 or 7513) 

This can't be done - I misunderstood DSL technologies. It's not like Ethernet / FastEthernet / GigE where they all work together at different rates. 2 x SHDSL cards can be configured as a back to back connection but ADSL won't co-operate on a line with SHDSL. 

If I understand you correctly then the process you're describing happens on a couple of levels (or layers). If the switch detects a checksum failure then it'll discard the frame and probably make an internal note of the error (Cisco 3550s certainly record errors, runt frames etc). At this point the switch couldn't know if the address was 'wrong' or which part of the frame was damaged so discarding it is the only reasonable thing to do. The checksum is just a way of deciding if "an error of some sort" happened when transmitting the frame, but can't tell you where in the frame the error was. Now, that frame is part of a packet being sent somewhere. Because it gets dropped, the packet it belongs to is going to be broken and TCP is going to be patiently waiting for a packet with a particular sequence number to arrive. Part of the packet will arrive but the networking stack on the destination can't do anything with a part packet so will send a request to the source host asking for the whole packet to be resent. In reality you could have some freak error in the part of the frame that holds the Frame Check Sequence. In this case the real data might be intact but the frame is dropped because it'd be checked with an incorrect FCS. The destination knows which packet to request because it's kept a record of where it's gotten to in the sequence. If it receives packets 1,2,3 and 5, it'll know something went wrong with packet 'number' 4. The different modes you talk of are Store and Forward, Cut Through and Fragment Free, which offer different levels of checking a frame before passing it onto the next device. A hub would be oblivious to all the above since it's only concerned with bits - a hub literally just repeats everything it receives. In one ear and out the others, if you will. 

Then what you are seeing is exactly what you should see... STP killing the loop. Switch A & B are connected via their LACP trunk. And then an access switch is connected to BOTH Switch A and B. One of those two links will be (MUST BE) blocked. There may be a disconnect between the access and main switches, as the access switch is in the state on all ports. I've never seen a stack do that. 

Your access-list doesn't allow NAT for 192.168.101.0/24, so they cannot talk to anything on the Internet. (they should be talking to your proxy, but might not.) You have no NAT mapping(s) for RTP traffic, so unsolicited traffic from the internet won't make it past the router. 

I would say the problem is in how it was ordered. The "-K7" has no crypto capability. You'll have to contact Cisco to correct that. (i.e. buy a crypto license.) 

The router knows where packets belong because It remembers what inside-outside address translations it has made. As such, one inside address equals one outside address, and the out-on-the-internet destination is irrelevant. This, of course, ignores the firewall present in practically every NAT router, which tracks full connections: 

would give you the protocols currently being used by the serial port numbered 0/0. You can find out more in interface configuration mode: 

Which gives you the same details as the previous debug but also tells you the packet was 100 bytes in length, was ICMP and the type - 8 is the actual ping, 0 is the response. 

In brief, because a vlan should roughly equate to a subnet. If a destination address is in the same subnet as the source address, it wouldn't want to route it. You switch within subnets but route between them. For your example to work routers 3 and 4 can't be on the same subnet. If instead router 3 was 192.168.10.1 and router 4 was 192.168.20.1, they'd be in different subnets and would need routing to be able to communicate. You could put 2 sub interfaces of router 6 - 192.168.10.254 and 192.168.20.254 for example and then add a static default route to each of router 3 and 4 to point to the corresponding subinterface on router 6. That default route says "to get to anything not in my subnet, go through my default gateway at 192.168.10.254" (or 192.168.20.254 for router 4) 

Wavelength and rate are the two big ones. As you're dealing with 10G ethernet, rate isn't in question. (if we were talking about fibre channel, or SONET, then it would matter.) For your specific case, they are providing service through a 1310nm "LR" (long-reach) interface. The "SR" (short-reach) optics will not work -- wrong wavelength (850nm) and wrong mode (SR will be multimode (62.5 or 50 micron fiber) vs. singlemode (9 micron)) 

AH adds a cryptographic signature to each packet, which ensures nothing has modified it and it came from the correct source. AH is, obviously, not compatible with NAT. ESP's ICV is just a checksum to ensure the packet hasn't been damaged. It does not ensure the packet has not been altered, or authenticate who sent it. 

In general, no. Clients decide which radio to use and to what AP to associate. As such, if the client has a preference for the 60Ghz radio, it can choose to switch to it when ever it wishes.