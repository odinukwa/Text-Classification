Once saved, this results in the following command saved to the completion customization file (usually ): 

The backtracking found a new “stopping” point, but now the second in the first group is doing its greedy matching. The second group fails to match. Backtracking of the second in the first group starts. 

Back in 10.4, Terminal has a preference for “When creating a new Terminal window” to either use or to let the user specify a command. I expect that Terminal in 10.5 has something similar. Do you happen to have something like as the specified command instead of using or a zsh invocation without ? The option will cause zsh to ignore all the startup files except (i.e. it will ignore your ). Another way to check this setting might be with . If it shows some output you have a custom setting. If it is blank or does not exist then you are probably still using the default of . Edited to add: In one of your shells with the default prompt (a new Terminal window or tab), check for the following: 

By default, Prefixo is bound to the tmux command . If you want Prefixw to execute the same command, then do this (e.g. in your ): 

The question you have asked only concerns how the shell interprets its input and passes it along to other programs. It has nothing to do with Perl, per se. You should just be able to put this in a script: 

xnu-1504.9.17 corresponds to 10.6.5, but these bits have not changed since at least 10.4. If you just want to run the commands and you do not care that the input and the output might end up interleaved in odd ways, then you could temporarily disable tcsh’s command line editing with before you paste (re-enable it with ). This switches the tty to “canonical mode” where the input is line-based. This makes it easier for the shell to “keep up with” the incoming pasted text. Not all tty-based programs have this issue. GNU Emacs 21.2.1, Vim 7.3, and bash 4.1 all seem to be able to “keep up with” large pastes (I tried 8201 bytes; Vim and bash were slow, but they accepted the whole paste without any problem). 

We can be fairly sure that the containing directory is writable since you did not get this error message. The error message you reported is issued near the very end of the activity for git add. Unfortunately the is not reported by git add; if it had been reported, we might be able to make a guess about the problem based on the reported error. git add shows the error you reported if it has any problem writing out the contents of the new index (the contents is written into the file) or when it tries to commit the lock-file (rename the file to take the place of the existing index file; this is ‘committing’ the lock-file transaction, not what git commit does). Disk Space Issue? How is the free space on the volume that holds your index file? Maybe it is nearly full. I have been able to reproduce the error message when the index is on a volume that just enough free space to create the file but not enough to hold the entire contents. “Flag” Issue? Are there any flags set on the index file? On my system having either (“user-level immutable”) or (“user-level append-only”) set on the index file will cause git add to give the same error message you are getting. Check the flags with on your index file (the flags are displayed after the group-owner and before the size; it will show if there are no flags set). If you see flags, use the chflags command to remove them. You might want to investigate how the flags got there and whether any other files have them (perhaps with ). Use ktrace If neither of the above suggestions prompts a solution, then you might break out ktrace and kdump to find out what system call is failing immediately before the error message is printed. 

Which uses the prefix count before the usual Control-A (non-mapped, due do the in ). This version always uses the value in the register; it explicitly ignores any prefixed count (unlike the usual Control-A). Alternate implementations are possible (e.g. where a prefixed count overrides or multiplies the value in the register), but they would be a bit more complex. 

If was already set to , then inspect the individual lines; if there are CR characters there, they should show up as . 

You may want to edit the trailing “comment” part of the public key to better identify the key’s origin/owner/purpose (or attempt to hide the same). Use the pathname to the above public key file with or . You may also need to use (in or ) to keep ssh from trying to offer any additional identities from your forwarded agent. 

The ConqueTerm Vim plugin provides GUI-based instances of Vim with a fairly robust terminal emulation. It requires Vim 7.0+ (7.3+ for Windows) compiled with or ; MacVim satisfies these requirements. Here is a function and binding that re-implements the functionality of the normal-mode command using ConqueTerm (you can put it in your ): 

The following passage describes how the regex engine tries to match your expression against the above line (I added extra whitespace to the regex lines to show (approximately) where parts of the regex match the characters of the line itself). The first is greedy and will match everything to the end of the line, leaving the pipe character unmatchable. 

The default value of the “attr” is , so you may want to set it to something else if you are also changing the colors (so that will set the effective foreground color instead of being reversed into the effective background color); see the list of attribute names in the man page description of . The colors default to , which just leaves at whatever they were last set to while building the status line; see the list of colors in the man page description of . 

The keys bound in these tables are active when the various “modes” are active. They do not require the Prefix key, since the “mode” itself supersedes any normal interaction with the active pane. Additionally, the bindings in these tables are restricted to particular special-purpose commands (e.g. related to movement and editing), and each key can only be bound to a single command (i.e. can not be used to bind a key to a sequence of multiple commands). These “mode commands” are not described in the man page, but you should be able to find most of them by inspecting the listings for the tables (e.g. , et cetera) or from the source code (); their names are generally self-descriptive (e.g. , , , et cetera). 

The quoting also makes it easy to include a space as the required padding. The unintended globbing is unlikely to be a problem because you probably do not have any files that would match these commas-and-digits strings and most shells are configured (by default) to treat unmatched globs as literal strings (they are passed to the command in an unmodified form). The brace expansion, however, is always a problem (in shells that support it) because the shell will expand the layout string into multiple arguments. is showing you its usage message because it received too many arguments (after the shell performed brace expansion on the layout string). 

If you are on Mac OS X, you could try the following AppleScript. It finds all the unshuffable tracks of the source you pick and puts them in a new, “dumb” playlist. If you are on Windows, then maybe you could adapt the ‘logic’ of this script to whatever COM language you have at hand. See Windows Solutions section of Doug's AppleScripts for iTunes. I don't have an iPod, so I could not test it with iPod tracks, but it worked to find "unshuffable" tracks in my normal library. 

Ubuntu 11.10 bundles tmux 1.5. That tmux package requires the package to satisfy its runtime requirement. The corresponding build requirement is . Try this: 

Why Can't You Just Boot the Leopard Install DVD? In general, new Macs may not be able to boot older OS releases (either major, like you want, or even minor). This is due to the fact that the new hardware requires new drivers that are only included in the special build that the machine comes with (also later included in subsequent minor releases). You can try to find a machine that originally came with 10.5 (apple-history.com might be useful). For critical systems, it is a good idea to have a hardware backup (of similar vintage) in addition to your bootable system backup and data backups.