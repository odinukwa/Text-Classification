if you want to connect multiple sensor look into this raspberry Pi I2C shield, it will solve all your problems and its really low cost. for python library checkout this git repo it has hundreds i2c lib, you can find BMP180 over here. 

there are boards which you can use to connect your NTC and these boards gives 4-20mA current loop output. Once you have a current loop output you can use a 4-20mA current loop receiver and you should be able to read the NTC output. It will work something like this. raspberry pi 4-20mA receiver 

the ideal way to read multiple sensor is use I2C sensors. this is the only way you can chain multiple sensors together or you can use analog sensors but they will take lot of analog pins but i2c will use only 2 lines. lets say you are using Pi2/3, then i will suggest get a raspberry Pi hat which has I2C port so that you can connect all your i2c devices with Pi within seconds and it will make sure your hardware is correct. now you have the Pi with an I2C adpter let move on the sensor part. TI,AD,NXP,freescale and lot of other companies make temp sensor with I2C but you want to connect more then one sensor so there are two options. 

detect if generator is on/off -- the easiest way to do this is use a current sensor, because when generator is on line it will read the current going out of the generator, so you will be able to detect that generator is on line and also you will be able to read how much power you are consuming. please checkout this video how to read current after reading the current you can post the current readings on cloud and can also indicate that generator is on line. the easiest way to do this is use Particle photon and its super easy to use and you will able to see all the output on your dashboard without a lot of coding. then you can use one channel relay board with particle photon in each house. all the particle photon module can talk to the particle module which is connected with generator through cloud.so whenever there is current detection you can turn on a indication light in all houses. 

you can use a pi case with some extra protection layer. Raspberry pi does not come with any vibration or dust proof layer. But you can make it work. I made my scooter electrical using Raspberry pi, hall effect sensor A1332 and a hbridge. So hall effect sensor used to read the speed and in the gas paddle. so to protect our circuit we put it into a plastic Pi case with extra protection foam. the only issue you will face is wiring. so i will suggest get modular breakout board. To read pressure i will suggest go with AMS5812 pressure sensor. its highly accurate and gives digital output. so no need to get any extra electronic for pressure measurement. if you are looking for video tutorials you can find over here. for A1332 please visit this link $URL$ For AMS5812 pressure sensor please visit this link $URL$ I hope this helps. 

looks like your software is working fine. check if you have pull ups on your slave device. although it is master devices responsibility to provide pull ups. if you don't have pull-ups then install 4.7K pull-ups on SDA and SCL line. it should work. if you are not comfortable with hardware get a raspberry pi i2c shield. 

Raspberry pi does not have any Analog input so you will need an external ADC. Your sensor is 5V, so go with a 5V torrent ADC. you can use ADS1115 because it has 4 ADC channels so you can connect upto 4 sensor to one board. it has inbuilt voltage ref so you dont need any external Vref. its a 16 bit ADC so your readings will be highly accurate. it also has gain multiplier. its input are 5V torrent. You can find the python code for ADC ADS1115 over here if you are looking for video tutorial for connecting an ADC with raspberry pi please check over here. interfacing ADC with raspberry Pi 

you can find the code for MPU sensor on GitHub over here MPU 6000. if you are looking for video tutorial you can find over here MPU 6000 video tutorial. MPU6000 is easy to use. lets say you want to read the acceleration the send these bytes I2C address+write, 0x3B and then read 6 bytes. first, 2 bytes will be the MSB,LSB for x Acceleration and so on. If you want to read the Gyro data you can send this command I2C Address + write, 0x43 and read 6 bytes. first, 2 bytes will be the MSB,LSB for x gyro data and so on. 

A lot of pressure, flow meters works at 13-24V DC and the analog output voltage of these sensors is like 0-10V DC. if you have these kinds of sensors then you will need to look into ADC boards which can support 0-10V ADC in voltage. Here is a board from "Controleverything.com' which can read 0-5V/0-10V DC and has 12 Channels. 12 Channel 0-10V ADC input You can connect this board directly with raspberry pi using this Raspberry Pi i2c shield Both of these board are "plug and play" you can connect them with Pi just by using a simple I2C cable. 

yes its possible that you can connect multiple devices with pi as long as you dont exceed the max current. there are few things you need to keep in mind. 

get an external ADC with inbuilt amplifier. I will say look into ADS1115. the other option is go with a MQ2 sensor which comes with an on board Analog chip. So this will be the best way to go. you can look into this MQ2 gas sensor this one comes with I2C, so its easy to use and no need to use an external amp. 

make sure your i2c pull ups are connected. You can use 4.7k as pull up resistors. if you are looking for Java or python code you can find over here Si7021 python code. 

you are not sending the correct data. if you are looking for a complete code you can get here. MMA845X Python code go to resources tab you will find the code. make sure your sensor is connected correctly. 

there are advantage of using same sensors are that you dont have to read 6 datasheet to write your code you will need to study one datasheet and write the code its way easy. if your all sensors are same then you will have better results to compare. 

get 6 different different I2C sensors with different different I2C address, if you have two sensors with same address it wont work. you can get sensors with address line and just change address and you can connect them with Pi without any address conflict. i will suggest use this TMP 100 sensor i prefer this one because it has 2 address line with floating address line support so you can hookup 6 sensor with one i2c line. 

its ADC resolution is 16 bit works in single ended and differential mode in built gain control in built vref ( 2.048V) has 2 address lines with floating address, so 9 MCP3428 can be connected with one I2C master. this will give you 36 ADC inputs. 

its very simple to use, not much coding required. hardware is very minimum, if you dont want to solder you can look into this raspberry pi i2c hat. there are hundreds sensor out there which come with I2C communication. So finding hardware wont be that difficult. 

ACS current sensors give voltage output with respect to the current following through them. Raspberry pi doesn't have any ADC pins so you will need an ADC to go between raspberry pi and the ACS sensors or you can get an ACS sensors which come with an ADC so that you can directly plug it into the raspberry pi. something like this ACS sensor with ADC once you have the ADC hooked up you can read the ADC values and convert them into the real current values. For better results, you will need to take multiple readings and average them. 

particle cloud is well developed so it wont take much time. You can find the current sensor code over here. You can find the wifi relay code over here. 

I2C is real easy to use. If you can detect the device, it means it's communicating with the Pi. if you are looking for any specific code please specify else you can find hundreds I2C sample code over here. 

in the SI70XX series, the I2C data update works in a different way. in it when you read the same data register to get the reading first it will send the MSB and then will send the LSB. Please use this code to test your sensor. $URL$ 

did you enable I2C in boot config. if yes then i believe your master I2C is working fine( raspberry pi I2C). now move to your slave, did you check few things a. what is your slave device voltage level. is it 3.3v or 5V. pi i2c is 3.3v. b. are you using the pull up. i2c wont work if you are not using pull up. 

this is answered here. the ideal way to read multiple sensor is use I2C sensors. this is the only way you can chain multiple sensors together or you can use analog sensors but they will take lot of analog pins but i2c will use only 2 lines. lets say you are using Pi2/3, then i will suggest get a raspberry Pi hat which has I2C port so that you can connect all your i2c devices with Pi within seconds and it will make sure your hardware is correct. now you have the Pi with an I2C adpter let move on the sensor part. TI,AD,NXP,freescale and lot of other companies make temp sensor with I2C but you want to connect more then one sensor so there are two options. get 6 different different I2C sensors with different different I2C address, if you have two sensors with same address it wont work. you can get sensors with address line and just change address and you can connect them with Pi without any address conflict. i will suggest use this TMP 100 sensor i prefer this one because it has 2 address line with floating address line support so you can hookup 6 sensor with one i2c line. there are advantage of using same sensors are that you dont have to read 6 datasheet to write your code you will need to study one datasheet and write the code its way easy. if your all sensors are same then you will have better results to compare. 

Yes you can. You can use I2C multiplexer. PCS9547 I2C mux is one of the best option. its a 1:8 mux so you can connect 16 BNO55 to one PCA9547 and then use 3 more mux to connect total 64. Using I2C mux really easy, all you will need to do is call particular port and then talk to the device attached to that port. this PCA9547 mux board has on power power management so you wont need any external power source and it has 3 address lines so you can connect total 8 of these to one I2C master device. so in your case you can connect upto 128 BNO55. 

you can use an IR temp sensor array. AMS makes IR temp array sensor or you can use MLX90620. you can draw a graph of temp data near the nose area. you will see temp peaks every time you exhale. but this sensor doesn't have 1m range. 

this instrucatble article RFID Interface shows how you can interface a low cost RFID with any uart device. 

To convert 4-20mA values into read data values you will need readings at two known points, using these two points you will be able to calculate the slope (m). using this slope you will be able to calculate your real word readings at any given point of time. Here is an excellent article you can checkout $URL$ 

if you can see o/p at terminal using sudo i2cdetect -y 1 it means you have installed correct driver. few things you can check. 

there are lot of breakout boards which come with ACS712 sensor and ADC. and the ADC comes with I2C interface so you can connect directly to your pi. this video shows the entire process. $URL$ 

Make sure all i2c devices have different- different addresses. (as you are trying to attach more then one i1c device to the pi at same time) Pi has 3.3V level for all GPIO including the I2C, so if you have any sensor which works at 5 v or some work at 3.3v. you can get a I2C hat which will convert to I2C voltage either 5v or 3.3V. if you use this Raspberry Pi Hat it will convert I2C voltage to 5V. its a better choice because there are lot of sensor who works at 5V only. 

your board has on board driver so all you will need to do is turn on and off your GPIO and it will work fine. to make sure you can directly connect the relay input to 5V and GND and see if it turns on and off. the relay you have will do AC switching only but you can get the SSR which can do DC also. when i work with AC and Pi together i try to isolate Pi from AC, just to prevent possible damage. in future you can use a PI hat and SSR relay board with On board isolation. And Pi GPIO are 3.3V and lot of time these relay work with 5V only so if you use a SSR board like this you dont have to worry about the voltage shift. with I2C you can chain multiple relay board together and control more relay using your Pi and at the same time you will have your GPIO for other uses. 

you can check i2c sample codes. its really easy to use. here you can find the code for LIS3DHTR I2C code in python,java,c and much more. LIS2DH and LIS3DHTR work in the same way and X,Y,Z register address are same for LIS2DH and LIS3DHTR, so its possible LIS3DHTR code will work for LIS2DH with minor changes. Still, its a good idea to check with the datasheet and make sure you are sending the correct data to read the sensors. 

you can get a relay board with IO expander chip like MCP23008 or MCP23017 relay board . using this kind of board all you will need is I2C lines to control all the relay. 

make sure all work at 3.3V or if you have 5V device you will need level sifter. make sure your pull ups are connected.( 4.7k is really good choice) once everything is setup correctly you can run the I2C scan and you will see all the device addresses. 

if you dont have much exprince with voltage sift and level sift you can use a sensor BME280 like this which has on board voltage regulator, level sifter and pull ups. this will make sure your hardware is correct. for BMP180 you can use same kind of module and it also has on board voltage regulator, level sifter and pull ups. if you use these you dont have to worry about wiring and power its all in built. now you have all of your hardware working lets move to the coding. you can find Raspberry Pi sample codes for BME280 and BMP180 over here before running code run sudo i2cdetect -y 1 and make sure your pi detects both sensors. once you see both address you are good to go. all you need to do is copy paste the code and you are done. Cheers!!!!!!!!!! 

you can find sample code for HMC5883 over here. here you will find c,java,python and micro python code. just to get X axis look at this section. xMag = data[0] * 256 + data[1] if xMag > 32767 : xMag -= 65536 zMag = data[2] * 256 + data[3] if zMag > 32767 : zMag -= 65536 yMag = data[4] * 256 + data[5] if yMag > 32767 : yMag -= 65536 So all you need to do is, read the first 16bit. 

checkout this youtube video, which shows how you can chain 20+ devices with raspberry pi. raspberry pi plug and play. 

i work with I2C alot and this is the best protocol for daisy chain. If you want to go long distance you can use I2C signal enhancer. there are few advantage of using i2c. 

you can connect multiple i2c devices with pi as long as 2 devices Doesn't have same address. to connect hardware check few things. 

here is an example code which explain how you can interface i2c device with raspberry pi and windows IOT. in this example they are using an accelerator, all you will need to do is change the i2c bytes and it will work.