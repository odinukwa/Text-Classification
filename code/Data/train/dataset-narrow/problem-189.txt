Since your comment indicated the client is on the outside and the server sitting inside, the outside client would be initiating a connection to your inside server. Therefore, your firewall must have an ACL on your outside interface to permit this, but this is just the beginning of the story.... FTP FTP has a control channel on port 21 and a data channel on port 20 by default, but the data channel is usually some random port negotiated over the control channel. With a firewall like the Cisco ASA or PIX, you typically need FTP Inspection enabled. Your Outside ACL only allows tcp/21. The Inspection occurs at the FTP app layer so the firewall can detect the port for the data channel and create a pinhole for that traffic. The data transfers take place on the data channel in either Active or Passive mode as determined by the client. [Active mode was once the predominant default, but many clients are moving to Passive now.] Active mode (FTP command) indicates the port (and IP address) the client is listening for the incoming data connection initiated by the server. This often breaks because client firewalls are not often capable of the Inspection-equivalency to let that through. So often, we see clients doing Passive mode (FTP command) which asks the server to provide a port that the client will connect to (server listening on PASV port). Without Inspection or its equivalent on your firewall, you'll need to open blocks of ports if clients are Passive and restrict your server to a small range of data channel ports. Keeping the number of ports low prevents you from opening too many ports on your Outside ACL. With Active clients and no Inspection, a default type of statement would let your server initiate a connection out to the client on the data channel, though you may still run into the client's firewall getting in the way as described earlier. SFTP This is just Secure (or SSH) FTP which is really just SSH file transfers and not the FTP protocol itself. It defaults to tcp/22 -- same as SSH -- and doesn't require a separate channel. This is much easier to handle through firewalls, but obviously both client and server need to be speaking the same protocol. 

The BSSID (basic service set identifier) is what you seek. Numerous wireless troubleshooting apps (e.g., Wifi Analyzer) will show the associated BSSID. Under Windows, you could locate the BSSID with: 

DHCP Snooping for both the L3 IP and L2 MAC addresses if you seek to just identify your clients using dynamic addresses. This is used for security to block rogue DHCP servers and only allow packets to be received on switchports with valid DHCP addresses that were offered and requested (i.e., actually in use). Enable dhcp snooping globally for your VLANs you want to watch 

Anything that subtracts from the full bandwidth available to you will reduce your iperf results. That includes both competing traffic on-box and off-box. 

Router Advertisements (RAs) can provide autoconfiguration of default gateways for hosts instead of manually configuring each system. The downside is similar to the Rogue DHCP Server scenario: A Rogue RA coming from a misconfigured router or even a Windows desktop in a wireless network, for example, can offer a default gateway that doesn't work as intended. Appropriate controls could be ACLs to block these from untrusted interfaces or implement RA Snooping (aka RA Guard) similar to DHCP Snooping. See source of Rogue RA info @ RFC6104 Rogue IPv6 Router Advertisement Problem Statement RA Guard config @ Cisco IPv6 Configuration Guide 

What could be different with that second password prompt to account for this behavior? The typical AAA and related config I have is: 

The OP's approach seems backwards to me or I am really misreading the question. I would never taken an approach that attempts to force the router to clear its cache to aid some external monitoring. If you're trying to confirm the IP-MAC of the router being spoofed, who cares about the ARP for your client? If you already know the router IP-MAC to confirm from the client, the client [program] should be the one sending out an ARP for its gateway (IP) and confirm the unicast response containing the gateway's MAC address. Assuming you don't know the gateway's IP-MAC initially, you'll have to take the first one seen on faith, then monitor all other ARP requests from that gateway to detect a change that would trigger some sort of alert by your program. On Cisco devices, the default ARP aging is 240 min, so you'll see at least one ARP per client every 4 hours to generate these requests organically. To really spot ARP poisoning, Gratuitious ARPs would most like come into play. These should be monitored as well. Your program could become a change detector for ARPs in that you persist the IP-MAC mappings seen for the life of your program and you don't clear that mapping every 4 hours the way ARP aging does and blindly accepts the next ARP response as valid. 

What are some possible ways to detect packet loss deep in a provider's network that is several hops away? With multiple providers peered over BGP on our Internet edge routers, I need to be able to automatically detect packet loss (primarily) and latency (secondarily), and do an interface track or something similar and shut them down so all traffic uses our other providers. I've seen two problems with using IP SLAs. First, what needs to be measured are at least several hops away (way past their BGP peer), so monitoring anything deep in the provider's network is not a static proposition such as monitoring our links with them (which have been stable); if that provider's links are shutdown, SLAs would still have reachability over another provider's path. Second, doing an ICMP-type monitor doesn't detect the level of packet loss that is usually seen with much larger packets and latency doesn't seem to change significantly. Is Performance Routing (PfR) the best option here and influencing BGP's localpref? Seems that the Master Controller is a SPoF (Single Point of Failure), so if PfR is the way to go, how can the border routers not be dependent on a single Master Controller? What are two or three other viable options? The majority and most critical of our traffic is from our outbound HTTP responses. 

I've been using NBAR to throttle Facebook, but you can tweak it to block. This will only work on plain-text HTTP requests which effectively blocks someone entering the address in the browser before a redirect to HTTPS can take place. SSL (TLS) bookmarks to FB would be missed. You could also look at the new ASA-X CX (Context Aware security) that should be able to handle this, though I haven't deployed this yet. 

In a project to replace the last Cisco PIXes and VPN 3000 Concentrators we have [finally], I've already spec'd out the new ASA 5515-X and 5545-X's. I have no experience with the X models; only exp with the older ASAs. These are replacing enterprise firewalls for our employees, L2L tunnels (HQ/branch), and RA VPN. Every pair of PIXes (primary/failover) and pair of VPN 3000 (clustered) will move to a single pair of ASA-X's. I am considering the CX Application & Visibility Control and Web Security Essentials option to handle all desktop/laptops and BYOD devices. Are the AnyConnect Essentials VPN and AnyConnect Mobile licenses all that are needed to be able to do ACLs that consider device type (from some basic posture assessment of the AnyConnect client) -- no ISE in environment -- along with CX to be able to do something like block iPADs/iPhones from *.facebook.com but allow Android devices? Besides the filtering above, the BYOD devices with AnyConnect would need to do RA VPN over IPSec if a particular device type (determined by ASA) and group membership (determined by ACS) are allowed -- SSL VPN not needed. And are there any client-side licenses as it seems not, since the costs of those AnyConnects ASA licenses are so dirt cheap that it almost doesn't make sense for Cisco to even charge for them -- $150 ea. MSRP for the 5515 -- and have no client-side license requirements? And, yes, I'm familiar with the EOL dates for both -- VPN 3000 past and PIX in July. 

Source/PDF on generalnetworkerror.com Other color coded references for TIA/EIA 606 and other standards can be found at Huffmanreference.com. 

One non-techncial reason to install fiber over copper for switch uplinks and the like, ignoring costs, etc: People are more afraid to touch a fiber cable compared to copper, so you'll get less of the "Oops, I didn't realize that was the uplink". 

Unless you truly capture the frames on the same ethernet segment, the frames will be different after your routers rewrite mac addresses, decrement the IP TTLs, and recalculates checksums. And with VLAN tagging, frame sizes may vary depending on exactly where in the network they are pulled. Ignoring the effects of NAT/PAT rewrites of IP addresses and ports, or firewalls changing TCP sequence numbers, I suggest the following fields to derive the canonical frames for the largest LAN diameter: 

Stating "behind a router" doesn't mean directly connected. The use-case could be three routers R1-R3 and three subnets sA-sC as described below. The routers could be at separate physical locations. 

What exactly do these terms mean? I intuitively understand them to mean airflow direction can be reversed or changed. 

Contrary to popular belief, there are cable color standards defined, just hardly anyone (myself included) follow them closely or at all. Check local jurisdictions for variants. ANSI/TIA/EIA-606-A Administration Standard for the Telecommunications Infrastructure of Commercial Buildings or the updated ANSI/TIA/EIA-606-B documents these standards. Generally, anyone who wants to following building standards should be familiar with BICSI and vendors who are BICSI certified would be familiar with these as well. Cable colors are specified using Pantone numbers. These colors or their equivalent are to be used. 

Any L2 switches involved will not modify the MAC addresses. Now for communication to another IP within your subnet, direct MAC communication is needed, but to get that MAC addr requires the ARP protocol that uses a broadcast in the subnet to find it. By the way, this is how your workstation gets the MAC address of your default gateway that must exist in your same subnet. 

I understand the benefits of the Cisco 6500 VSS with the obvious selling points of single management, single routing instance, STP elimination, port-channels across chassis, etc. With two standalone Cisco 6500s that may have L3 and L2 port-channels between them, they at least have no operational dependency on one another through the control-plane. In a VSS world -- and I have no direct experience with this -- we now have software and other protocols that control both switches. In my designs that expect control-plane software to have bugs, does the VSS lower the MTBF as I suspect and is a trade-off with the capababilities gained or am I missing how MTBF is improved? 

A promiscuous trunk on the 3750 toward the 4500 is what you need to go across a non-PVLAN-aware switch and keep security intact. See Promiscuous PVLAN Trunk Ports 

You're looking for per-packet load balancing where packets get round-robin'd over interfaces of equal cost, but the issue becomes out of order arrival of packets which could lead to bigger problems. Usually, per-flow load balancing is performed which can send separate conversations over different links though this depends on load balancing algorithm chosen. See Cisco load balancing with CEF. 

There's a limitation (stated below in Cisco's documentation) that FlexConnect ACLs in Cisco WLC cannot be combined in the same WLAN with local mode ACLs. The GUI allows the entry of a local mode ACL in the Interface tied to the WLAN and also a separate FlexConnect ACL in those APs that are in FlexConnect mode under the VLAN-Mappings section. This seems contrary to the restriction. Does the FlexConnect AP ignore the local mode ACL on the WLAN and just use its FlexConnect ACL or is the behavior something else to back up the statement below? I really don't want to have to create separate WLAN's just to handled the FlexConnect ACLs.