When executing the setup script from a Simulia Abaqus 6.14 installation directory under Linux (Mint 17.2), I receive an error upon launching the installer. The Abaqus installer appears to run in Java, hence I installed the required JRE (v6) first. However, the installer still reports a application error related to some character encoding: 

I can't find a good price overview for the costs of transferring data into Amazon EC2 nodes. According to the price calculator linked below it is apparently free of charge to transfer any amount of data into an Amazon EC2 node. Please let me know if this is true. $URL$ Note: I am aware that of course using the EC2 instance is not free of charge, but Amazon will usually bill you for data transfer separately - that's what I am asking about. 

I just discovered the answer (through) Google while writing the question: Apparently, this is a known issue with installers. There is an easy workaround, in your terminal you simply have to call: 

Doing this actually does reduce the folder to about 190 MB, but the package does not shrink. (I am guessing it's a sort of zip archive that won't shrink automatically?) 

The problem is that it doesn't display any files and you will have trouble with the drag & drop upload functionality. So we are generally out of luck. 

The former worked for me and the restarting the script in the same terminal after unsetting allowed the installation to proceeded without issues. 

I am not sure how your router works, but if it really blocks certain IP addresses (instead of MAC addresses) - you could try to change the IP on your Computer directly - no need for router access to do this. In your network settings, try to set the IP to manual configuration. Network and Sharing Center > Local Area Connection > Local Area Connection Properties > Internet Protocol Version 4 (TCP/IPv4): 

You could of course try to run either of those through wine. There is also some software that lifehacker mentions to be used under Windows. I imagine you could use wine to run it (or any of the former tools) to see if you can make those work. If all this doesn't make you happy right now: There is another idea I thought about: Terminal-based web browsing. Install w3m or any alternative (lynx, links2, etc.) and try it out - I didn't get very far, but I haven't tested all of them and you can at least log into the website from your terminal-based browser. I also couldn't test the image-rendering capabilities (you need xterm for that). Here is a decent guide. 

So this suggests that there is no Docker daemon running that Jenkins can see. The option: in the container start-up should have worked, but I'm not sure what other setup steps I may be missing here? I am running this under and my Docker installation on the host appears to work fine. There are some Jenkins config points, where more docker info and installations can be configured, but it seems the default should work? Please let me know if I am missing anything to get jenkins access to the docker daemon. [UPDATE] After more searching everyone was pointing to the permissions as the main source for this kind of problem. Looking at this mounted socket it looks like the user is not part of the right group. I'm guessing the mapping form the host group into the container is done by id and that simply doesn't match ? 

If you want everything to stream over WiFi, make sure you have a decent modern WiFi router. I would recommend something that supports 802.11n or higher, but make sure that your pc / laptop / tablet / phone also supports it. If suitable, you might want to connect your computers (or at least 1 of them) through ethernet and check if you can stream multiple videos then. Even with a modern WiFi router, more devices generally means less bandwidth. Make sure you are not too far from the WiFi router or have it setup in the worst possible location. You can use istumbler.net (mac) or stumbler.net (win) to check your signal quality. If you suspect that your ISP is too slow (speedtest.net), you will have to see if they can either upgrade your plan or if this is all that is available for you. If you can't get a contract that offers above 3 Mbps, it might be difficult due to your location, but if you have a 15 Mbps plan, you shouldn't face any problems. Check what quality you are trying to stream. If you are trying to stream HD content only, or even 4K content through netflix, you need up to 12 Mbps per stream, so you might want to find a provider with 50 Mbps or higher speeds. Make sure you have a netflix account that allows more than one person to stream media (ok, this one should be trivial). Lower your netflix streaming rate. In the Netflix settings you can adjust playback settings (Low / Medium / High). Try the lowest on all devices and see if that improves anything. 

At the time of asking the answer was unfortunately No, but no more! You can now easily access Amazon Cloud Drive from the terminal using an OpenSource client called , which is written in Python (3) and runs under Windows / Linux / Mac. There still is a list of authorised apps here: $URL$ These are mostly "cloud-to-cloud-sync" services and absolutely not what you are looking for, though. Even the Amazon build app for Mac OS X, which actually is a stand-alone uploader, does not provide a command-line-interface and you can not upload files from the console. The only hope is an open REST-based API that allows interaction with Amazon Cloud Drive, which is good news, as it essentially means, anybody could build a client for it. One app called ExpanDrive also supports Amazon Cloud Drive by now due to user requests. That doesn't help much, though, since they also don't have a Linux version of their (commercial) app, yet, but they are also working on that apparently (originally to be released mid-summer 2015). There are a number of similar products such as Netdrive (only supports Windows). The (discontinued) DragonDisk already has linux command-line binaries and supports: 

add to the command to make sure the user running inside the jenkins docker container will belong to the equivalent docker group on your host. 

Now, when trying to setup a pipeline inside Jenkins, it can not find the Docker deamon. Error output I get from the pipeline inside Jenkins: 

I am using Syncthing, which is an application to sync files between two or more computers. I believe Syncthing (on github) needs to be allowed to Accept incoming network connections to work properly. Mac OS X has a build-in firewall, which constantly asks me, if I want to allow syncthing to accept incoming network connections in form of a pop-up window. Usually, this only is asked once for an application, but for some reason this pop-up appears at least 4 times a day. It might be related to an automated update functionality that results in a new binary showing up once in a while (similar to what Google Chrome does). However, the update frequency of this application is much lower compared to the amount of pop-ups I am receiving. Any idea what I could do to make Mac OS X stop asking me this question for a specific application or is there just no way around it? It would be great if there was also a default choice that would be made in case I am away from the machine. Any idea how this could be accomplished - without turning the firewall off? 

I followed the simple steps to get Jenkins up and running through a docker container: $URL$ Basically, all I did was run: 

If you are unlucky the router might also only allow certain devices (like Kristian) suggested, you would then have to adjust your MAC address to imitate one of them. However, this will most likely lead to issues in your network, since two computers can't have the same IP in a network. 

The mounted socket: is resulting in confusion about which group it belongs to on the host and inside the jenkins container. There is some discussion in this GitHub issue: $URL$ 

Here are a couple of suggestions, but as Benedikt pointed out, more info could help us a lot in answering you more accurately (your bandwidth speed (!) / home wifi setup / router model / etc.): 

Therefore, the problem I am facing now is that even though the contents of the Google Chrome app are of reasonable size again, the app package is still 5 GB large. Any idea how to shrink it? 

Lastly, if non of these things help you, maybe try to pre-load your stream. For example, if you intend to rent an iTunes movie, you can pre-download (cache) it at any speed you have available and watch it after it was cached to disk at any quality you choose (SD/HD). Obviously, this only works for this exact scenario (renting though iTunes) and Netflix doesn't offer such services, but maybe you find other similar offers through some Amazon player (I am not familiar with them, though). 

I recently scanned my hard-drive looking for things that are taking up too much space. I couldn't believe what I found: The takes over 5 GB on my hard-drive (Mac OS X Yosemite 10.10.2). (Remember, I am not talking about the browser cache or RAM allocation, but simply the app itself.) I looked inside the package and found a folder containing Google Chrome versions dating back to 2013 (31.0). 

Alright, so I have to manually delete old Google Chrome versions from inside the app? Why is Google Chrome not deleting old versions itself?