Maybe you can use the GPMC, (Group Policy Management Console) opened with the domain admin rights. Or with powershell, you can use these commands always with a console opened with domain admin rights: 

To have onr file per day, you can do like this. On my server I store on file per day during 7 days. It deletes the oldest files. In the properties of yours performances counters : 

If you want to deactivate the notifications to all yours deveices. You can modify directly yours templates with . And for yours hosts with notifications you put le propriety in his configuration or create a specific template. 

If you don't pass any arguments to your check_nrpe, the server (windows client) will responde with his version number. 2. Testing your command On your windows client, you can test locally your command in a console with . If your command return good result, you can test from your nagios server without arguments : 

But now, I would install the snmp agent of my RAID controller. I used the rpm and I convert it ina deb with alien : 

In somes cases, from a windows client in a domain, you must specify the machine in your login if the machine is not in the same domain. Ex: Like that, you force the authentication with the credentials stored in your debian box. 

After, don't forget to restart your service. And test with to be sure your new port is correctly opened. 

To be sure of the synchronisation of your 2 servers and because you have under windows2012, you can use DFS for the sharing and DFS-R for the replication of your two servers. You could follow those simples steps for that : 1/ install and activate DFS replication (DFS-R) between the servers. When you are sure the initial replication is finished, all your files will be synchronised, and your user can be on any server, yours files will be the same. 2/ with DFS, you can create sharing which point to the two servers, with a priority on the new R:. 3/ You can migrate the users gradually. The old users point again to the ancient server. And the migrated users point to the DFS. 4/ When you finish to migrate all yours users, you can stop the replication, and delete the ancient server from your DFS. good luck ! Edit from my comment : If you want to save your share permissions and apply then to your new drive, you can work with the registry. Your share permissions are stored in the registry in this key : 

As you are using nsclient++, I assume these are Windows hosts, and other remote execution options (e.g., push_check) are not available. However, nsclient++ has its own remote execution built-in. See details here: $URL$ for example, in the nsclient++ configuration, include 

If you want this box to be able to send out any mail that it generates, you need to add before , so that mail coming from your networks is approved regardless of where it is going. 

The parameter determines which domains Postfix relays to -- that is, the domains that your email server will accept mail for in addition to its mailname -- so this line isn't going to help you here (I assume this is what you are trying to achieve with it, anyway). You are restricting the MAIL FROM address to those listed in -- make sure that includes . You have fairly early in your line, and according to postconf(5), that rejects unless either 

The browsers may be caching the DNS results. It might be worth trying the query directly to the configured DNS servers to see if they are the problem -- perhaps one of them is particularly slow or down. Take the IP address from the line in and run 

You can configure ssh to run a command of your choice when you log in using public key authentication. To do this, generate a pair of keys: 

You want to replace the existing header (which may contain other recipients or the name of a mailing list) with the computed final destination of the email? You already have some code to figure out where the email has to end up, so use that: 

This will exit with code 0 (Nagios "OK") if the host is reachable and code 1 (Nagios "Warning") if not. You could build a more elaborate batch script to do something a bit cleverer with the output. Nagios's NRPE check can trigger this script. Define a command as follows: 

I'd be tempted to time it- if it comes back quickly assume refused, otherwise timed out. You may get some edge cases where it is refused just before time out period, but at least you should get reasonable results. Using bash's time command will give you what you need. You'll need to figure out what the thresholds should be for a refused and a timeout, maybe through trial and error. 

As someone who has managed many hundreds of penetration tests for organisations in the Fortune and FTSE 100 as well as very small local companies I have the following for you: Broadly speaking you are doing the right thing with regards pen testing in terms of using well known external companies to see what they can get access to, however the most appropriate way to do this is: 

It is a trade-off, as @MartinVejmelka says. The reason you use key based auth is that the key is so far above current or near future brute forcing that you need to be either coming from your own PC, or have the key on a USB stick or similar. A password has the following issues: 

You should plan to use a variety of companies or rotate them. I tend to encourage people to use a panel of 4 or more, as each has their spacialisations and specific experience. You will never be secure, but you can get 'secure enough' based on the risk profile your company wishes to accept. Don't assume that because you are small that you are not a target - current organised crime structures sell on exploit methodologies from successful large organisation hacks downwards, and if you are on the Internet you are a target whether you like it or not. Various questions over on security.stackexchange.com have covered this question so it is worth having a look over there. 

It's normal you can ping only from your VLAN1 because the interface of your router is in this vlan and it knows only this subnet. You have two solutions : Configure your router to know the three vlans and configure the interface between the router and your switch in trunk mode with the three vlans. If you can't have your vlans in your router, you will must to create a subnet between your switch and your router and adding a route in your switch to access to internet and a route in your router to access on your VLAN subnets. 

I have installed to send my logs to a graylog server. It works fine, but I have a denied permission on the logs of my HIDS Ossec. My process (launched by collector-sidecar) run as root : 

You can specify the port number directly in the command but you will must create one command per tested port. Or you can create a custom variable to store the port number , with your example: 

If you want to have an idea of what happening on your server, you can use the Performance Analyser of Windows 2012. You can launch a record during 24h of all counters and with that, you will be able to see where come from your performance problem. It could be the processsors, the memory, the disks or one process. Be carefull, the report files generated by the analyser performances can be very big, think to split them during the analyse. 

Because the block size of the partition is 17408 bytes. So, yours files will be splitted in part of this size and the file which have a size smaller than 17k will occupe 1 block so 17k. 

If you have a mount, this part is ok. If you don't have a share, it's not necessary to test with psexec, it will fail. Moreover, be sure your ports are well forwarded, and yours firewalls are correctly configured for the port 135. 

It sounds like you need the Nagios Business Process Intelligence (BPI) add-on. This allows you to monitor a group of services and set alerts thresholds based on how many are up. Shinken has this functionality built-in, too. You can use the from Nagios Plugins to monitor DHCP -- it tries to get a lease from a specific server, and alerts if it doesn't. Together with BPI you should be able to achieve what you described. 

The obvious solution here is to run x11vnc on the same display as Firefox so that you can at least see what Firefox is complaining about. 

You could add a second IP address to the system and point the DNS name at that new IP address. The server will still talk on both IPs, so none of your users will be disrupted, but you will know that anyone connecting on the old IP is not using DNS. 

Note that this is on by default. Any user connecting from computer C to computer B will be connecting as an ordinary user. The NFS connections forwarded through SSH as you described look like the originate from a process running on B as that user. This means that connection is subject to the usual security controls on B, in particular that normal users can't originate connections from ports lower than 1024. Tested on one of my systems, I see the following: 

Of course, anyone who can elevate their account to root on computer B can defeat this protection, so you need to lock down NFS client computers sufficiently. 

I've always believed the administration advantage of SSH (I use push_check) outweighs any additional load. Modern CPUs are so fast that the cost of encrypting a handful of bytes is pretty minimal, so it comes down to running two processes (SSH and the check script) vs one (check script fired off by NRPE). For check scripts written in an interpreted language, I would expect the overhead of firing up the interpreter (Perl, Python, Bash) to exceed the CPU cost of starting an SSH session. Given modern CPUs, your machines are more likely to be disk or memory limited rather than CPU limited. Provided your Nagios machine is coping -- it has to set up 20 SSH connections every second -- I would err on the side of convenience. Not really an answer to your question, more of an argument that life is too short to worry about it :) 

The fact you are using IIS is irrelevant - you just have a memory hungry config, so want a big chunk of RAM. Your best bet is to pop over to somewhere like crucial.com, and input your server type - it will then spit out various memory options which are compatible with your server and you can pick and choose your price point. The problem is that pricing varies dramatically so any single answer here will be dated far too rapidly for it to be useful. 

To update files in the ecryptfs filesystem you need to update them in the mount point - in the encrypted filesystem you would need to update the entire thing at once, as it has no concept of files or directories - it is just a large chunk of data. Yes, you can use rsync to back that data up somewhere, but in order to read or write a particular file you need to mount it. You can mount it from various different places (probably best not to try this simultaneously :-) so why not use a shell script which mounts, rsync's the relevant files and unmounts whenever relevant files are updated? useful info here 

From carrying out a fair amount of penetration testing on virtual environments I would add these two items to watch: Plan your virtual environment exactly as you would a real environment - as any structural or architectural vulnerabilities you introduce in the real world will translate well into the virtual world. Get your virtual configuration right - 99% of all successful penetration I have managed into VM's or LPAR's has been through misconfiguration or reuse of credentials. And on a less technical note, also think about segregation of duties. What may have been handled by network teams, server teams etc. may now be one team. Your auditor may find this important!