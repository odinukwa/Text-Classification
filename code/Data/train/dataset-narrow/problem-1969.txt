But, of course, I actually want the dates to count down, so I subsitute in the $i for the 1 but find I get... 

I'd like to be able to feed the phones back into a Text-To-Speech engine, but here I get a bit lost - my 'say' command on OSX doesn't accept the same set of phonemes (and nethier does espeak) - is there a (free) system for OSX that let's me input phonemes in Arpabet style and get audio out? (Or, for that matter, something that converts between different sets of phonemes?) 

…but I've not pressed enter yet - I suddenly rememeber that I can't run the command until I first do something else - what are the fastest ways to 

and it gives me everything (presumably because it's printing the multiline that matches - the whole file) How can I improve this sed command to give me only, say, first line of the match? 

Any and all information and answers welcome… EDIT - or if anyone wants to recommend a place SE or other place to ask the question - that would be cool... 

They are mostly every third day, but regularly turn up on consecutive days (today and yesterday; 1st and 2nd March; 23rd and 22nd Feb;...). Can anyone explain what's happening? EDIT: Ah, is it possible that the Cron server is just resetting entirely on Saturday nights? And if so is that the cron protocol or is that the way the sysadmins have configured things? 

blank the prompt without executing the command (I mean, I could leave something heavy on backspace and go and make a cup of tea, but that's not all that efficient)? Save the command I've typed for later recall, before I then do 1. 

This prints out the current state of the vim registers and can be running in an entirely different window. The slight drawback is that vim normally only saves it's registers to viminfo on file exit, but you can force the saving with the command ':wv'. Mapping this to a spare key gives you one touch updating of the register view. 

I run a small open souce assistive technology project (github link) that processes templates that users create in PowerPoint. The code dosen't deal gracefully with the case where transparency makes the image larger than the cell. In effect, I have a PowerPoint document that contains a great many png images. Many of there images are actually small images with a large 'transparent' areas around them. I'd like to be able to crop these images so their transparent bounding box was as small as possible with cropping and of the visible parts. Can this be done? Here's a screen recording showing what I'm having to do for each image individually. $URL$ 

I have a bunch of text files in a directory and I know I'll need to edit each one indiviudaly. I start at the commend line with 

I'm using MacVim with a few tabs open. To keep everything from one project in one window I'd like to make one of those tabs into a terminal. So I switch to a tab and type 

(there may be a more suited SE site for this question so feel free to shift) I have some data I'd like to make open to the public - It's synatesis of some related data retrived from freedom of infomation requests over the last year. The data itself is at $URL$ or for fans of Excel, at $URL$ . It's no more than a table with about five columns. I'd like to make this properly open data, so I was looking at the 5 star deployment scheme for Open Data. Much of which is fine but I'm confused towards the end and I could do with an explenation from people who know the answers. So to get achieve the star levels I need: 

I can do this with vim marcos, reasonably cutely, or knock up some python, but I'd like to do it from the command line. Can I get a recommended starting point? I'm suspecting there's some sed magic that can be done but I can't get my head around it... 

which messes up the 'rectangle' - does anyone have any ideas about how to get the behaviour I'm looking for? 

I'd like to be able to set an inactivity timer for a terminal window (OSX) - so if I hadn't typed anything for n minutes it would give a 'beep/alert/run script' - is there a as-yet-unfound-by-me-terminal command/command-line-fu that does this? 

Turns out that at least part of the problem is that the Xrandr utility is designed only to deal with X11 windows and not native osx screens... 

I'm looking for some software that would be useful for giving demonstrations. I regularly have to show the effects of scrips ect to classes while talking about their effects, and equaly regularly I have finger trouble and have to rewrite various commands - wasting class time and general energy. I'd like to be able to record a sequence of commands in advance, and then play them back at the speed of my choosing. So I might have a file that containes the commands: 

I've got a folder that containes a set of folders that are themselves the root of different projects. Some of these projects are versioned under svn, some are not. I'm looking for a one-liner I can type on the command line to give me a list of those projects that arn't versioned… any ideas? 

I'm localising a piece of Javascript (the github repo is here) for Spanish speaking users. I have both the English and Spanish text as PDFs and I have the software in English. The pdfs look like this (100 slides): 

The variable $TASK emails me a particular email. I understand that I have written the cron to trigger this action at 06:01am every third day. Oddly, this is when I get the emails (screenshot from GMail): 

It didn't have to, but it's a nice compromise with other design decisions. So first off, the instruction length in MIPS is 32 bits(most MIPS, there is a 64-bit version). (You can see lots of details how it breaks down here). In many MIPS instructions, you have to supply three registers, say two sources and one destination (r4=r2+r4 for example). The MIPS architecture allows 5 bits to specify each of those registers, and 32 is the maximum number you can represent with five bits, so there is no point giving you more registers that you can't access. If MIPS let you have 6 bits to select a register then you could use up to 64 different registers, but those extra bits would have to come from somewhere, possibly by reducing the number of operations or addressing modes. There are other approaches, some processors use bank switching, which is basically saying "I have these 32 registers I'm using right now, but I also have this special SWITCH instruction that let's me pull out these other 32 registers to use for a while before a switch back" it's handy for certain applications but conceptually difficult for some others.