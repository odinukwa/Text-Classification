Yes this is normal. HTTPS works on different ports, and with many web servers the HTTPS version of a site is essentially a different site than the the HTTP version of the side. Fortunately, most administrators will configure the two sites to serve the same content. If you have parts of the site that require authentication, they should only be accessible on the HTTPS version of the site. Often the HTTP version of the site will redirect such requests to the HTTPS version of the site. Some web server have self-signed certificates available to enable you to test your HTTPS setup. However, these generate certificate warnings and are not appropriate for public sites. You will need to replace them with certificates recognized by a recognized certificate authority. You can obtain a free certificate from Let's Encrypt. This is a certificate authority designed to make self-registration simple and secure. The organization has support from many organizations. Many search engines are being to penalize sites that don't offer service using HTTPS with valid certificate. (A valid certificate is a non-expired certificate signed by a recognized certificate authority.) For my site, Google is providing HTTPS links instead of HTTP sites. This began after I switched from a self-signed certificate, to a certificate from Let's Encrypt. 

root.hint is a zone definition which points to a cache of the root name servers. Once it is configured it should never need to be updated. It does not need to be be a seperate file. On my system the zone definition is include in a file which contains various default zones including '.', 'localhost', '0.in-addr.arpa', and others. db.cache is a cached copy of the root name servers. The file name can be different, but must be one specified in the '.' zone definition. It can be updated periodically (once every year or two should be adequate). The root namesevers don't move often. According to the header of my cache a new version can be obtained as file /domain/named.root from FTP.INTERNIC.NET or RS.INTERNIC.NET. The root server list can also be retrieved with the dig command. The current bind version will update the root server list from a root server during startup. 

Your original code will continually truncate and write the same file. The loop above will continually create new files. The command is atomic, and the reader will always see a file with data. This will be either the file deleted by the or the new file. 

The hostname and sleep time are adjusted as require. In some cases I chain two or more command lines in the loop. When doing so I use an echo and/or date command to provide an indication of where sets of data change. 

Add a file in named . Check the options for pipe transport (chapters 24 and 29 in the specification). You will need to set the options which don't have a value specified. Also set the correct command which can have options if required. 

You could let them browse www.example.com as example.com. Alternatively, you can use the base tag in your page headers to redirect subsequent queries to www.example.com. 

You should not be leaking private (rfc 1918) addresses to the Internet. For you ISP provided IP address, contact your ISP and have them set up a PTR record for you. It is likely they will only accept one name for the each PRT record. Most routers route for an entire /24 address block, but only provide DHCP addresses for a portion of the zone. Other than the routers address, the broadcast (.255) address, and network (.0) address, the rest of the non-DHCP addresses can be used for fixed address devices. You may want to renumber your devices into this range or configure your route to use your (10.0.0.0/24) address block. You may find simpler to setup than . It can read your file and will provide forward and reverse look-ups based on its contents. Whichever you choose, configure your router to supply the address of the server running your DNS server. If you use , you need to add a zone for to your configuration. This should be accessible only from within your network. Something like this should work: 

There are some addresses you should exempt such as postmaster, abuse, hostmaster, and any other administrative addresses. I would recommend you pick a domain or two that will be used for email rather than wildcarding the domain. 

If your domain gets or send email you need a backup DNS to establish your credibility and ensure future delivery of email. If a mail server looks up you domain and finds it doesn't exist, it will immediately bounce your email. However, if it DNS lookups succeed and the server is down, then the email will be queued for later delivery. Only if you are down for a few days will your email start bouncing. (Some poorly behaved automated delivery systems try only once and may fail to deliver messages even if your server is up.) 

It looks like you are trying to deliver all your mail via google (possibly to you). A few questions: 

There are problems with DKIM and verifying the sending server. By signing with your DKIM signature it is possible to be reasonably certain that your server handled the message at some point. You can also be reasonably certain that the message was not changed after that point. This can be important if I present a mail message as evidence. (For instance, I can't change the price offered.) I find a high percentage of legitimate DKIM signed messages can't be verified because the public keys are not published. (or at least aren't published correctly.) The fact I can find the signing keys provide me with some assurance that the sender is not trying to hide the origin of them message. Combined with SPF I can rank messages signed higher or lower on the SPAM scale. If you are a permitted sender, I may choose to rank the message higher on the HAM side. Otherwise, I may count the message as more spamish. A cleaner way of doing the signing is use an address in your domain in the From header, and put the clients address in the Reply-To header. Alternatively, you can put an address from your domain in the Sender header. Either way it becomes possible to match the Envelope sender to an address in the headers. While there is no need for the Envelope sender to be included in the header, some servers will rank you higher on the SPAM scale if it doesn't. In some cases, they may refuse your mail. 

Fast answer is no. will just tell who controls that address. will give you the publicly available IP address allocation data. However, the network block may have been split into smaller zones which are not publicly announce.