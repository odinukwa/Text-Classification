The error message is probably accurate, but there is a better way to do networking. It is recommended to do bridging manually and has even become the default for Xen 4.1+. You can set up the networking bridges manually on any version of Xen by following: $URL$ The basic idea (which is different than what you are used to) is that the xenbrN device gets the IP address and the ethN device is used only as a port for the xenbrN device to communicate over. By following the instructions above you should then disable the bridge scripts in the xend configuration file (/etc/xen/xend-config.sxp). 

A few things to try: 1) Boot the guests by using kernel and ramdisk instead of bootloader in the domU config file. You can use the dom0 kernel and ramdisk 2) Try PV-Grub ( $URL$ ) 3) Boot the guests HVM and use the PV on HVM drivers ( $URL$ + $URL$ ) 

I've got a small jack-of-all-trades server running CentOS 7 Linux. Now I need to add email support to it (SMTP/POP3/IMAP/webmail). Most of it is pretty clear, except for one thing - I'd like to separate linux users from email users. That is, for every email account I don't want to make a server user as well. Also, if there are emails jenny@domain1.com and jenny@domain2.com, I'd like them to be separate accounts. And, of course, users should be able to use their email addresses as usernames for the mail-related services. How can I do that? I don't even know what keywords to search for (yes, I've tried googling, but came up empty handed). 

You do not need an additional ethernet card. You can follow the instructions here: $URL$ The configuration that you describe is the probably the most common way to use Xen (bridged networking). The Xen wiki page referenced above is out of date, the updated general Xen.org wiki page for networking in Xen 4.1+ is: $URL$ 

You can use: 1) xentop (and drill down on I/O) 2) monitoring tools like xenmon ($URL$ 3) Standard I/O monitoring tools that you would normally use should give a good indication of the I/O usage of the guest as well. 

Two things. I usually put the IP address on the bridge. Also, I don't use the xend config file for this scenario. See an example here: (you can modify it to use eth1) $URL$ 

For small businesses with less than 10 PCs it's often an overkill to even have a central server, much less buy a Windows Domain Server which costs heaps of cash. However the need remains for people to share files and printers amongst their computers. The standard solution would be to share the folders publicly. But sometimes that can be undesireable, for example if some unauthorized laptops appear in the network regularly. Another solution is to create the same users on all computers (including setting the same passwords). This allows for authorized access, but adding new users or chaning passwords is a pain. It would be great if it was possible to set up one of the machines as a central "user database". Other computers could then authenticate against that computer, and even set permissions on shares. Is this possible somehow? 

Xen best practice is to disaggregate (in other words - split up) the functions of the management domain (dom0) as much as possible for security, overall system reliability, and even performance. ( $URL$ ), See also Ian Pratt's comments on a XenReference architecture ( $URL$ and $URL$ If you put your NAT firewall in a domU there is also the added benefit of isolating the firewall rules to that system and so they won't conflict. 

The answer is more of a physical to virutal hardware mapping. What you need to be able to do is to create a virtual machine environment that maps to the equivalent physical resources that you are planning to sell. If you are looking for software solutions for this take a look at things like Eucalyptus, CloudStack, OpenNebula, OpenStack, etc. What you really want to make sure you handle well is the monitoring aspect, which it sounds like you have some handle on in terms of your current QoS monitoring already, but you may want to look into monitoring tools such as Cacti/RRDTool, Graphite, Nagios, Zabbix, and Zenoss. This blog talks about benchmarking and the physical to virtual mapping that they did: $URL$ 

I understand that this question is not OS-specific, right? Under Windows, I tend to give all my machines as few partitions as possible, but no less than two - SYSTEM and DATA. If the machine has two physical disks, then one (smaller) will be SYSTEM, the other DATA. If there is just one disk, I split it in two partitions. The reason for that is just one - when I need to reinstall the machine (and there will be such a time), I don't have to worry about the contents of the SYSTEM partition - I just do a full format on it and a clean install. This of course means that my Documents (and preferrably Desktop too) has to be mapped to a folder on DATA, but that's easy to do, especially on Vista and later. I've also tried making more partitons (like GAMES, MUSIC, MOVIES, etc.) but that only resulted in some of them overflowing into others, creating more mess than order. 

The Xen Cloud Platorm (XCP) is a good solution and provides a lot of functionality and management options. It compares well with Citrix XenServer see: $URL$ There are also many management options: $URL$ Although not yet ready for production, you may also want to start taking a look at Project Kronos: $URL$ Using Xen the hypervisor and xentools for a small deployment is OK, but if you plan to do management of a larger set of machines or cloud orchestration (CloudStack, OpenStack, OpenNebula, etc.) then you should consider XCP, Project Kronos, or similar solutions. In the past new deployments (such as Amazon, Linode, etc.) came out on Xen, but new production deployments are likely to want to make use of the features of XCP and Project Kronos. See also: $URL$ 

I've got a little private webserver where I have several virtualhosts. I know that it's impossible to assign a certificate to each individual virtualhost, because the server finds out which virtualhost was requested only AFTER the SSL connection has been established. But is it possible to have a single SSL certificate which lists several domains? Or at least a wildcard domain, like *.example.com. If yes, what Linux commands do I have to write to make such a self-signed certificate? Added: To clarify - I have just one IP address for all the virtual hosts. 

I've got a Linux server I can only connect to remotely. I want to backup it, but it'll have to be over the Internet, and I've chosen Google Drive to hold the backups. The only piece of puzzle I still don't have is how to package and compress all the files. I want compression, because space on the Google Drive is limited, and it would also reduce upload times. I could of course use the standard tar+gzip/bzip, or zip, or maybe even something fancy like 7z for best compression. But what I'm wondering about is this - many of the files that will need to be backed up will be things like JPEG images, which don't compress well at all, no matter which compressor I use. It would be faster if those files were copied to the target archive as-is, rather than compressed. Other files are text files, which compress better with a specialized algorithm (can you tell yet that I'm backing up websites?). Is there some kind of archiver which recognizes such files (by file extension would be fine) and applies a different algorithm for them? I think I've seen one somewhere, but I don't remember which one it was and if it has a Linux version. Or perhaps I'm overthinking this? 

I think it is better and simpler to append space (notice the >> operation) to the disk image For example, to add 1G to a disk image do: 

First thing to take a look at is xentop and drill down into network usage. Beyond that you can also take a look at iftop to see if you notice any unusual traffic. There are several common symptoms and problems outlined here: $URL$ And several approaches to optimize things: $URL$ Take a look at those and do so more troubleshooting and data collection. That guide ( $URL$ has other general suggestions as well that should apply to Xen in general. Some things to think about looking at include CPU utilization or other over constraint symptoms (low memory, swapping, etc.). The other thing that is useful to think about is what type of guest is it (PV or HVM)? What driver is being used? Is there a better set of NIC configuration options that could be used? 

I've got a little old server with CentOS 6.5 on it. The hardware is old and crappy, but enough for what it has to do. Which consists of SSH (+SFTP), Apache, PHP and MySQL. Still, I'm trying to cut away all that I can. One thing that it does not need to do is to be an SMTP server. There are no mailboxes on it and nobody will ever route mail through it. However I do want it to send me an email when something goes wrong. Also, the webpages will send emails from PHP. So that brings me to the question - can I set up the mail system in such a way that there isn't an expensive mailer daemon sitting in the background with queues and whatnotelse, but rather every email is directly and immediately delivered to an external SMTP server? And how do I go about it?