If you will use this machines only to virtualization you should use a core edition, this is because it has a smaller footpring and cosumes less hardware resources in the parent partition. You can manage them from a client PC using Hyper-V remote magamente console. If you have only Windows Server 2008 R2 Standard maybe is not a good idea to use them in ths scenario. There is a Windows Server 2008 Core Edition enable only to run Hyper-V, is Call Hyper-V Server and is completly free, included support. If you have Windows Server 2008 R2 enterprise edition is better because you can make a cluster between both host machines. 

I am not sure if I should post this one here or in StackOverflow. I want a BAT that opens a RDP connection file and then, when the connection is closed, logoff the machine. 

But the logoff happens instantaly, it doesnt wait for exit. I also try this using C# and Process.WaitforExit(). What should you do? I think is a issue with mstsc.exe when the parameter is a RDP file. Update: I was testing and this works well in Windows 7, but in Windows 8 and in Windows 7 Thin PC it doesnt work. Update Using powershell I advance a little. I my bat looks like this, launchin the process in Powershell it works. 

That you aproved an update does not mean it will be automatically available for the clients PCs. It will need to be downloaded first. So maybe this is your problem. You approve the update and you want to have it and your clients instantally and it does not work this way. You need to wait to the update is completed downloaded in your WSUS server. 

You get this error because the LDAP path that you are sending to the loop is not right. You are pipeing to the , it sends all users and not one bye one. So you are sending something like: 

If the other user is no member of the administrators group he wont have administrative capabilities. As example he will access te user account panel and change his own account but no anothers ones. He can access to the registriy but he cannot change any system configuration. Only its user settings. So you should worry about it and its capabilities, he wont can change the system settings. If you as example block regedit.exe he can make the exactly same changes using another tools. If you still want to do it can change the assigments rights of that users using the local policy editor (gpedit.msc) and the ACLs of the executable you want to change. If you see that the user is capable for change System Settings check its group membership. 

You have this issue because you are running an unssoported for Hyper-v version of Windows Server 2003 R2. You are running Windows Server 2003 R2 SP1. You should install the Service Pack 2. Then install the Hyper-V integration services and restart the virtual machine. You will have the virtual NIC working. Alternative if you really cannot install the Service Pack 2, you can manually install the driver from the integration services ISO using the device manager (), but this is not recommended. 

You may create a batch file who save the time of the PC uptime when in it is run. The content of the *.bat file could be something like this: 

To connect using Hyper-V manager from a workgroup machine to an Hyper-v domain member server you also need allow anonymous DCOM remote access. There is a tool from Microsoft that configues automatically all the necessary things for you: Hyper-V Remote Management Configuration Utility. If this not work i would recommend you to check the Windows Credential Manager of the client machine looking for bad entries. If you are not sure, delete all of them. And finally, off course could be a really RPC error, the RPC error could be failing in your server. For be sure that it is not the issue connect to the server using MMC with other Snap-in as example Local Users and Groups. 

You are seeing IPs addres that, but IPv6 address. Your pcs maybe are stablishn connections by IPv6 and by IPv4. Confirm that doing a to one client from the server. If it responds and you dont like it you have to deleted the enable by default Ipv6 addressing. ::1 is the local host address. 

This is because the script is running with the SQL Agent service and this service is running with a Local Account. You should change the account of the service whih goint to run the script, using , to one from your domain with privileges on the other servers. 

Uninstall the software (in my case Checkpoint) Reboot the computer Open Device Manager. From the View menu, select Show hidden devices. Browse to Network Adapters. Right click on each instance of the following adapters and choose Uninstall from the action menu. a.Microsoft 6to4 Adapter b.Microsoft ISATAP Adapter c.Teredo Tunneling Pseudo-Interface d.iphttpsinterface Reboot the computer Connect the computer to the corporate network Run “gupdate /force” Run “netsh interface ipv6 reset” 

Update: I created an automated solution for fix this issue. Troubleshooting pack available at $URL$ With the help of Microsoft premier support I found the fix. The issue was caused by a software damaging the Teredo interface. In my case it was Checkpoint Secure Client. To solve it, this is the procedure: 

Your script is failing because the variable doesn't contain the DNS Name. And you are sending it to the . You should send to the . With this code it will work: 

Today I am working on this issue and I would love your ideas. There is a network with something like this LAN 1 -- WAN CHANNEL--- LAN 2 The LAN 1 have two segments. When I make a ping from LAN 1 segment 1 it works like a charm. When I make a ping from LAN 1 segment 2 I have no ping, but after about 30 seconds of continues ping (ping -t) it start to work perfect. After some time of no activity with the destination host the issue happens again. Tracing the route packets stops in the last router before the target. This is the first router in LAN 2 after the WAN channel. In the next screenshot you can see thie issue, the first ping is before a continuos ping and the second one is while continous ping is running.