Another method is use L3vpn via bgp option A technique at ATT router with igp protocols at both ends and redistribute into address-family ipv4 vrf Cust_A under bgp 1500. it works properlyand it overcome AS loop prevention feature. Also you can use lable swaping per route like as seemless vpn technique 

Use the arp table. Which show you ip address of attached machine against the Mac-address or you can check ip address of dynamic entry at physical interface where machine has connected 

As I can understand from your typed text, you/customer want to advertise ibgp routes from his MPLS over eBGP.It is possible and you can do this via Inter-as option C solution 2 with controlled redistribution (or PBR to VPN solution). 

Cisco hardware ready to use on buy but some software features need license to work actively like mpls traffic engineering or Brodging L3 to L2 vpn access solutions. 

In a scenario, there are three devices R_A, R_B, R_C and connected as shown in diagram, How can implement that Link 1 and Link 2 work in active and standby mode i.e. Link 2 will be active if Link 1 get fail other Link 2 on standby where Link 3 active all time with use of auto cost single IGP process and vrrp at all devices. 

Why does the "show adjacency" command take so long to run (in the order of minutes) on Cisco IOS Software, 7200 Software (C7200P-SPSERVICESK9-M), Version 12.4(4)XD5, RELEASE SOFTWARE (fc1)? The router is an Internet edge router running BGP? What do the "(5)", "(10003)", or "(75845)" mean after the addresses? It seems to enumerating mostly addresses on a directly connected /23 network. CPU is < 2% and memory don't seem to be cause for this. 

Debate arose recently from a Systems [Windows] engineer over the more logical application in his opionion of File System ACLs vs how Network ACLs work. Network ACLs generally work by applying ACEs in order (top-down) and stop on the first match. File System ACLs (NTFS in particular) work by considering all ACEs and granting the most privileges unless a deny-ACE is encountered. Why do Network ACLs work the way they do and why shouldn't they be compared to File System ACLs as I intuitively understand? Network ACLs work as follow per my understanding: 

Wireless and Wi-Fi are used interchangeably for the same concept, but Wi-Fi (often abbreviated to just WiFi) is actually trademarked by the Wi-Fi Alliance non-profit for promoting interoperability with vendors implementing the various 802.11 wireless standards. 

(it might actually be "input" or "output" instead of "ingress" or "egress" but with a little question-mark magic you'll be able to find it. You'll have a whole bunch of output that shows you all the policer rates, actions, and token bucket depths. It's actually a very useful little command. ;-) 

Access points can be configured to broadcast their SSIDs, or they can be configured to only listen for connections from devices that know a given SSID exists. Virtually all wifi client devices (laptops, mobile phones, tablets, etc) will broadcast at least some information on a periodic basis. This is the information that a listening access point (or maybe more generally called an analytics gathering station) will hear and use to build maps and data sets of which devices are in the area. How much or how little (or how often) any given device is broadcasting information or attempting to access the network is highly dependent on the individual device. For a reasonably good introduction to how this stuff works, may I suggest: $URL$ $URL$ $URL$ 

This is correct: the pseudowire switching path does NOT do mac learning, so there's no way to populate that information. One possible workaround is to build a VFI that only has two ports. You will effectively end up with the same behavior (frames will just get bridged from one side to the other) but since you've now enabled the mac learning part, the system will store the MAC addresses learned from each side. One word of caution here: make sure you have enough resources on the system to learn all the MAC addresses. Most pseudowires don't actually have all that many MAC addresses, but some can/do. 

I suppose the firewall load-balancing could be doing the redirect itself, but we cannot tell with the limited info provided. 

All lines configured in your VLAN take the DHCP broadcast from the client, add the router's (gateway) address into the UDP packet, then unicasts to the DHCP servers. [I'm sure the packet rewrite is only done once, then a copy sent to each DHCP server.] All the listed servers configured receive the DHCPDiscover packet by the router relay. The redundancy of your DHCP servers not only depends on your OS, but the specific version! For Windows that was mentioned, your options range from a true split-scope in Windows 2008 R2 to active-failover redundancy in Windows 2012. For not-so-robust DHCP servers (i.e., Windows 2003), you can manually configure a split-scope. Common recommendation is the 80/20 rule with 80% of the leases configured on what you (and you alone) consider your primary DHCP server and 20% and the secondary. Exclusions get added to each DHCP server as they have overlapping scopes. As I'm not a fan of overlapping scopes in Windows 2003 as the exclusions tend to get hidden from view, I prefer to simply split the subnet in half for each DHCP server. A /24 block for client leases becomes two /25 blocks. They key is the subnet mask in the scope is still a /24. Your start and end IP addresses in the range configured in the scope follows the /25. Now I do recommend some exclusions for network devices like VLAN interface IP addr's and HSRP as well as some for static devices (e.g. printers) in the same subnet. So I exclude the first 16 (0-15) addresses -- zero address wouldn't be used, of course, anyway -- and exclude the top 16 (240-255) -- 255 broadcast, of course. You can actually get away with not configuring the exclusion by simply starting and ending the IP address appropriately. The basic scope information in a manually configured 50/50 split-scope (2x/25=/24) is similar to: 

192.168.0.0 is private IP address starting range address (192.168.0.0 up to 192.168.255.255 Small network). It means you have used sixteen bits for network address out of thirty two bits and bits are remaining for host addressing. for these remaining sixteen bits can be used for sub netting based on your network design and other sub netting steps illustrate in above posts. 

From the config. You can check next hop ip address 4.1 dosen't reachable from router 1 due to wrong subnet ip address configured if both router are point to point connected. Second reverse static route hasn't configured at router 2. 

Finally i found. Becuase mask value wasn't defined in network command and also auto-summariztion enabled. Network 10.1.1.0 mask 255.255.255.0 No auto-summariztion 

I have advertised IP address 10.1.1.0/24 using IP-prefix list but it is not showing subnet mask in advertised route. Can you explain this behavior. 

which type information can be seen by executing keywords "GET" and "SHOW" with combination other keywords at Fortigate firewall cli in general way. Can anyone differentiate the information print by using these keywords. 

MPLS 2.5 layer protocol between data link layer and network layer. Mpls enables the routers for label base switching using CEF table and ip routing table. It is known by its ebabled applications. Applications are L3VPNs, L2vpns, EoMPLS, AToMpls, FRoMPlS. VPLS virtual Private LAN services technique used to extand LAN services over services provider network using the mpls application AToMpls (Any transfer over MPLS. VPLS use the pseudowires end to end and vsi/ vfi for creating a multipoint L2VPNs based on MAC addressing. 

Imagine the World Wide Web (www) without standardization of port [tcp] 80 for HTTP or 443 for HTTPS. Or email if SMTP wasn't typically found on port 25. How would browsers or mail servers know which port to use to reach the multitudes of servers littered all over the internet? As @smithy2k3 noted, you can configure whatever port you want, assuming that port is communicated to the client somehow -- sneakernet or email come to mind -- and you're able to traverse your protocol through firewalls that may be inspecting the traffic on certain ports for rewrite -- FTP on tcp/21 and SIP on udp/5060, for example. 

Switches are where you typically find PoE especially in enterprise-grade equipment. You should have no issue extending your LAN with a switch on an available port on your cable modem, but you really should have a router/firewall function sitting between your LAN and the WAN from your modem to protect your network. You can confirm that you are directly connecting your LAN to the modem by the presence of public IP addresses which is a good way to get hacked. A firewall provides a baseline of protection that you seem to be lacking now. Be aware that the firewall (on your router) will be providing a NAT function that doesn't always play nicely with SIP packets from your VoIP. You may need a firewall capable of handling SIP properly or a VoIP system that can support STUN. 

Sorry I don't have a system actually in front of me to get you actual output, but look for "show qos interface ..." and that should have the configured hardware values for all the QoS parameters. The CLI is going to be something like: 

You've assigned the network address (where all the bits not masked are zero) which is not allowed. For your subnet, the interface address can be anything OTHER than zero (the last 8 bits are all zero) or 255 (the last 8 bits are all ones). The most common convention is to have the router be the lowest numbered address of the IP block. Try this: 

The NCS6k is designed to operate as both a stand-alone chassis, as well as connect to a separate chassis that holds only switch fabric cards. As a standalone system, the switch fabric still interconnects all the linecards, but the fabric cards are on the "back" of the chassis and have only internal-facing interfaces. In a multi-chassis system you have a set of "linecard chassis" that all interconnect through a different set of fabric cards to the "fabric chassis". Essentially, the fabric chassis allows you to build an even larger system than you could with a single chassis of 8 linecards. 

After talking to a few hosted VoIP providers, they all state that "ALG" or SIP inspection in the case of the Cisco firewall should be disabled. How is SIP not broken after leaving the firewall over the public Internet when being NAT'd from a private to public address if the SIP payload contains a private address that inspection would normally fixup -- using the older inspection terminology there ;-) ? Is STUN or TURN the only way preventing this breakage and can I assume that these providers support that or does that have to be confirmed? Is it not better to have inspection? I know that certain SIP implementations don't add addressing in the application layer, but in the these cases they do. I have SIP inspection enabled and don't see any issues with it and I gain the benefit of not only being able to do a show SIP but the necessary pinholes are dynamically created instead of opening wide static holes these providers often request, but the providers still insist having ALG creates more problems. 

I think advertising the /25s in BGP is the best option which I only found out recently is possible with the SP undocumented community, but are there other options I haven't considered or concerns about out-of-order packets with some of these choices? This is sort of the reverse load-balancing problem most people ask with BGP. 

So I think it's important here to get the terminology correct, even though it's VERY common that people use the wrong terms. Properly, an access point allows wireless clients to connect to the existing network (which is usually, but not exclusively, a wired ethernet network). This is distinct from a router, which forwards packets from one computer network to another, and often includes functionality such as network address and/or port translation. The confusion arises because many very common devices, especially home "wifi routers" put all of this functionality into a single device. The "power" of a router can mean a lot of things, and it's not at all clear what's being asked here. At least one important distinction would be whether we're talking about "how good is this system at sending and receiving wireless signals" but another might be "how good is this device at doing packet forwarding?" - these might well be very different things for a given device. In large deployments, you can have lots of access points that cover a large area (think about a large commercial building) but none of these access points are actually doing the routing or NAT/PAT functionality. So... all that said, it will really help us answer the question if you describe in better detail what you're asking and use the terminology most appropriate. I briefly looked over the relevant wikipedia pages and they seem to be reasonably well written: [1] $URL$ [2] $URL$ [3] $URL$