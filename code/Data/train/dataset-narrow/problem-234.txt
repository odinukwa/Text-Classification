SW2 is hard coded as the root for VLANs 2-20. STP event debugging is enabled on SW1 to illustrate the effect of the change. 

Finally you don't need to include the syntax when performing hybrid switching. EIGRP Your matching(required) static statements may include the statement in order for EIGRP to establish a neighbor adjacency. 

My goal is to write a service check that pulls the status of a Cisco track list that is performing a . I have a screen scraper in place currently, but that is really not ideal in terms of scaling this type of service check. The track object below simply pulls out the tracked static route if and are both unreachable, allowing a BGP learned default route to be installed, that is otherwise in RIB-failure status. Configuration Example: 

If deterministic MED is not enabled, then prefixes are listed in chronological order, regardless of originating AS, from youngest to oldest (top to bottom). 

Of these methods, the DNS sniffing is the most reliable, as an IP address can run many websites with different hosts on it. You cannot find the path of the URL, as the purpose of the encryption is to hide that from evil sniffers. The port can be found (it's usually 443), and you can also try to guess the scheme from the port (if 443, it's HTTPS), but that's about all you can do. 

Ethernet switches have a learning process through which they gradually begin to understand the network topology -- which MAC address is behind which port. When seeing a port to send a frame with a certain source MAC address, the MAC address table is updated to indicate that the source MAC is behind the port that sent the packet. Now, when moving a computer to another switch port, it typically after a while sends a frame that teaches the entire network its new location in the network. So, the network will eventually learn the new location of the computer. My question is: do typical Ethernet switches have in addition to this MAC address re-learning a timeout for the MAC address entries in the table? This would be similar to the ARP table timeout in endpoint hosts. If so, what is the range of typical default values for MAC address timeout? 

Issuing the command , which is the same as , will not affect other VLANs' instances of Per VLAN Spanning Tree Plus (PVST+). Example: 

There are a few ways to accomplish a back-to-back frame-relay connection. A quick search returns the following options: 

Expect may be a good candidate to consider for the job. Below is an example template I've put together that is commented out for you to play with. It will log into a WLC, grab the running configuration and append it to a file of your choice. The example file name and location is You'll need to modify the file name and location to a file of your choice (with adequate permissions) as well as the username, password and IP address of your WLC. Finally you can edit your crontab to execute the backup script using a desired interval. Crontab example: 

After your BGP table has sorted with deterministic MED enabled, removing deterministic MED will not return your BGP table to standard formatting until routes are removed/cleared and relearned. 

You shouldn't need extra IP's. I have not used ASDM, but in my experience setting up a static NAT/PAT is no problem at all. Some router software can be a pain with weird or over-simplified setups for this. But I'm assuming ASDM is better than that. 

No. Some wireless technology has that range, but since the router is a D-link consumer grade device, it doesn't have that kind of reach. The reason is even if you have a very strong receiver/transmitter for your adapter, which is not normal, the router would need a receiver/transmitter that's just as strong. It will need to receive your signal the same way you receive it's signal. Note: this doesn't seem like it would be ok to do in the first place. Unless you own this company or have their explicit permission, I highly discourage doing this. 

Short Answer: Yes you can use one device to do both, it is cheaper, but the hardware will be a switch, not a router. In regards to the "two routers"; I understand you're talking about a WiFi client and Access Point pair. The client for connecting to existing WiFi, and the Access Point to be the new, secondary Wifi. The two connected by RJ45. As you said, using the same hardware lowers performance, in theory. The reason being that it will be Access Point on the same channel (frequency) it is client. Whereas with a client on one channel (1 for example) and the new Access Point on another channel (lets say 3), you get an extended WiFi coverage with less chance of Exposed node problem. However, in practice there is often no need for two devices. You may not even notice a difference in performance after spending money and time on the more complicated setup. In fact finding a device that works only as a Wifi client has been very difficult for me. By default they re-transmit anyway and I can't seem to turn it off on any device. 

For encrypted traffic, really, the only thing you can find is the host of the URL, the port and perhaps the scheme. You find the host by either of the two ways: 

Yes, there is. For FreeBSD, dummynet might be the answer. However, most people use Linux these days instead of FreeBSD. You can in Linux use tc -- see the rate control part of the link. tc with netem can also add constant or variable latency to packets. Do consider, however, that real networks have high latency in addition to low bandwidth. So, you might want to emulate latency in addition to limited bandwidth as well. Otherwise you aren't testing your application well enough. If you use FreeBSD or Linux, you don't need to change the switch configuration to obtain the limited bandwidth. It can be done on the host where the application program runs. Unfortunately, if you run the application on Windows, I don't have a solution for you. In that case, you need to see if the switch has rate limiting options. Not all switches do. 

Unicast EIGRP Or, instead of using the keyword with your static statements to avoid encapsulation failures, you can specify EIGRP unicast neighbors under EIGRP process 100 and your adjacency should form. 

In your example, issuing will append to your existing peer list for 's sequence number 10. The peer list can hold up to ten addresses. 

The newly designated frame switch's Serial0/0 interface needs to be changed to the frame-relay interface type dce in order to provide LMI. 

There are a few variables you may want to consider, (both software and hardware) namely the number of routes, routing protocol adjacency limits, and memory. There is very little documentation about the hard/soft limit, but it appears that the MX platform can support a maximum of 8,000 VPLS routing instances. Your actual mileage will likely vary. Read more... 

SW2's hard coded priority for VLAN 5 is set to default (same effect as negating the hard coded priority). 

From different perspectives I would say that Orlando's answer is good in relation to the general idea of the internet. Gadeliow's answer well describes the terms in reference to a server-client relationship. (not giving my opinion on answers, giving credit where it's due.) But some software tracks up/downlink in reference to the interface. So download would be incoming, and upload would be outgoing. I have a switch/router that tracks like that. such a headache. For choosing up/downlink to test, you need to determine what your server is being used for. What kind of load do you want it to endure? In every case I can think of though, the downlink from the server to the clients will be under more strain. Even a file server will be used to download hosted files more frequently than they are uploaded. 

There's no special way to see if you're connected to "The Internet" since it is just a collection of inter-networks. (as far as I'm aware) Most methods just ping a server that is known to be on the internet, such as Google or an ISP server. The server you pick should be reliable, since connections (such as those between countries) go down from time to time. Also I personally try to pick a server that isn't likely to be filtered or redirected by a network, as that could trick the result. For example the network might redirect any packets meant for Google or Facebook to an internal "You are not allowed" page. This will still give a positive ping result though. 

When transmitting TCP over IPv4 over Ethernet, there are three levels where checksum (or CRC) is used: 

I have understood that real networks have routing changes, leading to out-of-order delivered IP packets. Real networks also have frequent packet loss. However, what I have not understood is why could a perfectly operating network in addition to out-of-order and lost packets deliver packets as duplicates. What could cause delivery of such duplicate packets? Could spanning tree protocol (STP) before converging on a spanning tree cause duplicate packets? Note that I don't currently have a network that would frequently duplicate packets, so this is more of a theoretical question than a practical one. 

Telnet belongs to the OSI layer 7 (application layer) and IP belongs to the OSI layer 3 (network layer). At the network layer, the protocol is indeed connectionless, and at the application layer, it is indeed connection-oriented. What solves this impedance mismatch, then? It is TCP. TCP works at OSI layer 4 (transport layer), and provides a reliable connection-oriented infrastructure on top of a connectionless network. So, telnet doesn't directly run on top of IP. There is TCP inbetween. But, it is not incorrect to say that telnet runs on top of IP, as the OSI layer 7 protocol indirectly works on top of the OSI layer 3 protocol, being a higher-layer protocol. 

About DHCP: Any machine without a static IP will send out a Broadcast packet requesting an IP from any DHCP servers on the network. The client doesn't need the server IP. If DHCP is setup correctly (and your VM's are networked properly) it will work automatically. Scroll down to Operation on this page to see the request process. About IP's: A DHCP server should have a static IP in the range it is handing out. If server IP is 192.168.247.201, then it should hand out 192.168.247.X addresses, or change the netmask to allow variation in the 3rd octet. About VM's If you follow those steps, then a good method of testing is isolating the VM's from the physical network. While they are Host-only they can only talk to each other (and the host machine). Like being on a switched network. If you use NAT, then your NIC acts like a router, allowing talk between subnets. Bridged mode allows your VM's to act like machines that are on the network directly, like another PC in the home/office.