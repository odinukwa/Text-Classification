The list is a little long to paste in full. You can get a full listing using in a terminal window, or take a look through this list posted at manpages.info. 

Per Milliways answer, there's no built in method for cutting power to the HDMI socket. You could, if you were feeling keen, try using an HDMI breakout board and either a relay or transistor connected to a GPIO pin to control the power to HDMI pin 18 on startup and shutdown. 

No. The current Spotify package is compiled for x86 architecture processors. Unfortunately the Pi has an ARM architecture processor. These are fundamentally incompatible. You'll need to use one of the server options. 

The dimensions of a USB A plug should be 12mm wide by 4.5mm tall. You can use digital calipers to confirm that your socket will accept a plug of that size. If it doesn't, you've received a badly manufactured socket and should return the device. USB A sockets are remarkably sensitive to being restricted by their housing. 

Unfortunately, the Pi's analogue audio output is hot garbage. It's incredibly noisy and subject to interference from both power supplies and components on the Pi itself. My advice would be not to use it for anything that you actually want to listen to. You should be able to get a half decent output from any of: 

Per the comments below the question, the Pi's 3.5mm audio output is not a good output. I try to avoid it where possible. I have yet to see a convincing writeup of any approaches which would eliminate the noise from the analogue jack sufficiently for it to be used for enjoying music. Your options for usable audio are: 

While you have no chance whatsoever of cutting bits off the official Pi camera module without destroying it, alternatives are available. Adafruit, for example, stock this miniature CSI camera designed for use with the Pi which is substantially smaller. 

No. There is almost certainly no way in which the capabilities of a Raspberry Pi exceed the capabilities of your PC. It has low USB and network bandwidth, low RAM, low CPU speed, and relatively poor graphics capabilities. Unfortunately, adding two computers together doesn't make one faster computer. 

Install Kodi using 'sudo apt-get install kodi' Go to System -> Settings Go to Add-ons Select 'Install from repository' Select 'Kodi Add-on repository Select 'Video add-ons' Select 'Youtube' Set up language and region To launch the add-on, go to the home screen and select 'Videos -> Add-ons -> YouTube' 

I haven't tested this, but there's a reasonable looking walkthrough here. It's too long to repost in its entirety, but they provide an overview of the process: 

In your case the appropriate option is for Hindi, per the ISO 639-1 standard. You'll need to run espeak using that parameter: 

No on every count I think. It's just not enough of a machine to pull off 4K video at usable frame rates. The Pi camera module relies on hardware H.264 compression on the main Pi board to get the raw image capture down to a manageable size. It can't keep up with that amount of data at a usable (>24 fps) frame rate. Neither can the network controller or the USB sockets, which have maximum data rates of around 20MBps, which is slower that you'll need to successfully stream 4K footage. 

My approach to this would be to do everything I possibly could to avoid interfacing the Pi directly with the phone line. It's definitely achievable, but it sounds a lot harder than I like my spare time. Some Googling suggests that it shouldn't be too difficult or expensive to get hold of something that looks like this £16 adapter from Maplin. It accepts (I'm pretty sure) an RJ11 in from the phone socket, and outputs audio to a 3.5mm jack. That particular device, I note, is extremely badly reviewed - I suspect there may be better alternatives on Ebay. Now you have to get the audio into the Pi. I'd recommend a USB soundcard. Now all we have to do is listen to the audio input and trigger a recording if the incoming amplitude peaks over a threshold. There's currently a really good writeup on using SoX to do exactly this at pibat.afraidofsunlight.co.uk: 

You're looking at a floating input. When you read pin 25 without it being connected to anything at all it can be considered to have an undefined, unstable value. That's indicated by the LED randomly turning itself on and off. By pulling the value of the pin to ground with your resistor you render it non-floating. 

There are no models of Pi which will mount into a PCI slot without third party adapters. I'm unaware of any such adapters which are specifically geared towards the Raspberry Pi, and I'd be surprised if they existed. There are easier ways to provide 5V from the inside of a PC case. A standard ATX power supply should provide 3.3V, 5V and 12V outputs. Find the 5V output and connect the Pi to it. Many motherboards include internal USB sockets which should output 5V. Depending on your Pi's current requirements, it may be possible to use a Y-cable to power the Pi from multiple sockets (a single socket is unlikely to provide enough current). Exercise some caution here - it's not a particularly good idea to try and pull huge amounts of current through your desktop PC's USB sockets. 

All the fun applications for these things I can think of put them in pretty tight enclosures, which isn't ideal for high temperatures. How much current does a Compute Module 3 draw during heavy load, and what temperature does it reach at that point? 

It's rare (although not unheard of) to find brand new cables with soldering issues these days. I think the most likely problem with a micro USB cable which doesn't supply enough power is that it's been made using 28 gauge wire for both data and power lines. It's preferable, for higher current applications, to use thicker (likely 24 gauge) wire for the power lines, and 28 gauge for the data lines. As a rule of thumb, aim for the thickest cables you can find. 

The only slightly unusual aspect to this approach is that the config files are stored in the Pi's boot partition. This means it's probaly easiest to pull the SD card and mount it on another machine to make any changes: 

I'd recommend against jamming your GPIO pins into a breadboard. Aside from any damage that might occur it's going to be a bit of a nightmare trying to get them connected to anything in a reasonable way. Adafruit offer a sensible solution in the form of the Cobbler board. This allows you to use a piece of ribbon cable to connect your Pi's header pins to a breadboard, without damaging anything. 

You need both cables. I disagree with Milliways statement that it may work with some hubs - the Pi 3's micro USB connector is definitely power only. If you take a look at the 'POWER IN' section of the Pi 3's schematics, in the top left corner of the diagram, you can see that the middle three pins (Data +, Data -, and USB OTG ID) aren't connected to anything. 

Unless you're somewhere really really really cold your Pi's going to be fine. User James Adams (listed as the Pi Foundation's Director of Hardware Engineering) on the raspberrypi.org forums states the following in relation to the BCM2835 used in earlier Pis: 

Finally, the schematic for the Pi 3B shows that it uses yet another component, an RT9741CGV 100mΩ, 0.7A High-Side Power Switch: 

You might, with some delicate persuasion and filing, be able to very very cautiously get two screws through the boards on one matching short side. That would probably be enough to keep everything in place. The narrower gauge screws you'd need to use for the Pi mounting holes will mean that there's likely to be, at a minimum, some slop between screws and holes on the Parallella board.