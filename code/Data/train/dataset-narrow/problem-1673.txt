But I can't invert that at all. So I give up. I'm still leaving this up here, in case it's useful to someone. Write a shell script, or use someone else's suggestion, or if you really want to, just temporarily remove executable permissions to the shell scripts, remove all the executable files, then add the +x back. Good luck. 

I've got a couple 1955 blade enclosures, which are not too dissimilar from your 1655s. Essentially, the blade enclosure allows for centralized power and managability. There should be a KVM on the back of the enclosure which allows you to manage all of the machines, and I believe yours also includes a DRAC (Dell Remote Access Card), which will allow you to administer the chassis and individual servers (to monitor the hardware, and remotely reboot, etc). In my enclosure, there's an avocent IP KVM, but I'm not sure the model on yours. I hit print screen twice (or scroll lock, maybe?) to activate the menu of servers from the KVM console. If you can connect to the local serial port, you should be able to log in (default username / password is root / calvin) and configure the IP for the network card in the DRAC. According to this page, there should be some jumpers on the back of the DRAC if you pull it out, one of which is the password reset jumper. I can't speak to that, as I don't remember seeing it in mine. It would be interesting to know if those jumpers exist on yours. 

If you're rebuilding your RAID, A) You should make backups first B) Your performance will suck. You'd be better off to move any critical services to another host while this is happening, in which case yes, I'd turn off the various daemons. 

So you want one service provider with one instance, equidistant from North and South America, Europe, and Asia. I would recommend hosting at the Earth's core. Then you'll pick up Africa, Australia, and Antarctica for no additional charge. Seriously, though, you can't beat the laws of physics. Whenever you host in one place, people farther away will have a worse experience than people close. That's why Akamai can charge so damned much. Because they provide better service than people who don't. You need more than one host, or you need to host your service "in the cloud" with a provider who will distribute your app for you. Or you need to accept the fact that people who go undersea or over satellite to get to your stuff will have a slower experience. It's physics. 

If you look at the contents of nagios.cfg, it will almost certainly include references to windows.cfg and commands.cfg. When you run the config verification that you mentioned, it traverses through all of the files referenced by nagios.cfg as well, so you are checking the changes you made as well. 

In my server closets, I always put one of those cheapie push-on battery operated lights. It's great if(when) there's a power outage. 

And try the page again. If it was already installed and restarting the service didn't help, then we'll have to actually look at the php config section of Apache. But lets verify that this is OK first. 

Have you tried setting up a machine that uses known PMTU ($URL$ and figuring it out from there? Worst case scenario, work your way up by hand. 

A tape drive would be a very good solution (LTO-4 so you can encrypt it on the fly would be my selection). If you don't want to invest in tape drives and media (which can get expensive), then you might consider external USB enclosures. Part of my backup plan actually includes 5 USB disks, one for each weekday. I can always recover yesterday's files and easily transport them to whichever server is in need, which is a lot faster than over the network. You'll note that this isn't a complete backup plan in and of itself. I also have a tape drive that gets written to as well, 

Bad news. According to the User docs, RAID1 to RAID1 is not a valid migration path (check the manual under the '/cx/ux migrate' section). Since the manual says it's not possible, and you're going to be moving your data off anyway...why not try it and see if it works? 

Replacing the bundles would be expensive. If you've got it in your budget (or insurance will pay for it), do it. As long as there were no nicks in the PVC sheathing, you should be alright ($URL$ It's hard to tell if you had any nicks in the plastic, but I imagine that you're going to find out. Do you have any spare cables in the bundles? I would save yourself the time of panicking during an emergency and find and label them now. Create documentation on how to replace a poorly performing cable with a spare. Know that if you don't rerun the cables, this event is going to be the scape-goat for all future network performance issues forever, until more cables are run. 

I've been a sysadmin for the better part of a decade, but only in the past few years have I really been interested in really bettering myself and the profession. To that end, I joined LOPSA (it was cheaper than USENIX or SAGE), but I don't have the time to attend either SCALE or LISA, so I don't feel like I'm really getting "the experience". I enjoy the fact that I support LOPSA, which I feel is a group with a very positive goal, and I want to get involved, but there's no way my company would pay the registration fee to the conference, and I can't afford a few thousand twice a year (plus airfare and accomodations). I'm wondering what you think of your professional memberships, if you have any, and what advice you could give to someone who wants to get more involved and improve the state of systems administration. Edit I marked Arclight's response as the answer, but just because his response is the sort that I was looking for. I'd still love to hear more people's input on this. I don't want the question ignored just because one person gave a really great answer. 

Dumps wouldn't show no activity, they'd show lack of updates which is NOT the same thing. I do not know if mysql continually touches the databases that it has open or not. If it doesn't, mtime should tell you. If it does, you'll probably have to look at the logs. 

As it turns out, I wrote a HOWTO for sane Nagios configurations: $URL$ Basically, meesterfox is on the right path. Keep your hosts in discrete files, use inheritance to your advantage, and create a directory hierarchy for your configs that map to the real world. 

My infrastructure has two data sites, the alpha (where operations takes place on a daily basis) and the beta (the backup site, in case things go horribly wrong at alpha). Although this is not currently the case, I am pushing to have scheduled downtime at the alpha site every 6 months, so that we can run all services from beta. This will accomplish two things. First, it will prove that our disaster recovery site is completely viable. Second, it will give me a week's worth of time to remove accumulated cruft at alpha. As it is, I don't reboot my servers as frequently as I should. I agree with the other posters who said that it's important to know that your servers will come back up when you need them to. You don't want to "think" that they will, only to find out that you've changed something and not done it correctly, or not documented it. 

As womble said, you can't drop a disk and shrink a RAID. There are probably some things you should know about RAID. First, RAID 5 is no longer considered a good practice for large drives or large arrays. The reason is that the liklihood of a read error from one of the drives when replacing a failed drive becomes a lot closer to 1:1 with the larger / more numerous drives. Best practices are now RAID 6, which provides two parity drives, or RAID 10, which gives better performance, but slightly less fault tolerance (you can lose 2 drives in some circumstances). Also, when you're building decently-sized arrays, you might consider adding a hot spare that automatically swaps in for a failed member without your intervention. Of course, that doesn't get you your data. Assuming you've got a 5x500GB array, you've got around 2TB of usable space. If you have backups, then you really need to recover from those after recreating the array. Since it sounds like you don't have backups, first, good luck. Second, it's time to get some sort of secondary storage post haste. I would recommend an external 2TB drive. They're running around $160 on pricewatch.com. If for whatever reason you can't do that, try to logically break it up and dispatch it to several other machines while you rebuild the array. You probably want to hurry. 

Are you going for aesthetics or function? Unless I'm making something to show off, or for installers to put together right (they like pretty pictures), then I go for utility. For me, that means plain squares, with heights to match the size of the machine. The bonus is that the description of the machine can fill the box (if your diagram is sized such that it's possible, anyway). 

You can run a hypervisor and resell virtual machines with dedicated IPs, in addition to several other suggestions in this thread. 

I don't know how the XBOX "sees" the other machines, but probably via broadcast. If that is the case, you need to get an actual AP to put on the .2.x network, since your Mac is acting like a router (and routers divide broadcast domains). The overall solution is to get the XBox on the .2.x network, however you want to accomplish that. 

I used to have a very handy poster which had all of the Cisco equipment in matrix form which laid out which router had which interfaces and slots, with the same for the switch lines. Is there a web-based equivalent of this? It would be very handy when trying to decide which networking equipment I need to buy. 

I've recommended this product dozens of times, but it saved me entirely. It's called Likewise Open, it's free and open source, and it exists to make your machines authenticate against Active Directory. The UID/GIDs are a hash, which makes them universal across your entire infrastructure. By implementing it, I have unified almost every authentication mechanism in my company. Shell access, apache auth, samba, etc. And since I'm using Active Directory, everything that can use LDAP can auth against it as well, so now my users' accounts are identical on the machines, their desktops, our internal jabber server, our SSL VPN concentrators, etc etc etc. I can't recommend it enough. 

I have a sneaking suspicion that this may be a bug, but I'm definitely willing to entertain the possibility that I'm doing things wrong. I have a VMware virtual machine in $vm, and I'm trying to assign a boot CD for it. $vm is powered off. The documented method seems pretty straightforward: 

We have considered using Atomic Mail Tracker ( $URL$ ) but haven't made any decisions. It looks like it has all of the features we want, so it might help you, too. 

Write the prompt first, read the variable, then use the variable to connect with scp echo -n "username:" read USERNM scp $USERNM@whatever 

I would say no, and my argument stems from the "eggs in one basket" model. With only one account, if your account gets compromised, you lose 8 databases, where as if you have one user per database, you're only out one database. The other argument is that you should put your eggs in one basket, "after making sure you've got a damned good basket". IMO, MySQL username / password combinations aren't a good enough basket. Now, if you wanted to bind mysql to 127.0.0.1 so that no one external could connect, you'd have the start of a better policy. Of course, I'd still assign different users to each DB. Defense in depth. 

This is really pretty easy to figure out. Find out from the reseller/manufacturer of your fibre cables what the maximum bend radius is. Then find out how far apart the cable runs are when the arm is fully folded shut. If the cable runs would be closer than the bend radius, then you can't run the fibre there. $URL$ 

At the point you're talking about, you want more of a "How to administer a Linux Server", since that's what you're doing. CPanel, Webmin, and all of those types of tools are abstraction layers that you're dispensing with. When you go below those, it's core administration, which means learning to fiddle with the knobs of the various softwares running the show. This includes things like your MTA (sendmail or postfix, probably), your web server (probably Apache, though maybe nginx), the interpreted scripting language (php or maybe perl), plus all of the other fun bits that come with server administration that you mentioned, like user administration, network configuration, storage management, manual backups, etc etc. Does it sound like fun? If so, you're a sick person (and welcome to the club). I would recommend a general purpose Linux admin book. If you've got a CentOS OS installed, you could do a lot worse than Red Hat Linux Unleashed (Redhat and CentOS are essentially identical, for the tasks you'll be accomplishing). There are equivalent books for whatever OS you end up with, so do a search on Amazon. If you update with the distro you're running, I'm willing to bet that some people could offer good suggestions. It's a big can of worms that you're talking about opening. Make sure you're really interested before you dig in. The rabbit hole is deep. 

I haven't used any of these, but there are a (surprisingly) large number of packages available for this on freshmeat: $URL$ 

When you bought them, were they new or refurb? If they're refurb and manageable, you might do a factory reset in case there are existing VLANs. And when you say not working, do you mean the lights don't light and there's no link, or there's just no traffic that passes? 

The way that I do this is to initiate a TCP connection to a known open port. If it's a web server, it will respond on port 80 (or 443). A positive response indicates that the machine is alive. A negative response indicates one of many possible problems, such as connectivity through the network, incorrect firewall configuration, service outage, or the machine being down. If you're setting up monitoring and just want to know when to pay attention to the machine, just rely on a known-open port. At least if it stops responding, you'll know something is up. 

This is a stab in the dark, but can you right click on the command icon, and select "Run as" and select an account with administrator privileges? 

From the prompt, I'd guess it's a csh builtin. And from reading "man csh", that appears to be the case 

Have you considered any of the tools from Solarwinds? They're all Windows-based, so I haven't gotten too much use from them, but they looked pretty impressive when I played with them. $URL$