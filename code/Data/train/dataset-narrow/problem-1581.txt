The AD is distributed and multimaster database, in general terms you can query any of the Domain Controllers about a user and get the same answer in any of the DC (nodes). In AD you can configure the replication of data changes between servers, so if a user change some attribute in Australia, and you query for some data against the server in NY maybe you will get different answers. The domain administrator can tell you about time replication in the domain. Once the replication takes place, you have the same information in any of the DC. Usually replication times are about minutes, but in some cases it is only set to 1 or 2 times per day. I hope this answer your question. 

Did you see that the article of MS is only for W7 and 2008R2. "Applies To: Windows 7, Windows Server 2008 R2" "The following procedure assumes that you are using the version of the Group Policy Management Console (GPMC) that is included with Windows Server 2008 R2. To install GPMC on Windows Server 2008 R2, use the Add Features Wizard in Server Manager. If you are using a different version of GPMC, the steps might vary slightly." In $URL$ "The 2008 GPMC will not have all of the same settings that 2008 R2 / Windows 7 has. If you have moved up to R2 / Windows 7, the Group Policy team strongly recommends only managing GPO's from the R2 / Windows 7 version of the GPMC. Remember, you only need one Windows 7 client to get the newer GPMC!" you have part of the answer: could you install de gpmc in a Windows 7 and then edit the policy again? 

Sorry if I'm wrong, I'm not an IIS expert, but I think you can ask for a certificate with aliases. If you want an example you can see the certificate for upcnet.upc.edu. In the "Certificate Subject Alt Name" you can see: Not Critical DNS Name: sylar.upc.es DNS Name: ca1.upc.edu DNS Name: ca2.upc.edu DNS Name: camins.upc.edu DNS Name: catedraeveris.upc.edu DNS Name: catedratelstar.upc.edu DNS Name: ceib.upc.edu DNS Name: cemad.upc.edu DNS Name: cmem.upc.edu DNS Name: congresoeben2011.upc.edu DNS Name: cuv.upc.edu DNS Name: dcen.upc.edu DNS Name: deab.upc.edu DNS Name: dehma.upc.edu DNS Name: doe.upc.edu DNS Name: ec.upc.edu DNS Name: eel.upc.edu DNS Name: ega1.upc.edu DNS Name: ege.upc.edu DNS Name: entel.upc.edu DNS Name: eq.upc.edu DNS Name: esab.upc.edu DNS Name: etcg.upc.edu DNS Name: etsav.upc.edu DNS Name: euetib.upc.edu DNS Name: fa.upc.edu DNS Name: fme.upc.edu DNS Name: gaa.upc.edu DNS Name: gcm.upc.edu DNS Name: genbloc.upc.edu DNS Name: genweb.upc.edu DNS Name: guni.upc.edu DNS Name: ice.upc.edu DNS Name: iemae.upc.edu DNS Name: intranet.claustre.upc.edu DNS Name: intranet.eel.upc.edu DNS Name: intranet.esab.upc.edu DNS Name: intranet.esaiict.upc.edu DNS Name: intranet.etseiat.upc.edu DNS Name: intranet.etseib.upc.edu DNS Name: intranet.ma1.upc.edu DNS Name: ioc.upc.edu DNS Name: ioc.upc.es DNS Name: kemlg.upc.edu DNS Name: labedi.upc.edu DNS Name: lerma.upc.edu DNS Name: ma2.upc.edu DNS Name: ma2.upc.es DNS Name: ma4.upc.edu DNS Name: macrom.upc.edu DNS Name: mpi.upc.edu DNS Name: pa.upc.edu DNS Name: plone.upc.edu DNS Name: psep.upc.edu DNS Name: recerca.upc.edu DNS Name: rmee.upc.edu DNS Name: upcnet.upc.edu DNS Name: www.ca1.upc.edu DNS Name: www.ca2.upc.edu DNS Name: www.camins.upc.edu DNS Name: www.catedraeveris.upc.edu DNS Name: www.ceib.upc.edu DNS Name: www.cemad.upc.edu DNS Name: www.cmem.upc.edu DNS Name: www.cuv.upc.edu DNS Name: www.dcen.upc.edu DNS Name: www.deab.upc.edu DNS Name: www.dehma.upc.edu DNS Name: www.doe.upc.edu DNS Name: www.ec.upc.edu DNS Name: www.eel.upc.edu DNS Name: www.ege.upc.edu DNS Name: www.entel.upc.edu DNS Name: www.eq.upc.edu DNS Name: www.esab.upc.edu DNS Name: www.etcg.upc.edu DNS Name: www.etsav.upc.edu DNS Name: www.euetib.upc.edu DNS Name: www.fa.upc.edu DNS Name: www.fme.upc.edu DNS Name: www.gaa.upc.edu DNS Name: www.gcm.upc.edu DNS Name: www.guni.upc.edu DNS Name: www.ice.upc.edu DNS Name: www.iemae.upc.edu DNS Name: www.ioc.upc.edu DNS Name: www.ioc.upc.es DNS Name: www.kemlg.upc.edu DNS Name: www.labedi.upc.edu DNS Name: www.lerma.upc.edu DNS Name: www.ma2.upc.edu DNS Name: www.ma2.upc.es DNS Name: www.ma4.upc.edu DNS Name: www.macrom.upc.edu DNS Name: www.mpi.upc.edu DNS Name: www.pa.upc.edu DNS Name: www.rmee.upc.edu DNS Name: xsf.upc.edu DNS Name: xsf.upc.es 

How about Microsoft's URLScan? You could include the restricted files in the [DenyUrlSequences] section of the UrlScan configuration file... If you upgrade to IIS 7.0 on Windows 2008 you can use the built-in Request Filtering option and specifically restrict/hide the files/folders you don't want accessed. 

Why would I want to use RAR instead of GZIP? Well one thing GZIP doesn't have is the ability to automatically include a date stamp on the file name. So with this info here is an example of how I will be backing up the MySQL database information: 

I'm running Windows Server 2008 with MySQL installed and every time I reboot the server the MySQL Service doesn't start right away. A look into the Windows Eventlog shows that the MySQL Service was hung at startup. Looking at the Services.msc console shows the service state at Starting... Eventually, like 10 minutes, the MySQL Service actually finishes the startup process and the database becomes available for my Wordpress server... I looked at the MySQL .err files and didn't find anything that would indicate a delay in the statup process... Can anyone suggest a way to determine what is causing the delay, and more importantly, how to prevent the delay in the MySQL Startup? UPDATE: Here is the .err log contents from the shutdown to the startup complete. Notice the startup begins at 10:30:00 and the MySQL isn't ready for connections until 10:47:14, a full 17 minutes later: 

Hyper-V synthetic interfaces are bound to the hypervisor, and the Hyper-V product has most everything (if not all) you will find on other platforms. Lastly, I would suspect that all vendors are going to end up offering the base Hypervisor for free and the profit will come from management and add-ons. Enterprise virtualization decisions really need to be made with product comparisons and considerations of the product road-map. 

One suggestion (not an immediate fix unfortunately) would be to reconfigure your SSHD to listen on port 443. Then your client software will appear to any proxy and/or firewalls as HTTPS traffic instead of SSH traffic. If you are forced to go through a proxy server than you can use an SSH client like WinSCP that supports connecting through a proxy server... I wrote up an article about this topic that some might find useful... 

Exporting a certificate's public and private key is built into Windows, as long as you imported the certificate with the "Allow Export" flag set... In case you have a certificate that doesn't allow you to export the private key you can use a third party tool to extract the private key... iSEC Partners wrote a tool called Jailbreak that allows you to export "locked" certificates... I wrote up a review of it on my blog... 

I have been using EveryDNS.NET for several years with positive results. While a free service they do accept donations to help keep everything running along. 

While playing around with a new machine, I found out that files get corrupted when received via a specific [discrete] network controller connected to a specific network infrastructure. Having several other controller samples of the very same model and other models as well, I would like to pinpoint the source of trouble — whether it is: 

In contrast, a purpose-built software tool could report integrity failure immediately after detecting the very first segment with hash mismatch — be it several seconds (megabytes) or many hours (terabytes). With file-backed approach, however, we either use small files that provide low latency together with insufficient bit pattern distinctiveness, or large files that are still not large enough to provide us with several hours of diverse bit stream. Are there other (better) options I am missing? 

I had a server running Windows 2003 that resided on a RAID5 array formed by Promise FastTrak SX4100, which I thought was hardware-based because of its dedicated processor and buffer memory and its ability to boot DOS and Windows. As it turns out, however, that controller is only hardware-assisted, with higher level logic carried out by x86 firmware running on host processor. Now that the aged motherboard (or processor?) has died, and I tried to migrate to a more modern UEFI-oriented hardware, the RAID controller cannot initialize even in legacy (BIOS) mode — it hangs when scanning disks, i. e. its firmware receives the control from UEFI/BIOS and prints welcoming messages on screen, but makes no progress in identifying connected SATA drives. Therefore I thought I may have better luck running Windows inside a virtual machine with PCI card passed through to it, the more so that NT 5.2 is unlikely to be compatible with modern chipsets, while Qemu provides totally comfortable emulated environment in classic BIOS mode. The problem, however, is that SeaBIOS does not list the RAID controller as a bootable device, despite being able to communicate with it successfully. That is: 

I was thinking of a [cross-platform] software utility like , but focusing on data integrity as well — not just benchmarking the throughput and relying on TCP checksums (which are simply 16-bit arithmetic sums that cannot protect against arbitrary corruption) for implicit retransmission not directly observable at application level. Kind of . However, I could not find any such tool yet. What are the alternatives? I could only imagine taking a large file and moving it around in both directions, then comparing its hash against the reference. But this approach has several flaws: 

In other words, the array seems totally operational inside the VM environment, but for some season not recognized by SeaBIOS as a bootable device, although the later does support PCI devices for Boot ROM option, as is evident with iPXE network boot ROM built into SeaBIOS itself. I also had an idea that GRUB may be of any help here, i. e. booting from SeaBIOS into GRUB (on a small separate disk) and then chain-loading to Windows. However I was not very successful at configuring it, since Linux environments do not see the array due to the lack of drivers and thus cannot assist with menu creation, yet GRUB itself is not too friendly nor verbose — I could not even understand whether it actually sees the array as a disk drive, or needs some drivers to be loaded beforehand, or any other prerequisites. Rescue kits like RescaTux or PartedMagic are not helpful either, since they are focused on repairing existing GRUB installations — not setting up new ones. For reference, I experimented with Xen 4.7.2 using upstream Qemu 2.6.2 with SeaBIOS 1.9.1, on top of openSUSE 42.2 with Linux 4.4.62. Forums and mailing lists indicate that booting from PCI RAID was already possible in much older versions, for over a decade, so I assume that it is my particular setup to blame. But I cannot understand, is SeaBIOS indeed capable of booting from my RAID controller? The ultimate goal is to get the server back by any means available, including by acquiring another compatible old hardware. But I just got curious with this specific technology, as virtual machines seemed more versatile and future-proof method of prolonging the life of legacy systems. 

Not terribly familiar with the SSL Headers concept although the article looks interesting... You should be able to add a second IP address to the existing cluster (don't need an additional cluster). Then you can configure IIS with the additional IP address and assign a new certificate to the new IP address. 

Unfortunately you cannot upgrade from Windows 2000 Active Directory to Windows 2008 Active Directory directly. You must first upgrade to Windows 2003 and then to Windows 2008. More about this can be found on Microsoft's Technet Article. From the article: 

One suggestion might be UserVoice... It is billed as a product forum but might work for your needs... 

A service account running with the credentials of a domain account that has recently changed the account password will run into a problem only during a restart of that service. Since the server hasn't been updated with the new password your service will not be able to authenticate the service account credentials until you update the service properties with the correct password. That being said, it is recommended that you use the SERVER\NETWORK SERVICE account for services that require domain level access. The NETWORK SERVICE account is actually an alias account linking to the DOMAIN\SERVERNAME directory object in Active Directory. ex. ServerA\NETWORK SERVICE --> DOMAIN\ServerA Imagine your server running the service is ServerA and the resource your service needs access to is ServerB. By configuring the service to use the ServerA\NETWORK SERVICE account will actually be running with the DOMAIN\ServerA account. This has an added benefit of the automated computer password change mechanism that takes place (by default) every 30 days, transparent to you or your service. Also, if you need to grant permissions for your service to communicate to the resource server (ServerB) in the same forest you can simply edit the access permissions on the ServerB to grant access permissions to the DOMAIN\ServerA account (remember it is the actual account for the ServerA\NETWORK SERVICE account) and then all requests to the resource on ServerB will be performed using the credentials of the DOMAIN\ServerA account. All that being said, the Managed Service Accounts in Windows 2008 (thanks for pointing that out Oskar) looks to be an even better way to handle service account needs! 

You are most likely having a problem with the difference between NTLM and NTLMv2. Windows 2000 and Samba default to NTLM which appears to a Windows 2003 and Windows 2008 server as a valid password attempt, but can't interpret the password correctly while expecting NTLMv2. I believe that Windows 2000 can now support NTLMv2 along with the latest Samba bits... You might try and configure your Windows 2000 and Samba to use NTLMv2... Another strategy you might try is to downgrade the NTLM version on your Windows 2003/2008 servers to see if you still have the problems. I wouldn't leave it at NTLM, since NTLMv2 is much safer.