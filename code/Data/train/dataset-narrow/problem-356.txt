As I have highlighted in bold, conwind and cwnd both mean Congestion Window. If you'd like to learn more about TCP/IP, I can't recommend TCP/IP Guide enough. It is an excellent book, and free too. If you do get good use out of it though I suggest you purchase a copy of it too as a "thank you" to the author. 

So you see, the traffic between R1 and R2 is unicast (as you'd expect) and the traffic between R2 and PC is broadcast, the same way as it would be if R2 were the DHCP server. Note though that the DHCP request comes from R2's Fa0/1 interface. This therefore means that R1 needs a route to this network even though it is directly connected to R2. That explains why I've got the static route on R1. 

Install Angry IP (or any other IP scanner) on an existing server which has an IP address. Find a spare IP on any subnet and assign it to a spare PC or server. You can then use this PC/server to perfom scans. 

This might be classed as slightly off topic, but you might be interested in reading about Long Fat Networks (LFNs). The reason why I say this is because a big internet pipe does not always mean it will be fast, nor will it be fully utilised unless it is set tuned correctly. 

While ACK packets may not contain any useful data, the packets themselves are extremely useful. The ACK packet tells the other side of the connection "I received the data you sent and I'm ready for more." If the ACK is not received due to packet loss, a firewall blocking it, or any other reason, the connection sender of the ACK will keep resending that same ACK until the other side sends more data. Now let's take a step back and discuss the Web server scenario you mentioned. After the three way handshake completes the client will sends a request for a page. This would contain "useful" data because it tells the server what page the client wants. The server then sends an ACK to let the client know the request has been received. The server then sends back data packets which contain the requested page. The client then sends an ACK or ACKs to let the server know it has received all of the data which was sent. Note that all of the above took place on a single TCP connection. In other words, both parties can send and receive data over the one connection, they do not need one each. Finally, just an FYI, blocking traffic based on a TCP flag for security purposes is almost as weak as blocking on port numbers. The reason being that malicious users can craft packets any which way they like so sending all packets with the ACK bit set is no trouble at all. If you're interested in reading more about this take a look at Scapy. 

Here is another quote from the thread I linked to above: iBGP generally peers using the loopback address for the reasons mentioned by Mohamed (i.e. loopback interface always stays up therefore the iBGP session stays up as long as the IGP has a path to get to the loopback interface of the peer router). eBGP commonly peers using the physical interface as there is generally only one path between the two eBGP peers. Although the loopback interface is sometimes used between eBGP peers to achieved load-balancing when more than one circuit link the two eBGP peers. In other words, loopback interfaces can be used for both iBGP and eBGP. As you have two connections to the one ISP, you should use a loopback interface. In regards to your other comment: 

Without knowing the topology of your clients' networks, I'd hazard a guess that this is an MTU issue. Ask your clients to investigate their network devices' configurations and lower their MTU (maximum transmission unit) and/or MSS (maximum segment size) if necessary. Fore more information on MTU and MSS, see my blog post entry. 

Because it's a Layer 2 network. MAC addresses will be learned on every layer 2 device between the source and destination devices. If you're interested in finding out which MAC address belongs to which device, you can look up the OUI of MAC addresses in your output. For example, I can see you've got a few Cisco, Linksys and Netgear devices. 

You can use port security to define which MAC addresses should be seen on specific ports. Question 4: 

In regards to your last comment I'll post as a separate answer because modifying existing answer changes it a bit. Let me break it the following way: First: 

"Im also unable to distinguish between LSA used while forming adjacency and LSA types, as in router lsas, network lsas,etc. If the LSA types are only sent after the adjacency is formed, then how come the different packets used while forming adjacency know about the Link State Advertisements?" A/ Basically dissect the headers. Database description through LS type from the LSA header and Link-State request packet field LS type, both specify (example: router lsa, summary lsa, nssa). "If Router A has only directly connected networks in the database and hasn't received any LSAs from other routers, then how can it send the received LSAs to the other connected router, say Router B." A/ I'll elaborate with what I think is your doubt, if not please correct. "The router-LSA then describes the router's working connections (i.e., interfaces or links) to the area. Each link is typed according to the kind of attached network." pag127 Basically there are 4 Link Type's: 

Strictly speaking LSA T1 has only area scope so say for example routers in A0 will all eventually receive the Router LSA, now for that information to be carried to other area like A1 you would need a T3. 

This process indeed takes effect with the usage of DBD packets as well as Type 3, 4 and 5 packets. let's see what each one contains: 

Some implementations set the ATT bit automatically and provide you a command or knob under a configuration stanza to disable it. i.e on Juniper: ignore-attached-bit 

In regards to route advertising you will definitely have an issue, as a route that is received with it's own AS will be dropped due to loop unless an admin does some manual configuration as for example AS overwriting. 

Factory default security policies Trust to trust permit, trust to untrust permit, untrust to trust deny 

Link-state Database: Total compilation of routing knowledge. Consist of tuples (router ID, neighbor ID and cost). Candidate Database: Tuples are evaluated. It deletes "any tuples whose neighbor ID is currently in the Tree DB and whose cost to the root is greater than the entry currently in the tree database." (Adv Junos Service Provider Routing, Ch2-44) Tree Database: Loop free and lowest cost topology. 

Steps taken from SRX650 Services Gateway Hardware Guide, you can also see the sampling of the above steps if in doubt. System default security Deny all transit traffic. 

Finally let us recall that although PT is good for learning it is somewhat limited. For more advance research, testing and learning GNS3 might be a good option for you. Cheers! EDIT ADDED FROM HERE BELOW I have just got my hands with PT Version 7.0.0.0306, issue with PC is the same it only allows one network module to be installed and hence one IP. However, something I noticed on the newer version and forgot to check on the old version is that the server does indeed support the adding of two cards, hence two IP addresses. Unfortunately that does still not accomplish what you are looking for: 

STP is used when you have redundant paths in order to avoid an endless loop which can harm your network. Based on your topology A<->B<->C this is a straight topology tree hence the STP might not be entirely necessary. There are two types of BPDU's: Configuration and Topology Change Notification. Do not confuse both. Config Bpdu is indeed used during initial setup to determine the root bridge and the best path cost to it, additionally depending on the port role a state will be assumed, ie: forwarding, blocking. TCN will be generated if somewhere on the topology an event (i.e: switch down, link down) caused the path to be affected. 3.The switch you call root bridge will only be elected so if it has the lowest bridge id (lowest priority, else, lowest priority plus lowest bridge address) through the configuration bpdu. This will occur all the way to your last switch so that they are in synch on who is the root. 4.For a detailed explanation on TC's feel free to check this 

Correct, each MST instance has its own topology parameters. I know you tagged Cisco, but if someone from Juniper also needs to check for their wording: Understanding MSTP for EX Series and QFX Series Switches 

For this there is a short answer concerning 3DB's: OSPF loop avoiding Basically each node put's itself at the root of the tree and determines the lowest cost and loop free path for each destination. Concerning: 

It's funny you e-mailed me about this question, I'm writing another blog post at the moment that answers this very question. I should have it posted in the next few hours. EDIT: The blog post has now been published. Anyway, let's get started on your question :) 

Doing either of these two things will allow you to scan all subnets without having to move your PC/server from VLAN to VLAN. 

The first two bits of the fourth octet in the "IP Address" (highlighted with * below) are included in the network portion. This is because the first two bits of the fourth octet in the "Subnet Mask" (highlighted with ! below) dictates this. 

If you feel that way you should try to find the answer yourself. The first result you get when Googling "tcp cwnd" is this Wikipedia page which states: 

You're right - it is like comparing apples and oranges :) For exmaple, RIP's maximum metric is 15 but doesn't mean anything when compared to an EIGRP metric of 30720. In regards to the EIGRP metric being so high - part of the reason is because EIGRP multiplies its metric by 256 in order to be backward compatible with IGRP (EIGRP's predecessor). As per this Wikipedia entry: 

Guy's answer is spot on. Just an FYI, if you're interested in reading more about MSS and MTU, I've written a couple of blog posts on the subject - $URL$ Back onto the subject of the Window size - the calculation is as follows: 

Without having more information such as the hardware involved and their configs, my guess is that the fault is configuration related. Perhaps the two addresses are covered by two different rules. One which does a DNS lookup and one which doesn't. As they say, the simplest answer is usually the right one. 

This is spot on. There are 32 bits in an IP address. As you've got a /30 that means 30 of those bits are "reserved" network bits. As you know, you're not "allowed" to change network bits otherwise you're more than likely end up with IP address conflicts. This therefore leaves you with 2 "Host" bits which you are "allowed" to play with. As you correctly point out, these 2 bits result in 4 addresses. However, when we use the 2 ^ n - 2 formula to determine the number of usable host addresses we're left with two addresses. As you already know, we subtract 2 in this formula to account for the first and last addresses in the subnet as they are the network and broadcast addresses respectively and cannot be assigned to a host. Now if I understand your question correctly you're asking can a /30 be used to create a couple of subnets. To calculate the number of subnets we'll get we need to use a formula which differs slightly from the one mentioned above - this formula is 2 ^ n (note that we do not subtract 2 here). Let's say we use the two host bits in this calculation - 2 ^ 2 = 4 subnets. However, as this uses all of the host bits we don't have any left to allocate to the wifi routers. Because of this it would be more appropriate to use only 1 host bit for the subnet and leave the other bit for the hosts. Therefore our subnet calculation would look like this: 2 ^ 1 = 2 subnets. However, we hit an issue here too. As as we've only got one host bit left we won't have any usable addresses because 2 ^ 1 - 2 = 0. Therefore the answer is no, you cannot subnet a /30. Note: OK I may be fibbing a little here... there are some situations where you can use /31 and even /32 addresses (for example, loopback interfaces and point to point links) but they're another kettle of fish. Now if you were asking about a /29 address instead, then the answer would be yes, you can use this network address to create two subnets with a couple of hosts each. Let's look at why: 

The first three VLANs allow the switch to perform routing for these three VLANs. The fourth VLAN is used for routing between the switch and the router. Through this VLAN you will need to configure a default route on the switch witch points to the router's IP address as the next hop address. Note that instead of using VLAN 100 you could issue the "no switchport" command on the switch's gi0/1 interface and use it as a layer 3 interface instead.