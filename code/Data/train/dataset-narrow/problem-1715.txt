You are not doing number-crunching and you use plural "sites". That points to the AMD setup for several reasons: 

Frist one is much less hassle, but you don't get some of the benefits of ext4 for files already present in the filesystem (i.e. they won't be extent-based). Backup-mkfs-restore will give you all features for all files, and mkfs.ext4 will make sure that alignment of data is playing well with your underlying software RAID. If you got the alignment right when creating ext3 filesystem, then there will be no gain. If you made a mistake, potentially you can gain a lot. Which method to choose? Up to you. If your filesystem works fine now, and you just want to run current file system, you can convert in-place. If you experience performance problems and hope that filesystem change will help you with these, I'd go for a method 2. 

The device affected in the attached log is dm-7, so I expect you use multipathd for the HP storage, right? If you do, please attach also your multipathing config. el5 in the kernel name suggests RHEL 5. If you have a support contract, contact them ASAP, they will be able to help you the most. What we are sure from the data is that an attempt to access the log has been made, failed and the OS did the only thing it could, i.e. froze the filesystem in order to avoid damaging it with any writes. The failure can lie in any of the components: 

not only Additionally should have permission set to allow read the directory, i.e. list its content. 

So yes, it is allowed and properly written software will handle it just OK. CNAME chains aren't however considered good practice and impose an overhead on the infrastructure. 

It doesn't look like a Linux problem, it looks like an Apache problem. What do your logs say? Is it a site that used to work and now is being moved to another machine, or are you setting up a new one? If it is an old site, is connection from your own IP to your is normal? will tell you what program is connecting to port 80. I guess your site is hosting something more than static pages. Try to find what's the minimum configuration (modules/virtual hosts/applications) needed to reproduce the problem. This will help you to narrow down the troubleshooting area. 

The typical problem is that the user Apache runs as (let's call him apache) cannot access the directory. If the apache user has a shell to that user, cd to and see if you can to the directory pointed by DeocumentRoot. Each directory on the path from to has to give at least and permissions for the apache user, apache group or "the world" in order for the Apache process to be able to cd into this directory on its way to . 

Is the controller supported by your server? Check e.g. here: $URL$ Is the controller supported by your cloning software? Check the producer's website and check hardware compatibility list for your version of the software. 

There is "usb" in the line with sdb, there's none in the line with sda, so the USB drive is sdb. Another piece of information that you can get is from 

It is unlikely, that the scan originates outside the 10.51.0.0/16 network. Typical firewall rules drop packets that claim to origin from a locally-connected network that come through wrong interface. Then, maybe you have atypical firewall rules ;). I'm not sure if I got your question right, but if 10.51.1.15 is the IP of the CentOS box, then apart of the ideas above dont' make sense. If the packets appear to originate from the local box then it has packets to deliver to these addresses. In that case you could set up iptables rules that log packets to invalid addresses of 10.51.0.0/16 network. By invalid addresses I mean addresses which have not been assigned to any host. If something is trying to access them, then probably it has no legitimate reason to do so. Such logging rule (with corresponding limit rule to prevent log filling) will tell you origin of such a packet -- if it was from a local box, or any of the remote networks. If the packets appear to originate from the CentOS box itself you could also take a look at output during a suspected scan and compare it to output saved when there was no scanning. Maybe you'll find some obvious answers. 

Looking at the answer, it looks like either you asked a non-recursive query. Or the name server does not do recursive queries. Both cases would be strange. What is a recursive query? When you ask for www.good-morning.se, then your browser must ask the name server of the domain good-morning.se for the address of the host www.good-morning.se. However, to know the name of the name server for good-morning.se domain, it must ask the name server for .se domain what is the name server for good-morning.se domain. A recursive query goes through all these levels in one go (you ask the server to just do all the work and give you the final answer). Non-recursive query does just one level at a time. The answer from your post contains addresses for name servers for .se domain, so it looks like either the question was not recursive, or the server didn't do all the fetching it ought. I have no idea why either of these could happen. You could use e.g. wireshark or tcpdump to see what kind of query is being sent, then you either have to figure out what is wrong and either correct configuration on your side or have a chat with support of your ISP. PS More on recursive and non-recursive queries see e.g. here or use Microsoft. 

Therefore, I think, your problem is reduced to upgrading your boxes to the latest of what's in the distribution, provided that both of them are still being maintained. You may also check in the release notes of the packages, that the security bugs have been patched in the upgraded versions. They ought to be, but it's nice to have proof in writing. If any of the distribution that you use is already out of support, you are back to square 1. In that case, the safest, an in my opinion best overall, option would be to upgrade the boxes to a supported distribution. Painful and expensive, I know, but security and stability is what customers pay for. Even internal customers. If you will not get resources for the required upgrade, I'd get that in writing (i.e. e-mail) from your manager and backup, and archive multiple copies of it for the time when one of the machines will crash/get hacked due to the lack of the upgrade. Prudent self-preservation policy. Of course, you can create custom packages (possibly with dependencies), and ship them to the field for upgrades, but you'd have to: 

Here's a description of a process. They used a large swap partition to host root filesystem during the change. You do not need this trick, because you have 2nd HDD. A trick question: does your server support booting from the 2nd HDD? Can you set it up to boot from 2hd HDD? I think you could simplify the solution and not change the /boot partition. Bootloaders do not like LVM yet, so you still need a regular partition to host your /boot. Leaving /boot be and only changing the root file system location simplifies the process. You can have 2 entries in grub.conf mid-migration: with root in the old place and on LVM. In case something goes awry, you can boot to the rescue image, change the default entry and have another go at the migration. And yes, I wholeheartedly agree with poige. Test in a virtual environment before you start playing with real system.