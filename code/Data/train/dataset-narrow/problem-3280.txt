Launch your browser and point it to , you should see the data to be rendered as webpage per our simple example code. This simple solution could carry a long way before you need to install a full feature web server like Apache or Nginx on your Raspberry Pi. 

The library is based on another library , if you read the Adafruit_GPIO github source code on function, you will noticed that it is actually just a wrapper of package, and returning a object. The does has the method for setting BOARD or BCM ping numbering, so you can map or specify the mode by passing a using the follow code: 

What is your network mask setting you see when you run ? If your network mask is set as , your phone and wifi are basically on two different networks, you can either change the mask to or set the IP address of both your phone and wifi to be within the same range . 

TL:DR - There is no distance data you can obtained from Bluetooth Low Energy (BLE) beacon. However, there is a ranging proximity data that you could used as a rough estimation of distance. There is a general misunderstanding in the market regarding BLE as a location technology, it is not, it is a radio transmission that provide a "proximity" beacon signal. Bluetooth LE (which EddyStone beacon is based on) only broadcast a radio transmission which is detected by a client (i.e. a Phone). In telecom terms, such radio transmission signal can be measured as received signal strength indicator (RSSI) of the power present at the receiver. BLE does use the RSSI data to provide a rough PROXIMITY estimation zones (immediate, near, far, unknown based on the signal strength). While the RSSI or proximity zone data can theoretically be used to derive a distance estimation with careful calibration if you have a light of sight and fixed location (as point-to-point). However in practice in mobile environemnt this is far from trivial and hardly be accurate due to the fluctuations in the signal strength. Weather you put your phone in the back pocket or holding on the hand, or whether you facing the beacon with or without blocking can greately affect the signal strength. Having said that, all the BLE device vendors provide Proximity Ranging API or information that you can experiencing. Google Eddystone provided extract info such as lat/long for the beacon location, it is however still does not provide distance information. This not really answer your question, however I hope this clarify and set the direction for your further exploration. 

Finally, neither the frequency nor the duty cycling will break your motor. However, your motor may not be able to function properly at very high frequency, so keep the frequency low. 

If you are not very familiar with Electronics, the easier way is to use one of those Relay Shields (just google for "relay shields raspberry pi") so that you don't need to figure out the circuitry and transistor yourself. A relay shield generally consists of a number of channels of relay circuitry, each with a control transistor, a relay plus a few components. Power the relay shield with 5v and common ground, and connect your GPIO to the relay shield control pin of one of the channel. You can connect your 14v to the (stands for Normal Open) of the relay, and light bulb to the of the relay. This basically adding a switch in serial to your light bulb power source. 

If you run linux command within the directory, you will see that is just a symlink to python2.7, if you know linux commands well enough, you can easily make a change to link . One more thing you need to aware is that in order to install packages for python3, you need to run . This is probably the reason that you run into the case where "No module name 'script'" error. Again, run to find out more. You can also run to check what packages are installed for python3. 

And if you want to assign a static IP, you do it in /etc/dhcpcd.conf, by adding the following lines to the end of the configuration file: 

I am having a DS18B20 temperature sensor in a 3-wire setup (using a pullup resistor of 4.7 kOhm from data to 3.3v) on a Raspberry Pi model B+. It always return the value as shown below when using to get the data: 

Not sure this will work but you could try to boot the RPI in safe mode that may help on recovery. Instructables.com is not a good place to find good tutorial, not because of the content quality (there are good projects and instructions there), but because it doesn't tell you how dated the content has been. I know for sure that this specific instructable is old because if you are using Jessie, the correct directory for modifying the global autostart is under (the is "old" location and may exist, but it will be ignored). The is the global autostart file, and works for all users... unless there is a user autostart. If the user has an autostart file, the global one is ignored and the personal autostart is used. User settings (at ) are applied last and take precedence over global settings. Jessie creates a user's autostart file during the install, so changing settings in the global file no longer have any effect. This however does not provide any explanation on what went wrong on your configuration, but I think this is the information that you should know, and as you can figure out that your adding to the global settings should not work and ignored. 

It is not the problem of a particular DS18B20 as I have replaced it with another one and get the same result. I also tried to unplug the three jumper wires from the Raspberry Pi header and connect into an Arduino without touching any circuit or connections on the breadboard, the same circuit works perfectly on my Arduino Pro Mini (3.3v). So it is not the problem in circuitry. I also tried it on two different Raspberry Pi and get the same result. The is enabled with the setting of and gpiopin4 is used as default for input (in fact I tried different gpio pin configurations, but the results are the same). Any one has the similar experience? Am I missing something? Update Here is the photo of my breadboard wiring: 

To your question about when there are two grounds, it is no longer a Raspberry Pi related question. However I hope a quick explanation will help those Raspberry Pi users tinkering with electronics parts. When you separate Relay Power Supply (JD-VCC) from System Power Supply, you probably would want to separate the ground as well so that two parts of the system have total isolation. The "GND" at the header connecting to Raspberry Pi (or any kind of controller) is the System Ground that connect to Raspberry Pi, while the "GND" at the JD-VCC jumper is so called the Relay Power Ground. The circuit diagram below will help to illustrate that (the diagram may not be the exact circuit of your board). 

The second parameter of determine the frequency of the pwm (hertz is the unit of frequency, i.e. cycles/second), in the case of an LED, you will noticed the LED blinking at every 2 second if you set it to 0.5 (i.e. 1/2). But if you set it 100, you will feel the LED is constantly ON even though it is actually blinking at 100 cycles/second. In the case of motor control using PWM, the frequency does not affect the speed of the motor, the Duty Cycle does. You can set the to 50Hz (which is same as your home appliance power frequency), and change duty cycle to control the speed of the motor. Duty cycle can be controlled between 0% to 100%. A duty cycle of 50% means it is running at half of the full speed. Here is an example in python using RPi.GPIO library that you can try it out. The program increases the duty cycling by 5% between 0% to 100 (i.e. gradually speed up) and then decrease the duty cycling by 5% from 100% to 0% (i.e. gradually slow down): 

If your SD card is newly created, by default SSH is not enable on the first boot. SSH can be enabled by placing a file named 'ssh', without any extension, onto the boot partition of the SD card. This is newly implemented feature since Nov 2016 release, whatever video you are viewing might be created early, or have done so without mentioning. 

To be sure, you can get a cable from Adafruit to ensure that the cable is for RCA display product (versus RCA output product). 

Since you are aware of LAMP, the short answer would be go ahead to install LAMP and learn how to use it. But there is a simpler solution for beginners and for python programmers. Since you are using python, so you don't have to use PHP, and you probably don't need to have a full feature web server yet. Python 3 actually come with a build-in http server that is good enough for testing and learning purpose. You can run it with a simple command at the directory where your code located: 

Renting a Virtual Private Server (VPS) is not necessary more secure than running on RPi, and you still going through almost the same processes in setting it up, unless you go for full hosting service. In my opinion most of the online tutorials focus on how to setup a web server, but seldom have sufficient coverage on security and performance. In case you want to learn how to set up the hosting yourself on RPi, here is a comprehensive guide on how to setup a web server properly, and the site is running on a RPi 3. 

Further update When I posted my question a year ago, I also had a USB Software-Defined Radio (SDR) plug in the Raspberry Pi along with DS18B21 sensor, the SDR draws a lot of current, by disconnecting the SDR, I'm able to get the temperature reading correctly most of the time, and only occasionally getting a reading of 85000. This suggests that in order for DS18B20 to functional properly, make sure you have stable power supply able to provide 5V@2A. 

Please noted that there is no quote for and it must be hexadecimal digits, and maximum not exceeding 26 hexadecimals. My example shows a 26-digit key. Save the file and reload the network service or reboot. 

There are two solutions here: 1) Use it as is, in this case, your if statement need to compare it with the return like this: 

A barcode scanner is just a USB device that emulate keyboard. There is a python package called that allows you to read input events on Linux. You can install the package from python-evdev. 

Replace the IP addresses with your own network/router IP addresses if it is different from the example. 

First of all, you had some basic concept wrong. When an LED is on, the voltage between the anode and the cathode of the LED is minimum, only about 0.5-0.7v. This is why the tutorial said that the 200ohms give a readout of 12.8mA. (3.3-0.5)v/220ohm is about 12.7mA. What kind of transistor to be used depend on the logic of the circuit that you need and how you design your circuitry. In this case, The LED has a common cathode connection, and it need to be driven to GROUND (0v) when a signal (a positive voltage) is applied at the base of the transistor so that the transistor can be 'switch on' (i.e. the resistance between collector and emitter are minimum), therefore NPN make sense for this application.