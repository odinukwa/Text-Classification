I'm a Flash developer, but I think it's time to think of other avenues. Ideally I want to be able to write once but be able to deploy to as many different platforms as possible, so iOS AND Android....Web AND Mobile. Are Html5 game development platforms good enough to create games that run on the web and mobile? or should I go with say Corona for iOS and Android, and use Html5 just for web? I'm a professional developer so paying out for a decent game dev platform is not an issue, I just want to make sure I'm using the best tools for the job over the next few years. Only interested in developing 2D games. Might well need physics. Corona definately seems a good option for mobile, but if it's possible to create everything in Html5 even if it's more work I'm wondering if it's worth the time learning that. 

I'm a tad confused about the turn based option with iOS5. Does this take care of everything needed to make a multiplayer turn based game?i.e all the game turn data is stored with apple or do I need to still provide a server for something? 

Personally I am a big fan of jMonkey Engine.Its a shader based & geared toward high end games productions. jGame & Slick2D are very good for 2d games. ligGDX might interest you. All of these are under very active development. There is no problem in choosing 3d engines for making 2d games. Just ignore that extra D, unless you have some serious issues with that one. So, I whole heartily suggest you to start with jMonkey Engine, cause its fun, easy to use, has a very active community and comes with an awesome jMonkey Platform which is build on top of Netbeans platform, where every update & features is just one click away. You might end up in using it with many other projects. There are other libraries too, but they lack community/development activity. 

You can start of with any tutorials you like(even non-Mobile). First your goal should be getting used to with development environment. If you want to deploy you game to iOS devices then, you just have to follow constrain of that device. 

For more modern tool, you can pick a WebGL powered game engine. Most of them are driven by JavaScript. You can checkout this list, see if any of it fits your need. 

I'm working on a 2D pixel art Unity game. I have multiple layers of scrolling so I need to use a perspective camera, the problem is though that it seems to mess up using particles as when the screen scrolls the particles move in perspective, when I need them to stay just in the x and y. Is there way to achieve this? I don't particularly want to go through every particle in real time and zero out their Z value, but maybe that's the only way? 

I'm working on a 2D tile based game. I want NPC's to be able to destroy tiles, and ideally I would have a function, which takes a central x,y and then based upon a circular area from that point (radius) gives me all the tiles that fall within that circular area so I can destroy them. Any ideas as to how to do this? 

Im creating an iPhone game with Adobe AIR, and I want to be able to load a simple text msg into an dynamic text box on the games front screen from my server (and then be able to update that text file on the server, so it updates automatically in the game after the game is on the app store) How would I go about acheiving that? is it as simple as using a getURL? are there any specifical issues with trying to do this on the iPhone via AIR that I should be aware of? Thanks for any advice. 

You haven't told us what is the problem. Anyway, I guess you are asking how to do it. Here is a link. Implementing the equations is not hard at all. 

Ok, this may not be what exactly you are looking for. But, here you might find some guideline to sort it out. 

For free and open source 2d art application I like MyPaint very much. Painting here feels very natural. Though it lacks a lot basic features. For complimenting basic features there is old friend GIMP.You can even try Krita. Its brush engine is better then Gimp. For animation + painting there is another solution called Pencil where you can create basic animation with some basic drawing tools. Its very fun to work with. You can try out Alchemy(painting only) too. 

In the title you are talking about engine development but, there in only 1-2 lines of actual engine development talk. Most of the thing that you've talked about is the logic part of the game, which in not related to engine development.They are related to game logic, which varies from game to game. Nonetheless, just for the title's sake I am going to put my cent here, cause I am also working on my own game engine right now. Game engine is an library which you develop to handle the game logic and assets. As anything else out there, there is not ideal process of developing a game engine. Whenever you want to develop a game engine, I can safely assume that you have worked(or have some idea) with several game engines before and now you want to make one of your own. In my case I am a big fan of jMonkey Game Engine and I am trying to mimic that engine in C++(jMonkey is Java based). Why copy instead of new architecture, for 2 reasons. I can use their architecture, cause they are developing it for years so, there should be a reason why they choose it.Rather then creating something new on my own from the scratch, and later finding it's not good for implementing certain feature. Another reason is the documentation will be same ;) So, first what I did is gathered enough knowledge about Opengl and java to read through the jMonkey source code. They I am trying to abstract out the important parts which can work independently. Say, you are going to drop the Game State & Render Manager part. Just the object loading & setting up material should be enough for prototype 0.1. Then add other features. You will find problem while adding new features to the existing code. You may end up with re-writing the major part of your code but you will learn a lot about what-shouldn't-be-done along the way. From here, its a iterative process. After a certain point, you'll find yourself in a position when you can think about your own engine without looking into other engines. That's when things get a lot of fun. Hope it helps someway. 

I've searched for information on this, but cannot find it, is this not something you can do yet with Kobold2D/Cocos2D? or are there options I've missed? 

I'm working on a game where players can setup villages, which can contain defending units. Any of these units (each on their own tiles) can be set to "campaign" which means they are no longer defending but can now be used to attack other villages. And each unit on a tile can have up to a 100 health. So far so good. Oh and it's all asynchronous so even though the server will be aware that your village is being attacked, you won't be until the attack is over. The issue I'm struggling with, is the following situation. Let's say a unit on a tile is being attacked by a player from another village. The other player see's your village and is attacking your units. You don't know this is happening though, so you set your unit to campaign and off you go to attack another village, with the unit which itself is actually being attacked by this other player. The other player stops attacking your village and leaves your unit with say a health of 1, which is then saved to the server. You however have this same unit are attacking another village with it, but now you discover that even though it started off with a 100 health, now mysteriously it only has 1... Solutions? Ideas? Edit The simplest solutions are often the best. I referred to Clash of clans below, well after a bit more digging it seems that in CoC you can only attack players that are offline! ha, that almost solves the problem. I say almost because there's still the situation where a players village could be in the process of being attacked when they come back online, still need to address that. Edit 2 A solution to the "What happens when a player is attacking your village and you come online" issue, could be the attacking player just get's kicked out of the village at that point and just get's whatever they had won up to that point, it's a bit of a fudge but it might work. 

Make games I can't stress it enough. Make anything. It could be Tetris, it could be SuperMario. Then add feature to it. Try to implement different algorithms(pathfinding, al etc etc) into your game. Find out how things are turning out. Which is the bad part of your code. Then refactor it. You will face some problems. Then look for solution. You will find things like design patterns. Learn it. Then make another game. Use the experience that you have learnt from your past game. When you have some experience you can even start working with some open source game development teams(like 0 AD). If you feel its too hard for you, then go for modding. Don't stand still, do anything related to game development. It could be modeling, texturing, rigging, animation, programming. You don't have to be a jack of all trades. Just have a basic understand on every aspect. The bottom line is try to have a reasonable amount of experience on different aspects on game development. At the end of the day a people pick one from many that suits himself. But, you need to know them first. 

I'm a bit late to this question as I've only just started considering the same question myself. I've just launched a game on FB which we created a global leaderboard for, but it also has the option to display just the friends scores. The FB score and achievements API does look good, but I know for my own game (puzzle game) people absolutely want to see who is scoring well in the game across the network, and also what scores are possible. Also if you just make it friends only than unless each player has LOTS of friends who are all playing it, their leaderboard is going to look pretty empty, which I would argue discourages people from playing, for me the more scores people see being posted the bigger inventive for them to do well themselves. The ideal solution is a global leaderboard and a local one. 

How can I draw a dashed curved line to a x,y point in as3? Basically I'm creating a game where you have a turret, and I want the arc the turret would fire a projectile along to be displayed as a dashed/dotted line along the arc to wherever the mouse x,y is. Ideally it would use the drawing API, rather than using any bitmap manipulation. 

Simple answer, because there is no strict rule about following a certain convention. You can even create a new coordinate system for your application. And people, who will be using it, will have to get used to with the new thing. No question. 

For Metal Gear : Guns of The Patriots, Kojima used their own in-house engine. Its unavailable to general public. C++ is the de-facto of the console game industry. So, I believe it was in this case too. Recently they are developing a new engine which they have revealed E3 of this year, named Fox Engine. They say they will be using this multi-platform engine for their future titles. 

To put it simply yes that what they do. But the go an extra length to cover up the straight edges using destruction mask. After removing the part of the geometry, they add detailed mesh around the destroyed section to make it look believable. Here is how it works, 

You haven't specified your environment and/or language bindings. For 2d scenario Box2d is a very elegant choice and it has a lot of language bindings. Its quite easy to use. You just need to hookup your billboard/model/image(s) with its physics object and see the magic happen. I don't know much about ODE. But have some experience with Bullet.Bullet is faster then ODE. It also has a lot of advanced features i.e. OpenCl cloth simulation. For closed source PhysX from Nvidia and Havok from Intel. They are also free for commercial use.(there are constrains) There are others but, above mentioned are most famous. What you want is Rigid body collision and angular movement. Only these 2 feature, shouldn't be very hard or time consuming to integrate. Go through their documentations. Most of them has individual doc part where is explains how to integrate. 

I'm working on a zombie game in AS3 where I want a character to be able to move away from a zombie depending upon how close the zombie is. The character also has a destination that it's trying to get too on the screen. Ok so I have 2 vectors, one pointing to my destination, and one pointing to the zombie which I then invert to get my "away" vector. I then turn the distance between my character and the zombie into a value between 0 and 1. And then I'm stuck on how to get a resultant vector for my character. How would I use my 0-1 value to calculate how much of the away vector is used and how much of the original destination vector is still left if that makes sense? to end up with 1 direction vector to move my character? So if the zombie is right where my character is, then my direction vector = away vector, and if I'm far away from the zombie than my direction vector = destination vector, but how do I calculate the in-between? Ideally need the answer in AS3.