Powering the Pi from 6V is unlikely to damage it, permanently or otherwise. I would not recommend it, and this is close to the upper limit. If you want information on the Pi protection see Raspberry Pi Power Limitations. 

is NOT intended to run scripts. It is run each time a shell is started. . There are may ways of running scripts, but it unclear what you are trying to do. The listing does not look like a script but looks like See $URL$ for an example. 

Apart from the voltage, there are myriad problems interfacing with an external system. You could probably make it work with suitable protective circuitry, but it is likely to be simpler/safer to use a relay. Other possibilities are opto-isolators if you want a non mechanical system. 

The Foundation warns "Under no circumstances should a power source be connected to the 3.3V pins." Even if this did not fry the 3.3V regulator, this would result in the SOC being powered in the wrong sequence, with potentially damaging consequences. 

The Arduino version in the repository is HOPELESSLY OUT OF DATE. Many recent sketches will not compile, due to changes in library handling, and newer models lack support. You should install the version from the Arduino site. Download the latest Arduino IDE You can follow the instructions in Install the Arduino Software (IDE) on on Linux however this installs only for the current user. I ran the following to Install Arduino IDE on my Raspberry Pi3, so it is accessible to all users. The following are for version 1.8.4, you should change for the latest, currently 1.8.5, although there is no significant difference that affects the Pi. 

I can't help with your Python, but this strikes me as using a sledgehammer to crack a nut. I have on my Pi so I can "discover" the IP with hostname.local. I am pretty sure avahi starts automatically on newer kernels, or by . I connect with . This may not work with older Windows (due to the non standard use of ), but it is worth a try. 

You are misinformed as are some of the comments. You CANNOT backpower any Pi since the B+ (I reserve comment on the Zero) because the Foundation included proper protective circuitry. There is no published circuit for Pi after the B+, but the power circuit for later versions is assumed to be similar. Inspection of the B+ circuit clearly shows that backpowering is impossible.) Neither can you power the Pi3 from a compliant hub because it will not supply sufficient current. (It was possible to run earlier Pi because their power requirements were more modest.) 

You should be able to achieve your objectives by a combination of the following 2 settings (extract from How to set up networking/WiFi ] Prevent from configuring an interface This is often done to enable the Pi to act as an Access Point (which needs to be configured using other files), while allowing normal configuration on other interfaces. Add to the end of the file (but above any other added interface lines). Use different wpa_supplicant files It is possible to configure dhcpcd to use different wpa_supplicant.conf files for a specific wireless interface. Create a file named in e.g. will only be used by will be used for any other wireless interfaces. 

Inserting commands into or attempting to load modules is unecessary (and may interfere with normal operation). should do all this automatically. You can use ds1307 if you actually have one (the device you linked uses DS3231) You can turn off if you want, but it should not be necessary. If you do want to do this you should use the command 

I have installed Ubuntu Mate on my Pi2, and it is working well, but I have some problems with WiFi. I have 2 Wi-Pi dongles, which I use with my 3 Pis. My router allocates reserved IP based on MAC. If I boot the Pi with 1 dongle it works OK. ifconfig shows 

The image shows a representation of the 40-pin Pi. Picture is actual image showing pins. All 40-pin Pi have identical layout. Even pins are adjacent to the board edge (which is opposite to the normal convention). 

What range are you expecting? What accuracy do you require? I would just measure the time of each pulse, derive the duration since the previous and invert this. If the motor runs at 6000rpm this would give 1 pulse every 10mS which should be feasible. You need to know that Linux isn't a real time OS, so interrupts which occur would affect accuracy. 

This is NOT an "Arduino LCD" - if you search you will find a number of questions about interfacing similar devices to the Pi. You CAN interface to the Pi, however this uses several GPIO pins, and you will need to provide a potentiometer to control the LCD backlight. A better option is to use a similar devices with an IÂ²C interface which only uses 2 GPIO pins, and includes a potentiometer. 

Current ALWAYS flows in a circuit. In this simple example the current flows from the (and thus back to the Power Supply). In a series circuit it makes no difference which order the components are connected (although with polarised components, such as the LED, they need to be connected the right way round). I should point out that while the article you linked is a good beginners description, it contains a number of factual errors, in particular the resistor colour code. From an purist engineering point of view the best connection would be (just to be clear the GPIO pin then needs to be LOW to light the LED). 

"I know that it is not recommended" - why do you think this? The 3.3V pin is there for PRECISELY this reason, and can supply up to 800mA. The Pi actually has an on board regulator which will perform better (and more efficiently) than any linear regulator you can add. See Raspberry Pi Power Limitations 

The Pi3B+ uses new hardware for networking, and thus needs new drivers (among other things - including a kernel which supports them and DeviceTree). It MAY be possible to update with the necessary files; MAY do this, although this has attendant risks. Jessie will soon be unsupported anyway, so you would be better to update to . 

I have 5 Pi and 10 SD Cards. These can be (and are) interchanged. There are a few limitations (some OS will not work on older Pi) but there are few limits unless you do silly things like set static IP addresses. A few things like are dependent on and keys, but none of these will affect boot and basic operaton. 

Your problem has nothing to do with only one user or starting LXDE on boot. I normally connect with then start and have noticed similar. In addition the font becomes smaller. I don't know what is happening; I note a new is loaded, and I assume it is bypassing some initialisation. Sometimes it does not restart. The only way to recover is to reboot. 

I don't have a Raspberry Pi 2 yet, but was wondering what code will produce. Many of my programs use and if I compile this and my programs will they use ARM7 code, and thus be incompatible with ARM6. (I must admit I have never studied the codesets, so don't have any idea what the differences may be.) 

will attempt to connect to the Pi as whatever user is on whatever machine you are using to - which almost certainly doesn't exist. Try 

In fact it may or may NOT work. Generally computer USB ports provide insufficient current to operate a Pi. You may get away with 500mA on a Pi Zero W, even though this is below the recommended current. The next variable is the computer. If it has a standards compliant port it will only supply 100mA without negotiation. The Pi CANNOT negotiate, because the power port has no data connection. MacBooks do comply, although many of the cheaper laptops just provide 5V with no control. 

Use which is already installed on the Pi and performs much better, because it uses the GPU. It is actually the core of the RASPBMC Media Centre. NOTE runs from the command line. 

It is still unclear exactly what you did. does not make a user . Did you login as before deleting ? You need to make the user a member of many groups to actually do anything try:- 

My mouse is now working. Unfortunately I cannot exactly describe the process, as it was a bit trial and (mostly) error. I finally gave up on the command line, and started the GUI. There was a bluetooth icon on the Panel which describes itself as:- 

The general advice not to connect to a live circuit is sound, but not always necessary or possible. Provided you exercise reasonable care it is quite safe. The most important thing is to connect in the correct order. 1. Ground 2. Power 3. Other connections. USB plugs (and other connectors designed for hot plugging) are designed to make sure this happens. One thing I would not do is plug a complete circuit into the Pi GPIO connector, as you cannot guarantee the order in which things connect. You should also avoid connecting circuits with large capacitors or inductors, unless you are sure what the potential impact may be. 

You can communicate with Arduino via its USB/Serial interface, independent of anything else. You can access Bluetooth, which uses , although whether your application will use this directly or through a service on the Pi is unclear. 

The vnc password is NOT generally the login password, and would vary by user. Run the utilty to set. Normally you should be prompted to enter the password the first time you run vncserver. Try for more detail. 

Your question is misguided. "Programming" actually contributes very little to upgrades which, in any event, are quite modest in size. The other answers have pointed out the folly of selective updates. If you want to minimise the size of your image un-install unwanted applications (there are quite a few in Raspbian which would fall into this category). This will prevent the upgrades from installing. and do NOT fall into this category. The simplest answer, if you are concerned about data usage, is DO NOT UPDATE/UPGRADE. There is no need to do so - your system will continue to operate. Upgrades tend to add new features and fix bugs, but unless you have a problem DO NOTHING. 

This is NORMAL (at least on most OS, presumably including Android). You can have EITHER ICS OR etc access to the Pi, not BOTH. It is not impossible to have both, but this requires additional software and complex configuration on the host system, and this is off-topic for this site. NOTHING you can do on the Pi is going to make it work. 

See $URL$ for my earlier answer to a question on NOOBS. Most of the issues still apply although PINN which is based on NOOBS does have some update capability. 

If you want to read binary data you need to do a bit more planning (or specify in more detail what you are sending). reads data until a newline. reads n bytes (unless you have set a timeout). So you could use if you were sending bytes in groups of 4. You need to synchronise the reading so you start at the group. EDIT __________ The data is already bytes!! If all you want to do is display the bytes (in hex) read try the following (Note I am not a Python expert - this is much easier in c) 

This is NORMAL. You can have EITHER ICS OR access, not BOTH. It is not impossible to have both, but this requires additional software and complex configuration on the laptop, and this is off-topic for this site. NOTHING you can do on the Pi is going to make it work. 

See $URL$ which describes the Pi boot process. Basically analyses the hardware and (presumably) decides which kernel to load. (The source is not publicly available). It is (or was) possible to specify a different kernel, but this is NOT used by normal images. NOTE With the new USB/Network boot options for the Pi3 the process has changed but the principle remains similar. For those interested in reading more about the new boot options Raspberry Pi boot modes