Don't do multiple vlans: If you're just going to have a couple phones at a small site (you mention about 6 machines), you don't have to do multiple vlans. Having a voice vlan is highly recommended, but not actually required. Voice and computer devices can coexist on a vlan (and, therefore, subnet) without causing any issues. But what you really need to do is make sure that you have QoS configured correctly to give the voice traffic the proper treatment. (You will need this regardless of which option here that you choose.) Have the router trunk two vlans to the switch. The switch port that connects the router would be configured as a trunk, carrying 2 vlans. The router would have two subinterfaces configured, one for computers and one for phones. Don't forget the QoS. Just configure a Layer 3 switch. I know you said you don't really want to spend money on it, but most PoE switches these days support routing, anyways! So there's a really good chance that whatever switches you're going to buy can do it with no additional cost. And QoS, too. 

This will cause all Clientless VPN users to be authenticated against LDAP. If you have users in the local database, too, then you can either (1) add those users to the LDAP directory, or (2) configure group aliases, which allow the user to select which tunnel-group they're going to login to, which in turn determines which user database (LDAP or local) will be used. Here's a link to some documentation on group aliases. $URL$ As a side note, all those commands are for management traffic only. So, ASDM, SSH, etc. 

If it were me, I'd just go with option 1, unless you have some security reasons to do option 2 or 3. But if you do have security reasons, then make sure you're configuring port-security, DHCP snooping, vlan ACLs, and whatever else to prove that you care about security. And have I mentioned QoS yet? 

Recap: So, you have two separate firewalls, each with an internet connection. You want users to go to the primary firewall and use the primary ISP unless it's down, in which case you want users to go to the second firewall and use the second ISP. Is that right? The only way I can think of to do what you're asking for involves the use of a layer 3 core switch. You would configure a floating static route (a static route with a terrible administrative distance) that points to the backup ASA. You then would establish a dynamic routing protocol between the primary ASA and the core switch. Maybe OSPF or EIGRP. Then, you would configure IP SLA on the primary firewall to track an IP address out on the internet, and inject a default route into OSPF or EIGRP when the internet is up. This dynamic route will be more preferred than the static route. This will cause your core switch to always send traffic to the primary ASA and out to the internet. If the primary ISP goes down, then the tracked IP address fails, and the default route is removed from OSPF or EIGRP. Then, the core switch installs the less-preferred static route that points at the second ASA. Then, users would go out the second ISP. But to be honest, you should not do this. Nearly anything that two ASAs can do, can also be done with just one ASA. If I were in your shoes, I'd put both internet circuits into one ASA and follow the doc that Ron posted. Then, I'd take the second ASA and make it a failover mate (if the hardware is identical) with the primary firewall. Then you won't need OSPF or EIGRP, and you'll have internet redundancy that is independent of your hardware redundancy! 

As mentioned by Ron, a quality network switch is going to be more reliable than you think. However, there might be another option for, depending on your circumstances. At most colocation data centers, you can get your internet circuit delivered on a second cable for a small up-charge. It's not a second circuit, rather a second cable for the first circuit. The provider normally have two core devices, so each cable will come off of a different core. You plug each cable into its own switch, and plug those two switches together. Those would be unprotected switches, so lock them down good! Then, your two Cisco 3850 devices (which are actually switches, aren't they?, unless you mean 3851 routers?) each plug into one of your switches. If you combine that with HSRP, you should have the redundancy that you're asking for. 

If all that doesn't work, then update your post with the output of a from your firewall, as well as the IP address of the Oxidize server, and we'll try to provide some other advice. 

When you're performing a traceroute, what you're really doing is triggering each router in the path to send you some 'TTL Expired' packets which will reveal the router's presence. The reason you seem to always loose that second packet is because many systems will rate-limit the number of TTL Expired that they generate in a particular time frame. If you could increase the wait time between queries, it would probably respond to each one. If you could decrease the timeout of a failure, that router would probably miss even more responses. This is not because the router is failing in any way, but it's choosing to rate limit its responses to you. 

Craft your NAT statements differently (or remove the applicable NAT) so that the VPN clients do not have a static NAT when talking with location A. This would effectively cause the traffic to get NATted and would break it. Apply the command to the group policy of the tunnel. This ACL only gets evaluated in the inbound direction, when traffic arrives from the client. It doesn't affect traffic going out to the client. Change the default way the ASA handles encrypted traffic, and use your regular ACLs to do the job. 

I know this is not the answer that you're hoping to hear, but the answer is to manage your ASA in-band, not out-of-band. The ASA does not have VRF capabilities, meaning that the Man1/1 port (or whatever interface you designate, like Gig1/2) does not have a separate routing table, but rather functions like a regular interface and uses the regular routing table. This can cause several issues in the way the device processes certain traffic flows. Your best path forward is to shutdown your Gi1/2 interface, and remove the nameif. Then, add a static route for the 10.10.5.0/24 pointing to 172.16.98.1 like everything else. All your problems will then go away except your nagging desire to manage the firewall on the management network, "like everything else". The thing is, your firewall isn't like everything else. Management networks are designed for non-network devices (meaning servers, storage, whatever else) and probably layer 2 switches. Layer 3 devices like routers and firewalls use their IP addresses to make behavioral decisions, and are much more effectively managed with a loopback address, or an in-band IP address. 

Yes, a Cisco 2821 can do BGP. But as Ron mentioned, it will have a limited amount of memory available to hold prefixes that BGP learns. If you're trying to use two ISPs for internet multi homing, then there are 3 ways to do it: 

A GRE tunnel A VPN tunnel Putting DHCP on the router Deploying a local DHCP server Removing the NAT, or at least modifying the NAT so that traffic between clients and DHCP are not NATed 

You should definitely test this solution in the lab before implementing it so that you're comfortable with how it works, and so that you make sure you've got all your ACLs covered. 

When in transparent mode, the ASA performs some layer 2 validation. One thing it validates is that the MAC address and IP address of a packet flying by are correctly correlated. That is to say, that the ASA needs to believe that the MAC and IP belong together (think like an ARP table) in order for it to pass a packet where said MAC and IP are found together. If the firewall believes a packet is using the wrong MAC address for a given IP address, then it will drop the packet. If the ASA does not know the correct MAC for a given IP address, it will trigger an ARP request to find out. How does it do that? By using the BVI address that you assigned. Although the software developers could have written the code to simply not trigger an ARP, this feature is very important for security reasons (it is a firewall, ya know!) and for things to work correctly. Therefore, I think the software developers simply decided instead of writing a bunch of logic to do different things in different scenarios, they simply decided that you must configure the BVI IP before the firewall will function at all. That makes the software code a lot easier to develop and maintain. Since a single bridge-group loosely equates to a single firewall, I'm only guessing that monetary revenue might have something to do with it. If they let you create however many you want, then you may not need to buy as many firewalls. However, there is probably an aspect of software development going on here, too, with how the bridge group numbers are held in memory, and how the connection tables correlate with the bridge-group numbers, etc. The more number of bridge groups they let you create, then the more RAM it will take up when all those connections are stored in the RAM with more bits taken up by the bridge group numbers. Nope, I don't know of any other solutions to independently map 100 inside vlans to 100 outside vlans, and have layer 3 filtering abilities on all 100 pairs. Nope, configurations are not shared between contexts. So any , , configs are constrained to the device context in which they are configured. 

Therefore, pick the best redundancy that you can with what you have. Or else, get some newer routers. (Those 2821s are EoL!) Regarding the 890 router doing dual wan, all modern Cisco routers can handle dual wans, but it depends on what you're trying to do. The 890 will not do WAN load balancing, but it will certainly allow you to connect two WAN circuits (with ethernet handoffs) and use them both based upon dynamic routing, floating statics, or IP SLA. It will not allow you to use one WAN for certain TCP ports and the other WAN for some other TCP ports. That's SDWAN. 

I see that when the traffic goes south, the TSval of the packets rolls over the 2^32 mark and starts again at 0, but the ASA is ACKing back a TSecr of a very high number. It looks like you were hitting Cisco bug ID CSCuq80704. You were running 9.6(2), which was an affected version, and 9.8(2) was a fixed version. $URL$ 

There are at least three ways I can think of to fix this issue, and I would attempt a solution in the following order: 

I did not actually test this in a lab, but it should work in real life. I chose not to do the VPN1<->VPN2 NAT on the HQ, although you can using . In order to keep the HQ config more simple, I have the spokes do their own NAT towards each other. Because of the PAT on VPN2, no traffic will be able to enter VPN2 unless it originated from there. I assume that's what you wanted. If not, just create a twice NAT (a.k.a., A manual NAT) higher up in the order to do something different, instead. 

Specifically to number 3, here are some more details: By default, a Cisco ASA will treat any successfully decrypted VPN traffic (any tunnels that it terminates) as inherently trusted, akin to security level 100 (but the traffic doesn't really have a security level). What I would do in your situation is disable that default behavior so the VPN traffic is subject to all normal ACLs just like normal traffic. To do this, there are 3 steps: