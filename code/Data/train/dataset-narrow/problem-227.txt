You state Netgear switch however what you describe is for L3 routing. If configured correctly the router will respond to an arp request which is broadcast onto the lan segment with the mac address of all FF's but the router will only reply with its own mac-address if the ip it finds encapsulated in the frame is configured on one of its interfaces. If you are still telling your host device to send packets towards a different ip of 192.168.0.1 that effectively doesn't exist then it will not work. 

Make sure your network statement within the dhcp block of config covers these addresses in terms of the subnet mask it is using and the addresses should get assigned going fwd. 

Whilst I understand that product recommendations are off topic can anyone help by explaining what the critical factors are when looking for SFPs that are going to be compatible with a new service? Is wavelength a defining factor that should be considered/matched or should anything else be used to guide selection? 

Sorry I am new to 10G BASE-SR and I can't seem to find a good resource that can confirm if an SFP supported in a Cisco Nexus 5548UP will be compatible with a new service The new service is described as '10 Gigabit Ethernet LAN PHY IEEE 10G BASE-LR10.3125 Gbps +/- 100 ppm 1310nm' Ultimately I need to understand if a 'cisco sfp-10g-sr' for which the transmitter wavelength spec is described as 850nm is usable. 

Security: Security isn't itself achieved by creating a VLAN; however, how you connect that VLAN to other subnets could allow you to filter/block access to that subnet. For instance if you have an office building that has 50 computers and 5 servers you could create a VLAN for the server and a VLAN for the computers. For computers to communicate with the servers you could use a firewall to route and filter that traffic. This would then allow you to apply IPS/IDS,ACLs,Etc. to the connection between the servers and computers. Link Utilization: (Edit)I can't believe I left this out the first time. Brain fart I guess. Link utilization is another big reason to use VLANs. Spanning tree by function builds a single path through your layer 2 network to prevent loops (Oh, my!). If you have multiple redundant links to your aggregating devices then some of these links will go unused. To get around this you can build multiple STP topology with different VLANs. This is accomplished with Cisco Proprietary PVST, RPVST, or standards based MST. This allows you to have multiple STP typologies you can play with to utilize your previously unused links. In example if I had 50 desktops I could place 25 of them in VLAN 10, and 25 of them in VLAN 20. I could then have VLAN 10 take the "left" side of the network and the remaining 25 in VLAN 20 would take the "right" side of the network. Service Separation: This one is pretty straight forward. If you have IP security cameras, IP Phones, and Desktops all connecting into the same switch it might be easier to separate these services out into their own subnet. This would also allow you to apply QOS markings to these services based on VLAN instead of some higher layer service (Ex: NBAR). You can also apply ACLs on the device performing L3 routing to prevent communication between VLANs that might not be desired. For instance I can prevent the desktops from accessing the phones/security cameras directly. Service Isolation: If you have a pair of TOR switches in a single rack that has a few VMWare hosts and a SAN you could create a iSCSI VLAN that remains unrouted. This would allow you to have an entirely isolated iSCSI network so that no other device could attempt to access the SAN or disrupt communication between the hosts and the SAN. This is simply one example of service isolation. Subnet Size: As stated before if a single site becomes too large you can break that site down into different VLANs which will reduce the number of hosts that see need to process each broadcast. There are certainly more ways VLANs are useful (I can think of several that I use specifically as an Internet Service Provider), but I feel these are the most common and should give you a good idea on how/why we use them. There are also Private VLANs that have specific use cases and are worth mentioning here. 

Can how can I most efficiently failover between tunnels in this scenario if the destination IPs are not reliable for the static ipsec configuration? How would I pre-empt the primary tunnel once the endpoint becomes available? 

I have a requirement to provide an accurate means to demonstrate line performance over a flat layer2 1Gb point-to-point Ethernet circuit, approx 100 miles apart that seemingly goes through a number of hops over the distance. The business requirement will need to demonstrate performance with an accuracy of min 8ms latency. The link will carry voice and data traffic whereby the service SLA should guarantee 1000Mb bandwidth. What are the known accurate methods of measuring performance given these requirements? I am aware of a number of metrics available that might possible form a test strategy but having Googled a bunch of info it can get overwhelming and i'm unclear of whether software like iPerth should be used, what's the benchmark for this scenario etc? 

I have a network with resilient gateways whereby Customer sites use a default gateway to reach the internet edge routers and the primary route for traffic uses a lower metric. ipsec tunnels are initiated from vpn concentrators behind the edge routers and are statically configured to the destination tunnel endpoints which are 3rd party data centers. I am not able to use a dynamic routing protocol with the 3rd party. 

In my lab network I have a Juniper MX 80 configured as MPLS router. On one site there is a customer connected (simulated by a single PC) and on the other side is an MPLS network. I use tcpreplay to generate traffic load. The PCAP file I use has been prepared as follows: 

This however does not work (no default route is advertised). Preferred solution is to use a dummy static route like this which is actually working. 

Obviously SW1 will become root. Suppose now, SW2 was changed to MST mode and SW1 is still running RSTP. MSTP is fully backwards compatible to other spanning tree protocols. With MSTP, the extended system is becomes the MST instance number, as it would make no sense to use the VLAN here. Many VLANs can be mapped to a single instance. Just enabling MSTP without any configuration will create the MST instance 0 (!) and map all VLANs to it. Now the bridge IDs would look as follows: 

I'm not a POE expert but I don't think this is possible. A PoE switch or router negotiates the power with the device on the other end of the cable. To connect two cameras to the same cable, you would need some kind of switch, especially if you still need IP connectivity, which would be this device in the PoE switch's perspective. The cheapest solution might be another switch and two PoE injectors. 

Working this out in my head I believe it should react as follows: When blue link dies the CE will stop sending/receiving BPDUs from the blue interface. Default RSTP hello timer is 2 seconds. It waits for three missed hellos before calling that link "dead". Once three hellos (6 seconds) have been missed it will then re-establish the STP tree and age the MAC addresses. This is basically option 1 you've stated above except the way I've read the comments and your original post it sounds like you want the PE to participate in STP. I'm suggesting allowing the customer to build its own tree between all CEs. Your network should fail over smoothly, and the client network would follow suit a few seconds later. This feels too simple to be the answer...but that's what I can see based on your write up. 

You must commit replace with an empty config file. This will wipe the config out completely. Also keep in mind the admin context. You'll need to go into the admin context and commit replace that config as well if you want to reset the settings inside the admin context. 

I find that an easy way to calculate this is if you recall your mask combinations against their powers of 2 within the binary 8 bits of an octet: 

The problem is that the peering address range that the 3rd party is using periodically changes and brings down the primary tunnel and a manual switch to the secondary tunnel is being cumbersomely carried out. 

Having attempted to research this Iâ€™m still uncertain of where best to place firewalls in an existing network due to needing to retain a common vlan between 2 core sites. The network has the following requirements: 

Is there a better way of achieving this instead of having to translate and explicitly send everything via the ASA firewalls between the internet access, dmz and lan users? I would prefer to have the firewalls in the direct path between the routers and switches to simplify their configs but not sure how else I can retain the HSRP communication between sites if placed other than depicted in the diagram? Does it actually matter where the ASA sits from a security perspective? 

In order to get a full "health profile" of a link you'll need to consider several different metrics. 

This could be cleared up quite nicely by using a one-to-one (or static) NAT. Your interfaces would be set up the same as they currently are, only difference is you wouldn't bridge the WAN/DMZ interfaces. The only thing this will not accomplish is allowing you to speak from the LAN address space to your external address space. I assume the issue there is perhaps a DNS request is returning the external address? If that's the case then you could change your BIND config to include two different views - an internal and external - to provide different returns based on the source of the DNS request. I believe the only other solution - to get everything that you're asking for here - is to have both ISPs assign you another block of addresses that you'd use on your DMZ interface. As for the hardware failure bit, this should work fine as long as your interfaces are connected in the same L2 area as the fist firewall. It sounds like it's active/passive so this should be fine.