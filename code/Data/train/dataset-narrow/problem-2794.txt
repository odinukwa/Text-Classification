Costs I can't speak on personally, and I don't know if anyone who is a licensed developer can either. But there are some requirements that I do know of. I don't imagine it is that expensive because from what I saw around the internet the development kit for the Wii is under 5k. What will cost you however, is having a brick-and-motar location dedicated to your studio's work. Nintendo requires this of it's licensees. Following that, they also request back financials so that they can ensure that you would actually have the resources to bring your game to market. If you think you qualify, you can fill out the application to become a licensed Nintendo Developer. 

Off of the top of my head, the first place I could imagine a list of that type existing is at the IGDA Japan site. $URL$ 

You could even specifically target accounts that share data and directly decrease the benefit that they gain when interacting with each other. This would encourage interaction with other players, but it can be circumvented with proxy servers and it would be ill-advised depending on your target audience. The other way that think would work is having gameplay so engaging that people can't really manage to play two separate accounts and still keep up with everyone else. 

There are a few different ways to handle this, and many solutions have their own merits. I will give my opinion of the ideal way to handle this. First, it's important to understand that no matter how complicated your system is, someone who is sufficiently invested in gaming the system (with appropriate knowledge) will figure out a way to game it. To seriously handle this issue, if it is really an issue for you, you need to handle this in both the design and technical implementation of your game. 

The Kinect for Windows runtime versions 1.0, 1.5, 1.6, and 1.7, allow you to develop commercial applications. Check the licensing documents for any specific terms, the legacy SDK did not allow you to develop commercial applications. Be aware that the Windows runtime versions do not support the Kinect for Xbox 360 device. You can find the specific information I'm referencing in the Kinect FAQ under the heading 

I would get them from the sites of the people that they are credited to. I say this because I see a font that I use (Museo) and I know that the font is free, but when compared to the license given at the Font Squirrel site it is different (and kind of unclear) than the one on the creators site. Checked a few more and the licenses seem alright. But I still recommend cross-refrencing the license available at the original creator's sites just to be safe. 

I recommend that first, you really evaluate your concept. What are the issues in funding it? Why do you need someone to fund it, are you capable of building it yourself (or with some friends) sans-funding? To put it the best, and nicest way, I can. No one, will fund a AAA quality game (if this is what your concept is in your head) if you don't have a track record of quality selling games. So what do you do if you are in that boat? The only way to get funding is to make, well... pretty much all of the game without funding. Then you could get people to possibly reimburse you and handle marketing (but you'd be giving away most of your IP in the process more than likely) but if funding is what you need that's where you are. In the event that you need funding to pay people to develop your idea because you are just an idea guy, you are going to need to learn some if not all of the skills (to some capacity) necessary so that you can make the demos that attract people to work on your titles. But yes, this question has been asked time and time again. I recommend you read.. well everything here: Sloperama Game Development Advice FAQ 

While Unity doesn't come with any 3D modeling tools, you could (with a bit of work) achieve that visual style just by using the primitives built into it. Be advised, there are a variety of other 3D Modeling packages that you can use (other than Maya), that are far more affordable (see: free) for a new 3D modeler. 

Naming any business in the United States can be a drawn-out, expensive process. Oh, and IANAL. The very first thing, is that you are looking in the wrong place. You should be checking the trademark registry at the United States Patent and Trademark Office Website. There are a few things to consider is the class, multiple marks can exist with the same word because you register per class. While one company can hold all of the classes for their name, it's not always likely because the fees can get up there. But it doesn't stop there, because when you file for a trademark it is published for opposition. If someone has been using the name in commerce before you, they can have your application ended. With the international nature of business you may even face external (to the US) opposition. The solution to this, is to get a lawyer who can work with you along the path, including looking up common-law trademarks around the country, and possible places where you may reach conflicts before registering. The USPTO offers no service (aside from the basic registered mark check) for looking up this information. 

The first step, is of course, finishing your game. The publisher rejection rate is high enough for even established professional game developers, with complete projects. Sloperama Lesson 11, Section V You want to essentially do everything in your power to be as noticed as possible. Publishing is very risky, even when your game is complete, and you want to have everything done so that your potential publisher won't feel like their money isn't wasted. Following that of course, you just need to prepare your pitch, and then get in touch.Tom Sloper has an excellent article here about the game submission process. 

For a number of reasons I have chosen to use Microtransactions to monetize my current project. However, like all make or break features I am concerned about how they are received in-game. Microtransactions seem to present a unique problem in my mind though. I believe that just giving people currency will skew my results, and it wouldn't actually represent how people feel about how things are priced (in the same way that I am more apt to waste money when I didn't have to earn it). With that in mind, how can I effectively, and meaningfully market test the implementation of Microtransactions in my game? 

While I doubt you will find anything that lists games that are in production stages. (The Industry usually remains a bit more tight-lipped about such things than the film industry does) The rest of what you are looking for is handled relatively nicely by MobyGames EDIT: Almost forgot, GiantBomb Also has the same sort of Data. 

No, they don't own your game. But they do own their engine. In Unity's EULA you can find relevant information about how the license between the developer and Unity works out. 

Bethesda specifically asks for experience with their development tools when applying to a position with them. So, if you want a job at Bethesda, successfully completing a mod project is a great step to take to put your foot in the door. If you don't want to work for Bethesda, a successful mod project still goes a long way to help you. Just think of how popular Skyrim is, if your mod works out that's considerably more eyes on it than many games before it (especially with how Bethesda is promoting modding). If it's awesome, you'll get not only a lot of fans for your own personal work, but even possibly studios looking to bring you in. (To feed off your popularity or just for your talent) 

The second phase is design side. While some benefit is to be expected, you need to sufficiently disincentivize this form of cheating with your gameplay. There are quite a few ways that you can go about this, there are the wholly annoying ones of very short timeouts (which may be necessary). But I feel the best way is by appropriately adjusting the benefits between two accounts. 

So whomever is doing the terrain gets those files, and I start making quick proto-models in sketchup. I don't focus on getting anything perfect, because frankly someone can do it better and speed / execution of concept in prototyping are my goals. And that is my path from Sketching -> Prototyping. 

Of course, making a cool demo never hurts. For more information on applying for a job in the games industry, I turn to Sloperama: $URL$