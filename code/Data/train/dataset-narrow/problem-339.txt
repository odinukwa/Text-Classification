If you look at the type 1 Router LSA for an ABR or ASBR it will have the E flag set if it is an ASBR and the B flag set if it is an ABR RFC 2328 A.4.2 page 206 

Another reason may be that PPPoE is a tunnelling protocol which is useful for security and hiding an ISPs infrastructure. A tunnel is created between the end user CPE and ISP’s centralised BRAS. The network in-between is hidden from the user and the user cannot interact with other users directly over the ISP’s distribution network until it reaches the BRAS where policy may be enforced. This is also useful where the connection to an end user passes over another service provider’s network before it reaches the contracted ISP. The tunnel can make it appear as though there is a direct connection to the contracted ISP. For example, in the UK, BT are regulated by the government and must provide wholesale services to other ISPs. An ISP will buy a DSL connection to an end user’s home from BT and BT will backhaul the connection to the ISP at a handover point. The ISP then provides connectivity to the Internet, DNS, email etc. The PPPoE tunnel hides all of this complexity from the user. All they see is a single hop to their ISP. 

I'm not sure I know what you mean by obtaining an address outside of IANA as there are no means to do this, unless you mean to simply use a public address without it being allocated to you. If this is what you mean, then you can use any IP address on an internal network if you control the hardware making the routing decisions. Connecting to the public internet is another matter. ISPs filter BGP updates with their customers and only allow them to advertise address ranges that they know are allocated to them, so if you cannot advertise the address into BGP then traffic cannot route to you so, so the address would be useless. 

You may be somewhat misinterpreting what you've read. Most (recent) wifi radios are good at rejecting adjacent channel interference, so your concern shouldn't be with radios on different channels. An AP on channel 1 will not cause much interference with another on ch 6, for example. The same goes for clients. Edit: When two workstations are associated with the same AP, the AP coordinates their transmissions using CSMA/CA. So they don't interfere so much as they compete for available time slots. The more clients you have, the more competition there is for airtime and throughput decreases. Co-channel interference can occur when there are two nearby APs on the same channel. In this case, the APs are not in sync, so clients associated with AP1 are not in sync with clients associated to AP2. The clients will interfere with each other and the other AP, causing deferred transmissions, retransmissions, etc, all taking a big bite out of your throughput. Using nonstandard frequencies (like channel 7) is just wrong and will cause everyone problems. Also, +1 to everything @RickyBeam said. 

You should make the wireless link its own layer 3 subnet. That will also help your link latency and saturation problems. 

I watched the video and thought it only explained a very specific case of AR. A stateful firewall enforces the TCP protocol rules. If, for example, I want my internal users to browse to the Internet, but no one from the Internet can connect to my internal systems, I can use a stateful firewall to enforce the rule that when packet is received from the Internet, it must match an already existing connection. That is, the internal and external devices have already established a TCP connection by following the protocol rules known as the "3-way handshake." Further, the firewall doesn't allow a packet with the SYN flag set to enter from the Internet (because I don't want connections originating from the Internet). The firewall enforces these rules by monitoring the "state" of each data flow. The problem of asymmetrical routing can occur when I have two connections to the Internet and two firewalls. Packets may leave through firewall A, but return through firewall B. In that case, firewall A sees the SYN packet go out and will monitor that state of that connection. But when firewall B sees the SYN-ACK reply packet come in form the outside, it has nothing to match it against. It doesn't know about the packet that firewall A saw, so it treats the SYN-ACK packet as a protocol violation and drops it. In the 2nd solution, all packets pass through the firewall, so it can correctly monitor the state of each connection. 

The Netgear switches appear to abandon GbE negotiation on PCS PMA pairing failure and fall back to Fast Ethernet as explained above. 

Normally, a number from the native range is translated from the telephone number to the SIM's IMSI number. Alien number are recognized by their prefix. With MNP activated, a translation directory is introduced where each entry translates to a carrier entry - usually there is a central directory that's copied/updated by all carriers on a frequent basis. Numbers not in the directory are still recognized by their prefix. Technically, this is somewhat similar to routing table entries in packet networking. Called numbers are first checked in the translation directory, alien calls are routed to the other carrier, internal calls are translated to their IMSI no. and routed locally. Not usually - some countries do it this way but most use a central database. 

As you've already stated, VXLAN is L2 tunneling over IP. It's a solution to use any L3 network for creating a L2 segment. While this is also possible with other protcols, VXLAN doesn't require additional infrastructure or special transport (given IP is available) and it can also use a single tunnel for up to 16 million subtunnels - with a large infrastructure, the latter can make a great difference. 

A simple router is stateless, ie. it just looks at the current packet and decides where it should go. A NAT router translates the source IP address, the destination IP address (aka port forwarding), or both. Usually, it also translates the according port number (PAT). In order to translate the addresses/ports back for the reverse direction, it needs to be remember what connections it is currently translating. 

On a Windows PC, odds are you are not capturing the Wi-Fi control frames -- most Wi-Fi drivers don't let you switch to "monitor mode." The average number of control frames you need is three to five. Under that assumption, the large number of packets you are seeing are seeing various process on your PC making connections to various servers. A lot depends on the software you have on your PC. Depending on the version, Windows might check for a valid license, software update, etc. It also probes MS servers to see if in fact you do have Internet connectivity. Your antivirus might also do check for updates. Email and cloud services like Dropbox can also start connections when there is Internet connectivity. A full discussion of those applications would be better suited for Superuser, as operating systems and applications are off-topic here. 

That depends on the model of access point and the amount of bandwidth each user requires. Cisco APs will allow up to 256 clients to associate, but normally you would saturate the channel long before then. 

A bit of history: You’ve probably all heard about the early days of packet networking, including ARPANET, the Internet’s predecessor. In addition to the U.S. Defense Department’s efforts to create networking protocols, several other groups and companies were involved as well. Each group was developing their own protocols in the brand new field of packet switching. IBM and the telephone companies were developing their own standards. In France, researchers were working on their own networking project called Cyclades. Work on the OSI model began in the late 1970s, mostly as a reaction to the growing influence of big companies like IBM, NCR, Burroughs, Honeywell (and others) and their proprietary protocols and hardware. The idea behind it was to create an open standard that would provide interoperability between different manufacturers. But because the ISO model was international in scope, it had many competing political, cultural and technical interests. It took well over six years to come to consensus and publish the standards. In the meanwhile, the TCP/IP model was also developed. It was simple, easy to implement, and most importantly, it was free. You had to purchase the OSI standard specifications to create software for it. All the attention and development efforts gravitated to TCP/IP. As a result, the OSI model was never implemented as a set of protocols, and TCP/IP became the standard for the Internet. The point is, all of the protocols in use today, the TCP/IP suite; routing protocols like RIP, OSPF and BGP; and host OS protocols like Windows SMB and Unix RPC, were developed without the OSI model in mind. They sometimes bear some resemblance to it, but the OSI standards were never followed during their development. So it’s a fools errand to try to fit these protocols into OSI. They just don’t exactly fit. That doesn’t mean the model has no value; it is still a good idea to study it so you can understand the general concepts. The concept of the OSI layers is so woven into network terminology, that we talk about layer 1, 2 and 3 in everyday networking speech. The definition of layers 1, 2 and 3 are, if you squint a bit, fairly well agreed upon. For that reason alone, it’s worth knowing. The most important things to understand about the OSI (or any other) model are: 

First, does R3 support BGP and does it have enough RAM to support all the routes on R1 and R2? If not, then BGP isn't an option. Second, do R1 and R2 receive a full Internet routing table? If so, then redistributing several 100k routes into OSPF would not be wise if at all possible. In this case I'd recommend using iBGP. On the other hand, if R1 and R2 are only receiving default routes, or a small number of routes, then redistributing into OSPF would be the preferred option and would allow the routing information to reach other OSPF only routers in the internal network so that they can make more informed routing decisions. 

With OSPF (a common Enterprise link-state protocol), Each router has a complete view of the topology for the areas it is associated with. In smaller networks, all routers can belong to the one single area (commonly area 0), so all routers would have full topology information for the entire network/AS. As the network grows, the network can be split up into separate areas to aid scaling. There are two levels of hierarchy, area 0 is the backbone area and all other areas must be connected to the backbone. A router can sit solely within a single area (all its interfaces are assigned to the area). In this case it will only have full topology information for that area. Areas are interconnected to the backbone by routers which have links in different areas (one of these must be the backbone area). These routers are called Area Border Routers and provide a service to the areas it is connected to of summarising the topology information from one area into another. For example, if you have area 1, connected to area 0, connected to area 2. 

Switching a frame through a different speed port can't change the frame size. The sender will use what it is configured to and what it chose at that moment. The frame will stay that way until it is delivered or dropped (with the expection of tags). Standard frames will go to a port configured for jumbo frames just fine. Jumbo frames delivered to a port with standard frame size will be dropped, increasing the oversized counter. Best practice is to run jumbos in a separate VLAN to avoid problems. 

VLANs separate traffic into distinct layer-2 segments - nodes in separate VLANs can't 'see' each other on the Ethernet network. If your network is limited to layer 2 switches only, no communication between different VLANs is possible, only within each VLAN. To enable nodes from different VLANs to communicate with each other you need an IP subnet for each VLAN and a router. It is usually on this router that you control the inter-VLAN traffic. The router can be a layer-3 switch or a 'real' router. On the router, you can connect the VLANs with a dedicated port each or you can define one or more trunk ports were frames are tagged, depending on their VLAN ID. The trunk ports can then carry frames from different VLANs. In extreme, you could configure all VLANs on all switches (with the edge ports assigned as required), use all inter-switch links as trunk ports and add a router with a trunk port anywhere in the network, let's say on switch 3. However, from the traffic flow perspective this would mean that inter-VLAN packets from PC 6 to PC 7 would need to traverse across the entire network to switch 3 and the router connected to it, and back across the entire network again. This would not be considered a good design. The router should be located central to the switches, so that paths are kept short and unneccessary L2 hops are avoided. Ideally, each switch is connected directly to the router or with just one hop in between (roughly spine-leaf). 

Consumer grade routers generally have this distinction, although some enterprise SOHO routers also have this distinction. WAN stands for Wide Area Network and this is the network that connects your router to your service provider. The WAN port usually connects to a DSL modem, cable modem or fibre media converter. LAN stands for Local Area Network and this is the network that connects the devices within your home/business to the router. The LAN port or ports usually connect to PCs, printers etc. LAN ports can also connect to wireless APs to allow laptops, smartphones, tablets etc to connect to the LAN. The router then routes between the LAN and WAN network, applying NAT and firewall policy in the process. 

No, this would not work, each VLAN is a separate broadcast domain. Each VLAN has its own MAC address table which the switch uses to forward traffic at L2 between the ports that are in the same VLAN. Each VLAN also only contains the ports that are assigned to that VLAN. Firstly the ARP from the PC in VLAN 100 would not be forwarded to the PC in VLAN 200 (separate broadcast domain), so the PC on 192.168.100.2 would not be able to resolve the MAC address of the PC at 192.168.100.3 Secondly, even if you created a static ARP on the first PC for the second PC, VLAN 100 does not contain the MAC address of the second PC. If you tried to create a static MAC entry in the MAC table of VLAN 100 for the second PC you could not as the port the second PC is connected to is not in VLAN 100. In order to communicate between VLANs, you need to configure routing. This can be done on a L3 switch or router. You would of course not be able to route between two networks with the same network address (on the same router) as Cisco routers do not allow you to configure the same network on two ports in the same VRF (Juniper routers may allow two interfaces on the same network in the same VRF, but this is not the norm). The only way to do this would be to physically connect a port from VLAN 100 into a port from VLAN 200, to bridge the two VLANs together. Of course, you would never do any of this in real life. 

A dual band router just means it has radios that operate in both the 2.5 GHz and 5 GHz band, Some can do either/or, while others can use both radios at the same time (meaning it can have clients on either band). This doesn't affect the channel spacing requirements. 

No, you can't do it. Unlike an audio or cable TV cable, UTP Ethernet has a transmit pair of wires and a receive pair. If you were to combine the transmit pair from two devices, the signals would interfere with each other and the receiver on the other end would be unable to decode the signals. 

Ports are an individual parameter of both UDP and TCP, so yes they are different. Because each transport protocol has its own stack, they operate independently. To answer your second question, unless you are trying to stay within the OSI or TCP/IP model, you don't need a transport protocol -- or you can make up your own. You can use any mechanism you like to multiplex connections. Ports are just one such mechanism. 

It sounds as if you've duplicated subnets somewhere. You can't have overlapping subnets on two different VLANs. Check to make sure that VLANs 1, 20 and 50 are all different subnets. I assume only the master switch has addresses on the VLAN interfaces. In that case, you should be able to ping from the master. You either have a trunking problem, or your addressing is wrong -- which might explain the first problem. Posting the master switch configuration would be helpful to find the problem.