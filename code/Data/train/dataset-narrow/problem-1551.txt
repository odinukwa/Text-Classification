Ok, I swear I know how to do this! However, it appears to have slipped my mind, and it's starting to frustrate me that I can't remember... ;) If I install CentOS 6 without the Anaconda installer it will install a "minimal" install by default. However, the minimal install is missing basic utilities such as wget, and I would like to install the "basic server" profile onto it after-the-fact. So, to summarize: How do I Install the "Basic Server" Profile onto a "Minimal" Install of CentOS? 

Notice how the command given to xinit uses "--" in-and-of-itself (before the IP)? Well, xinit complains about it: 

Unfortunately, as expected it's only using the latter regex line, and ignoring the first. How can I comment out more than one line in a file using file.comment? 

However, I am looking for a regular expression that does the same thing. Specifically, find all of the words in any order on a line... 

I would prefer not to change the permissions for security reasons. Has anyone done log monitoring of using Zabbix? And if so, how? 

There are so many options for how to do this. My recommendation is to use the flag from to search through the process name for your file. For example: 

A client of mine decided to go ahead and move from a self-signed certificate to a commercial one ("GoDaddy Standard SSL"). The first service I wanted to move to the commercial SSL cert was Webmin/Usermin... However, upon migrating to the new SSL cert and restarting Webmin, I got the following error: 

Basically it pings the SSH server once per second until it can connect, then it mounts the SSHFS share. My question is: Is there a more direct and less "hack-ish" way to make "/etc/fstab" wait until there is an active network connection before attempting to mount "/home"? An alternative idea I had, was adding the "sshfs root@10.0.0.200:/home/ /home/ -o transform_symlinks,allow_other,nonempty,hard_remove" line as an "post-up" script in "/etc/network/interfaces", but that still feels wrong. Environment: Server OS: Ubuntu Server Edition 10.04 Client OS: Ubuntu Desktop 10.04 

If anyone has this problem in the future, this is how you repair it. You may end up with more than a few duplicates, be that's better than losing an important email... To find the messages that got queued up, run: 

Then fix GRUB, /etc/fstab, etc... Assuming your "OLD-SERVER" has SSH access, this would (mostly) work... I've used this method before to clone physical machines... 

We recently purchased a refurbished Dell 2950 II to use as a development box in our lab. After installing the OS (Debian Wheezy) and booting for the first time, I received the following errors in the DRAC, and the host reboots unexpectedly: 

Now on my switch, lets say that I have the port that the aforementioned server connects to, set to VLAN 4... Who wins? What are the packets tagged as, as viewed by the rest of the network? 

With some work, would it be possible to end up with a single 900mbps pipe between the two building using this method? Theoretically, the APs should simply forward the packets across and reassemble them on the other side in such a way that the switches shouldn't even know that there was an AP there to begin with. 

(Especially note the section, as that's the relevant MAC address.) You also want to edit the interface specific configuration file, e.g., , and remove or update the following line: 

Whenever I create a new user in CentOS 5, their home folder is automatically given the UGO setting of "755", how can I change the default to "700"? Also, the server is technically ClearOS, but it's based on CentOS. 

Bear in mind, FreeIPA is largely Redhat only, and would take a good bit of work to get up-and-running on Debian/Ubuntu/whatever... $URL$ 

The standard way to setup a central "/home" directory on a Linux workstation is using NFS. The problem is that I don't like the lack of real security in NFS. So instead I want to try to use SSHFS. SSHFS in-and-of itself works fine, the problem is with mounting it at boot. If I add a line to "/etc/fstab" for the SSHFS share, the workstation complains that it can't contact the SSH server. This is true because the "/etc/fstab" lines are executed before networking is actually up! Right now I am using the following init script to mount "/home": 

One option would be to go to a website like this: $URL$ Load this website both pre-sshuttle and post-sshuttle and compare the two. See if it changes, if it does, then that means everything is working. Edit: Wow,I can't believe I completely missed the second line...? In that case, it's probably not working, are you running the command as root? Also, try it without "--dns". 

I would like to create a trigger in Zabbix to alert me anytime a error appears in a CentOS 6 server's file. I've already tried creating a basic log scrape. E.g.: 

Also, be sure to clear your browser's cache... The process is different for every browser, so if you don't know how, just leave a comment with your web browser or choice... EDIT: Added the second command, it may not be the most secure thing in the world, but it will let us work backwards from a known-working state... 

And yes, the script runs fine if you just execute it at a shell prompt. Any help would the greatly appreciated. Thanks! 

I passed the error to the audit2allow utility to create a rule to allow it, but when I try to enable the rule, I get the following error: 

No promises because I've never had to do this myself, but they should work. Also, I would put my money on the KVM solution, personally... $URL$ 

When attempting to visit the Status > RRD Graphs page of pfSense, I am greeted with a blank page... Most likely due to PHP being unable to complete the request... I am unsure how to repair this. On Linux I would usually run something akin to the following to discover the problem, but I can't do this on pfSense (AFAIK): 

It's simple, easy to read/remember, and get's the job done right. This is actually copied from my production web server, so I know it works. There are docs on Apache redirects available here: $URL$ And I just tested, and typing $URL$ redirects correctly to $URL$