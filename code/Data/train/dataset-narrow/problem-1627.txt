I've got an Avaya 4624 IP VoiP phone that I've ordered a power supply for, but it's still likely a week away, and I'd like to test now. I can't find the power requirements anywhere. I was hoping someone reading this might have a power brick to these things and be able to give me the stats. Thanks! 

Alright, your first step should be to evaluate what you really want, and create a backup plan before you create a backup solution. The dog gets tired of being wagged. If I were in that situation, here is what I'd do. If the machines have been created in kickstart, and are well managed, and you can recreate them from documentation, great. If not, do semi-annual images of them onto USB drives. You can use clonezilla and be done in a short time. This will give you relatively rapid turnaround if one of the machines catches on fire, or whatever. You're going to want regular backups of the configuration and data as well. Without knowing how much data that is, I would say evaluate the needs of each individual server, and determine what your backup destination will require. Once you have that, you get a much better idea of where you can put it. Evaluate. Plan. Build. Test. In that order, please. 

I have used external USB DVD drives to install DVD media, but the better answer is to pick up (or make) a netboot CD that the server can read, and use it to install over the network. 

rsyncs the contents of /db_archive/YYYYMMDD/ to /db_archive/YYYYMMDD on the secondary server. That takes care of getting the files there. On the secondary server, /db/archive is a symlink to /db_archive/YYYYMMDD. "recover standby database" automatically reads from /db/archive/, so whatever script you use to recover your database should be able to handle the errors generated at the end of a day, so they can switch the symlink to the new day. Does this help, or do you need more info? 

It might be possible to contact the provider, ask to speak with an engineer, and explain the situation to them. They might be able to help you by pulling their records or configs for you to look at. 

I don't believe so. I suspect that you would need to make a third group to hold them while you recreate the 12 disk group. If you find out otherwise, it would be great if you came back and answered it so we all learn from it. 

$URL$ To copy and paste: SIDs can sometimes change. The SID for a Group object won't change. The values of other object properties can change, but the Object-GUID never changes. When an object is assigned a GUID, it keeps that value for life. 

I admin 75-100 servers (physical and virtual) in a 24x7x365 environment. It's a financial services company with worldwide clients, so the service itself can have no downtime. We've got 4 physical sites (2 datacenters, 2 offices) with a small userbase (around 20 users total, varying from very technical to very non-technical). There's around 40TB of SAN storage and 5 WAN links. I feel overworked. 

That's not really a percent. That's the number of processes waiting on the processor. Unless you've got a ton of cores, that's not a good number. Have you tried killing the shell that invoked the 'ls'? 

And this is where it REALLY starts to go downhill. You're doing RAID-6 with two devices missing. So you're calculating parity and putting it..nowhere? (Hey anyone with software RAID-6 experience, is this true? Does it still compute? If so, does it get dropped, or does it try to write parity to the drive?) And any gain you would have gotten from multiple spindles is utterly eliminated because you don't have any other spindles in use. 

Well, VPS's are limited primarily by I/O, CPU (OS independent, as you know) and RAM. I would go with the smallest footprint that has functionality that you're comfortable with. I've never used Arch, but from what I've heard, it's got a relatively small footprint. You could try Debian or Slack or whatever, really. Why are you paying for a VPN, though, when you could just use VirtualBox to test with? 

I'm not convinced that this doesn't belong on meta, but it's a slow morning, so what's the harm? ping, particularly, is one of those tools that has a low barrier of entry and provides a high degree of usefulness for a small amount of effort. It's also one of the first diagnostic tools that someone learns in networking. This means that a lot of people of varying skill levels have exposure to it. The underlying mechanisms are pretty well unexposed directly to the end user of ping. The new user can instantly tell if a host is up or not. At least, that's what they think they see. As an experienced user, you know that isn't always the case. Which is the problem with using ping as your only diagnostic tool. It isn't an indicator that something is up or down. It's an indicator of response time. A lack of a reply has no bearing on whether or not a host receives traffic, but that's how it's used, because most hosts respond to ICMP packets. I still have relatively knowledgeable users who swear remote servers are down if they don't respond to ICMP. The result is that as long it's used by users who are ignorant of its purpose, there will be questions. The bonus is that these questions give us the opportunity to improve the knowledge of the people asking. As for traceroute, it's a really complex tool that seems really simple. "If I traceroute this IP, I see all the computers in between it and myself", as though the internet was a series of tubes, like a subway, where you could see the stops between yourself and your destination. As you know, the internet doesn't work like that. Routes change all the time. There's no guarantee that two packets will traverse the same path (or even that the ICMP response will traverse the same path that the source took). That doesn't mean that traceroute isn't useful, but that it requires a higher level of knowledge to interpret. Again, when people ask traceroute questions, we should see it as an opportunity to educate, rather than an excuse to abuse them. 

This mostly comes into play in things like web servers, where a user will want to present files to the populace in general (typically in ~/public_html for instance) but wants to keep the parent directory secure. There is no need or reason to set the read bit, unless you want your user to be able to execute a directory listing. 

I have a couple of nagios servers that currently alert me via SMS and email, but I'd like to add outgoing calls to that. The ideal solution would have the nagios machines call my cellphone and play an mp3/wav across the call to let me know something is wrong. My only problem is that I'm not sure how to go about accomplishing this. I suspect I may have to buy a PBX card to do it, but I was hoping that someone here had done something similar with a regular modem and off-the-shelf software. Any ideas or hints?