From the perspective of IP, an IP address is an IP address, and IP is happy to use any of them. On the Internet, the ISPs have agreed to not route traffic with private addresses. You can do the same in you test network. IP has no distinction between public and private addresses. The ISPs have agreed not to route the arbitrarily assigned private addresses. You can emulate what the ISPs do by placing ACLs on your "Internet" to simply drop traffic destined to private addresses (or any address range, for that matter). If the ISPs didn't place such a restriction, then private addressing would not be private, and only one site could use any single private network, otherwise you would have duplicate addressing all over the Internet. ISPs have ACLs (or the equivalent) to drop incoming traffic destined to private addresses, and the routing protocol used on the public Internet (BGP) is probably configured at each ISP to not exchange routes for private networks. There is nothing to keep you from doing that in your "Internet." 

The idea of changing IP addresses on packets is NAT (Network Address Translation). A real problem for you is that on whatever network a PC connected, changing the address on the PC to a different network address will stop the PC from communicating after you change the address. 

That sentence makes no sense. There would be no sharing of the single public IP address. If you connect a switch to the public Internet where you are getting only a single public IP address, then only one device connected to the switch will get the public IP address, but the other devices will not be able to communicate on the public Internet. Understand that switches switch layer-2 frames on a layer-2 LAN, but routers route layer-3 packets between networks (LANs). Again, you are trying to compare apples and oranges. I think you need to learn more about the network layers and what they do. Each network layer is independent of the other network layers. For example, ethernet, at layer-2 can carry any number of layer-3 protocols (IPv4, IPX, IPv6, AppleTalk, etc.), while IPv4 at layer-3 can be carried by any number of layer-2 protocols (ethernet, Wi-Fi, token ring, PPP, frame relay, ATM, etc.). The protocols at one network layer simply do not care what protocols are used at the other layers. If you want to connect hosts at layer-2, then you use a switch, but if you need to connect networks, you use routers. 

An endpoint is the beginning or end of something. For example, if you call your friend on the telephone, the phones are the endpoints of the call path. 

Based on you comments, it seems that you first problem is that you don't know how to subnet, and you need to divide your network into four subnets. You can do this by using networks. Assign a different network to each of the sites, and you will need a network different than the site-assigned networks for you router-to-router link. Usually, you will use a or network for a point-to-point link like you have between the routers. Once you have the networks correctly assigned, you can set up your routing. Each router will inherently know about the networks directly connected to it, but the router will need to be told about the networks on the other side of the other router. You can do this with static routes (this doesn't scale well), or you can run a common routing protocol between the routers that will automatically tell each router about the networks connected to to the other router. 

You can only connect switch ports at the lowest common speed between the connected ports. Some switches can bond multiple ports to look like a single link, but unmanaged switches can't be configured that way. Typical users are not using the full bandwidth all the time. Cisco recommends a 20:1 access to uplink bandwidth ratio for access switches. For every 20 access ports at 1 Gb, you need 1 Gb in the uplink. 

If you have port forwarding set up correctly, you don't want to restrict this on the WAN port since the incoming packet will not have the private address as the destination address in the incoming packet. Port forwarding will allow publicly addressed packets toward a particular private address. The ACL could then include only the source address and RDP port in to restrict the source device, but the port forwarding will take care of only forwarding it to the configured private IP address. 

Often, IP packets will need to be fragmented before encapsulation by GRE. The tunnel interface will have a smaller MTU than the physical router interface (physical interface MTU - GRE packet overhead). The tunnel interface is treated as a real interface, and the IP packets entering the tunnel will need to be fragmented before GRE encapsulation. See RFC 7588, A Widely Deployed Solution to the Generic Routing Encapsulation (GRE) Fragmentation Problem: 

VLAN 1 is usually the native (untagged) VLAN. Using VLAN 1, and native VLANs in general, poses some security risk. Access ports should not use VLAN tags since most end-devices (some servers may) don't understand VLAN tags. Tags are used on trunks, where multiple VLANs are on the same link, in order to distinguish which frames belong to which VLAN. You can have one untagged (native) VLAN on a trunk since you can distinguish it from the tagged frames. Some devices do not let you disable VLAN 1. It is likely that your switch requires VLAN 1 on a trunk, so you can't configure it. 

It really depends on the sender. For instance, if it is a fatal event, it is unlikely that the sender will be able to resend an unacknowledged event. In general, informs are more reliable than traps, but there is no guarantee that a sender will resend an unacknowledged inform, only that the sender can resend an unacknowledged inform. This is how Cisco explains informs, SNMP Inform Request: 

You are not denying . Cisco has an Access Control Lists and IP Fragments document that specifically deals with this problem. 

The load balancing on a port channel is per flow. All the traffic in a single flow will use the same port channel member. Each flow is limited to a single physical link, but different flows will use different links. The way you have it configured, a flow is determined by the source and destination IP and MAC addresses on the Nexus, meaning that any traffic with the same values for those will always use the same port channel member. There is a hash algorithm that determines which flows use which port channel members, and it is only when you have multiple flows between different devices that you get load balancing across the different links. You seem to be sending traffic on that port channel from a single source to a single destination, and that traffic will always use the same port channel member. It is also possible that you have multiple flows that just happen to hash to the same port channel member. If you were to load balance individual frames, rather than flows, you will end up with problems created by out-of-order packet delivery. That would be especially and extremely detrimental to VoIP.