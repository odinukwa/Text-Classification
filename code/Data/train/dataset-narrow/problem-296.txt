Since i don’t have access to this switche for practice before doing this live in production i need to clear some doubts in my head. So here is my plan, i would really appreciate if you could check it to see if im headed right. 1.Configure vlan 2 and 3 interface with .1 ips as per the subnet, assign ports and configure the clients to use them as the gateway. question: Does tagged port simply mean an access port on just a single vlan and a port tagged on many different vlans means a trunk port? what does an untagged port mean then? 2.Add a static route on the switch as 0.0.0.0/0 with 192.168.1.1 0.0.0.255 as next hop which is the firewall. Does the L3 switch allow its interfaces to be assigned an ip address? On packet tracert I had to do "no switchport" before i could assign an ip to an interface on the L3 switch 3.Add reverse routes on the firewall for both the vlan subnets with 192.168.1.2 as the next hop for the internet to work. 4.Configure firewall policies to allow traffic from 192.168.2.0 and 3.0 subnets to the internet. Does the switch to firewall /30 link need trunk ports? as that is going to on vlan1. At this stage the internet should get started on both vlans. My next phase of config is to block the entire vlan 3 from accessing one particular host on vlan2. And then allow only certain hosts on vlan2(printers) to be accessible from vlan3. This is proving to be confusing, i could really use some help here. Also the plan is to use static IPs for now, but if we decide to go with dhcp I would be configuring the switch itself as the dhcp server. I am aware of creating the dhcp pools, how do i assign them to the vlans though? Do we use the ip helper cmd in this case? eg: pools: 

I'm finding statements about SNMP holding-time like "traps whose holding time expires are deleted." While that COULD be written less usefully, it would take significant effort. I'm assuming that it doesn't work exactly as described, else setting any holding time would delete all traps the moment that time passes. I'm not seeing how this--as described--does anything but keep any and all traps from ever being sent. So what does holding time actually do, and how does it do it? 

Think of UDP as sending a letter regular postage, and TCP as sending it with tracking numbers and notifications on delivery. Keep in mind UDP and TCP are just delivery methods, they don't give a damn what's in the packet or what the application receiving it does with the packet. DNS is a stupid example to show someone the difference between TCP and UDP. SNMP (and traps in particular) is better. Let me try below. Note, examples are simplified slightly. When a router sends an SNMP trap (an alert such as "Hey, I've just rebooted, thought you should know") to the SNMP server via UDP it does just that: it sends the packet to the server and that's it. If the server is programmed to send something back, UDP doesn't care. UDP delivered its packet, now it's going to the pub for a pint. So what would happen with TCP? Well, the router world send the packet containing the trap message to the server. After a certain timeout period, it would then send the packet again... And again... And again... Until the server finally responds with an ACKNowledgement packet. And that's ALL TCP cares about. It doesn't care about the data packet that the server may (or may not) need to send back. TCP will deliver its packet and return with an ACKnowledgement, or die trying (more or less). You may want to review the OSI model, keeping in mind that each layer encapsulates the one above it. That is, each layer wraps the stuff it received from the layer above and carries it with professional disinterest as to the contents. 

Note: On some devices, after the device boots, you have only 14 seconds or less to type in the username and password. It might, therefore, be necessary to have the credentials ready in a text editor, and then copy and paste them into the login screen. There is no indicator of when your time runs out so it is possible that it might take more than one attempt to succeed. 

Also if i am to add a access point in either of the vlans, the AP would to the vlan port on the switch and does it need to have vlan tagging enabled as well? 

You can go for small business firewalls as mentioned above or even do some RND and install a open source firewall OS and create yourself a firewall box. You can use pfsense or any other open source thing, just google for it. Also do confirm whatever you choose can block https websites as well. 

You can use any channel you want, but as others have said channels 1, 6, and 11 are your best bet. The channels overlap each other such that 1, 6, and 11 are the only channels that don't overlap each other. A picture is worth a thousand words, this one is from the Android app Wifi Analyzer: 

So I'm looking at the "show perfmon" output from my ASA (5550, 9.0 software), and am confused by the "VALID CONNS RATE in TCP INTERCEPT" output: 

Original Answer As a rule of thumb, a "LAN" is a broadcast domain. (It may consist of more than one.) Then again, as a rule of thumb, a rule of thumb applies 3/8ths of the time, so this doesn't really give much to go on. This was understandably rather poorly received, so I've expanded below. Updated Answer I've never really liked the essentially recursive answer of "a LAN is a network of devices in the same area." Granted, it's a rather subjective term, so here are a few other options to illustrate what one may be. Note they may not apply in all situations, there may be exceptions... or they may ALL apply to your situation: Layer 2 Network If devices are in the same Layer 2 Network, they can be described as being on a LAN. Broadcast Domain Devices in a broadcast domain are in a LAN (or multiple LANs). This normally applies to VLANs (Virtual LANs), which can be used to segment a LAN... or can be used to link physically distant devices into essentially the same LAN. Yes, this stretches the definition of "local!" Non-Routable IP Address A set of devices on the same non-routable IP address subnet who can talk to each other (without NAT or other workarounds) are most likely on the same LAN as well. What are non-routable IP addresses? Wikipedia explains it well enough: $URL$ Essentially, these ranges are set aside for "local" use and are not to be forwarded out to the internet. Sidebar These non-routable ranges appear to have been rather arbitrarily chosen--eg, there's nothing special in electricity that makes 10.0.0.0/8 range not route, but someone realized some ranges should be set aside and made a judgement call about which ones. I could be wrong (which isn't rare by a long shot), but Jodies.de lets us see the binary of these ranges ( $URL$ ). I don't see anything terribly remarkable about the addresses. They just seem arbitrary. See for yourself: Address: 10.0.0.0 00001010 .00000000.00000000.00000000 Netmask: 255.0.0.0 = 8 11111111 .00000000.00000000.00000000 Address: 172.16.0.0 10101100.0001 0000.00000000.00000000 Netmask: 255.240.0.0 = 12 11111111.1111 0000.00000000.00000000 Address: 192.168.0.0 11000000.10101000 .00000000.00000000 Netmask: 255.255.0.0 = 16 11111111.11111111 .00000000.00000000 Enough digression! VPN Tunnels Additionally, a VPN tunnel (be it just from your PC to your company or a site-to-site/LAN-to-LAN tunnel) lets a remote machine behave as though it were on the LAN. If it walks like a duck, and it talks like a duck, and it tastes like a duck... Conclusion "LAN" and "WAN" are rather ambiguously defined. They are hardly the only delineations, either--I've been trained on a model that went from LAN to optional CAN (Campus Area Network) and/or to MAN (Metropolitan Area Network) to WAN. You may define your LAN as everything behind your home internet modem, but your ISP could consider every subscriber on your block to be in a LAN... and they could both be right simultaneously! The terms can subjective to a degree, but these guidelines (and all the others posted) should help you determine if something is a member of a LAN, a WAN, or both. 

I am not able to understand any of the config, which commands are these? I can tell you about vlans and routing them to the internet. 

The password is bcpb+ the serial number of the firewall (letters of the serial number are in UPPERCASE format) 

The printer on the 2-network responds to pings from the 3-wifi-network for sometime and then just drops out for some reason i can’t figure out. I have policies on the fortigate firewall to traffic from 3.0 to 2.0 and also reverse with all ports open. I have a server on 2.250 which responds to pings perfectly but not this printer. The printer is on a static ip of 2.16. I have also configured policy routing on the fortigate to force to and from traffic with source and destination addresses 2.0 and 3.0 and vice versa to force the traffic between those two. My policy config and routers as follows: 

One reason--and I'm sure there are many, many more--is because you can have the same VCI on multiple different VPIs. The VPI is 8 (OK, 8-12) bits, while the VCI is 16 bits. VPI 0 has VCI 35... but VPI 1 also has VCI 35, as does VPI 2. Guess what? VPI 3 also has a VCI 35. These VCIs don't necessarily interact. This is probably more for the PVC (Permanent Virtual Circuit) implementation, common in ISP networks. It's a bit like asking why you have a third AND a fourth octet in an IP address, or why you need a street AND city name in a postal address. ;) 

I'm having trouble wrapping my head around DSCP AF Classes and what--all else being equal--gets dropped first. I understand packets are given a Class, 1-4. The higher the Class number, the higher priority that packet gets. I must assume that higher priority means lower chance of being dropped. Is this assumption correct: Higher Class = Higher Priority = Lower chance of being dropped? I also understand that packets are given a drop precedence, 1-3... and in this case the lower the drop precedence, the lower the chance of being dropped. During congestion, does higher Class traffic have precedence over lower Class traffic, regardless of Drop Priority? If so, this leads to the absolutely counter-intuitive scenario where, while AF32 is less likely to be dropped than AF13 (32 > 13), AF32 is more likely to be dropped than AF31 (despite 32 > 31)... and that's really throwing me for a loop! 

As seen in the diagram is such a network setup possible? The port forwarding works just fine when I try it from an internet connection from somewhere outside my office but says timeout when trying it from the 6.0 network. I am doing this on a fortigate but we can just think of it as any router i guess. appreciate all help, thanks. 

Create vlans. Terminate the vlans. This can be a L3 switch where the vlan gateway is an virtual vlan interface on the switch itself or subinterfaces on a router. The router between your vlans and the internet should have a static route back to each of your vlans. Because the router can't see of your vlans and doesn't know those networks and hence can't send back the reply packets to them. 

Hey you could have just googled that and the first link is your answer. Here. Do some research before asking please. Here's the steps in short: