first I just realized you are over thinking the heck out of it. There are chinese hardware .264 usb cameras that are just board and lense mount like the pi cam for 30 bucks. grab 2 of them and a pi cam. they have 1080p versions for like 20usd more. I've ran 3 cams on a pi 3 before. 2 of them were usb with out compression one was the pi cam. I then bought 2 of the cams i described and framerate was way better. I could stream like 15fps over wifi/lan when all cams were .h264. unless you want a flying robot this should be sufficent with out using the compute module. One thing you need to do is set the program you use to do the recording (likely "motion") to record to a ram drive. If you do not do this you will burn up your flash cards quick if you have your heart set on compute module(its a mistake for what you have described): imho you are going to pay through the nose for pre made boards to use with the compute module. a board consists of 6 voltage supplies, which costs $18 bucks of IC at most, if you want nice parts and are just ordering one of each. it can probably be done for $10 if not less say each usb port costs you a $1 and the hdmi costs $them 3. There are some passives and rfi and static/esd chips but places like ada fruit charging what they do for the mobo is nuts. The ddr port it plugs into is maybe $3 bucks. the little connectors you need for the cams maybe cost $0.75 flex connectors is what you should search. . eagle cad has a free version, they also have versions one my make a choice to acquire with a vpn. Kicad is completely free cad software one or the other will likely fit your current mind set better. There are part libraries for both and sites like Digikey have a checkbox to search parts with included CAD models. honestly you are best off learning to input a part from the data sheet/scratch. My first pcb took more time finding pre made parts than if i had just suffered that learning curve if you google something like "pi compute 3 minimum host eagle cad "(or kicad). you may find someone has provided a file with the psu components and the ddr2 socket already laid out. from there you will need a flex connector for the cammera. Datasheets are your friend. They tell you about the part and its connectors. most connectors have a name and pin count. this enables you to search for and buy them. cad programs have an option called "generate BOM" or something similar. Its Bill of materials. If you find a file with the basics laid out, outputing the BOM tells you what you need to order for their design. when it comes to getting a pcb made you have several options in us and china. osh park has like 5 day turnaround and priced 5 bucks per square in of pcb. This is for a 2 layer pcb and you get 3 copies of your pcb for that price.. if you dont mind waiting a month some pcb houses found on ebay will do it for less. keep in mind, working with a company in the developing world whos employees may or may not " the english so good" can add a layer of difficulty path less traveled is to etch @ home. I had plexi laying around when I got into etching. One can assemble a thin vertical tank with plexi and paint thinner (or solvent glue). tanks can be had for about a hundo premade. At the bottom you place an airline and use an aquarium pump to bubble air through your acid. Go with cupric chloride and your etchant(acid) will be reusable indefinitely because air regens it. almost every etchant becomes illegal to dump down drain after it eats copper off the board. the nice thing with cupric is its reusable so you never have to pay to get rid of it(assuming you may etch again) Cupric Chloride can be made from Pool Acid(30%hcl) bits of copper wire weighted out and hyrdogen peroxide Hair bleach (volume 40 is the product name). Alternatively the 3% peroxide from drugstore will work but it will take about a week of bubbling air to get the chemistry right. the "volume 40" is like 15% peroxide and you will be ready to go that day. There are 2 main choices for how to make the mask/template which will protect the copper we want to remain on pcb etched @home. What isnt covered will get eaten/etched away by acid. the blank pcb is called a copper clad. I will refer to it as such for the rest of this. choice 1) toner transfer. One needs a laser printer, an iron or cheap ($25 ish) laminator a witch doctor and said witchdoctors recommendation on what special paper to try to get the best results. He or she may later tell you that the printer brand you have has angered the spirits. I recommend skipping this method. choice 2) uv photolithography. this is what the industry uses and by far produces better results if done with care. It is also repeatable with the same printed transparency choice 1 is not you will need a printer for either choice. UVlith process is compatible with inkjet or laser. If you are in the market there is a 3rd option which requires a lot of DIY to your printer, but may allow direct printing of pattern to Copper clad. With that in mind, when i needed a printer for the lith process I bought an epson c88+. Printers that can use pigment inks are key but im not going to cover the 3rd method/direct print here. I just mentioned that printer because its cheap, it works and it may have that advantage later if you look into it. List of stuff needed for UV - Lithography 

Part 2 - Software Defined Radio (SDR) Solutions: This is IMHO the "leading edge" of communications technology, and much of it is currently available and usable with RPi! Really exciting stuff going on several fronts. Because this post is getting quite lengthy, and since I feel that the WiFi solutions in Part 1 will meet the requirements you've given us, I'll keep Part 2 brief and topical. Don't misunderstand please; an SDR solution will definitely work in your application, but it may require more effort in hacking the hardware and software than a WiFi solution. Also, the WiFi solution will not be viable at ranges much further than your 500 m requirement, and so you will need to look more closely at SDR if your requirements change. I'll start by defining "Software Defined Radio" as simply radios in which many of the hardware components have been replaced by software. There's a Wikipedia page on it, and tons of blog posts and videos documenting functioning prototypes built by experimenters using Raspberry Pis. Many of them are receiver-only implementations, and not particularly useful for your weather buoy application, but incredibly, transmitters can and have been built and demonstrated using nothing but RPi hardware, and in this case - a multi-band transmitter!!. And here's an article on setting up an RPi-based "SDR Server" module. To conclude this section, I'll mention briefly an area in which I'm personally interested, and I'll confess that it's this interest that led me to respond to your question. Very briefly then, lower-frequency RF signals find application for "non-line-of-sight communications". They have been used for many years by "Ham Radio" operators to communicate across very long distances - long before satellite communications and international telecom networks existed. It is the nature of rf waves at certain frequencies to "bend" and "bounce", and keep going with lower losses than higher frequencies. Traditionally, ham radio operators transmit voice, and often use powerful transmitters and extremely large antennas to launch their broadcasts. However, Joe Taylor developed a communications protocol called "WSPR" that allows short messages to be be transmitted over long distances at extremely low power levels. How "low"? (Glad you asked :) Reliable reports state WSPR transmissions have reached distances of 10,000 miles using only 0.2 watts (23 dbm) of rf power. The (hardware) PWM pin on a Raspberry Pi is capable of producing 0.1 watts (20 dbm), and so is capable of reaching great distances with no additional "active" hardware (amplifiers). And to conclude finally: WSPR is not suited well at all to communicate data; it may be able to manage 1 bit per second! However, as these things usually go, the technical breakthrough that WSPR made has yielded other protocols that are capable of more data throughput - not a lot more, but enough to be useful in some applications. For example, one of these protocols, EXchat is claimed to have sufficient bandwidth to support "text messaging" applications (that would be SMS - not MMS!) Part 2.5 - SATCOM Solutions: In my opinion, this really doesn't have anything to do with Raspberry Pi, since AFAIK there are no RPi-based satellite transmitters so I'll give it short shrift. But since you mentioned it and just for completeness, it's certainly possible to use a RPi with an Iridium SATCOM modem, and uplink data transmissions from your buoy. But that seems like such an over-kill for this project. And by the way, SATCOM time is expensive! So that's it - I hope this has helped. I'm done except for one final word of caution: The rf spectrum is controlled by government entities who write laws and regulations that govern its usage. Pay attention to all of the warnings and admonitions you see. 

you can do multiple boards and store them for a few months if you want a ready to go supply. just keep them in a light proof container. expose 1)put transparency over/over and under(2 sided) your riston coated Copper clad 2)sandwitch between glass sheets 3) bring outside to expose 4)set in dark for 15 min to let chemical/plastic stuff happen 5)drop in developer and brush gently w/soft brush or gloved finger tip for 1min. You will start to see the areas that were exposed get washed away/ come off and the rest stays. This is your "acid resist" pattern. 6) rinse under tap water or distilled to stop the developer Etch 7) drop in acid tank for 15ish min 8) remove and rinse with h2o to stop acid 9) drop in acetone or scrub acetone and green pad to remove the resist and reveal the shiny copper wires/traces/pads you just created on your board 10) scrub with like 5% hcl and water to remove copper salt deposits that dont come off with just water. 11) wash your hands, secure chemicals or decide life isnt worth it and drink them etc etc. 12) drill holes through layers. solder on parts...etc. obviously some googling on board etching will be required but I highly recommend you try it. Unlike sending out and waiting a week, a mistake can be corrected and new boards made in 20min to an hr for just a few dollars of waste board. If you make a mistake on a board you had professionally done; you might be out a few hundred. 

As you've noticed, you'll need to pull your microSD card, and re-create the empty file named SSH. When you make your next attempt, you should run ssh in mode, as that may provide useful information: 

Your program named will execute during the boot sequence, and any issues will be recorded in the file 

Is my RPi configured to use DHCP? (if not, fix this, or alternatively: properly configure a static IP address in RPi and your WiFi router) Is my WiFi router properly configured to allow the RPi to "join" the network; e.g. it's acting as DHCP server and router, no MAC address blocking, etc. 

Most of your configuration work will be in one of two locations: and . Therefore, back those up as follows: 

Again, this depends upon your kettle having the built-in, universal protective feature that my "el-cheapo" kettle has; that is, the kettle turns itself off if there's no water in it. But of course, that's easy to check . :) 

If I understand correctly, your RPi is connected to your WiFi router downstairs via Ethernet patch cable. If that's the case, then your RPi should already have an Internet connection, and your Mac has nothing to do with that! In any case, here's how you check that: 

You will need access to an SMTP server to send mail over the Internet. If your RPi doesn't have an SMTP server set up and working already, you may wish to consider using an external server. One popular choice is Google mail. If you have a Google email account, they will allow you to forward mail through their server. There is a GitHub page that will show you how to use Gmail as an SMTP service, and also has a small Python program that sends email messages on command; feel free to modify it for your purposes. Let us know if you have questions. 

dawn gloves -scrub your copper clad (green dish pad and ajax/commit) rinse grab another pad and acetone can. Scrub with acetone. Its clean enough when a paper towel/white cloth and acetone do not turn grey. set it somewhere clean and dry when finished, you will need it again soon Get yourself under LED or very dim incandesnt light. Remove Riston film from its roll tube. LED is the way to go as they emit only a narrow band of color in lights and no UV. LED lights are usually safe full brightness for handling the UV sensitive film. Once under suitable light, cut yourself a square of film the size of your copper clad. cut another if you are doing double sided. If your house is a grow op and you have grow leds everywhere...stop this process and move out before you get busted. also... you just exposed all your film. cut a piece of clear tape. stick clear tape in corner of uv film and rip away quickly. The uv/riston film has 2 protective films (each side) we need to remove one and this is the quickest way. Lay film on copper clad, (side you just took protective film off down.) you will know what is film and what is protective layer because film is blue, or maybe green depending on brand, protective is always clear. laminate film to copper clad. I use the amazon basics cheap laminator. note: To avoid air bubbles I like to take the protective layer off one side of film, Place Copper Clad in a tray of distilled water, Float the film on top of water and pull board up to it (gloved hands, oils will mess things up). After that i send it through laminator. Some people find ways w/o water. that just works best for me. Bubbles are bad. 

In any event, the fact that you can't read the contents of your Multimedia folder from VNC tells me that the issue is in the VNC layer. You seem conversant in the basics of all this stuff, so I'd recommend you look into VNC a bit more closely. If you don't make any headway, perhaps re-post your question with the term VNC in the subject line. I'd be useless helping with a VNC issue I'm afraid as I've never used it (well, hardly ever :) 

The data is held in a memory buffer because memory is faster than disk i/o. Your data would be written to the file once you the file, but I guess you want to read it wile you're writing it? To do that, the f.flush() suggested by @Gerard will cause the memory buffer to be written to your file; or at least to the system's disk cache if it's using one. You may also wish to consider adding an following the . This will ensure that the system's disk cache is also written to the file, and avoid data loss in the event of an "unexpected event". As a general practice, I think I would avoid using a zero-sized buffer for your file. That would defeat the purpose of using memory buffers, which is to keep things moving briskly forward. But feel free to try it - the performance reduction may be irrelevant, depending upon your application: 

Approach 2: Use Different Diodes Same principle here, but instead of tweaking the output of the LM2576-ADJ, we're going to use the standard LM2576, and give it "voltage priority" by using a diode with a lower forward voltage drop. The net effect is the same: The LM2576 will carry the load because its diode has a lower voltage drop than the one used for the USB supply: 

Glass to sandwitch your transparancy and the copper blank when exposing. Do not use plexi it will block uv. Just take the glass from 2 picture frames and you are set. transparency film for your printer type. A lot of people again go to witch doctor land here. I highly recommend you go inkjet for printer type then pick up Fixxions brand screen printing transparencies. I bought like 5 kinds, then found that the screen printing comunity had the answer $URL$ they have a coating that is designed to be clear and make the printer ink stick just like the paper it was made for. Beautifully dense/dark and never runs. Those are the two qualities you want because one equals minimum spacing resolution and the other would equal holes in your copper where you dont want it as the printed transparency determines where the etch resist stays on the board during exposure. 

Misc things you need are: ajax/commit cleaner acetone from hardware store green dish pad(not used) rubber gloves(disposable) dremel, hand drill or drill press soldering iron for assembling board after(probably figured that ) process: So, if you put that kit together with an order or two and getting what you had in one pile... the process is: PRINT: 1. design in CAD software 2. export/print 2 copies of negative on transparency film 

supper glue them together (blocks more light) 3.5) if you have a back layer repeat. sometimes a piece of pcb glued in between top and bottom can make a jig to slide your copper clad into to ensure alignment between layers. this is crucial if you have actual traces on the back. if the back is all ground it doesnt matter so much. if you miss and drill out the side of a pretty much flat pcb..i dont know what to tell you