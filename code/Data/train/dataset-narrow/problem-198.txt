Your question is a bit vague, but one reason why DHCP might not be sufficient is in the case where the mobile device needs to maintain a connection to another host (a server, for example) while moving from one network to another. If the mobile device gets a new IP address, the connection to the server would be broken, as the device must initiate a new connection to the server. Also, the time it takes for the client to recognize it is on a new network and receive a new address may be too long for some applications. 

The purpose of the data offset is to tell the upper layers where the data starts. As you point out, the TCP header can be anywhere from 5-15 words long. So you need to know where the header ends and the data begins. 

Simply use the "no" form of the command to remove the first statement, then add the second one. Like this: 

The direction of the access list is in reference to the router, so OUT means from the router to the server. In that case, you will block traffic from other devices to the server when the TCP destination port is 23 or 80. 

In order to cross from one subnet (layer 3 boundary) to another, you need a router. The SG200 is a layer 2 only switch. You might also consider putting all your devices into one VLAN, although with the limited information you've provided, I can't recommend that for sure. 

When connected to your MAC, run wireshark and look for the DHCP requests. That will give you the MAC address, which you can then look up in your DHCP server. Copy the MAC table from your router, and lookup the OUI name, which will likely give you a few candidates that you can then look up in your DHCP server. 

You've made the classic mistake: Different manufacturers use different terminology HP calls them Trunks-- Cisco calls them Port channels In other words, you're using the wrong commands 

Compression technologies rely on the fact that the data has patterns that can be "coded." Here's a simple (simplistic?) example: 

Your subnet mask is 255.255.0.0 (also written as /16). That means the first 16 bits of the IP address define the network, and the last 16 bits are the host address. With that mask, there are 65534 possible hosts. In your case, the first 16 bits are the same. That means both IPs are in the same subnet. That's why your switch is complaining. Remember that there is nothing special about octets. IP addresses are just 32-bit binary numbers. We write them using dotted decimal just to make it easier to read. 

Browsers, and almost all other applications, don't know (or care) if the address is public or private. To a browser, the computer and network just presents a stream of data -- that's what the meaning of layers is all about. At the network layer, IP addresses are all the same -- the idea of public and private has no meaning to computers. Fundamentally, either the address is on the local network, or it isn't -- and needs to be routed. 

Your assumption is correct. In both these cases, you can rollback configuration commands to a known point if they don't work as expected. 

Sadly, no. The unmanaged switch doesn't have the ability to create or trunk VLANs (if it did, it would be a managed switch). It will treat all the PCs as if they were on the same VLAN. If it were a mananged switch, you would configure the 3560 port as a trunk port. But your unmanaged switch will not understand VLAN tagging. 

Yes it will work in the same way. BGP prefers external to internal routes. Probably. It you are only connected to a single provider, there's no advantage to full routes. Full routes make sense when you can choose among several providers. 

Yes, a site-to-site VPN is exactly what you are looking for. You will need to know the crypto key (or have a certificate), isakmp, and ipsec parameters. If you can get a copy of the asa config (or relevant parts), we can help set up your ASA. 

The point here of segregating devices into VLANs is so that you can apply your security rules to each VLAN. So the answer to your question is create as many VLANs as you have different policies. For example, if dev apps and dev db are always accessed by the same group of people, there's not much point in having them in separate VLANs. Be careful that your rules make sense and follow your business practices. Otherwise you end up with every device in its own VLAN, and you'll spend all your time managing access lists. 

I can decide - problem most probable in routing from A to C (on A node) Checking routing tables Im found incorrect route to BC network. 

If You need all nodes to work in one subnet and one L2 broadcast domain, add bridge interface, enable rstp on it, assign IP on bridge interface and add physical interfaces to bridge. /etc/sysconfig/network-scripts/ifcfg-br0 

If You don't have public IPv4 on the server and can't get IPv6 from ISP, then You can get IPv6 for Your LAN from IPv6 tunnel broker (search any working) 

Cat7 socket exists. $URL$ Cat7 required to make 10 Gigabit Ethernet over 100 m of copper cabling If You really need to achieve this, socket category and proper grounding is important. 10GBASE-T, or IEEE 802.3an-2006 ... Category 6a is required to reach the full distance of 100 metres (330 ft) and category 6 may reach a distance of 55 metres (180 ft) For 1000BASE-T Cat5 is enough. 

In theory is possible to use link-local IPv6 as gateway address, but IPv6 link-local accessible only from local subnet (it nonroutable), so then how to access equipment for management over IPv6 form other subnets? 

bandwidth or throughput is / where implied - data is received by destination and frequently implied - data is application data (at least L2 or upper) All protocol overhead count there. transmission rate or bitrate is similar, but data just transmitted but no warranty on receiving by destination. And it not count protocol overhead. It L1 speed. 

It depends on l2tp setup. If it use BCP (Bridge Control Protocol) PPP extension, then l2tp works like Ethernet (forward L2 frames), so your first assumption is right. If it plain l2tp (which forward L3 packets only) it forwarded by routes or by combination of routes and arp manipulation (Arp Proxy or some other), then your second assumption is right. 

By using managed switch with VLANs and AP that support VLANs. Or by using AP and Wireless controller that tunneling traffic between them. Cost of solution can differ depends on chosen equipment. But anyway radio planning and cabling planning is required, specially if You planning to use multiple APs. UPD. Try to make more specific in project. 1. How many AP is necessary? One AP can work from 10 to 100 meters, depends on AP, Wi-Fi standard (g ,n ,ac), walls, desired speed, AP antennas and other parameters. Reinforced concrete make good isolation, so at least 1 AP on floor. One of way is set test AP and try, how far from it phone work acceptable. 2. How many active users must be served simultaneous? (active mean do something on network or internet) In 2.4 GHz band only 3 channels simultaneous possible. And more 15-20 active users on single channel in single interference area can make problem with performance. If it problem meet, use low power AP that have less coverage and less interference area, and possible use directional antennas. But then more AP required. And/OR use 5 GHz band where more channels can be used (8 - 12 depends on country), if enough client devices support it. If not, You can try use long range higher power AP. 3. Where it must be placed? There some different solution possible. It somehow like box packaging. Some AP can have directional antennas and make far coverage in one direction and short in other. It can depend on wiring limitation (maximum 100 meters of twisted pair) and on AP choose. 4. What AP you choose? Hard question. For example: Ubiquiti UniFi is nice, but requite controller (PC software or "UniFi Cloud Key"). And if one or more switch is used it must be VLAN capable managed switch. And there no directional AP that support multiple SSID (if not do reflash to non native firmware). Mikrotik - any wireless can be controlled AP or work without controller. Any router can be wireless controller (limited only by planned load). More flexible router, for my taste (but less trivial). Meraki, Ruckus, Aruba ... - can do anything of above and much more, but several times more expensive. And I lack expertise in it. 5. What router to use? How much traffic must handle the router? (In Your case - What planned speed of internet connection plus estimation of inter-VLAN traffic?) 

AP can handle multiple SSID and bridge it to different VLANs to separate traffic of SSIDs. And router handle different VLANs with correct rules. AP can make some kind of L2 tunnel to central device (wireless controller or roouter). 

In ring topology RSTP is much better. STP in ring topology can enter in infinite topology rebuilding. RSTP in linux supported as rstpd daemon, but Im not sure it well supported and newer configure in in generic Linux. In Linux kernel based RouterOS, RSTP work perfectly.