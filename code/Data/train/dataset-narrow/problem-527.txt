I was finally able to solve this problem thanks to @hunterjrj's help. The first steps I had to take was setting up the mirroring using certificate because my two PCs were not on the same domain, yet same network. (Curtosy of hunterjrj). After going through all the steps in example setting up database mirroring using certificates transact sql, I still had the same problem. What took my attention was that the problem was reproduced even if I reverse the roles of Principal and Mirror, I.E: If my was principal, I would have been able to set it's address from the Mirror instance, but if was mirror, I wouldn't have been able to set it's address from the principal instance. It was always the mirror not being able to be set from the principal. After lots of guesses, I came down to my last try, which is to change the port. Instead of using the same port for both of the instances, I used for the principal, and for the mirror. This fixed my issue. The problem might be due to both PCs being on same network. Hopefully this can help someone else having the same problem. 

For example in the above table I have total 20 records in which 40% of records have double_scoring and 60% records have single_scoring as SCORING_RULE. So when I select first 10 records with below query then the result set must contain 4 double_scoring and 6 single_scoring records. How to ensure this kind result set. The database is oracle 10g. SELECT * FROM PORTFOLIOS WHERE ROWNUM <=10 

I am executing a web service for 100 times. The average response time of this service is 1.5 seconds. But when I look at the response time of each execution individually, there are a few executions (at least 10) which are taking beyond 15 seconds to respond. The data for each request is exactly the same as any previous request (just appending a dynamic number to name...etc). It certainly looks like a database issue, because my database is responding differently each time we execute a same query again and again. I am not able to understand why my database is behaving like this. My database is oracle 11g. I have experienced this issue with different UI flows as well previously. Edited to add collected metrics. 

No. If the datafile has been occupied by a partition of a table, you need to ALTER TABLE EXCHANGE PARTITION with some empty dummy table. Then drop the exchanged table. Then rebuild the invalidated indexes. This works if you don't have foreign keys to the table. This is quite a troublesome operation. Then you are free to drop the corrupted datafile. 

XE does not support Streams, as officially documented. SE and SE1 support Streams but without redo capture. EE and PE (Personal Edition) fully support Streams, and also support Logical Standby. 

You don't want your test database to retain the same internal id number as the production database. Hence it would be best to use RMAN's command DUPLICATE, because it sets a different id (and also a new database name). This command is specifically designed to do what you require. 

I have a transaction called "updatePolicyStatus" whose response time is usually under a 3 seconds for many instances during a peak load. This transaction processes bunch of business rules and fires big set of SQLs to database. But during a peak load, 10% of the total transactions response time is going beyond a 60 seconds. When I look at individual queries they are fine. I am not quiet sure what else is causing the transaction to become slow once in a while? My database I/O, network, CPU and memory everything is fine tuned. Could you please let me know what else could be the bottleneck? My database is Oracle 11g and it has 100 Gigs of data. 

To make sure that I am entering the fully qualified TCP address in the wizard, I did follow the instructions from the documentatiom mentioned above, and I quote: 

There's no like found in that answer, does this have anything to do with my problem? UPDATE: After a discussion with @hunterjrj, we figured out that it would be better to use mirroring with certificate login, since my PC and the network PC are not on the same domain. So I followed the example setting up database mirroring using certificates transact sql. It all works well until the last query I should run which is: 

whenever I make a new request in my application it takes to long to respond for the first time and all the subsequent requests are faster. If I do it again after some hours or tomorrow again it takes more time to respond and same subsequent requests respond quickly. I am not sure why this is happening every now and then even though the server is not restarted. I can understand if it is issue of explain plan creation. But the explain plan is created only once for the first time and it should not be slow there after. But I am keep on experiencing periodically even though the server is not restarted. 

The green bug you're seeing (look closely) means the package have been compiled with DEBUG option. It is also seen on bare procedures and functions. It is a coincidence they don't expand - maybe a bug (duh) in SQLdeveloper :) On mine, these expand without problem. 

Beware the OS authentication is done by client machine, not by the database server. I think that within reasonable pessimism to Oracle tools you could expect that it boils down to this: database server receives a TCP connection from whichever IP address that might pass the network path, and that connection just claims "I promise I've done OS authentication and, trust me, this connection is made on behalf of OPS$JohnSmithCEO." Neither the database client or database server is given OS password for additional OS authentication! And you can't even trust that this connection came from a valid Oracle software. It can be man-in-the-middle in reality. It's worse than telnet. Whatever "Windows-specific" checks are done by Oracle, they seem contrived and you can't really trust they are complete and secure. 

I have a table with polcies and class codes, I want to get all policies which doesn't have duplicate class codes. Do you have any idea? One policy may have one or more class codes. If any class code is present for more than one time then I want avoid that policy in the result set. 

I have a huge oracle test database whose size is more than 100 GB. I want to export only 1% of all the data and import it into my local database to have a local replica of that application. Is it possible in oracle 11g? 

In Oracle starts a PL/SQL block. In other words, after you ought to provide a text of a program that is written in a procedural language that is somewhat different than SQL (although it bears some similarities). Your sqlplus had read everything but it was not yet parsing or executing anything, it was waiting for an and a line containing only a slash like this: 

The script creates certain objects, and it will put them in the current schema. Oracle wishes that these objects be created on SYSTEM schema, hence the requirement. There are two Oracle schemas, SYS and SYSTEM, because they have two purposes. In short, SYS truly is the "special" user in respect to database internals, while SYSTEM works normally. The SYS is the owner of the database, the only user with access to X$ tables, the only user which acts as SYSDBA (internally), that bypasses logon triggers, and that, for some obscure reason, cannot obtain read-consistent view of data. As a schema it holds crucial Oracle stuff, mainly the data dictionary. The SYSTEM is fairly normal schema with DBA privilege (database administrator, not the same as SYSDBA), only that it is built-in and contains some additional (but also quite important) Oracle stuff. You shouldn't put your own stuff in this schema, if not instructed so by Oracle. 

I am trying to mirror a database from my local server instance to another server instance found on the network using SQL Server management studio. I am having troubles providing the Server Network Addresses. I did go through this documentation to better understand the fully qualified TCP addresses. I am using the mirroring wizard, not transact-sql. The local SQL server is correctly connected, my problem lies down with the TCP address of the PC (which hosts the other SQL server instance) on the network. Note that I can connect to the server from my local machine using the management studio with no problems at all. I used these two queries to make sure that I've specified the exact port and that there's no problems: 

Because for some strange reason, although regexp_like looks like a function on a first glance, it is not a function in reality, but is a condition (an integral part of SQL syntax). But, more confusingly, it is a function if used in PL/SQL: 

In case you specify each block is read once and written two times to backupset copies. The two backupset copies are supposed to be bit-to-bit identical. Both copies have the same backupset key (BS_key) in RMAN. You cannot mix tape and disk copies - either both copies go to or both to . 

In some versions of Oracle, you cannot put space between the beginning-of-line and the WALLET_LOCATION keyword, and you must put space between the beginning-of-line and the definition of a wallet. Your snippet indicates that you failed at one of these things. I think they removed this silly requirement starting from some Oracle version, but better safe than sorry. Good: