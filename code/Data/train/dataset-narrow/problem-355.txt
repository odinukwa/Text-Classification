Your question doesn't list any specific IPs so I'm just going to make some assumptions, change them as needed. You can do what you want, DHCP is broadcast only within the local subnet (won't be passed by a router unless you configure specific options to do so). Assuming: SonicWALL: 

If you were testing with a PC connected to the VoIP network (with a 172.21.1.x IP) the Windows route command would be: 

If your GSM Wifi Hotspot has an Ethernet port you could connect X1 (WAN) there and it should work; that would be simplest. If NOT then you will need to put W0 (Wireless) into Wireless Bridge Mode: $URL$ However, in both cases, you will need to ensure the correct ports within GSM Wifi hotspot router are open for VPNs: 

On the SonicWALL, configure: Configure X2 on the SonicWALL with a free IP on the VoIP subnet, let's say: 172.21.1.2/24. If the vendor controls this subnet ask them for a free IP, otherwise do an IP Scan. Under Network | PortShield Group, edit X2 and ensure it is Unassigned (not assigned to X1). Then under Network | Interfaces, edit X2. Assign it to the LAN zone (assuming you trust the VoIP traffic - if you don't then use DMZ and you will need to create Firewall rules; choose LAN if you're unsure, to start). Set it for a Static IP, configure the IP, and other settings as desired. Note: A route will automatically be created under Network | Routing (from Any to X2 Subnet, for Any Service). If you selected X2 Zone = LAN the Firewall rules will already be created (assuming Interface Trust is enabled for the LAN zone, which it is by default). If you set X2 Zone = DMZ you will need to go to Firewall | Access Rules. Create or edit rule from LAN > DMZ, and DMZ > LAN for the X0 and X2 interface (I would suggest keeping things wide open, Any/Any/Any, during testing and then tighten up after if needed). Connect X2 to the VoIP switch. On the Phone Router: NOW: you or the Phone Vendor will need to create a route on the other router. No IP or interface needs to be configured. The route will need to be: 

That's to allow the remote site to initiate the connection, you would need to publish/NAT inbound those ports to the W0 interface if you wanted to initiate from the central office to the remote site. I would suggest testing this before sending any equipment out as the little routers inside those hotspots are often troublesome. If it works please post back with the make and model. 

The answer will depend on where most of your internal LAN traffic will be going: If most of your LAN traffic is INTERNALLY BOUND (ie, to a local File Server, Terminal Server, Intranet server, etc) then you definitely want to choose 1 switch as your "main/core" switch and connect the SonicWALL's LAN to it, along with the 2nd switch and any other switches. Plug the server(s) into the main switch, along with the most critical workstations. The reason for this is: if most traffic is internal then you don't want to waste the SonicWALL's resources switching those frames from Switch #1 to Switch #2 -- in fact it is probably not as fast as the dedicated switches doing that. If you plugged both switches into the SonicWALL's LAN ports then ALL traffic from Switch #1 to Switch #2 would go through the SonicWALL. If most of your LAN traffic is EXTERNALLY BOUND (ie, to the Internet; eg. you have few internal resources and connect mainly to Cloud Based resources, like Office 365 or various websites) then it may actually make sense to connect both switches separately to the SonicWALL's LAN ports. The reason for this is: if most of your traffic is going out through the SonicWALL then you might as well connect directly to the SonicWALL instead of having one switch pass additional frames from the 2nd switch. Plus if the "main" switch were to fail then the other switch would still be connected. In either case if you have separate subnets/VLANs then I wouldn't change anything -- your Dell X1052 switches are Layer 2 only so any routing of packets from one network/subnet/VLAN to another will require the SonicWALL router to route those packets. It wouldn't matter if you configured one of your LAN ports to be on a different network/subnet (eg. a DMZ) or if you configured an internal interface and trunked 1 or more VLANs through a single port. In both cases the SonicWALL is doing all the routing. [Of course if you have a large/complex network with multiple subnets I would recommend a Layer 3 switch to off load from the SonicWALL. The SonicWALL's job is firewall/UTM/packet inspection and it is not going to be as fast as a switch at either plain old layer 2 switching or layer 3 routing.] 

Can EX4200 provide traffic counters thru SNMP for specific VLAN id on a trunk port? If so, please point out directions. 

Fire a continuous ping test over the main path established by OSPF. Disrupt the main path. Wait until OSPF restores connectivity for ping. Record how much time elapsed between steps 2 and 3. 

Number of interfaces: 3 2) Given the destination IP address A.B.C.D, take the least significant byte D. Example: IP = 1.0.0.5, D = 5 3) Divide the value of D by the number of interfaces, take the remainder, then and add one to it. 

You need to find both Distance and Speed for the electromagnetic waves for the specific transmission medium. For instance, for fiber: 

Some tunneling technologies provide Ethernet over IP services. For instance, research about these topics: 

4) Use the result as ifIndex and throw the packet at its interface. Example: For IP 1.0.0.5, write the packet to output interface Fa2 (ifIndex=3). 

$URL$ Therefore, according my output (MSS 1240, peer MSS 9152, min MSS 1240, max MSS 1240), the ASR9K is limiting its outgoing TCP segments to 'MSS 1240'. 

No, not exactly. There is not a regular masking operation taking place. There is no software querying the CAM/TCAM at forwarding time. While usual memory is designed to be queried by a 'memory address' (pointer), CAM/TCAM is a kind of memory circuit (hardware) designed to lookup by content. It does in hardware what a hash table does in software: an associative array. The point is: TCAM can be programmed with a network prefix entry. For instance, you can insert a /24 prefix into TCAM by marking last 8 bits as "DON'T CARE". With plain binary CAM, you can't insert IP prefix, you can only insert full IP address (or MAC addresses) as lookup key. 

The server usually identifies the client by its MAC address. However, it might use the field 'client identifier' option, if present. See also: 

Because 121.34.56.64/24 includes the range 121.34.56.64–121.34.56.128 but ALSO includes OTHER addresses not belonging to the range 121.34.56.64–121.34.56.128. 

How do I tell Juniper EX4200 to push specific S-VLAN based on C-VLAN on q-in-q (dot1q-tunneling) port? For instance I want to instruct EX4200 to perform Q-in-Q using these rules: 

Clocks of network devices usually DO NOT have high-quality oscillators. Because those oscillators are expensive hardware. If all you need is to distribute wall clock time through NTP (with millisecond precision) , they might suffice. If you need high accuracy for services like TDM over packet, you will likely need either SyncE or PTP (precision time protocol), for sub-microsecond precision, and clock sources with high-accuracy oscillator (as you said, specific hardware). 

Source-based tree: A non-shared multicast distribution tree (forwarding/replication state on intermediate routers) is built for every SOURCE,GROUP pair. Source-based tree is unidirectional. Shared tree: A per-group multicast distribution tree is built on routers, shared by all group's senders and receivers. The shared tree might be bidirectional. 

The first address A of the range has a sequence of H x 0's bits as least significant bits. The last address B of the range shares all the same (32-H) bits from A, AND has H x 1's for the least significant bits. 

5) Install Quagga pimd on RouterB, in order to run this IGMPv3 join tool: RouterB: 6) Use Quagga pimd commands on RouterA to verify multicast. For instance: RouterA: RouterA: 7) If things aren't working as expected, try pimd troubleshooting commands: 

Traditionally both Layer-2 and Layer-3 switches use MDI-X ports, while routers and servers use MDI ports. But one ought to check. See detailed explanation below, from: $URL$ 

One smart capture daemon should be able to distinguish multiple exporters by the exporter address. However, your actual capture tool is likely to restrict what you can achieve. For instance, nfcapd seems designed so that you should run a distinct nfcapd daemon for every exporter. So, if you can't change the UDP destination port, perhaps you can use multiple IP address? Run each nfcapd daemon on a distinct address, like this: 

ECMP takes place when multiple output (equal-cost) paths are available for forwarding packets to the same network destination. The hash function must map information from the incoming packet to the output interface. For example, let me make up an illustrative overly simple hashing function for this: 1) Picture every output interface with an ifIndex like this: