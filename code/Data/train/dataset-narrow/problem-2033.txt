Configure Putty to emulate a well-known and well-defined terminal type. Unfortunately there aren't any so something like xterm will have to do. Ensure Putty tells the Linux box what terminal type it is emulating. Partly this is by configuring Putty's settings and partly by using a protocol that communicates TERM (e.g. Putty's ssh support) rather than one that doesn't (Putty's telnet support). Ensure that TERM is actually set to what it should be (). Ensure the terminfo entry for that TERM values defines the keys you want (see above). Ensure the PgUp key sends what it should. In Vim enter insert mode and press Ctrl+V then PgUp 

(my emphasis) Also, just because your Computer contains a USB 3 controller doesn't mean it necessarily is presented externally 

(There are different definitions for the modulo operation. In the above, the result is in the range 0...25. I.e., if x+n or x-n are not in the range 0...25, we have to subtract or add 26.) The replacement remains the same throughout the message, so the cipher is classed as a type of monoalphabetic substitution, as opposed to polyalphabetic substitution. 

Some ISPs provide browser plugins that display bandwidth usage and have web API's so you can create your own monitoring apps. For example Zen 

No, if your keyboard operation is being interfered with, there must be some possibility of other unwanted effects. It must be possible. 

No, it did its best to reassemble the shattered remains into something that is structurally sound. Like rebuilding a Roman temple from the broken fragments found under the soil several millennia after its destruction. This is hard if many fragments have been lost and you don't know how big the original was or how many pillars and of what height. You might only have enough pieces to make something much smaller and incomplete. If the partial remains of the ruins of several buildings are all mixed together it may be hard to work out how many buildings existed originally and which pieces belong to which buildings. 

Yes, No†, It will‡. † Assuming you use a proper Ethernet cable. ‡ Usually, but it depends on what speeds the devices & cables support and what nearby devices might be causing interference / contention. 

With this sort of benchmark, it is not just the CPU that is being measured. I believe that manufacturers usually pay for TPC benchmarking of a specific system configuration. The TPC publish the results 

CR and LF The American Standard Code for Information Interchange (ASCII) defined control-characters including CARRIAGE-RETURN (CR) and LINE-FEED (LF) that were (and still are) used to control the print-position on printers in a way analogous to the mechanical typewriters that preceded early computer printers. Platform dependency In Windows the traditional line-separator in text files is CR followed by LF In old (pre OSX) Apple Macintosh systems the traditional line separator in text files was CR In Unix and Linux, the traditional line-separator in text files is LF. \n and \r In many programming and scripting languages means "new line". Sometimes (but not always) this means the ASCII LINE-FEED character (LF), which, as you say, moves the cursor (or print position) down one line. In a printer or typewriter, this would actually move the paper up one line. Invariably means the ASCII CARRIAGE-RETURN character (CR) whose name actually comes from mechanical typewriters where there was a carriage-return key that caused the roller ("carriage") that carried the paper to move to the right, powered by a spring, as far as it would go. Thus setting the current typing position to the left margin. Programming In some programming languages can mean a platform-dependent sequence of characters that end or separate lines in a text file. For example in Perl, produces a different sequence of characters on Linux than on Windows. In Java, best practise, if you want to use the native line endings for the runtime platform, is not to use or at all. You should use . You should use and where you want LF and CR regardless of platform (e.g. as used in HTTP, FTP and other Internet communications protocols). Unix stty In a Unix shell, the command can be used to cause the shell to translate between these various conventions. For example will cause the shell to subsequently translate all outgoing LFs to CR LF. Linux and OSX follow Unix conventions Text files Text files are still enormously important and widely used. For example, HTML and XML are examples of text file. Most of the important Internet protocols, such as HTTP, follow text-file conventions and include specifications for line-endings. Printers Most printers other than the very cheapest, still respect CR and LF. In fact they are fundamental to the most widely used page description languages - PCL and Postscript. 

Check Name Resolution First use or or to check that www.mydomain.com points at the static external IP-address of your router. Check router config Then check that your router has port forwarding configured so that requests arriving on port 80 at the external interface are forwarded to port 80 at your server's private IP address. Check ISP restrictions Then check that your ISP's Terms and Conditions allow for you to run a HTTP service. Some ISPs block inbound HTTP connections. LAN != Internet Lastly, remember that if you are testing this from within your LAN you need a different IP-address for www.mydomain.com, you can add to your hosts file (e.g. or ). As Malfist pointed out in a comment: if the router supports NAT-reflection, this is not be necessary. 

So core i5/i7 still have the TCC trigerred (by DTS I guess) in the same way as older Intel CPU designs. I believe "if enabled" means TCC can be disabled by BIOS (or other) settings. You might check the BIOS settings for CPU thermal control. 

Turn on WPA2 encryption at the router. If your router and PC don't both support WPA2, use WPA. If they don't both support WPA, use WEP and save for a new router. Edit: WPA2, WPA and WEP protocols encrypt the WiFi data transmitted in the WiFi signal between the WiFi card (in the PC) and the access-point or wireless-router. If you need to also encrypt data as it travels along wires (Ethernet, DSL etc) you'll need to use encrypted application-level protocols (e.g HTTPS), or use something like SSH (perhaps as a tunnel), or use an encrypted VPN, or investigate IPV6 security. 

100Base-T only needs two pairs. Your 4-pair Cat5 cable is broken or incorrectly wired, test it with a suitable cable-tester. 

I see no reason why a MAN or a WAN couldn't use any of those topologies or a mix of them. These categories are not always distinct. This reminds me of token-ring networks, logically a ring, physically a star or tree. 

An option to specify a BOM would certainly be a useful additional feature for iconv. A UTF-16LE file without a BOM is usable in Windows, albeit with additional effort sometimes. For example Notepad's File Open dialogue allows you to select "Unicode" which is Microsoft's name for "UTF-16LE" and (unsurprisingly) seems to work on files without a BOM. I can open a UTF-16LE test file (without BOM) or a UTF-8 test file (without BOM) in Windows Notepad (XP) in the usual way e.g. by double-clicking the file's name in explorer. That seems usable to me. I am aware that sometimes Windows will guess the encoding incorrectly - In which case you have to tell Notepad the encoding when opening the file. This inconvenience means including a BOM is preferable for text files intended for use on Windows. If a specific application will not work with anything other than a UTF-16LE file with BOM, then I would agree that a UTF-16LE file without BOM is not usable for that specific application. I suspect that if you can make everything work with UTF-8 (without BOM), that is the best solution in the long term.