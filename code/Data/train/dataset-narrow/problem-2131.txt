That depends. Can you guarantee with 100% certainty that you will never have any data corruption in the storage system below the filesystem? As a general rule, a filesystem check is functionally mandatory after an unclean shutdown on certain filesystems (older ones specifically, most commonly ext4), but an unclean shutdown isn't the only situation that can cause the filesystems internal data structures to become corrupted. Non-catastrophic device failures (bad sectors, bad firmware, etc) can cause the exact same type of corruption, so it generally is a good idea to check every now and then even if your system doesn't crash or lose power. This is particularly important with ext4 because: 

If you want some more info, I suggest looking at the NMap documentation, it's pretty exhaustive and probably one of the most well documented open-source projects around. 

The CPU you listed for the build should have a built-in GPU. If the motherboard supports it, it should work out of the box with FreeNAS. If that isn't an option though, just look for a cheap GPU on Amazon that supports whatever interconnect you have available, and check if it works with FreeBSD. The NVIDIA GeForce 210 works pretty well if you just need something to get a text console (it's cheap, reliable, energy efficient, and supported almost universally by modern operating systems). Just about anything that provides a basic VBE interface to the OS (which is almost every GPU you can find these days) should work though. 

The command in backquotes will generate a list of files that contain either 'reporter' or 'publisher' ( tells grep to list files that match instead of giving the usual output, is needed to ensure the alternation works), which are then listed as arguments to the outer command, which in turn searches for 'word' (you can add to that too if you just want a list of files that match). Note that this is not quite as efficient as writing things out as a single regular expression (it searches more times than absolutely nessecary), but it is generally more easily explained than putting it as a single regex. 

It's even worse for an SSD, even though they don't have the second issue listed above, because there are all kinds of other things that can get in your way: 

There's not much you can do to limit a single invocation of to some maximal memory usage without causing it to die. You can however pretty easily script it to copy the file block by block. The above script will copy the first argument to the second, one megabyte at a time while providing a rudimentary progress indicator (that's what that insane looking call in the for loop does). Using busybox, will run just fine with only 1.5MB of userspace usable memory. Using regular and the GNU coreutils, it should have no issue with keeping below 4MB of memory usage. You can also reduce the block size (by lowering the value) to reduce the memory usage even further. 

Depends on exactly what you're using. All the potential options I can think of require you to be able to plug the new drive in while all the old ones are connected, but in general you may be able to do any of the following: 

Yes, it is dangerous, but there's not really anything you as an end user can do about it if you want to use this software (the fact that tech support considers this 'normal' means it's a known issue on their end which hasn't been addressed by the development team, so no amount of you complaining is likely to change anything). If the game itself has to run with admin privileges and there's no way around it, then that's a red flag and you should be avoiding it (no matter how popular it is), because that usually means it's using a rootkit or similar technology to deal with cheaters (which is in and of itself a questionable but moderately standard practice) or that there's an design problem with the software itself that the company does not want to fix (an MMO I used to play had the second issue, the client created a folder directly under at runtime for storing temporary files, and as a result you either had to have things set up just right or run the game as an admin to make it work). If it's just the installer having to run with admin privileges, I wouldn't be too worried. Most installers need this to some extent, although it is reasonably unusual for one to have to be manually run it as administrator (though not unheard of, the primary software product of the company I work for is like this, largely because it does a few things that regular UAC elevation won't allow). 

Most modern CPU's do not technically have a hardware stack (that is, there is no dedicated memory used just for the stack, largely because it's inefficient and you can't be sure exactly how much space you need on any real system). Almost all of them do have a stack pointer register however, which is what gets used by instructions that operate on the stack. However, each process still has it's own stack (actually, usually at least two stacks, but that gets into the intricacies of privilege separation between the OS and user programs, and isn't entirely relevant to the question), but the stack pointer register is shared by all processes (this register is part of what is saved and restored during a context switch, together with most of the rest of the CPU state). To answer the second half of your question somewhat bluntly, multitasking is an illusion, it just depends on the scale. Each individual CPU core can run one process at a time, and it (usually) will switch between all processes on the system that aren't waiting on something at frequencies high enough that they're functionally running simultaneously from a human perspective (most operating systems with processes at a rate of 100 to 1000 times a second, which is still more than enough time for hundreds of millions of CPU instructions to be executed in each process). Looking at this a bit differently, a single core CPU is like a person, it has to switch its focus regularly to 'multi-task', and a multi-core CPU is like a team of people, each person can only do one thing at a time reliably, but taken as a whole, the team can easily work as many tasks as there are team members. However, for the purposes of your class, all of this is either irrelevant (if the class is taught using a minimalistic OS like CP/M or DOS, which don't do multitasking, and therefore have a single stack, period) or will be covered in due time (if it's taught using a real OS like UNIX, MINIX, or even one of the various modern commercial offerings, all of which do multitasking, which is often covered near the end of the class because understanding it requires understanding the basics (like how a stack works)). 

So, to answer your question regarding RAM versus the CPU cache, technically both, but the data ultimately comes from RAM in almost all cases. If you're interested in learning more about this specifically, I would suggest reading the following two Wikipedia articles: $URL$ $URL$ Now, as to the matter of swap space, that is a completely different concept that is tied to virtual memory and paging. Trying to explain that here would result in me writing most of a couple of Wkipedia articles, so I'll just pooint you directly at the articles in question instead: $URL$ $URL$ 

For the CPU: If it's not throttling itself, then you're fine. All modern CPU's will handle thermal management reasonably well themselves, up to and including shutting down when they get to critical temperatures likely to cause permanent hardware damage. Note also that Intel CPU's run notoriously hot (the 70 degree celsius you're talking about is normal operating temperature for a fully loaded fourth generation Core i series CPU). The actual measurement here is usually taken by a sensor in direct contact with both the silicon itself and the surface of the case that the heatsink is in contact with. For the GPU: Similar advice to the CPU. If it's not showing performance issues, it's probably not an issue. I've got a laptop with GTX 1060 that regularly runs in the 70 degree celsius range when gaming, and even that doesn't cap out the fans at max speed (based on some rough math I've done, they should cap out when the GPU s at around 80 degrees celsius), so you should be just fine running at 70-71 degrees constantly. Similar to the CPU, the actual measurement is being taken by a sensor embedded in the silicon itself near the part that is in contact with the heatsink. For the 'Case Temperature' or 'Motherboard Temperature': Unless you've got a really fancy system that has sensors rigged to measure airflow temperature, these readings are taken by a sensor integrated (similarly to how it's done with the CPU and GPU) into the main chipset (the PCH on Intel systems,, or FCH on AMD, either way it's the modern equivalent of a south bridge). These usually run in the 30-40 degree celsius range, but it would not surprise me to see them running much hotter if your system is either really compact (like an HTPC system or laptop) or mostly passively cooled (passive cooling translates to a higher ambient air temperature inside the case). For the disks: Get a program designed to read the thermal data direct from the drives (Crystal Disk Info is what I use on Windows for this, it also reads the other firmware self-check data, and can be configured to run in the system tray and pop up a warning if the temperature gets too high). For regular hard drives, you generally want to keep them below 50 degrees celsius (typical long-term temps on idle consumer drives are just short of 40 degrees celsius as a point of reference). The actual measurement is usually done by an airflow temperature sensor inside the drive itself, but may be handled by sensors on the heads instead (in which case you're essentially measuring the actual temperature of the disks). For SSD's, the temperature doesn't matter as much, but should ideally be kept within similar ranges to the CPU or GPU at the upper limit. With an SSD, you usually have an internal sensor similar to how it's done for the CPU and GPU, though some of the nicer ones have one sensor per flash chip and then report an average of all the readings. In general: Based on what I've said above, your actual case temperature is probably well below 70 degrees celsius except for right around the individual chips. You can easily check this yourself simply by putting your hand near the case exhaust fan. If it's actually 70 degrees celsius inside the case, the airflow from that fan will be too hot to keep your hand in it for more than a few seconds. Additionally, as a general rule, most consumer electronics (other than batteries) are designed to safely operate at temperatures up to 80-85 degrees celsius. Until you are dealing with stuff running that hot, you're generally fine. Finally, slightly off-topic, but your system is going to produce the same amount of heat at a given load regardless of what temperature it's running at (for example, a Ryzen 7 1800X will always produce roughly 95W of heat at full load), what actually matters is how efficiently the cooling system can dissipate that heat (which is why big fancy heatsinks result in lower operating temperatures, they're more efficient at moving heat away from the CPU).