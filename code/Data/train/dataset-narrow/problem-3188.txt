I'm not sure what exactly you have tried to install Qt Charts, but there's package you can install with . Alternatively, you could build Qt Charts from source. According to their build instructions, it should be as easy as running 

Try flashing a new SD card and running from it. Try running a vanilla system with no extra software installed, and without any extra hardware connected to the board (USB sticks and the like). Perhaps you're doing that already, in which case I have bad news for you: you probably do have a faulty RPi. Kernel panic events often don't go to syslog: writing anything to the filesystem is foolish when the system is about to hang up. I wouldn't trust SSH to get all the messages either. If you really want to know what is happening, you should set up a serial UART connection, add to your and wait for the crash to happen with another computer collecting messages from the UART. Once you get those messages, check them for clues. 

and check out the library name that your program expects. Chances are, it corresponds to its SONAME which you can find with 

(make sure you replace with the ID you get in your system) Note that option does just that: swaps X and Y axes. If you also need to invert an axis, you should use: 

These sensors react to magnetic field near the current-carrying conductor which is proportional to the current. For currents exceeding 50A, you're going to need something like an ACS758: 

then try to install again. If that doesn't help, I'd simply reflash the OS and restart from scratch, unless I had a very good reason not to. 

This is a USB pin header cable. You can order one on e-bay (though you'll probably want a longer one compared to what I have found), or salvage it from an old USB mouse or keyboard. Measure the distance between the pins in the white connector. Usually, it's 2.54 mm (aka Dupont pin header), but it may be one of these: 

You completely bypass the protection circuit. the RPi has several components on the power socket, such as the polyfuse F1 and what appears to be a polarity protection Q3. When you backfeed from the USB, those components are essentially excluded from the circuit. Should your RPi fail for some reason, it will draw excessive current until your hub or HDD or laptop cut it off. That is, if those devices happen to have their own protection. You're stressing components with excessive current. Everything going to the USB socket (capacitors, PCB traces, power switches) are designed to support the current of a single USB load, 500mA max. Now, the whole current consumed by the RPi (and other USB devices you may have) goes through this path. Now, good electronics are designed with a fair amount of margin, which is why you don't see smoke right off. But beware: most components have reduced lifespan when stressed with excessive current, so your RPi will live less happy years if you constantly power it in this way (and when it will die, GOTO #1). 

There are boost converters which can provide 5V 300 mA off a single AA battery (example). Of course, the battery won't last long, but it seems that's OK for you. 

Try removing or packages. Please check the list before removing, since AFAIK those packages are pulled as dependencies of your desktop environment, and you don't want to remove that. 

will install a package with a simple program for instrument tuning. It will analyse the sound captured by the microphone and tell you which note is being played (and the corresponding frequency): 

It won't be a 100% guarantee against corruption, but it may be good enough for a practical solution. 

The RPi has a 47uF capacitor on the 5V power line, and the low-voltage warning triggers at 4.6V. Assuming 750 mA power consumption, it's OK for the RPi to be unpowered for 

GUI in Linux is modular and client-server. A display manager (as its name suggests) manages your displays, and nothing more. You will need an X server (which doesn't have to be running on the same computer BTW) to have any displays in the first place, and a desktop environment if you want to have something on your display besides a mouse pointer. The relevant packages to install are and , but there's a high chance that I have missed something, so if your goal is to use the GUI, just install Raspbian with GUI included. 

The presence of this connector didn't prevent this BPi from getting its FCC certification. As an owner of a BPi (not this model exactly, but equipped with onboard WiFi as well) I can say that the performance of the antenna shipped with the board is decent, but not stellar. I have also tried out this antenna which improves the range by a few meters. To sum up, don't expect drastic improvements from passive antennas, and in case of the RPi 3 be ready to get worse performance, since the schematic was optimized for the onboard antenna and may not match the impedance of UFL antennas and cables. 

Since you want to analyse the performance of a particular program, the right tool to do this would be , which is included in package. It is a complex and powerful tool which ought to be learned before you can use it in full. However, obtaining CPU load statistics is easy: 

As far as userspace programs are concerned, it's pretty easy to fool them and fake the contents of just about any file. For example, suppose a C program is using file to verify the serial number. The program is copy-protected and tied to the serial, and I don't have the source code. However, I can still run , which will reveal something like: 

It will be also be beneficial for your SD card since you won't be installing upgrades for that package anymore. 

There are HDMI to LVDS kits sold on the Internet, which may get your screen working with the RPi (example). You'll need to find out your LCD part number (should be written on the LCD somewhere, or can be found in the repair manual), and the seller will tell you if they can find a suitable adapter for it or not. Mind you, your "tablet" won't be as cool as you imagine, as it will be permanently hooked to a wall-wart adapter to power both the screen and the RPi. Of course, there's no way to run regular Windows on the RPi. 

(which I assume is the IP of your Windows computer) and (which you configured on your RPi) are not in the same subnet, that's why the connection cannot be established. Try setting the RPi IP address to e.g. and try again. 

Not sure what the "rate of output" means, but HDMI 1.3a runs at a frequency of 340 MHz and a data rate of 10.2 Gbps. No need to measure that. 

This projector doesn't seem to be supported via USB even in mainstream Linux distributions like Ubuntu, let alone Raspbian. Like Steve said, your best bet is an HDMI to VGA converter. 

This ID card is a HID device: it emulates the keyboard and sends information as keystrokes, as if you have typed it yourself. To read it, your script needs to open STDIN and read from it, the same way the terminal does. In Python, you could do something like this: 

Of course, there's no guarantee that this will exactly match the information published on the Raspbian download page (after all, it's just a page, you can write anything you want in there), but I expect this to be the case. This sets a limit on how old packages on the system may be: if the system was deployed from image created on January 1st, 2016 it is guaranteed not to have packages from 2015 and older (unless the user made a downgrade). However, this doesn't mean this system has packages that are 1 year old: if the user has run an upgrade on January 1st, 2017, the system will have the same packages as the system deployed from a 01/01/2017 image. 

is to remount your root read-only beforehand (did you?). If a write on happens while your backup command is running, your backup may end up to be inconsistent. A safe and simple alternative is to backup your SD card using a PC. Also, double-check that runs without errors, perhaps post a message you get at the end. No two SD cards have exactly the same size, and if your new card is a little bit smaller than the old one, you may be writing incomplete image on it, which will fail to mount. 

Change ownership of to the right user on the samba server. Let the right user to create a new folder on the samba share. This would require to have write permissions for users of the share. Any directory created by those users will be owned by them automatically. 

This command will reinstall the package, prompting to replace any configuration files you may have modified or deleted. 

Especially since you want to inlcude a battery, I suggest you get a bigger case without any pre-made openings, and only make the openings you will need. This way you will have plenty of space to arrange your components, and limit the possible steam intake to a minimum. For example, I have once used a case similar to this one: 

SONAME is typically slightly different, e.g. , and renaming (or symlinking) your library to that name will help. Edit Since the above doesn't seem to help, here's one more thing I would try. Add the full path containing to . Then run 

If WiFi won't show up with stock images, this ought to be a hardware problem. You may want to check out output to see if the exact issue is reported. Try starting your RPi with no external hardware connected to it and see if WiFi shows up. If it doesn't, get a replacement board or buy a WiFi dongle. 

is not pressing A, it presses the key number 4, which corresponds to in en-US layout. Your layout is different, so you get a different character for the same key. PS. If you need a quick hack to convert strings between QWERTY and AZERTY layouts in your scripts, that would be: