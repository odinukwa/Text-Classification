How did you install Webmin? Your installation is broken. You should probably try uninstalling it and reinstalling. The "Missing Content-Type Header" error probably means the Perl path is incorrect in the files you replaced...look at the shebang line at the start of the file. It should point to wherever perl is installed on your system. i.e. if perl is in /usr/bin/perl, the shebang should be: #!/usr/bin/perl 

The updates module in Virtualmin/Webmin never does a dist-upgrade (it doesn't even know how). But, if one were done before from the command line, or if you were already on the rolling unstable ("sid") distribution, you would get upgrades like this whenever a new release is forked by the debian folks. In that case, I think you were already running unstable, it just hadn't been forked into "9" yet. At least, that's how I understand it. I'm not really an expert on Debian and apt. But, I do know about Virtualmin. If everything is still working, I probably wouldn't do anything (rolling back can be tricky, too). On Debian, we don't provide many binaries, just a bunch of Webmin modules packaged as debs, and most things will work across version changes without much trouble. There will be pain in the future, as they change things...it's impossible to predict what will change, however. Newer versions of things (like MySQL, PHP, Apache, Dovecot, Postfix, ClamAV) often require changes and updates within Webmin and Virtualmin in order to work. We try to stay on top of changes, but sometimes it can take as long as a few weeks to show up in the next release. Also, you may need to update paths in Webmin for some of your services. If you find yourself looking at a "X does not appear to be installed on your system" warning, and you know it is there, you'll need to re-configure the module to point to the right location for the config files, start/start commands, etc. The switch to systemd has already happened in Debian 8, so the biggest change was already in place, and Webmin has supported systemd for a while. Finally: You're now on the bleeding edge of Virtualmin development (and Debian development). So you're going to have to be an active participant, or end up in a messy situation. While we don't support Debian 9 yet (we don't support new distros until they are officially released, because a moving target is much harder to hit), you can file tickets about new versions of software that comes along if they break things. e.g. if MySQL 5.7 or MariaDB 10 rolls into the repo and onto your system and something breaks, let us know about it in our bug tracker. Our answer will probably be "it'll be fixed in the next release of Webmin/Virtualmin", but we may also be able to provide workarounds until then. Hope this helps. Disclaimer: I work on Virtualmin/Webmin. 

We recommend you use SCL versions of packages, so that the PHP versions can co-exist peacefully with each other and not cause the conflicts you're running into. I've got Remi's PHP 5.6.15 packages running on our new server, under Virtualmin, and it's working fine (I did have to tweak the detection code in php-lib.pl, though that won't be needed in a few days when new Virtualmin comes out). Also, you should use the fcgid execution mode, and not mod_php. mod_php can only exist in one version in a single Apache instance and will never work with multiple versions. fcgid is the default execution mode in a Virtualmin system installed with install.sh, but it is configurable in System Settings:Server Templates:Template Name:Apache Website. "Default PHP execution mode" is the option you want, and FCGId is the right value for using multiple PHP versions (and for a variety of other good reasons). Current version of Virtualmin doesn't support all of the SCL PHP packages, yet, but the next version will handle arbitrary versions easily (and will likely have the ability to query the SCL command to figure out what your preferred PHP version is; I don't know how much of that has been implemented yet). There has been quite a bit of discussion about this subject in our forums over the past few weeks, as SCL has gotten more PHP versions, and as Virtualmin support for SCL packages has been expanded. There's some docs here (which I'm not sure if Eric has updated yet, to address recent changes in SCL, but they will be soon if not already): $URL$ 

The mail relaying module documentation that Doruk has mentioned is not at all relevant to this particular issue. You do not need that module for normal mail service, or to get rid of this error. You should not refer to that particular page at all for installation and initial configuration advice. I don't have any servers with Sendmail handy, so I can't tell you specifically how to correct this sendmail error. The name server error is super easy to fix, though: edit /etc/resolv.conf and add 127.0.0.1 as a nameserver. I am wondering, however, why you've opted to install Virtualmin manually, if you're a newbie? It is incredibly challenging and time-consuming to setup a full-featured virtual hosting system (which is what Virtualmin manages). We provide an install script that does all of that configuration for you automatically on our download page at $URL$ It sets up all of the components you need, and they will all Just Work when the installation has completed. You're currently nowhere close to getting a fully functional Virtualmin system, even after you've fixed these two little errors; you'll have a couple dozen other configuration changes to make even once these are fixed, and most of them are far more complex than these two. I strongly suggest you not try to manually configure a virtual hosting system from scratch if you aren't an experienced system administrator. We have some documentation about a manual installation of Virtualmin, but it's not complete, and it expects a pretty high level of knowledge (because we expect non-technical users to use the install script we've provided). 

Virtualmin does not prevent you from running things outside of the suexec docroot. It is one of many options for running PHP applications. Select the virtual server where you'd like to run applications outside of the suexec docroot, and click Server Configuration->Website Options. There you can choose whether to run scripts as the server owner (which enables or disables suexec), among other things. If you want that to be the default for all virtual servers created in the future, you can edit your Server Templates under Apache website. But I would recommend you only do this for the one virtual server that needs to be able to run stuff outside of /home. And, are you sure you don't want to just install your applications into /home? It allows them to be backed up as part of the normal Virtualmin backup process, in addition to the security benefits of suexec. 

Always run up to date software. Virtualmin will show you packages that are out of date, assuming you used our install script to set things up, and you use packages for everything. If you didn't use the install script, you'll want to install the webmin-security-updates module. Most exploited systems happen because it has old exploitable software on it. Web applications can be a little harder to keep up to date, since they usually don't come from system packages, so you'll probably need to keep an eye on those manually. Use strong passwords. A strong password is one with numbers, letters, and possibly special characters. It is 8 or more characters in length. It is changed at least once or twice a year. Don't run services you don't need. Look at your process list and your startup applications and make sure you know what all of them do, and if you don't need it, shut it down. If you don't know what it does, Google does. 

Did you install Virtualmin using the install.sh auto-install script we provide at Virtualmin.com? Or did you install Virtualmin manually? The behavior you describe means your scripts are not being executed using suexec, but rather as the Apache user. If you used the install script, suexec should be configured, by default for all script types. If you installed manually, you'll need to set that up yourself, as well as recompile Apache (or, install the apache2-suexec-custom package, and configure it for /home, if you're using Debian/Ubuntu) to set the suexec docroot to /home. We have some documentation about manual installs on our website, but a manual install still requires pretty significant knowledge and a big time investment. We recommend using the install script on a freshly installed Grade A supported OS, as documented on our Download page. I don't know anything about gitweb, so I'll leave those questions unanswered. 

What you want is not actually a chroot. You want the DefaultRoot setting in ProFTPd. You can set that in Virtualmin by browsing to Webmin>Servers>ProFTPd Server>Files and Directories, and set the option labeled "Limit users to directories" to "Home directory". Save it, and click "Apply changes" in the upper right corner. 

Re-Check Configuration will detect whether suexec is misconfigured in some way on your system, but since it works sometimes, it means you have some configuration over-riding Virtualmin's settings in the Apache configuration. suexec not being called for some domains or directories is the source of your trouble. That would indicate a few possibilities...mod_php doesn't work with suexec, so you'd need to use FCGId mode or CGI mode in order for suexec to work. My assumption would be you've got some custom PHP handlers in your httpd configuration that are leading to mod_php being used for some applications rather than CGI or FCGId. Virtualmin only controls that with domain-level specificity, so if it's really "sometimes" for a given domain, it has to be directory level or more specific. So, check your configuration file for custom handlers that lead to mod_php being used instead of FCGId or CGI. Also, MPM is incompatible with mod_php, as far as I know. So, if you're ever using MPM, you should even be loading mod_php, as you can't safely use it. 

This is kind of an old question, but I know a lot about the subject (I'm one of the developers on both Webmin and Virtualmin), so I thought I'd chime in: Webmin uses about 10-12MB of memory on a 32 bit system, and about 50% more than that on a 64 bit system (this cost is paid for all software, but particularly for software written in dynamic languages like Perl, Python, PHP, and Ruby). CPU usage for one user is negligible and can be pretty much ignored. If you enable resource data collection (which I think currently only happens if the Webmin server is being managed by Cloudmin), it'll have a cronjob that eats a bit of memory and CPU every few minutes, but should also be pretty minimal. Virtualmin is another story, and answering the question is more complex. In its default configuration, on a system with more than 512MB of RAM, Virtualmin will use about 100MB (more on a 64 bit system), as it will cache a number of libraries and data structures for performance. Because Virtualmin abstracts dozens of services (Apache, BIND, Postfix, MySQL, monitoring, resource usage, stats, users, groups, applications, etc.) into a single "virtual server" and strays from Webmin's model of only ever editing one configuration file at a time, generating a lot of its pages is much more resource intensive...thus the caching. This is configurable, and there is complete documentation on tuning Virtualmin for low memory systems in the Virtualmin.com documentation, including turning off caching and making Virtualmin take the same ~10MB as Webmin. In recent versions of Webmin, the performance difference is actually quite small if the system is not used by more than one user. But, it's hard to accurately gauge memory or resource usage in a system running many services. Shared libraries may mean that memory usage of a specific application could be much lower than it appears. Anyway, we run Drupal for Virtualmin.com, and obviously we also run Webmin, Virtualmin, and Cloudmin on the same system. I worry about performance quite a lot these days, as our system is under pretty significant load most weekdays, but Webmin is never where I look for tuning opportunities. There's always something more pressing and more demanding of resources when I dig down to see what is slowing us down. So, I'd advise you to not try to guess at what might be hindering performance, and instead look at the usage data, and find the actual resource users and try to alleviate those issues. (Virtualmin can actually help there, though I don't think Virtualmin GPL has the resource monitoring and charting yet). Hope this helps. If you you do have problems with Webmin or Virtualmin, we're always happy to help. But I doubt your Drupal performance issues have anything to do with Webmin or Virtualmin. 

I'm one of the developers on both projects. It is pretty much always safe to use Webmin and the command line on the same configuration files. We're system administrators ourselves, and it would infuriate me to not be able to hit the command line. As long as the service itself (Apache, Postfix, whatever) can read and parse the file, Webmin should be able to, as well. And it will never overwrite your changes...next time you visit the service in Webmin, you'll see the new configuration. Webmin always works directly on the files and there is no intermediate step or database. Virtualmin has a small amount of its own meta-data, and it would be possible to break stuff in a Virtualmin system, while not actually breaking the configuration for the services it manages...but it's pretty rare. Virtualmin is also designed to allow configuration via the command line. You generally don't even have to think about the spots where it might cause trouble, because they're things you, as a reasonably knowledgeable sysadmin, wouldn't do. Like messing with GID/UID of users, which would break associations between domains and users. One other area to be aware of: If you change passwords outside of Virtualmin using passwd or something else, it will not be able to update all of the other related passwords to match (which may or may not be a big deal; just depends on your use case and your users). There is a command line tool for Virtualmin that allows command line changes to anything in Virtualmin, including password, as well...so you can still script things that wouldn't be safe to change outside of Virtualmin using that command line tool, or the HTTP API. So, in short, if being able to edit configuration files is important, I think Webmin and Virtualmin are probably the best options available. At least, I don't know of any other full-featured control panel that does this. It is pretty hard to do, so most projects and products punt and rewrite files from templates and such. 

Add more memory. 768MB is probably the minimum, if you want to run everything Virtualmin manages (mail with AV/spam, web, databases, mailing lists, etc.). Not because Virtualmin is big...it can be as small as about 11-12MB, but because some of the services it manages are very big, particularly ClamAV. If you need to free up memory, but need all the primary services, giving up ClamAV is probably the biggest bang for your buck. Reduce the number and/or size of services you're running. Add swap, either a partition or a file. This may or may not be a reasonable solution. If your system is busy on all services (e.g. mail and web and databases all work hard), then swap will just turn the problem from "services stop working sometimes" to "services are all really slow". But, it'll stop the system from killing Postfix due to memory.