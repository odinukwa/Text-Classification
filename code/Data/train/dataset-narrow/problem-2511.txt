I wanted to know as to how often are the submissions for ECCC cleared? Or do we know when is the next set of uploads going to be made on that site? Unlike arxiv where I know when my paper will go online, on ECCC there seems to be no way to know what is the timeline of my article. Last time I had submitted something on ECCC it took about 3 days for it go online. This time I am wondering as to why its taking longer. (..I had gone by this previous experience of 3 days to plan that I would refer to this online index number as reference for an upcoming talk of mine but now it seems I can't do that because the timeline looks indeterminate..) 

If one looks at the space of all polynomial sized threshold circuits (at constant depth or not) then do we know of any natural complexity class in which they sit? The closest I know of is that the class of depth 3 threshold circuits with no weight restriction are known to be in $NP/poly$. What happens at higher or non-constant depths? Is there any class of circuits against which we know that there cannot be exponentially hard functions if $P=NP$? (Threshold circuits are clearly not of this type.) Are there reasons to believe that for each depth $d$ there exists a Boolean function which is easy for depth $d+1$ but exponentially hard for depth $d$? And if such functions are found then would it have any implications (separations) for the other usual complexity classes? 

(I am hugely editing the question. My initial question was if lowerbounds on threshold circuits say anything about P/NP and it seems that they dont. Irrespective of P/NP its an independently true fact that there exists Boolean functions which are exponentially hard for threshold circuits just that we have never seen them.) Let me ask my followup question in $3$ parts which I guess are related, 

Do we know of instances of $Max-2-Lin(\mathbb{Z}_2)$ which have a integrality gaps w.r.t to high degree (> 4) SOS relaxations? 

Before this paper was there no other function known in the $Th \circ Th$ or $Th \circ Maj = Maj \circ Th$ or in any other $TC^d$ class with such high sign-rank? What other functions do we know of which have a high sign-rank? I can see it to be known for only a handful of examples like the Minsky-Pappert function, a depth $3$ $AC^0$ generalization of it (in a Razborov-Sherstov paper) and another in a Bun-Thaler paper and Inner-Product-Mod-2. Are there others? (If yes, then can you kindly link to references to their proof?) The page 4 and 5 of this paper give some intuition about what makes a Boolean function have a sign-rank. It would be great to know if others have more insights to add to this discussion. Are there maybe any "folklore" thumb-rules which help judge if a function has a high sign-rank? 

I guess that the author is claiming the following identity,for all subsets $S$ of size at most $t$, $\sum_{S' \subseteq S, S' \text{independent in the subgraph induced by }S} ||U_S'||_2^2 = 1$ Can someone clarify/prove that this above statement follows from whatever has been defined about these vectors $U_{S'}$ on page 4? (Is the author claiming that this equality above is a consequence of how he has defined the feasible set of $U_{S'}$ vectors in the top box of page $5$?) 

As Pinja noted, a paper by Andersson et al. (arXiv)(DOI) has been especially useful. The paper goes into a great deal of detail, and I finally sat down today to take a proper look at it. As an example problem, I picked two qubits with an exchange interaction to check this which is a minimal version of what I'm considering. To begin, the master equation is given by $$ \dot\rho = \Lambda(\rho). $$ The method requires that basis operators of the system are chosen. It is convenient to give these in terms of the Pauli matrices in the case of two qubits, but for a qutrit one would employ the Gell-Mann matrices. Defining $\sigma_i = \mathbf{1},\sigma_x,\sigma_y,\sigma_z$ for each qubit, this system has a basis built up of the tensor products of these with a factor of $1/2$ for normalisation, yielding 16 operators $G_i$ e.g. $G_5 = G_{xx} = (\sigma_x\otimes\sigma_x)/2$. Sticking with Hermitian operators keeps things neat as well, since some daggers can be neglected. A special matrix is now composed called $L$, which is related to the master equation. $$ L_{n,m} = \mathrm{Tr}[G_n\Lambda(G_m)]. $$ If we are dealing with the master equation as a matrix acting on a vectorised density operator as discussed in the question, then this can be expressed as $$ L_{n,m} = \mathrm{vec}(G_n)^\dagger\,\Lambda\,\mathrm{vec}(G_m), $$ which allows L to be derived in a single matrix equation, but that's getting a little off topic. In the sample case I considered, $L$ is does not contain time varying terms, so it may be exponentiated to get a new matrix $F$, which is related to the solution of the master equation $\phi$ $$ F(t) = \exp(Lt). $$ $F$ can be used to get a Choi matrix $S$, which is exactly what I need. At this point, a basis needs to be chosen for the future Krauss operators. I'm quite happy with the Pauli operators so I'll stick with those for this next equation, $$ S_{a,b} = \sum_{n,m}F_{m,n}\mathrm{Tr}[G_nG_aG_sG_b]. $$ Finally, the wonderful part. $$ \rho_t=\phi_{n,m}(\rho_0,t) = S_{n,m}(t)G_n\rho_0 G_m^\dagger $$ As you can see, $S$ is a matrix of weights for a sum of superoperators in a useful basis that I can select. This has been referred to as the process matrix (arXiv)(DOI) which is unique to a process in a given basis. In the sample case, in which the master equation has no time dependent terms on the RHS, the solution can be directly verified by representing $\Lambda$ in matrix form and exponentiating it to get $\phi(t)=\exp(\Lambda t)$. This works in the time independent case for quits and qutrits as expected. I need to check that this works in the case of time dependence. 

This package (CUGates.m) was announced on the arXiv a couple of days ago which could be useful for you. It uses Mathematica. I haven't tried it out though, and it may or may not do what you need. From the abstract: 

I'm more of a quantum optics guy than a quantum info guy, and deal mainly in master equations. I'm interested in operator-sum form, and I'd like to derive the errors in this form for a small quantum system that I'm simulating. The catch: The quantum system is driven by an external (classical) field modelled with a sinusoidal function, and the damping rates are low, so I can't make a rotating wave approximation to eliminate this time dependence. Given that I must solve the master equation numerically by integration, and the result of each integration at time $t$ is not sufficient information to figure out these errors, and I need to do some work to recover the superoperator matrix that has operated on a vectorised density matrix. i.e. I feed the master equation a vectorised density matrix with a single entry of 1 and the rest zero, and build the matrix like that for a particular time $\tau$. Am I on the right track here (sanity check)? More explicitly, if $\mathrm{vec}(\rho_{ij,t=\tau})$ is the vectorised (so it's a column vector) form of a density matrix with a single entry of 1 in position $i,j$, at $t=0$ that has been evolved to time $\tau$, then a matrix to take the vector form of the density matrix from $t=0$ to $t=\tau$ is given as $\mathbf{M}=\sum_{i,j}\mathrm{vec}(\rho_{ij,t=0})\mathrm{vec}(\rho_{ij,t=\tau})^\dagger$. The question: Given this superoperator $\mathbf{M}$ that does $\mathbf{M}\,\mathrm{vec}(\rho_0)=\mathrm{vec}(\rho_\tau)$, how can I get Krauss operators for the operator-sum equivalent of $\mathbf{M}$ that are in a useful form? i.e. the system in question is a qubit or a qutrit and another qubit or qutrit. I'd like to be able to do the operator sum in the form of tensor products of spin matrices on each channel if possible. Side question: Is $\mathbf{M}$ a Choi matrix? Final note: I awarded the acceptance to Pinja, as I used the paper Pinja suggested. I have provided an answer myself below that fills in the details. 

Apparently the second of the above statements is either equivalent to or implies that if the $\lfloor \log (\frac {n}{2} )\rfloor-$bit Boolean function picked is such that it indeed cannot be matched on $(\frac{1}{2}+\frac {\epsilon}{3})-$fraction of the inputs by any depth $2$ linear threshold circuit of size $s \leq \frac{c \epsilon^3 n^{\frac {3}{2}} }{\log ^3 n}$ then with probability at least $1-\frac {\epsilon}{3}$ this function's truth table is the same as an $\frac{n}{2}$-bit string picked uniformly at random. I don't understand why! 

Given a $f: \{-1,1\}^n \rightarrow \mathbb{R}$, I want to compute this quantity, $\sum_{ \hat{f}(S) \neq 0, S \subseteq 2^{[n]}} \vert S \vert $ i.e the sum of the sizes of the subsets of $[n]$ corresponding to the non-zero Fourier coefficients of the function. 

I am interchangeably using the words "query complexity" and "running time of the learning algorithm". I hope this is okay. If not then it would be helpful if you could point out the subtlety that I am missing. 

Is there any class of non-convex objective functions for which (stochastic) gradient descent can provably get to a local or a global minima? (..maybe in the approximate sense like a point such that the spectral norm of the Hessian is bounded by some epsilon..) 

For what graphs do we know that their small set expansion property has a low degree SOS proof? Is this known to be true for say the complete graphs? 

My question is particularly about the set-up in section $8$ (``Analysis of the KV Max-Cut instances") of the paper, $URL$ 

If one wants to say minimize a function $f : \{-1,1\}^n \rightarrow \mathbb{R}$ on its domain then a degree$-d$ Lasserre relaxation of it would be to solve the problem of $\min \mathbb{E}_\mu [f(x)]$ over degree$-d$ pseudo-distributions $\mu$. 

The Razborov-Sherstov paper does use the Minsky-Pappert function as a tool in their final proof on page $16$ whereby they use its pattern matrix to create another matrix which is a submatrix of high sign-rank sitting inside the pattern matrix of their hard function from the "Main Result" quoted above. Its not clear to me if this is somehow implicitly also proving a high sign-rank for the Minsky-Pappert function itself. Is it? 

The Chow's theorem as it stands holds only for a single linear threshold gate. That these gates are uniquely determined by their first $n+1$ Fourier coefficients. Are there other circuits for which such a Chow's theorem is known to hold? Like for depth $2$ LTFs? Or are there reasons to believe that such extensions can't be true? 

It seems to me that there are a few choices here about how to define this relaxation. (A) Is the relaxation now well defined if $f$ is lifted in anyway to a function $f : \mathbb{R}^n \rightarrow \mathbb{R}$ such that on the Boolean hypercube it matches the original value? Next we have in principle $2$ options about how to define $\mu$, (B1) $\mu$ can be defined as any function from $\mathbb{R}^n \rightarrow \mathbb{R}$ such (a) $ \sum_{x \in \{-1,1\}^n} \mu(x) =1$ and (b) when any function $g$ is taken from the real $SOS_d$ cone we would have $ \sum_{x \in \{-1,1\}^n} \mu(x)g(x) \geq 0$. (B2) Or is it necessary that $\mu$ and $g$ be satisfying the above properties but $\mu$ maps from $ \{-1,1\}^n \rightarrow \mathbb{R}$ and $g$ be a member of the $SOS_d$ cone of polynomials each of which is also a map, $ \{-1,1\}^n \rightarrow \mathbb{R}$? (..the "degree" of a polynomial as in the real $SOS_d$ cone may not match the degree of its representative in the $SOS_d$ cone of functions on the Boolean hypercube and there is no unique way to go the otherway..) 

Hey All, I'm currently trying to find a solid masters thesis topic pertaining to some branch of automata theory or related to formal languages. I'm trying to generate some good ideas for what an acceptable topic would be, something ambitious but something doable at the same time. Any suggestions would be very much appreciated! 

I'm currently on the look out for some good reference material relating non-local games with beneficial aspects in quantum communication. For instance, I am aware that non-local games are good at lower bounding communication complexity as well as ensuring the security of QKD protocols. What I'd like to know is, what are some of the big papers in regard to non-local games in quantum communication? Have there been any recent advancements in this field that have been exceptionally important? Are there any good video abstracts/lectures/presentations on the web that parallel this material? Specifically finding some material that relates quantum communication and the CHSH game would be of specific interest to myself as well. Any feedback on this for any one of my questions would be very much appreciated. Thanks! 

Unconditional derandomization of Arthur-Merlin games. It is also known that under hardness assumptions AM = NP. The question is, can we prove unconditionally that AM is a subset of sigma sub 2: $URL$ 

I agree with Artem, but perhaps this paper on a quantum circuit model for constructing conditional statements may be of some relevance to what you are trying to figure out. 

I'm curious if someone could recommend some supplementary material for gaining a deeper understanding of the paper : "Some Results and Problems on Quantum Bell-Type Inequalities - Tsirelson". Specifically something that may elaborate a tad more on the geometric interpretation of Bell-Type inequalities. Perhaps a primer paper or relevant textbook that goes into more detail on these matters. I'd appreciate any/all feedback. Thanks again. 

Since I don't have a partial trace operation, I'm essentially flipping the roles of the primal and dual functions by swapping the maximization and minimization constraints. This may not be the right way to go about it though, so any feedback would certainly be helpful. Basically my understanding is that if you provide the primal problem, CVX is smart enough to solve the corresponding dual (Section 3.7 of the CVX manual). Running the above works, but yields a status failed result, leading me to think that there is something I'm most likely missing here: 

For actual physical implementation of conceptual quantum computing devices and what methods may be best suited for these practices, Nielsen and Chuang's book has an entire chapter which is very well written and easy to understand on this. 

I am aware that quantum entanglement cannot increase the asymptotic capacity of a noiseless classical channel. However, can anyone provide some type of reference in the literature that contains a proof of this particular feature of quantum communication? Very much appreciated. Thanks. 

Quantum computing themed languages such as QCL have been created for thesis projects. In fact any quantum computing based languages I've seen implemented on the web have been done for thesis projects. You could also try to code up a quantum emulator. In the book "Quantum Computing for Computer Scientists" they provide programming drills that collectively add up to such an emulator. 

I'm attempting to formulate the semidefinite programs used in the paper "Hedging Bets with Correlated Quantum Strategies" (specifically those on page 7) into CVX so that I can play around with the values of the SDPs. The CVX package seems to be very straightforward to get up and running, but I'm a bit unsure in how to convert the SDPs in this scenario and how to interpret the results. For completeness and to try to be a bit helpful, the primal and dual problems for the maximization constraint are replicated from the paper below. Primal Problem: maximize: $\langle Q_a, X \rangle$ subject to: $Tr_{\mathcal{Y}}(X) = \mathcal{I}_{\mathcal{X}},$ $\qquad \qquad X \in Pos(\mathcal{Y} \otimes \mathcal{X})$ Dual Problem: minimize: $Tr(Y)$ subject to: $\mathcal{I}_{\mathcal{Y}} \otimes Y \geq Q_a,$ $\qquad \qquad Y \in Herm(\mathcal{X})$ In this case, these are the SDPs which correspond to Bob's maximum probability for winning some quantum protocol between two parties (more information is in the paper, but if you're going to take the time to help me, by all means ask if I can clarify something in a bit more detail). The variables $Q_a$ and $X$ correspond to the Choi-Jamiolkowski representation of the channel for Alice and Bob respectively. My attempt at putting this into MATLAB is as follows: