IPv6 SLAAC can only generate one address per prefix as it's using the MAC to generate a reasonably unique address. Privacy extensions can generate one or more pseudo-random addresses which are then checked for any overlaps on the local segment. Of course, local administrators can assign as many static addresses as they wish -- it's their job to ensure no overlaps. [By reasonably unique I mean the likelihood of a collision is nil. And if it does, you'll have a layer-2 problem first! (two machines on the same segment with the same MAC)] 

Routers use their route table to know where to send stuff. Your IP packet cannot tell my router how to deal with it. (there are options for "source routing" but every sane admin disables it.) Routing flows to the most specific (longest prefix) match. If I have a route for 222/8 and a route for 222.10/16. The latter would apply -- 16 is greater than 8. In your example, the /23 would be the one used because it's the more specific route. 

That's a universal NO. It's never wise to bank on hardware/software no one in the organization understands. Being able to "bring someone in" may sound like an option, but there's a good chance you'll be calling them more than you think. (I've been on both sides of that coin.) 

Host A thinks Host B is "local" because it's within the /16 netmask. Host B would normally answer it unless someone went overboard on "security". However, given the smaller netmask (putting A "off net"), B would never attempt to contact A directly. Once A and B no longer overlap, neither will look for the other locally, but will route any traffic (if possible) through other node(s). (ARP and ICMP are different protocols entirely.) 

The issue is in policing the traffic at the border of your network. If you allow an inside host to form an IPSec (encrypted) tunnel to any outside host, the firewall cannot inspect what flows within the tunnel. At best, the firewall can prevent such tunnels from forming (or try to.) This could allow outsiders past your security measures, or allow information to move beyond your borders. 

Since their "plan" is to create your own NAT64 network, of course. The difference, however, is that Apple builds this hack into their OS. To my knowledge, Microsoft has not. But that doesn't stop you from building NAT64 with whatever system/applications/technology available to you. 

A VLAN is a layer-2 concept. If there's IP (layer-3) connectivity between them, then there's a router somewhere routing between VLANs. It will naturally route between them until you actively prevent it, most often with an ACL. (a more complex setup could be done with VRF.) 

Only if they've been manually added to the table, or a (static) route indicates the target is "local" (i.e. "on the wire".) And that can be done to routers, too. A router and host use the exact same logic to resolve layer-2 addresses for layer-3 addresses. At layer-2 the src is the device asking, and the dst is the broadcast address (ff:ff:ff:ff:ff:ff). The layer-3 information in the ARP request will be similar -- src ip/mac is the interface address(es) of the device asking, dst ip will be the target desired and mac will be zero because that's what it's looking for. 

This is not a supported configuration. The SG line does not support multi-chassis LACP. You might be able to simulate this using two LACP bonds (one to each switch) and then bonding those together in a simple bond. 

Imagine yourself as the router. "In" is traffic you receive; "out" is traffic you transmit. applies to traffic received on an interface. applies to traffic being transmit on an interface. 

Do what it says! CONTACT RADWARE SUPPORT. They're the only ones who can (re)generate your license key(s). If you erased it from persistent storage (internal drive, flash, whatever), and don't have it recorded somewhere, it's gone. We've had that problem enough times to keep our keys recorded elsewhere. (If you're a Radware customer with an active support contract, you should be able to get your keys from the support portal. Or so I'm told.) 

This link on Cisco's support forum may be of great use to you. What you need is a "nat (inside,inside)" rule. (Of course, the correct path is to fix the software... stop hard coding an IP into software where it cannot be changed. Numerous vendors have been bitten on the ass with that one -- builtin ntp server addresses. This is also a lessen in not assuming currently "unused" space is yours to do with as you please.) 

Many residential ISPs offer "static address" as an (expensive) up-sell. It may be hard to find, but it's usually there. In the era of DSL and cablemodems, the always-on nature of the technology makes address scarcity a moot point -- the customer will always require an address. Providing a static, unchanging address is a means to extract more money. With IPv6, it is unlikely any residential ISP will go to the bother of providing static prefixes. It makes for a routing mess, and takes a lot more effort in account management. And IPv6 does, today, support NAT. (as bad an idea as that might be, there's an RFC for it.) 

It's the exact same "power of 2" math... 2 = 2^1, so 2 /12's equal (12-1) /11. 16 = 2^4, so 16 /12's become a (12-4) /8. In theory, in practice, the /12's may not fall on an even power of 2. [See Also: Subnet Table] x.0/12 and x.16/12 can form x.0/11, but x.16/12 and x.32/12 cannot form x.16/11 (because 16 is the middle of x.0/11) 

This is a host-mode command. It does nothing on a router. First, ensure routing is enabled: (it's a default, so won't normally show in the config) Second, enumerate the inside and outside interfaces, and what should be natted: 

The Meraki AP's (the higher end ones) have 3 radios: 2.4GHz, and 5GHz for traffic, and a third "maintenance radio". That 3rd radio is what does all the spectrum monitoring and "security" scanning. It is that radio that can hear the non-associated devices within range of it, as long as they're speaking. (The primary reason is to find/use the least congested channel(s). But it can also be used to find rogue devices. Call up anyone in Meraki Sales and they'll talk your ear off about it.) 

The 5505 doesn't know anything about 172.16.100.0/24. Add a static route or fix your EIGRP configuration so the router tells it about it. 

DSL tends to use PPPoE, which means the link is point-to-point. A /32 is perfectly valid here. In fact, no address at all is still valid -- one would need routable addresses beyond the PPP link, 'tho. In this case, it works because there's only one possible destination on the link. Every packet put on that link will be processed by the other end, and v.v. 

Just a suggestion... if you have some sort of active syslog inspection that can trigger on specific events, you could write a script to SNMP lookup the IP on every switch so know where it was roughly around the time the event happens. (sorry, I cannot find the exact OIDs) Edit: link "Using SNMP to Find a Port Number from a MAC Address on a Catalyst Switch" I forgot about the comm@vlan trick. There are a lot of tables to ping to find all the information needed for a human. :-( 

(Cisco IP-MIB-V1SMI.my) (testing with c1811 @ 15.1.4-M7) (or ) shows 20 elements. And that's exactly correct: 19 IPv4 and 1 IPv6. , however, fails to populate correctly unless it's told to use bulk requests.