From your description, it appears you should be configuring your server as the primary MX for your clients' domains. There are a few addresses that likely should be delivered to you such as , , and . These should be handled by the default file. The default configuration only uses the local part to lookup aliases. You will need to handle your clients messages specially. As you are forwarding to Gmail, you may want to remail the message rather than forwarding it. This should deal with SPF and DMARC issues. Where your are the secondary MX, the variable you need to set is . This should be a list of the domains you will be accepting email for as a secondary MX delimited by (':'). Whitespace is optional, but make the list easier to read. The documentation for the file is available with the command . You may also want become familiar with the Specification of the Exim Mail Transfer Agent document. The command will provide a guided update of the . However, you can edit the file by hand if you wish. You may want to add the domains you are a secondary MX for to /etc/exim4/local_rcpt_callout. Please read the documentation to verify if this is appropriate. Bouncing mail for the domains you are secondary for after you have accepted the message is likely to generate back-scatter spam. This may get your server blacklisted. The default configuration does not support domain names in the aliases file. I use the following to provide domain based aliases, although you likely should not have aliases for the domains you are a secondary MX for. 

I would hope postfix would have similar functionality the address functionality provided by Exim. It is possible add addresses or mark them delivered while they are held. Then when they are reprocessed, the delivery will go to the correct address. The data requiring changing is only the envelope data. (Although if it is going to customer service you may want to notify them of the change.) This is similar to the postman correcting the address on mail sent to the wrong street number. EDIT: It appears you may be able to use virtual aliases to get the message delivered to you so you can re-inject it. 

Use a valid sending address from your domain. is NOT a valid Internet domain. Consider using a address, for which you track bounced email. If you want users to be able to reply use a header with the address to which replies should be sent. 

It is managing the move. This includes finding the files, creating new files, and copying them. All this takes some CPU time. Due to the way files are buffered, it may be possible to this very quickly with the file writes occurring asynchronously to the copy operation. If the files aren't buffered, then the CPU utilization can be quite low while files are accessed. 

HTTP CONNECT is intended for tunnelling and is not required. Blocking CONNECT has no impact on normal sites which generally handle GET, HEAD, and POST requests. Blocking of this sort would assume deep inspection of packets. A web proxy might be a more appropriate tool for this than a firewall. HTTPS will not be blocked by blocking CONNECT. The encryption wraps the connection and the requests passes over the encrypted channel. As a result you won't be able to block CONNECT requests within HTTPS connections. 

Check the TLS/SSL chapter in the Exim Specification. If you have TLS enabled, it will be used on outgoing connections to servers which advertise . TLS will be required for hosts listed in the option. This should be set at the beginning of the Exim configuration file. 

Yes, the GLUE record provide the IP address for the name servers. It is necessary to provide them if the name server's name is a sub-domain of the domain they are a name server for. For example needs a glue record when it is the name server for . However, if it is the name server for a glue record does not need to be provided to the domain registrar. 

The Windows machines should be able to use Samba to mount their drives. The Samba documentation covers this scenario in detail. For linux machines you can use NFS to mount the required shares. I use automount rules to mount home directories. Both these options should work over VPN for traveling users. 

Postfix must accept mail from domains it is not responsible for. Otherwise you would have only local email. An open relay accepts mail from domains it is not responsible for to addresses it is not responsible for. In the following table: Local represents domains the sever is responsible for; Remote represents domains the server is not responsible for; and None represents an empty sender: 

Please don't obfuscate your server's identity. It make it impossible to check the DNS configuration to assist you. You are incorrect in believing that all received are forged. However, they may be. Given the headers you have provided, if the IP on the second header is correct and that IP does not pass rDNS validation, it may well originate from your network. I assume the IP is not from your mail server, as its IP address should have passed rDNS validation. A few things you can do: 

Look at shorewall. Very good documentation, and default configurations for 1, 2, and 3 interfaces. Good capability to show the state of the firewall. Its available as a package, but you will need to do the initial configuration. 

You can fix this by adding a option with the smarthost in the list to your configuration. This will cause Exim to send the STARTTLS command to establish a TLS connection. However, the option may override that setting. You may want to try using port 465 (SSMTP). T It is documented as supported for incoming traffic. It does support for outgoing traffic. I've tested defining a smarthost as instead of . 

I don't see anything unusually here. A limiting factor will the hard disk on the Ubuntu server. Once you reach this limit (appearently 1.5Mb/sec) it becomes the limiting factor on writes. Ubuntu will cache all or part of the file in memory, so read speeds will be less dependent on disk speed. You will likely get an increase in write speed by writing the file to a directory on . This should keep the file in memory so you don't have to deal with latency issues. There is network and system overhead in copying a file so it is difficult to transfer a single file at the full network speed. Wireless is half duplex and often has to share the channel with multiple devices which lowers the transfer speeds. 

As a general rule, never backup the data directory (directories) of a running database. Only backup the directory if you can shut the database down first. If the database is running and supports hot backups, you can backup with the database running. This usually requires communication between the backup software and the database software. Possibly, but I wouldn't count on it. Data may be cached in memory or modified while you are copying it. If you shut down MySQL before backing up the data then it should be reliable. There are administration tools to do backups. These will create reliable backups in another directory. 

Yes, Google would be correct in identifying the SPF failure. The IP address that should be checked is the address which is connecting to Google's mail server. As there is no received header for Google, I suspect your mail server is checking SPF on the connection. It should only check SPF for unauthenticated connections from the Internet. Local connections and authenticated connections should bypass SPF validation. SPF is intended to ensure the sending computer is permitted by the sending domain. Normally a domain would have 1 or 2 mail servers which handle all email send to or received from the Internet. These addresses should be the ones listed in the SPF record for the domain. In this case, appears to be connecting to the domain's mail server. If the server is not on the domain's network, it is common to use an authenticated connection on the submission port (587). The mail server should then forward the message to gmail and SPF should pass. If SPF still fails, the SPF record needs to be corrected to include IP of the mail server. There are several mechanisms that can be used. My Email Policy ensures that all legitimate mail sent from my domain will pass SPF. There are some services which forward messages on behalf of my users which will fail SPF. However, the recorded failures I have received from servers validating have all be spammers. 

You may be running into a network buffering issue somewhere. It may be counter intuitive, but shrinking your maximum network window size may help. Check these links $URL$ I have seen duplex mismatch slow down transfers. This tends to be a one way effect. Transfers run fine in one direction, but slow in the other. This can be tested by timing the transfer of a large (1-2 MB) file in both directions. 

If you have Linux in the mix you can use Shorewall. It is easy to configure and allows easy specification of rules such as you need. It has default configurations for one, two, and three interfaces which make a good starting point. See the Shoreall site. 

You seem to be ahead of the curve on this. Most of the world is having to use tunnels to get IPV6 connectivity. I would try using a standard IPv4 VPN over IPv6. L2TP should be easy to setup. If you know the ports involved and they are all TCP, you might get away with using an SSH tunnel which should be even easier to setup. OpenVPN should run with IPv6 as the transport level between endpoints, but I haven't tried it. 

If you want to use 256 bit encryption, duplication each cipher in order and change 128 to 256 in one of the duplicates. There doesn't seem to be a good reason to use 256 bits, and there are reports that using 256 bits may enable some timing attacks. 

The guidelines may be rather old, but the setup process hasn't really changed. The Exim4 Specification includes a chapter on Content scanning at ACL time that should get you started. I believe you need to install for scanning to work. This is a an extact of my configuration. I've stripped some research functionality. Once you've installed you need to uncomment the line in the main configuration reading: 

.htaccess is parsed every time it applies. This adds a small but unnecessary load on the server. The conf file is only parsed when the server is loaded or reload. Use of .htaccess depends on access being enabled in the conf file. Using .htaccess gives the administrator less control over security as any user who can write the content directory can override the security settings for that directory. (There are configuration options which limit this capability.) On many systems, the web server itself can write content directories increasing the potential damage if the server is compromised. Use to replace reboots of the webserver. You can configure access to SSL keys by the web server if you run any HTTPS services. 

Failing the first two tests are strongly indicative of Spam, or an automated mail source. Person to person e-mail almost always pass these tests, while Spam often fails. The next two tests are indicative of non-Spam. Once you have started sending the email there are other tests that apply. 

It looks like you are getting --one-file-system behavior. This may be the default on freebsd. I also see that your destination is not a root account which should break retaining permissions and ownership. 

Besides deploying the certificate, you may need to create a symbolic link for the certificate. The utility is provided for this. You can also use a command to get the hash value for the certificate. The symlinks have a suffix. Alternatively, you can add the certificate to your LDAP configuration. This could be . Older versions also had settings in . EDIT: The handshake error may be a result of disabling SSLv3 or otherwise restricting the available algorithms. I recently disabled SLLv3 due to the Poodle vulnerability. I included the commands I used to test connections at the end. In your case try a commands like: