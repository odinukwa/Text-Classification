Any ideas on how to troubleshoot? The issue is widespread on almost all interfaces that house servers in the company. 

The above is actually the correct config. You are looking for 80mbs, 16mb, 2mb and 2mb Best Effort. 80% of the remaining 20mbs is 16mbs. This leaves 4mbs remainder available for priority 2 and Best effort. 

The above is the preferred configuration for VoiP phones connected to a client computer. Trunking was apparently the configuration used for older VoIP equipment. When configured as an access port, you can apply QOS to the vlan, prevent loops with STP, and lock down the PC/VOiP phone with port security. FYI, for PC/VoiP phones, you'll need to enable to allow for 2 macs on the access port. This link specifically shows the access port configuration. As for the difference between Trunks and Access ports, a trunk does add dot1q or ISL tags directly to frames and can exist on all or multiple vlans. While an access port only passes traffic from a set vlan but does not modify the frame with a vlan tag. 

I have 4 VWIC2-2MFT-T1/E1 installed on a C2921 router running Version 15.3(3)M2, everytime I enter the framing esf and linecode b8zs, the router accepts the commands but the controller remains with the following configs: 

My internal private IP addressing and another person's internal IP addressing may be the same or similar, yes. On a NAT router or Firewall, you have an inside interface and an outside interface. Using an ACL, or depending on your manufacturer's OS, you determine what internal traffic source is NAT'd to an external address when it crosses the Firewall or NAT router. Out on the internet your public addresses are bought and assigned; there are no overlaps in Public address space. Overlaps in Public address space would cause serious problems. 

Guaranteed delivery. If a packet is lost, TCP will detect and resend it. Packet ordering. If packets arrive out of order, TCP can reassemble them in the correct order. Transmission rate control. TCP allows the receiver to tell the sender to slow down or speed up as necessary. 

Here is a high level view of one solution: Connect the LAN side of the routers and the outside of the ASA in a single VLAN. You will need an additional switch if your routers do not have multiple Ethernet ports. Configure HSRP on your routers, and make the VIP address the default gateway of the ASAs. The router's static route to the inside is the ASA primary address. Configure HSRP to track the interface of each WAN link. So if the WAN link goes down, the HSRP priority is reduced, causing the other router to become the active peer. In this way, only the router with an "up" WAN link will be the HSRP active router. If you want to get fancy, you can set up IP SLA to ping the ISP to verify reachability, not just interface status, and let HSRP track that. Or, you can run BGP with your provider (default route only) to verify reachability. Let me know which way you want to go, and I can come up with some sample configs if needed. 

One solution is to use two L3 switches as your aggregation layer. To lessen the impact of a failure, two L3 switches are used; half of the remote switches connect to one, half to the other. The remote switches are trunked to the agg switches, and two vlans are created for each switch: a user vlan and a management vlan. You also create a VLAN with a L3 interface on each switch to connect your Internet routers. Optionally, you can place a firewall between the routers and your switches. I can go into more detail if you need it. 

I've just lodged a request with upstream to clarify some specifics of their recommended BGP configuration. Currently, I will be dual-homing with my upstream via PI addresses. Advertising via BGP with my own AS, and have requested they pass me a default route. Their recommended configuration is to have two cross-connects, one from each of my primary/secondary router, connecting to their primary/secondary router, respectively. My primary would their peer with their primary, and my secondary with theirs. This is all fine (aside from the potential no-connectivity scenario if my primary is down, and their secondary is down). But my confusion is this: My provider is suggesting that by taking only a default, I am going to have an active/standy configuration, and that I need a full set of routes for active/active. My understanding was that if I'm only homed via a single ISP, then a full-feed becomes effectively pointless, since all traffic is going the same path either way. What am I missing that would cause this to be an active/standy configuration? Surely the secondary router, if traffic hits it, is going to prefer to send out it's local default gateway, as opposed to first sending traffic to the primary? Taking it from another perspective, I can't see how full routes is going to change the behavior (ignoring possible traffic engineering scenarios), since both routers would have the same set of routes from upstream. 

My Goals Essentially, I want to be able to achieve optimal routing between POPs as we deploy them. But right now I am not able to achieve any level of control over how iBGP is choosing it's paths. My current design 

EDIT: 30/01: I think that I am wrong about how IGP cost is calculated and perhaps they are currently the same? All my OSPF routes are type E2. If the IGP costs are the same then I suppose it makes sense best path selection happens based on RID, which in this case the RID of the MEL BDR would be lower than SYD. I have set the OSPF link cost between Sydney to 15,000 much higher than default. I've calculated this to work reliably with our 100 Gbps reference bandwidth. In terms of OSPF link costs - this is OSPFs preferences of each next-hop of the BGP routes: 

The backbone routers of ISPs (to be precise, Tier-1 ISPs) constitute what is known as the "default-free zone." In this zone, there are no default routes -- every route that is announced on the Internet is carried in the router's route table. It's simply a matter of counting the table entries. If you want to count yourself, you have to arrange a BGP peering session with your ISP and have them send you all routes. Happy counting! P.S. the exact number is constantly changing as new networks come on-line or get disconnected. 

The router will provide an address to the AP. Connecting the AP to the PoE port is not currently supported by Cisco. In this small network, there is no need for multiple VLANs. The AP will find the controller because they are on the same VLAN. If youwere to have them on different VLANs, you could use either DHCP options (as @ronmaupin explains) or use DNS (my preference). 

You've made the classic mistake: Different manufacturers use different terminology HP calls them Trunks-- Cisco calls them Port channels In other words, you're using the wrong commands 

There's no accurate way, but you can infer it from other things. In addition to Eragon and Jens' ideas, you could sniff traffic on the local network and look for non-local addresses. The destination MAC is the MAC of the router. 

VLANs are layer 2 constructs. Subnets are layer 3 constructs. While normally there is a 1:1 correspondence between VLANs and subnets, it isn't always the case. You can have multiple subnets per VLAN or a subnet that spans multiple VLANs. In your example, you have identified two VLANs and two subnets. Your DHCP server will hand out addresses for each subnet based on the subnet size. Your network (meaning all the subnets under your control) will have as many possible addresses as the sum of all the addresses on all your subnets. That is independent of the number of VLANs. As an aside, classful addressing is obsolete, and has been since before you were born. 

A Ethernet Repeater extends the usable range of ethernet cabling so it is not the same as a hub. This is a layer 1 device. You might be getting confused with the name "Repeater" and the function of a hub. Or you could be referring to Multiport Repeater which is just another name for a Hub function. A Hub is also a layer 1 device. It repeats data out from a source port out every other port. Collision is heavy on a hub. Bridges are layer 2 devices. They exist to physically seperate LAN segments. One of the only decisions a bridge makes is whether to forward or drop a frame. They are different than a switch as a switch can separate LAN segments on the same hardware using VLANs.Switches generally consist of a multitude of ports, while a bridge may only have one. 

Your IP config will only show private addresses and mac address, your attacker would need to know your public address to gain access to your services. So no, there isn't harm in posting these results. 

Each interface on your NIC should be assigned a different IP address or there will be an addressing conflict. You can either receive an IP address via DHCP or set one manually as you see through your GUI. Each interface also has its own MAC address for layer 2 communication. 

I have an interface that is Gigabit connecting to an interface on a carrier ATT router. The bandwidth of the ethernet circuit connecting to this interface is 10mbs. Is there a way to set the speed of the interface to match the bandwidth of the circuit? If QoS is then applied to my gigabit interface, will it be applied and aware of the 10mb rate limit? 

When a power outage occurs, any unsaved configurations will be dropped by your devices. In this case, your port configuration reverted to an older version. 

TCP/IP was developed without reference to the OSI model. While they share some commonalities, it was a separate development effort. 

The protocol doesn't "know." Each bridge performs its own calculation. When the received root ID is the same as the advertised root ID, the election is done, as far as that bridge is concerned. When all the bridges agree, we say the network has converged. But each bridge doesn't "know" when that happens. 

Cisco switches have a feature called Private VLANs (other mfrs name it differently). You can configure the port so it can only talk to the gateway port and no others on the same VLAN. This would accomplish what you're asking for. But I'm very skeptical that this is what you really need. I would like to understand your security requirements better. 

The point here of segregating devices into VLANs is so that you can apply your security rules to each VLAN. So the answer to your question is create as many VLANs as you have different policies. For example, if dev apps and dev db are always accessed by the same group of people, there's not much point in having them in separate VLANs. Be careful that your rules make sense and follow your business practices. Otherwise you end up with every device in its own VLAN, and you'll spend all your time managing access lists. 

If the frames entering the switch are using a 1G port, but are being forwarded out a 100M port, then it's likely that frames are coming in faster than they are going out. So they need to be buffered until they can all be transmitted. 

No, that's the whole point of running a separate protocol. BGP speakers redistribute a very small number of routes into the IGP. If you only have one link outside your AS, then the BGP router just needs to redistribute a default route. If you have more than one exit point, you may redistribute a few summary routes to steer traffic in the right direction. Often, only a default route is advertised into the IGP by the BGP speakers, and the BGP speakers will route the traffic outside the AS based on their routing information. In other words, A doesn't need to know everything, it only needs to know how to get to the border routers, who can then route traffic correctly. 

We have a similar setup, with a single /24 public range. At the time, I was not aware that the 2950 switches could support PVLANs (which coincidentally is what we've also been running). Instead, to conserve IP space, I used the following configuration: 

In this output both the secondary Sydney transit is a valid path, and so is Melbourne transit. Melbourne is picked as best. 

I'm looking to implement a new network design with Juniper EX Series switches. Part of this involves implementing vPC between my core and ToR switches (and also between ToR and host). The goal is to be able to split 4x1GE links into 2x2GE port groups, each one split between my two core switches for redundancy, and still obtain near 4 Gbps bandwidth to each rack. 

We have a number of Cisco 891 routers configured with dual WAN links. All of these routers are running Cisco IOS 15.x In some cases, we use policy based routing to force particular traffic down one link. I use PBR a lot with Dual WAN setups, as the customer generally wants certain traffic to go over a particular link. For example, I will often need to have real-time traffic such as VOIP go over one link, then general internet to go over another, and typically will use PBR to route the traffic according to source/destination IP, VLAN, or whatever fits. Obviously, it is best to still offer a degraded service if the dedicated voice link should go offline. I tend to use with an IP SLA tracking object in order to allow the traffic to still fail-over to the other WAN, should it need to. My question is: Is it at all possible to do the same config (wth a tracking object to verify availability) when using PBR to set an interface, instead of a next-hop? There's a couple of reasons for this: