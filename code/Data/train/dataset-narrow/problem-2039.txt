So, this USB-key device (which registers as a CD-ROM / SCSI-device; weird, I know), which ships with a read-only partition (kinda?) including a Linux binary you need to execute to access to the data-partitions. Unfortunately, I can't get the binary to execute: 

Other things suggest downgrading the BIOS (?!); but this is a Mac. It doesn't even have a BIOS, just BIOS emulation — definitely nothing I can dive into and toggle memory-allocation settings, right? 

Boom; the text is centered over the equation. What a masterpiece! (My settings are slightly different than yours; yours won't be so outsized-looking, etc.) 

This is going to cause some compilation errors. Don't ask me why — I think the package doesn't like what we're doing with it (it's built to generate its own images? Although I'm not sure of the specifics.) This shouldn't screw up Anki's image generation, tho they might show up in the preview window for you, I'm not sure? YMMV. environments have … many caveats. A bunch of things don't work in them. I don't know all of the details — you'll have to go trawling through TeX.se to find answers from people more knowledgable than I, most likely, when using it. 

I've seen some advice to manually assign ‘code-12’ devices a new IRQ; but under the Device Manager, it doesn't even seem to have an IRQ number; nor does it show up with a address-mapping range under “I/O” devices. 

… and will exit, as expected, if I hit the e key. It's only the environment-variable section that I cannot make work as-expected. I've tried this on both Arch () and OS X (; it's irrelevant on an out-of-the-box OS X, as the OS X is patched not to include support.) 

RG-6/U has an impedance of 75Ω, whereas LMR-400 and similar have a characteristic impedance of 50Ω. This source quotes a loss of only 0.18dB; though a reply shows that that could actually be anywhere between 0dB and 0.7dB. 

Ah, lord, somebody in on Freenode helped me out: that line going around is bugged, because doesn't mean subsequent-command in Vim. The following works as intended: 

I have a range of commits that fail the tests that are committed with them. I need to interactive-rebase across these commits; but the hooks are failing, and causing each commit to screw up, forcing me to manually each step. Is there a way to automate this? doesn't do what I'd expect. 

Now, that's all well and dandy; but it's not working as pictured (i.e. FN+F12 isn't raising the volume.) So, I pull out my trusty AutoHotKey "Key History and Script Info" to see what's going on. 

So, I'm trying to do the eGPU thing. I'm running Windows 10 (freshly installed, literally 15 minutes ago, no changes whatsoever) on a 2016 MacBook Pro (15", the one with two full PCIe busses over four Thunderbolt 3 ports). I've connected an NVIDIA GeForce GTX 1080 over Thunderbolt 3, using the Razer Core eGPU enclosure. Unfortunately, I'm getting the dreaded “Code 12” error: “This device cannot find enough free resources that it can use.” 

A long time ago, before I switched to vims, I used an editor for OS X known as TextMate. (Anyone remember that? ;) Its command-line binary, , allowed for a flag, which would block the command-line binary exiting until the file was saved, and closed. This allowed for using as the editor for commit-messages and similar. Trying to do similar with MacVim (or gVim) doesn't work out; as the helper closes as soon as MacVim is launched (or as soon as the file is opened). This results in a “your message was empty,” or similar other error, from whichever program invoked the : as far as the program knows, the ‘editor’ (the helper-binary) has exited, but the file it's provided to edit is still empty. Is there some command, configuration setting, or hack that I could use to ensure the command-line helper (or whatever alternative alias or script you come up with for me) doesn't exit until the opened files have been saved and closed in MacVim? 

is invoked on the result, to convert it to a PNG that can be included into your Anki deck, and in the process, crops out most of the whitespace: 

Bottom-left is your concatenated LaTeX code; top-right is the document generated by LaTeX; and bottom-right is the final, cropped image. So far, so good. Let's try your original code: 

I'm on Windows 8.1, and fairly new to Windows-side development. I've had PSCX suggested to me, but for the life of me, I can't figure out how to install PSCX 3.1 on Windows 8.1 and make the cmdlets work when I type them. (To put it frankly.) I've downloaded and run the for 3.1 from the website; as far as I can tell, it ran successfully and exited. However, running, for instance, , fails. doesn't show anything about PSCX. I checked my directory (in ), there's no directory in there. Just my profile. Where, if anywhere, has the installed this; and how do I get PowerShell to recognize it? (My setup is very generic, nothing strange going on on my end afaict. Again, new to Windows.) 

Now, first off, my HID-0x07-0x80 ('128') "Keyboard Volume Up" aren't showing up at all, but I'll come back to that: Why the heck is AHK reporting the scancode of F5, in the HID Usage Tables as 0x3E (62), as 0x3F (63)? tl;dr what are the "scan codes" in AutoHotKey, what relation do they have to the USB HID tables, and how do I figure out which of the above, if any, to use to get my keyboard to actually send, for instance, "Volume Up"? 

Okay, let's see this in action on your “working” example, minus the ultra-tall instruction (click the image to see it full-size): 

Please help me either A. turn a window into a buffer, so I can use normal likewise-visual selection to copy what I want to report outside of Vim, or at least B. construct something I can throw into my that will copy all of the lines of the most recent error onto my clipboard. Thanks! 

Notice, drive #3 is missing entirely from the list; and it's got one dark LED on the physical machine, for no apparent reason. Meanwhile, the command-line gives me the following error (but only for this slot; the rest work): 

At this point, is opened normally, instead of printing the usage-text and quitting as expected. I've experimented with a couple different flags (and formattings), and none of them seem to work as described in the manpage. The lesskey mechanism overall definitely works; I can define, say, the following: 

I'm of the opinion that the orthodox 50-character limit on git commit messages is absolutely ridiculous. (Primarily because I think using an 80-character wide Terminal in 2015 is equally ridiculous.) I've fixed a few other glaring issues with 's default settings for git commit-messages in my vimrc; but still hilights the first line if it's longer than 50 characters: 

I've got a nominal full-duplex 500Mbit connection through to my ISP (WebPass). When wired directly to their Ethernet port, my machine reliably gets SpeedTest.net results of ~650Mbit down, ~850Mbit up. However, when I set up a wired connection directly to my recent, high-end wireless router (NETGEAR Nighthawk X8 (R8500)), and then connect the router instead to the WAN, I can't achieve above ~250Mbit/250Mbit. What can I do to improve my router's wired throughput? 

I've discovered that I can cause the errors to appear again using or or similar; but they appear in the same fashion: un-selectable, useless. Another Stacker asked a similar question, which yielded the useful command — but that only captures the very last line of the messages; many errors I see consist of multiple lines, all of which I'd like to select. 

However, if I ever switch to a different pane with that new, larger Terminal window, I am foreverafter stuck with this, when I switch back: