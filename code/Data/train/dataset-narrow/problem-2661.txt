Where loc is the location of the image and "width" and "height" are respectively the width and height of the image. What changes are needed to make it works on a scaled context? e.g make it works with something like . 

This algorithm works fine if the server sends only correct states, which is not the case of my server, let me explain why: The client sends what i call to notify the server about what he is doing. For example, if the client press the right key, it will send a new action to the server, something like to tell the server he is moving right. If the client keep pressing the right key for 5 seconds, the client will send only two actions, at t = s and at t = s + 5. I'm testing the whole thing with a ping of 150ms, so the server receive actions 150ms late. Here is what happens on the server when the client presses the right key for 5 seconds (there is 150ms ping between client and server): 

From here you may wonder how to share your assets between states? I'm not quite sure but i don't think Slick2D comes with an out of the box solution for managing assets so i think you will have to write your own. A possible solution could be a singleton class like: 

In conclusion, you will have set your requirements and then choose between doing it yourself or using an existing GUI system. If you decide to create your own GUI system, Slick2D seems to provide some tools to help the process: 

I don't think you can do it out of the box with libGDX. I don't know how you structure your game but personally i would simply load all the animations for a particular sprites has instance and store them in a map where i associate a name to each one of them. So basically: 

Note: the above image show the feature of this software Physics Body Editor will create a JSON file that you will need to use in your game to create your fixtures, fortunately, libGDX comes with a native loader and here is a code i took from the demo that shows how to do it: 

Here is an example of such a mucus spreading. The substance is spread around the source (in this example, the source would be the main alien building). 

The second point depends of your implementation but you could have a class that holds a reference to a and a for the position. The property of returns a which has a Contains method that does exactly what we need. So from here we can write a very simple function that returns true when a point is located within a given sprite. 

The client can do several actions per frame, for instance, requesting a movement, shooting etc. Should i send a packet to the server for each action the client performed during the frame, or should i stack them in an unique packet and send it at the end of the frame? EDIT: i'm using Jmonkeyengine and the provided network API SpiderMonkey. 

And then just write a simple method that takes the name of animation, fetch the corresponding in the animations map and set this animation as the current animation. 

You have reached the point where you need to use a GUI (for graphical user interface) in your game. Sometimes, in games, you will only need buttons or similar simple components. In this case, i would recommend doing it yourself, a button is something really simple to do. Considering a button is a clickable image, using Slick2D, a button could be something like that: 

It works but it's damn slow. What would be a fast way to know all the cells an entity overlaps? Note: by "it works" i mean, the entities are contained in the good cells over the time after movements etc. 

test1int is incremented when you press the key 1. I can't see how you initialize the test1int variable in your code but assuming the following: 

You can actually use Swing canvas as an opengl context where you can render your game. You can use all the classic Swing components around your game. I say around because you cannot add components inside your game, which is what you seems to ask for. Games usally use what we call a GUI (for G raphical U ser I nterface). A GUI will just draw windows and other composents like you would draw a character in your game. Here are two GUI's written in Java using LWJGL (OpenGL port in Java) for rendering: 

Yes, you should always normalize light computation vectors. , so, if vectors are normalized will get you values in the range of [0,1] which is exacly what you want. 0 being light perpendicular to surface normal, 1 being light pointing exaclyt at the same direction of normal (thus giving most contribution). Negative values means light is hit the back of surface, thus the need o max(0.0, dot()). A few things worth noting: 1. Linear and Gamma Space Monitors use a non-linear color space (gamma), so you should be aware of this or you light will appear darker. Textures that come from programs are already written in gamma space and you should convert them to linear space to compute lighting and after lighting done you should convert final result to gamma again. Now you either use a sRGB texture and framebuffer extension to do this automatically for you or you need to do this is your shader. So, for instance, you'd have to do: 

Then you can see if you have unecessary assets and reduce size of others. You can also strip assemblies in the final build to reduce size. Go to Players Setting -> Other Settings under "Optimization" select .Net 2.0 subset and Stripping Level use micro mscorelib. 

You need to check two things: 1.Texture and Shader ETC1 doesn't support alpha. You'd have to use a separate texture read (which you seem to be doing on texture2D(CC_Texture1, v_texCoord2). You can use tools to extract alpha channel from a RGBA texture and use a single texCoord for both samplers. Your code could be something like this: 

Also I don't understand the "+3" in the block size computation but looking for a solution for my problema I've encountered people defining it as that. I guess it won't make a differente for POT textures but I put just in case. Thanks. 

Since submesh 1 and 3 have the same material and they are all static, I'd like to render submesh 1 and 3 in a single drawcall. However, Unity is failing to batch those submeshes together. Is there a way to achieve this? 

I'm trying to optimize my PC game but I can find the bottleneck since every time I run it through a profiler (gDEBugger) it runs smooths. When running outside gDEBugger I get these annoying hiccups. It's not just the graphics, the sound also gets choppy. The drops are inconsistent across runs, i.e, sometimes I run the same scenario and get no drops at all, sometimes I get a few drops, and others the game is consistently slow. The only constant is: when running through gDEBugger I ALWAYS get a smooth run. I'm suspecting something outside my game is interfering and causing these drops, but what in the hell does gDEBugger do that nullifies these drops? A higher process priority? Any ideas? Thanks in advance. 

I'd like to slowdown music playback, say at half speed. I'm currently using SDLmixer. I assume I'd need to tell SDL that I have a 44KHz music and want to stream it at 22KHz, but when I pass in 22Khz it seems it re-samples my audio and plays at normal speed. Does anyone know how to do that, or any lib that supports it? I'm looking for free libs that allow me a commercial license (so no FMOD) Thanks in advance. 

For more information on linear and gamma space check this link: $URL$ and this is how add sRGB extension to do gamma/linear conversion automatically for you: $URL$ 2. A word on Specular I see you're using Reflect vector to compute specular. A better approach is to use Half vector. Check this: $URL$ 

Now, if you want a texture compression that supports alpha you can use ETC2 (all opengl es 3 devices support it), and for better performance and quality ASTC. Not many devices support it now but the quality difference from ASTC to ETC1 is brutal, plus ASTC supports alpha. 

I'd like to know what are my options for high resolution timer in Window. I want a timer with at least 1ms precision since I need it for a rhythm game. I'm using QueryPerformanceCounter now, but I read there are many problems I can have with it (variable clock due to laptop power consuption, intel speed stepping, multi-core sync gives negative times, etc). I tried SDL_GetTicks() but I realized it is implemented using QPC in Windows. What other options do I have? Thanks.