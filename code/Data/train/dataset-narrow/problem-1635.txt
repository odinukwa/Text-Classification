Feels like an MTU issue to me. I don't know what Vista's MTU algorithm is, though. As a simple test, set your Vista machine's MTU artificially low, like 500, and see if that resolves the problem. If so, we can say that MTU is the cause and go back to looking at exactly how to fix that. 

I've never tried it, but I don't see any reason why running VMware Converter on the EC2 machine wouldn't work. Just pretend it's a physical machine. I suspect that the EC2 Linux is close enough to RedHat for it even to do its fancy stuff. 

Rebooting makes the problem go away for a while. This most recent time it took six days to come back. I'm not sure if that's consistent or not. I had initially suspected that the problem might be related to the nVidia video driver module, but I shut down X Windows and removed the module, without change in the symptoms. There is nothing in dmesg or /var/log/messages that seems remotely relevant or in any way coincides with the hiccups. It does not appear to be an issue with a hard drive, as I would expect iowait to be prominent during the unresponsive period if that were the case, but it's not. It feels unlikely to be a hardware problem, as the hiccups are pretty regular. I've been unable to time them down to milliseconds, but it's a pretty consistent 30/4/30/4/30/4. Any ideas? 

I was able to find direct connections to the instances by querying Cloud Foundry's (Go)Router's URL. 

My organization has a leased color printer. We pay a per-page cost to the lessor, and the color page cost is far greater than the black-and-white page cost. Our users are pretty good about selecting the correct mode. But the problem comes when they want to print a big job that has only a few color pages. They don't want to manually search through the job to find the color pages and separate them out, and management would like them to not print hundreds of B&W pages at color costs. For example, imagine a printer where B&W pages cost 1¢ and color pages cost 8¢. A user wants to print a 200 page document. Most of the pages are just black text, but there are ten pages of color diagrams. The user wants to get the diagrams printed in color, but the only way for him to do that is to print the whole job in "color", costing $16, or manually find the ten color pages, print them separately for 80¢, then print the rest of the document for $1.80, for a total of $2.60, or forego the color pages altogether and just print the whole thing in B&W for $2. Is there a piece of software than can automatically find the color pages in a print job, send those pages to the color printer, and then print the rest of the job to a B&W printer? What would be ideal is some sort of print filter so that the user could just print the whole job as a color job, and the software would intercept it, chop it up based on which pages were in color, and send each segment to the appropriate printer. I've found PaperCutNG, which does exactly what I want, but, honestly, it's not worth the money for that one feature. I was hoping to find a free solution. My print server is a Windows 2003 machine, and a solution that runs there would be preferable, but I can transition to a different OS if needed. A client-side solution would also be acceptable. 

I ended up using atop (which is available in FreeBSD ports as sysutils/atop), and it's awesome. I would very much consider using it in preference of sar on systems where sar is available. It comes with a curses-based UI that is easy to navigate and shows a lot of data at once. It's incredibly handy. 

In the specific case of the problem caused by HP switches, I found (by using , which records every byte sent to the terminal), that the autowrap mode of the terminal was being turned off via the VT100 code "" and then never being turned back on again. † The VT100 code to turn autowrap back on is "", which you could send to the terminal with this command: 

Can you not just install a machine on the network with a static IP? You said you were in control of DHCP, so just reserve a specific IP for that machine. It doesn't need to get the address from the DHCP server as long as no one else takes it. Of course, you still have the possibility of the bogus DHCP server handing out that address. You could also log all DHCP offer and ack packets that come from systems other than your official DHCP servers. If you have login access to the switch (you say you don't own them, but you do say that you can "turn off the port"), you could even automate the disabling of the port. 

Sadly, you'll have to define a new scope. Might be easier to "migrate" the scope to the same computer and edit the intermediate file. Nevermind. Since they suggested you name that file , silly me assumed that it was a text file. Turns out that it's some impenetrable binary blob. 

I have also created a separate network to emulate that office's configuration that's connected to the DC network via LAN-to-LAN VPN instead of MPLS. Joining Windows 7 computers from that remote network works fine. The only difference I can find between the two environments is the intermediate connectivity, but I'm out of ideas as to what to test or how to do it. What further steps should I take? (Note that this isn't actually my client workstation and I have no direct access to it; I'm forced to do remote hands access to it, which makes some of the obvious troubleshooting methods, like packet sniffing, more difficult. If I could just set up a system there that I could remote into, I would, but requests to that effect have gone unanswered.) 2011-08-25 update: I had run on a client attempting to join the domain: