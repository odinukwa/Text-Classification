You say "Edit: the sensor worked just fine on a Raspberry Pi B+ but not on the B. I triple checked some docs which claimed that pin 16 was GPIO #4 but other docs said GPIO #4 was pin 7" They are both right. There are 3 different numbering schemes for GPIO. You need to determine which is intended. See:- $URL$ PS I am not sure what your exact question was 

Your script includes ; I am unsure what you are attempting to do here, but this seems inappropriate. This is normally used to execute external commands. NOTE the installed from the Raspbian repositories is out of date. You can compile and install 

is NOT intended to run scripts. It is run each time a shell is startedand is used to configure the shell. . There are may ways of running scripts, depending on what you are trying to do. See $URL$ for an example. 

Setup a Static IP Address Questions about setting Static IP Address are among the most common on this site. There are very many tutorials (many wrong, obsolete or incomplete). 

works fine on my Pi3. (You don't need ) when run from the console. I am not sure why you are using . Are you trying to run this in a script? is obsolete, but should work, although the normal virtual console on the Pi is 

For you NEED to use their proprietary viewer. (It may be possible to use the macOS screen sharing with additional software, but X11 has not been included on the Mac for some years.) You can use ; I use this and start session with on the Mac (change to your IP or use ). needs the GUI on the Pi to be running (you can start manually, but, if so why bother) and shares the same screen. starts a new screen (which IMO is better, as the sessions can have different resolutions). NOTE and are incompatible, and you can only have 1 on your Pi. 

Assuming that your pH meter does not have a common ground with your RPI, you can connect the "GND" input to the pH meter to a 3.3V/2 resistor divider from the PI 3.3V supply and use a PI PWM output with an RC low pass filter to generate a programmable voltage without any DAC. Tie the RC low passed PWM output to the non-GND pH input and as the PWM value is set above and below 50%, the voltage into the pH meter will vary above and below zero, relative to 3.3V/2. If you want finer voltage control, you can use pull up/down resistors on the capacitor of the RC filter so that the resistor from the PI PWM output can only drive the output to some fraction of the 0-3.3V range as the PWM varies from 0% to 100%. The ratio of the RC resistor to the pull up/down resistors determines the range reduction. As for generating the PWM outputs, you can use the pigpio library to easily generate PWM signals on any PI output. All of this assumes that the rate of change on the pH voltages is relatively small, since it will be limited by the RC low pass filter time constant. In general, after a large change, the voltage through an RC settles to the final value within about 10*RC seconds. The PWM period should also be much shorter than the RC time constant, say ~1000 times, in order to filter out the PWM frequency. See $URL$ for a detailed PWM DAC application note from Texas Instruments. LTSpice Schematic: 

Edit I have just discovered that including the following in achieves the desired rotation, but I would like a more convenient method which doesn't involve editing a file and rebooting. I want to use this to read portrait oriented documents. 

I don't know about beaglebone, but it is possible to network the Pi using ssh or VNC. ssh used to require configuration in raspi-config, but I believe is now on by default. VNC requires installation 

No! The standard install will NOT boot. It may be possible to customise the installation to use the Pi firmware. This has a number of downsides:- you will be lacking support for GPIO access and the processor on the Pi will struggle with the demands of the GUI. Even the standard MATE install (which is better matched to the Pi processor) will not work without Pi firmware. The linked images are experimental, and if you want to try you won't lose much. 

Pi GPIO, base resistor (missing), transistor Base, transistor Emitter, and back to the Pi common rail. Battery, Load (missing), transistor Collector, transistor Emitter, and back to the battery. 

AFAIK there is no Unix for the Pi, although you could try to port FreeBSD to the Pi. I presume, from your question, you have little experience, so just install Raspbian which is a Raspberry Pi customized version of GNU/Linix, and learn this. 

This is not strictly an answer, because I frankly don't know, but my observations. Shutting down the Pi, using any of the commands SHOULD do the same thing. I have occasionally noticed that the display continues to function, indicating that the system has experienced some problems during shutdown. This is only obvious with a connected hdmi screen. My conclusion is that the (which is independent of the CPU) is continuing to function. As the is responsible for Pi booting this may explain the problems. This view is supported by visible error messages on screen after shutdown. NOTE my experience, while uncommon, is NOT specific to Stretch, as I have noticed it on earlier releases. I now always use on the rare occasions when I need to shutdown one of my Pi and have not experienced this problem recently. I normally only poweroff when performing some "surgery" on the Pi. (Theoretically there should be no difference.) 

It is possible to expand up to 64 additional GPIO ports using some MCP23008 chips connected via I2C interface. Each adds 8 GPIOs and up to eight can be connected through I2C. As you need 75, I suppose you go with the big brother of MCP23008 the MCP23017 which has 16 GPIO ports. It's not possible to mix both and get over 128 as the limit of 8 on the I2C-Bus applys to both together because the addresses overlap. For ease access to the I2C-Bus you could use the I2C-Python-API from Quick2Wire. Quick2Wire has also a post on the chips. 

Yes it is possible. As seen on $URL$ at Page 1 - A4: Data lines are not connected. Additionally here's also a blog entry about it and how to add power to a cheap unpowered USB hub: $URL$ 

I've got a strange problem with serial output. Using Wheezy and 8 Databits, 1 Stopbit, NoFlowcontroll, NoParity (config as stated in eLinux Wiki). With 57600 Baud everything works fine but with 115200 Baud all I receive is gibberish. My RasPI is connected over a MAX232 and Prolific 2303 USB-to-Serial to the PC. I supply the different outputs and my inittab, config.txt and cmdline.txt for better understanding. What's going wrong? I have no idea how to fix this. 

The Problem in this setup is the "Prolific" USB-to-Serial Interface. I managed to get everything to work with a borrowed Notebook with native serialport. I further investigated with a tool from Prolific to check chip version. It stated that it's a PL2303HXA. On their website it states: 

Below is a schematic of the RPi GPIO circuit. As you can see, the input buffer is always reading the external state of the pin, so if you want to read the pin, as that shoe company likes to say, just do it. 

Your best option is to use a USB Wifi dongle that has an external antenna and disable the on board WiFi. For really long range, they make dongles with two antennas. Just Google "usb wifi external antenna" for many options. To find one with two antennas, just click the "images" button on the google search results page. The description of the dongle usually lists the WiFi chip used. Make sure to get one that has a chip that is supported by Raspbian . If you need REALLY long range, you can use an external antenna dongle with a long range 2.4 ghz antenna . 

Use a voltage divider to monitor the 12V at the light bulb. Make the resistors large enough that they do not significantly affect the bulb. A 3K resistor for R1 and a 1K resistor for R2 divide the voltage by 4, giving you 3V at Vout when powered, and a 1K pulldown to GND when the switch to the light is open. 

As you can see below, I somehow have duplicate file names. I'm not sure if the files themselves are duplicate. Any idea how this can happen? The PI is running Raspbian Jessie. 

Take a look at this link at github. It has a patch for WebioPi that makes it work on the PI2 and PI3. I have used it successfully on the PI2, but have not tried it on the PI3. There is a discussion of the patch at raspberrypi.org