It has always been possible to power a B through the GPIO. An unstated requirement is to ensure the supply is well regulated and not activate the overvoltage/transient protection diode. The recommended practice for HAT is to use an isolation circuit (similar to that on the B+). On the B+ USB can use 600mA/1200MA (depending on settings). 

If you search this Forum you will find hundreds of posts about setting static IP including setting in . I would recommend you don't do this, rather reserve in your router. There is no easy way to preset host name, but it is stored in , and you could set this if you mount the FS. I use a simple script to copy to this file. 

How to set up networking/WiFi shows Use different wpa_supplicant files and Prevent dhcpcd from configuring an interface NOTE that using & is likely to be unreliable, as there is no guarantee which will be allocated to which interface (although the on-board interface will probably win). You should enable Predictable Network Interface Names which most Linux distos use. 

Frankly, I would use a RTC. If powered normally the battery will last years, because it only uses battery power on standby (I have never had to replace mine). There are also RTC with supercapacitors. will show if NTP is synchronised. The daemon should adjust the time within 10 minutes if there has been significant drift. 

You can choose your own address, SSID and wireless-channel, but all machines should have the same settings. Strictly you should should disable as this will try to automatically configure networks. will stop (deactivate) dhcpcd. If calls it will automatically be disabled. 

It is certainly possible to detect. An example is my script for . The question is whether you can do anything useful with this, as the code to rotate the framebuffer runs early in the boot process, and you can't change the rotation. When I want to rotate my screen, I change then reboot. It isn't pretty but it only adds 30 seconds to the boot time. 

Firstly, you do not specify what OS you are using, I assume Raspbian. Secondly, your script may or may not modify Debian networking settings, but unless you have configured Debian networking (or you are running a VERY old OS) it is unlikely to be. I suggest you take 2 steps backward, and first figure out HOW to configure networking, BEFORE trying to script it. See How to set up networking/WiFi 

To be specific is connected the wrong way you would have a forward biased diode as load, so a massive current would flow through the MOSFET, almost certainly disintegrating it and the diode. 

You could assign IP (in your router) based on MAC, or use a utility to identify each Pi based on hostname. I use the latter to connect to my Pi as , so I never have to worry about IP. 

Probably the easiest approach is to use Device Tree to set the state of a pin. This is probably the earliest stage of the boot process which you can control. I have not actually done this myself, but others have used it to control power to the Pi. I include in as the "heartbeat" makes a good indication that the Pi is running. 

I have never heard of "RPi-sd card builder v1.2". Where did you get it and why? Why not just follow the recommended installation procedure:- $URL$ 

Checkout $URL$ R2 should be ~100kΩ R1 is not strictly necessary with a MOSFET, but does not harm, and provides some protection if you make a bad connection - use ~1kΩ. This must be a pretty hefty solenoid if it needs 320mA @ 12V. Don't worry about the voltage ratings of the diode or MOSFET ~50V will be OK, but you will definitely need a power device. Build your circuit (without connecting to the Pi) and check it works by connecting the input to 3.3V. You are unlikely to damage anything (provided you use a MOSFET with a high enough current ratting). 

I am afraid that "more amps" is meaningless. The Pi will only draw as much current as it needs, and will have problems if the VOLTAGE is too low. See Raspberry Pi Power Limitations for a more detailed discussion. It is impractical to power the Pi (or any other low voltage device) with such a long lead. There are established electrical engineering techniques to power over extended distances, but ALL involve moving the 5V regulation closer to the load. If you MUST supply remote power I would suggest a different solution. Use a 5V switch mode regulator e.g. a UBEC to run each Pi, and a 12V (or higher) feed (and don't even think of using CAT5 or 18AWG, even at 12V). The cost of 5V switch mode units, which are readily available, would actually be less than the cost of a suitable cable. If I was trying to do something similar I would NOT use the µUSB connector, but feed power via the expansion header. This is discussed in the link above. If you want other options you might consider the EE site. This is really an EE question, which only peripherally involves the Pi. 

This question is not Pi specific, and is a general Linux question, but probably wouldn't get a helpful response as asked on U&L As I understand it you are trying to create a , which runs a script, which runs a script, which in turn gets the output of a system command. The objective seems to monitor if your IP address changes (why do you think it might?) and notify you of the IP address. Why you would want to do this, or even why you want to know the IP address is unclear, but it is possible. The script contains a spurious '\' in the shebang and contains (which will do nothing - as if successful will be run by root). If you want output write to a log file. The above step is unnecessary, is a scripting language, so you could just run a script with shebang , or better call from your service. The is unusual, to say the least. I am unsure what means, but I am not a expert, and writing services is complex. The script is an endless loop which runs every few seconds. This is wasteful - if you want to do this you would be better to use to run a script every few seconds, rather than the complex steps you are attempting. 

It presumably is possible, but have you looked at . I use this in scripts, and it should do what you want. NOTE there is no , but shows supported commands. 

You have got some good comments above, but none has explicitly answered your power question. This is a simple electrical engineering problem. The specification you copied says "Power(W/M):9W/M" so a 5m length would need 45W - that is 9A at 5V. Presumably this is the consumption with all 160 LEDs at full brightness. This works out at ~50mA per LED which seems about right. You have obviously got some success with a 2A PSU, but this would not be adequate in all cases. The plug pack power is not really suitable for this kind of application. As well as computer power supplies, I assume there are power packs specifically designed for this kind of application. There was some question of the voltage on the control leads. This is using , which is an open collector driver. It needs pull-up resistors - the Pi has 1.8k resistors on the board. Provided there are no other pull-up resistors to 5V this should be quite safe. You could easily verify by measuring the voltage, with the Pi connected. @ppumkin's answer showed connection to the bus, which could have voltage problems, but if only the is used - drived by the Pi as bus master, this should not. 

You can change the SD Card of UP TO DATE Raspbian images between ALL models. My indeed started life as a copy of my Pi3 card. HOWEVER there are caveats; This assumes you are running a default setup You will potentially have problems if you run multiple systems with the same . In general pairings are not transferrable, due to different MAC and you cannot pair the same peripheral to different PI (although I have configured my OS in multiple Pi so all have the similar settings). It is possible to configure the OS so that this will not work, but it is impossible to know. You will NOT in general have the same IP address (which would be a disaster), however this is a function of your DHCP server, which will in general assign a new address, based on MAC. All my Pi use identical files. Indeed they use identical files, although I use conditional settings to accommodate different peripherals (such as RTC). 

Your question is futile. You don't even NEED to even mount the partition, I presume you mean . Normal Linux writes to the filesystem all the time and won't work if it is not writable. It is possible to put these elsewhere (usually tempfs). You need to distinguish the causes of "corruption". Most often this is just a problem, experienced by all computers which fail while writing. This is usually fixed by journalling. In rare cases powering off while the SD Card firmware is performing housekeeping can cause "corruption". In fact, the instance of "corruption" is rare (and it never seems to happen to the experienced users). I have had 2 SD Card problems with 5 Pi, 12 SD Cards over 4 years. One was a Card which totally failed after a few days use, and was replaced under warranty. The other was a failed update. Mind you, I have experienced MANY problems due to operator error! This is probably cause of most reported problems. The appropriate remedy here is BACKUP. In summary I suggest you don't bother trying to quarantine your OS. Always poweroff safely and backup regularly. 

To slightly restate your problem, i.e. to make a minimum sized backup which can be restored to a SD Card the following script is one I use. This is for macOS (Unix) however minor changes will work on Linux. (Most of the extra code is PROTECTION to ensure the correct image is used.) The Foundation Documentation has similar code. 

I have finally managed to achieve this. Unfortunately the usual does not upgrade the kernel beyond 4.1.13. I ended up using to update the firmware (to 4.1.20). Note that is not normally used by normal users, as it can install beta software. That produced an image which boots on the Pi3, but inbuilt WiFi did not work. I finally managed to install WiFi firmware with 

What you have listed looks like a NOOBS card. The official instructions for initial setup are on $URL$ The instructions assume you can perform the initial setup. The other answer you got about editing config.txt refers to Raspbian. The image you posted above is incomplete. You should learn to use terminal and list files. I am unsure what is in the other directories on the SD Card. I have not used NOOBS for years, but that looks like a complete disk. If you have not configured it there will be no other partitions - NOOBS is designed to use just a single FAT partition. I assume your real problem is in your other question. Incidentally you should not ask multiple questions. If you cannot read the screen you will have difficulties even getting NOOBS/Raspbian initialised. You should return to your original question if you need further help. 

What you have is not correct for any setup. allows external programs to configure IP and allows to react to network changes. I don't know anything which will change from a working network to another, but this should trigger change if the current network becomes unavailable. 

You should be able to use I²C over these distances with careful layout. I would suggest you use the slowest I²C speed (although the Pi default is already 100kHz). You should also use a bi-directional level converter at the Pi end as the high level would otherwise be marginal for the Arduino.