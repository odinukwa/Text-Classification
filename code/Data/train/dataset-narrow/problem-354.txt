If there's no ARP entry (another host wants to talk to the dup), then who ever answers first wins; and hosts (and many routers) cache ARP entries sometimes for hours. 

Note: you'll also have to ensure any native, untagged vlan on each port is different or a loop will be created. 

The term is bonding. And no, you, the end user, cannot combine the connections from two different ISPs into one larger pipe. You can load balance between the two, but the speed will be limited to the connection selected. That said, there are ways to get the same net effect using a 3rd party service. Sort of a "multilink VPN", but I wouldn't recommend it. 

As they are independent, free-standing switches, No. If they were in a stack or cluster, then the answer most likely would be yes -- they'd all appear as one switch. 

In general, layer-2 switching does not modify the frames.[1] A VLAN tag may be added or removed as necessary for frames between tagged and untagged ports. A layer-3 switch is both a router (l3) and switch (l2). When it switches traffic, it's just like any other layer-2 switch. When it routes traffic between segments, then it's routing and will modify packets like any router (namely decrement ttl.) [1] Not to confuse matters, but "carrier ethernet" hardware can do VLAN translation, which does, technically, modify frames. 

Setting up 802.1x through a phone is a complicated mess. See the "Device Behind Phone Authenticates" section of Cisco's guide: 

That is not the multicast mac. That's the unicast MAC source of the multicast traffic. The multicast mac will not show up in the mac address table. That's in a multicast group table. Cisco IOS has a (shows nothing on my router) and (shows 3 groups). That router is set to pim sparse-mode; nortel and cisco switches see it as a querier. And the KEMP method is deeply flawed by using the host NIC MAC for virtual addresses. In your case, 5004 belongs to a nic. When 5004 disappears, everybody is still going to have "IP:6 == MAC:5004" in their tables; they will continue trying to talk to the dead host until that entry is replaced. KEMP is obviously gambling on gratuitous-arp being honored by everything in the network. HSRP, VRRP, and the OpenBSD designed CARP all use a virtual MAC for this very reason. (they appear to have failed to hack UCARP to use the nic mac instead of the VRRP virtual mac when transmitting it's multcast traffic.) Given they hackery of UCARP, are you sure it's even using multicast? 

Depends on the system. Cisco's will forward certain broadcast traffic (hint: google "ip helper-address") Other protocols have specific mechanisms to forward ("relay") their broadcast traffic -- for example DHCP, normally it would cease being broadcast when relayed, but many system can be configured to broadcast the relayed request. (I personally do that so the pxe server can see the requests as well, and answer boot requests.) 

This (autonegotiation) is explained in various sections of the IEEE 802.3 specifications. Auto-MDIX is mostly a function of gigabit interfaces being able to TX and RX on all four pairs. I don't recall this being part of 802.3, but the logic for it (looking for carrier signal, and/or link pulses) is simple enough that anything capable of gig will support it. 

Routers work at layer-3. Your ICMP message would be extracted from it's layer-2 container (which is bigger than the l3 payload) and processed as such. The next-hop would be presented 28 bytes to be encoded for whatever layer-2 it might be. Thus, in theory, a 64byte padded frame would be transmit. In a switch, yes, an 802.1q tag would be inserted into the otherwise as-is frame. (adding 4 bytes.) 

In simple terms, yes, systems cache that information. [route-cache, FIB, etc.] If you understand how PMTUd works, you know how the maximum segment size is determined once traffic is flowing. Almost every modern network stack implements a route cache. It's a faster way to lookup a path than a full route table lookup per packet. Within the cache are parameters that normally don't exist in the main route table. The maximum segment size between a pair of hosts is but one. For example: 

As @stevieb said, a link subnet and two routes is the correct path, but few ISPs do that these days. (esp. in a co-lo, which is what this looks like) As the gateway for both networks is the same interface on the same device, there should be no issue with sending traffic from either subnet to either gateway. I've had the exact same setup in many data centers, and it was never an issue. If they have something odd set up (ACLs, etc.), then VRF or PBR would be logical solutions. The SRX should have plenty of CPU to do either; personally, I'd do PBR as it's less headache. 

Stay out out 224.0.0.x Those are all assigned for various specific purposes. As @ytti said, 239/8 is set aside for unspecified user purposes. There's really nothing to configure. Multicast is a special case of broadcast traffic. Your ad-hoc wireless network is unlikely to know the difference. One word of caution... most wireless chipsets are horrible at multicast. In an ad-hoc network, it's likely to be even worse as there's no AP to coordinate who can talk. There's was another recent NE question about slow multicast in wireless networks -- bottom line, broadcast (and thus multicast) traffic uses a common (to all radios) base channel which usually defaults to 1Mbps (yes one.) 

That is correct. IP fragments will contain only IP fields. The TCP/UDP header will be in the first fragment only. So, you'd have to collect the entire frame (from all the fragments) to apply any L4 rules to it, or track the entire session to apply the same rule to all the fragments. Cisco calls this virtual fragment reassembly. Some/Many firewalls simply don't bother, and instead block all fragments. ("it's the only way to be sure" :-)) (FWIW, all my routers/firewalls are explicitly configured to drop fragments. If you cannot do PMTUd correctly, I have no desire to talk to you.) 

You must use a controller based system for this. Multiple autonomous access-points are completely independent -- "roaming" doesn't happen; clients disassociate with one AP and associate with a new one. Roaming requires information be exchanged between APs. That means a wireless lan controller. The best way to deploy this is via a number of sector antennas that divide the room into a series of pie slices. (this is how some ubiquiti APs do it.) The other common method is ceiling mounted "cones". (DirecTV "spot beams" on a much smaller scale.) Don't listen to Ron. Multicast is suicide. In wireless, multicast is broadcast. As such, it's transmit at basic rate -- which is the common rate that can be reliably received by every client associated with the AP. That crappy tablet with a complete s*** radio on the far end of the cafeteria drags the entire network down to 1.1Mbps. Many APs allow tweaking of the basic-rates, but that will significantly reduce the usable range of the AP but not reduce the actual signal range. (you'd just be making a much noisier environment.) 

ARP is a layer-3 ("IP") technology. Under normal conditions an ethernet switch should have nothing at all in it's arp cache, because 100% of what it does is layer-2 ("ethernet") switching. The only arp entries would be for management access (eg. the MAC of your machine would be known to it while you have a connection to it.) If the UI is going away but it's otherwise still passing traffic, that sounds like something is attacking the switch, or otherwise overloading it (eg. thinking it's a router, or other server.) 

Two clients connected to the same AP... aren't supposed to interfere -- it's the AP's job to coordinate things (RTS/CTS handshake.) The collision avoidance system checks for an active transmitter (which might not be associated with the same AP) before transmitting. But as with all things in the Real World(TM), there are cases where it can still happen because the radios are spaced far enough apart to not be able to hear each other. Co-channel interference from the inherent overlap of 2.4G channels does cause problems. The stronger the signal the worse it will be. 802.11N in the 2.4G band will almost never be able to use a wide channel, as it's required to drop to a narrow channel if it detects anything in the side channels -- bluetooth, cordless phone, baby monitor, any thing. 

(The word is "announce", not allocate.) You have Provider Assigned ("PA") address space. It may or may not be "portable". In order for you to "dual home" that prefix, the owner of the address space would have to give you written permission to announce it outside their network. Everyone involved would have to announce that specific (/48) prefix. (A /48 is "more specific" than a /32 (provider block)) I don't know about your ISPs, but the one's I'm familiar with in the US really don't like doing that. And as IPv6 "PI" (independent) space is easy to obtain, there's no reason for them to allow such unproductive dilution of their address space. 

Unless we're talking about dialup, most things today aren't technically a "modem". An RS-232 modem really is modulating and demodulating. The +/-25VDC serial signal (as per spec, that few systems provide) is literally translated to/from the audio signal. (the encoding at higher speeds is much more complex, but in the beginning (Bell 103) it was 4 distinct tones.) What we call a modem today -- cablemodem, DSL modem, etc. -- are protocol translators. They interconnect two layer-1 technologies. 

But it isn't. Each direction is an independant flow, with its own SA. If you have one-way traffic (as you do), the return direction didn't setup correctly (or at all), and/or traffic isn't being routed into it. We need to see what's what on both sides. I suspect it's the latter as there's two SAs. may shed some light on where things are going/being dropped. (Note: Historically ASAs have not supported VTI -- because an ASA cannot do "0/0" and IOS, relying on routing, can't be set any more specific.) 

Multicast is "broadcast" traffic. It gets sent at the AP's "basic rate", which is the rate every associated client can process. This is usually less than 5.5Mbps. Your available solutions are to block all multicast either at the switch or on the AP itself. 

This depends entirely on the switch model. Simple layer-2 switches, "not likely". The issue is the inability to enter an atomic set of commands. Each configuration change will be active the instant it's entered. So, when you enter , the minute you hit enter your connection will fail. With layer-3 switches, "Yes". But it takes a careful sequence. Be sure your moving of the mgmt interface and any associated route(s) will not break traffic forwarding/routing through the switch. Bring up IP on a different SVI (vlan). Then access the switch through that new interface, preferably from a local host (i.e. host in the same subnet) to avoid any routing issues. Then move the management vlan, if that model has any notion of "management vlan". [Doing an in-place network / management redesign with a few nortel (avaya) switches was a real test. That ultimately took a bit of netmask juggling, proxy-arp, /32 routing *grin* (yes, a host can live on the wrong network), and leap-frog telnet's... and that was on a switch down the hall from me.]