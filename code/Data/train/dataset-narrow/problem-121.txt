At the point of redistribution the Down bit is being set as a loop prevention mechanism. By itself this wouldn't necessarily be a bad thing but you're also clearing the domain tags that are otherwise being set at the point of redistribution. This mechanism is described here and, basically, is such that any downstream ASBR that sees an OSPF entry with that down bit set and an identical or missing domain ID is not going to allow it as an installed route. In short, it's basically a loop prevention mechanism. Try removing the statement from the redistribution on the Dallas router. It also might be a smart thing to have some kind route-maps on the redistribution to have both an explicit degree of control over what's passing between domains as well as a mechanism to control route attributes/metrics (just one example: type-1's can be really nice for choosing between multiple ASBR's based on IGP, but being able to selectively manipulate metrics based on BGP communities can be worth its weight). This is purely just a hygiene suggestion, though. 

This would set the prefix 192.168.1.0/24 with a community of 65400:109, which would allow the route to be sent only to ASN109. All other routes would have both 65400:109 and 65400:1239 - which would allow said routes to go to either carrier. On the BT router I've also set it to clear all communities on routes sent to peers - so, for example, the CISCO peer wouldn't see the 65400:109 community you included. In practice the communities probably wouldn't be structured quite like this, of course, but this should hopefully give you a taste of what's possible. Hope this helps- 

The best/simplest design over time is one where all of the end hosts in a given subnet have a single common default gateway. This single logical gateway might actually be constituted by multiple physical devices but from the point of view of any device on that subnet (workstation, server, printer, etc) it has a single path out. The next point is that the device(s) hosting that gateway is/are the place(s) where choices between multiple outbound paths can be made. Put another way - let the router be the place where, well, routing happens. The other point that falls out of this is that in such a design there's really no reason to be bridging subnets between sites. Your router(s) can host multiple end-user subnets while also connecting to either your routers at other sites (..also hosting their own subnets) or to outbound connectivity. 

SFP+ power budgets are typically in the 1 - 1.5W range as a function of the density deployed (i.e. 48p in a 1U form factor) and the ability to dissipate heat in such a small package. 10G PON SFP's exist but likely are pulling power outside what's usually appropriate for SFP+'s typical use case. At the moment the maximum SFP+ power I've heard of in common use is a 40km capable 10GB-ZR, and even that isn't universally supported on all platforms. I would imagine that further DSP development will drive power requirements down - which may make it both cheaper and more practical for the smaller form factors. 

Multi-ASN in this case is more of a proxy for a high degree of network resilience. The basic idea is that primary and secondary servers should be deployed in such a way that the loss of even multiple significant infrastructure elements (servers, links, routers, even entire sites) shouldn't result in a condition where no resolvers are online for a given domain. Clearly Google's ASN spans most of the planet, as do their resolvers. They wouldn't gain anything by hosting secondaries with a different carrier. A small shop with a couple of BGP-connected routers in a single office? Likely a good candidate for at least some secondaries hosted elsewhere. 

This syntax can also be used with a standard v1/v2/v2c community. The above should be fine for 6.2 on the 7K and any 7.0(3) iteration on the 9K. I'm not sure how to answer your other question - as you write, the group is now configured on the same line as the v3 user and so forth. EDIT: For reference - Nexus 7000 / NXOS 6.2 System Configuration Guide. 

OK - so there are a few things going on here and I'll try to address them in some approximate order. 

Unnumbered certainly was helpful pre-VLSM but it's almost exclusively been adopted as a convenience - no need to allocate/configure individual IP's for point-to-point interfaces which means easier and/or less labor intensive provisioning. It's definitely out there in certain places. Smaller shops often use it because it's simple and, honestly, it shows up in a lot of basic configuration examples. There's also been a bit of a resurgence in certain DevOps contexts as it reduces the number of touch points for turning up L3 connections. Also - as has been the case since inception - it's also still frowned upon by plenty of engineers as it makes certain kinds of troubleshooting more difficult. 

For the most part, no. Hubs are also known as repeaters - meaning that they basically echo whatever is coming in to a given port out all other ports in the domain. The idea is (or, more properly, was) to replicate the behavior of a shared piece of coaxial cable, meaning that the individual hosts had to assure that only one member of the LAN was transmitting at a given time (...managing this is where the notion of collisions and CSMA/CD comes in). Switches, in turn, a actually multi-port bridges. Switches learn what hardware addresses are on what ports and then (ideally) only transmit traffic to the host(s) on a particular port. As a really crude example, imagine 4 hosts on a network: A, B, C and D. On a hub a conversation between A and B is seen, in full, by C and D. As such, if there's a second conversation between C and D it is now sharing the same bandwidth with the traffic being sent back and forth between A and B. In contrast, on a switch these conversations are kept entirely separate - thus allowing both sets of hosts to communicate at full speed without effecting one another. This (among other behaviors) massively improves overall scalability and performance on most networks. The other issue here is that as Ethernet speeds have gotten faster the basic mechanisms mentioned above (collision detection) have actually disappeared. In 10 and 100 megabit there were absolutely modes for half-duplex (i.e. single host transmitting at a time) communication while in gigabit it was largely deprecated/unimplemented (there were some 10/100 hubs that bridged to FDX gigabit connections but very few - if any - gigabit hubs) and in 10 gigabit (and beyond) it's nonexistent (...meaning a switch is now the only option). So is there a reasonable purpose for a hub nowadays? I'd say generally not. Some gigantic portion of modern equipment doesn't even support half-duplex at this point, and 100M is becoming fairly uncommon in its own right. There used to be an argument for hubs as a good way to easily monitor traffic without the use of SPAN ports or taps, but that was a fairly uncommon use-case even 15 years ago. 

No. This isn't possible. The switch itself negotiates the amount of power to be provided when it comes up, and beyond the obvious non-starter of two data lines being paralleled to each other (two transmits connected to each other?) there is no accommodation in the various PoE specs to be splitting power. Indeed, you'd potentially end up in a situation where one port was pushing power into another one, which would be bad. 

Is the second power supplied un-powered? The lack of airflow from the second PS is likely causing the other fans to spin up to compensate. This is likely a change in logic between the old and new versions. If the second PS is powered then try re-seating it to see if the condition improves and, if not, open a TAC case. Also - there may be EPLD updates, especially when moving from a relatively old version of code. Make sure you're staying current on these, as there have definitely been PSU and fan controller updates in the last few years on the 9K platform. 

So a couple of points to this- 1.) NO_ADVERTISE is intended to prevent a given BGP speaker from propagating the route any further. So in this case adding this attribute to given route advertised to a peer will actually prevent the route from being pushed to the remainder of the carrier's network. You might want to consider NO_EXPORT, which is intended to restrict the propagation of a given prefix beyond a confederation (or an entire AS if confederations aren't in use). See RFC1997 for details on the behaviors of communities in general and well-known communities in particular. 2.) The well-known communities don't -have- to be honored but, in general, they are by default in most implementations (..unless you choose to explicitly strip these values). They tend to be all-or-nothing in nature, though - so, for example, signify that a given route can't propagate past the immediate peer router or past the peer router's ASN. In this case putting NO_EXPORT on a route would prevent BT from advertising to Cisco or Sprint, but would allow it to be present throughout any other routers inside the BT ASN. 3.) In this case the owners of the BT and Customer routers would have to agree upon a community value and its special meaning if you want the route to be selectively advertised (or not specifically not advertised) to a given upstream peer. Your carrier might also append communities indicating whether a given route is from one of their other direct customers or from an upstream transit (this is a handy way to pare down table sizes). Apart from the well-known values mentioned above everything else is potentially up for grabs and, also as mentioned, there's no standard guarantee (beyond what's negotiated with the carrier) of what behavior corresponds to what community. There's also no assurance that any carrier will preserve appended communities as prefixes cross their network. So let's take a fairly simple example. On the BT router (let's call it ASN2856) we'll set up a filter on each of its peers to CUSTOMER (which we'll call ASN65400), Sprint (ASN1239) and Cisco (ASN109) such that only routes with xxx:ASN will be permitted. As such, if we put 65400:109 on the route but not 65400:1239 then the route will be allowed to Cisco but not Sprint. If both 65400:1239 and 65400:109 are appended to a prefix the route will go to both. If neither, then the route will stay inside ASN2856. So on BT we'd have something like