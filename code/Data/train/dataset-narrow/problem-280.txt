He's referring to the two being different protocols. They share the letters "I" and "P", but are otherwise as alien to each other as IPX and Appletalk. In general, and IPv4 only host -- which is most of the world -- can only talk to other IPv4 hosts. The address fields are simply not large enough to accommodate v6 hosts. Also, most people don't bother with any sort of protocol bridging ("proxy") to get v4 into v6. (Just use v6, already) IPv6, on the other hand, can hold many "internets". And seeing as very little of the world exists via IPv6, many people go to great lengths to allow their IPv6 infrastructure to reach the IPv4 internet. (see also: NAT64) For example, some cellphone networks are IPv6-only, but the provider runs a proxy to make IPv4 accessible -- and you don't even know it's happening. 

The dhcp server shows they do actually have an address. The status messages suggest they aren't able to find all the files they're looking for; the telephony-service should be creating those, but I don't see a in your config. will show what configs it's created and mapped. The SCCP firmware requires option 66 (tftp server), not option 150 -- the phones will remember the last server if dhcp doesn't present one. (it can be manually configured as well.) (even without most of the files, it'll still boot and register with the CM. I was updating eBay'd 7960's that weren't known to my CM last night. They only needed to see: OS79XX.TXT, SEPDefault.cnf, and XMLDefault.cnf.xml, and the firmware files) 

You disabled flow-control, so this would've made the problem worse if it were a buffer overflow issue. Error counters should tell you if there were any issues. Flow Control is a negotiated function. If the switch has it "off" (send and receive), then the connected devices should disable it as well. Of course, this assumes your nics, drivers, and switches are braindamaged. 

The trick is getting the router to appear on 10/24. DHCP and secondary addressing requires a bunch of VLAN Magic(tm). Assuming no one wants to get that messy... adding routes on the router and ap should get you where you want to be. The problem you have with the bridge is that the AP will not "see" the traffic it's bridging, as at layer-2 the traffic doesn't belong to the AP -- your attempt to talk to 10.0.0.2 goes to the ISP (bridged) gateway. An interface route on the router will stop that: As the AP has no routes at all, it needs to know where 192.168.13.0/24 lives (bvi1) AND the router has to be configured to not NAT traffic to/from 10/24. 

To answer the primary question: MAC filters provide absolutely zero security. A user can set their MAC to whatever they want -- and many NICs have a well documented eeprom interface/structure with tools to change them permanently. Wired networks are no harder to "monitor" for allowed MACs to spoof than wireless, 'tho one does have to gain physical access. (but they'll going to have that access anyway if they're trying this.) 

There is no "ethernet port configuration" necessary, and the "system routing tables" have nothing at all to do with multicast. Multicast routing requires multicast routing software (pimd, mrouted, etc.) and a kernel with mroute capabilities. It is a completely different mechanism from IPv4 and IPv6 unicast routing. I do multicast routing with a linux system. I would not recommend it. Ever. Multicast routing support on linux is abysmal. The software packages for do it are few, nearly abandoned, have worthless documentation, and barely work. Then there's the linux kernel limitations -- the use of a 32bit bitmask limits the number of interfaces to about 28. 

You can use whatever pair of SFP's you want (SR, LR, T.) Direct Attach Cables do exist, but I'm only aware of ones for 10/40Gbe -- i.e. SFP+. 

(I'm not sure what you mean w.r.t. STP vs. any of the other reasons for macflaps.) There doesn't appear to be any way, at all, to disable this. Roaming wireless clients are simply going to be an unavoidable reality. I'm assuming you don't have wireless lan controller(s) tunneling traffic back from each AP to the controller. That would, in theory, isolate clients from the switch(es). 

Perhaps this will help. Also, consult Wikipedia for futher reference. In short, in the US, the H band is restricted due to interference issues with Terminal Doppler Weather Radar (TDWR). (at least for outdoor use.) 

Most systems do have a power level setting. Consult the documentation for your specific brand of AP. 

This depends on the NAT implementation. In general, most NAT engines prefer to make as few modifications as necessary. So, the first one there gets to keep their src port. The second one is "the loser" and has it changed. The map entry doesn't depend on anything changing; it tracks whatever is used, changed or not. As long as they aren't both talking to the same server, they can both use the same src port, because the map includes the destination: 

The first can be enabled via and . The second requires changes to the VPN split-tunnel configuration, any ACLs restricting access, routes on other gateways to know where the vpn-pool lives, and finally ensure the site-to-site VPNs know about and allow that pool across their tunnel. (The latter is why my ASA proxy's DHCP from the local LAN for clients. It essentially makes VPN clients look like nodes on the local LAN.) [UPDATE] With IOS, the crypto map defines what traffic goes in the tunnel(s). ( clause) That info is provided to the IPSec client. (it creates a security-association (SA) for each rule of the ACL.) (for the record, I don't use the old IPSec client engine anymore. I prefer the SSLVPN (webvpn) setup on both ASA and IOS -- the setup is nearly identical. ASA-IOS tunnels are still the old, complicated IPSec setup. IOS-IOS tunnels, I prefer interfaces.) 

One thing to add to the things collected is the licensed features () This all depends on the asa model and running version. Some parts will be in the config, others in flash files, and yet others in "private" flash files. The quickest and most complete procedure would be to swap the compact flash. Keep in mind the activation key is stored there as well, so get that from the new system before the swap. For example, my ASA has webvpn configuration components that aren't in the running config, or visible flash filesystem. 

1530 is including the layer-1 overhead (preamble and start frame) which you will never see without dedicated diagnostic gear, as the NIC won't present that to you. 1518 includes the FCS (CRC) which is technically part of the layer-2 information, but I've never seen a NIC pass that up the chain (read: wireshark can't show it.) Interesting that you point to a Cisco 2900XL document. I know first hand the 2900XL crashes if you send it an "oversized" frame -- 802.1q tagged frame on a non-tagged port. (or was that the 3500XL) If you ignore everything Cisco says, a babble is a transmitter not obeying the inter-packet gap -- sending frame after frame with little or no delay. That's a big problem for half-duplex networks. 

Non-Cisco technology. (Checkpoint, pfsense, etc.) It's hard to ask this without it being a shopping question. (What VPN concentrator / firewall can handle more than 5000 peers?) 

Depending on platform, performance shouldn't be an issue up into the thousands of SAs -- table lookups aren't that expensive. However, every system I'm aware of limits the total number of SAs, either due to hardware constraints or "lazy programming" (fixed size table.) That said, it's best to have as few SAs as you can -- eg. 1 /20 vs. 16 /24's -- to reduce the setup time and amount of key renegotiation (which is computationally expensive.) 

As in locate a random internet device given it's MAC? Not a chance. A MAC is a layer-2 address. Nothing beyond the local LAN (layer-2) segment knows, or cares, what that address is. For example, you have no idea what the MAC is of my computer. And even if I told you, there's no way to locate it on the internet. Locating a single device within an enterprise network? The MAC can be found in switch tables localizing where it may be. Plugged into a specific port gives you a place to start physically looking, but patches can snake a connection all over the place. 

The keyword here is short name. In the example, "Et1/0". So, "Ge1/0/4", etc. Yes, it's case sensitive. 

Because LACP doesn't do that. If a port fails to setup a LAG, the ports function as normal ports. I am unaware of any switches that can be configured to "require" LACP. 

[ is a URL, not a hostname (or address.) should respond with ] The issue you have is due to virtual hosts. The http request will include a header telling the server which site you are requesting. If you use the IP address, the server doesn't know which of the sites (potentially hundreds) you wish to access. 

It works because you aren't asking to youtube from the proxy; you're requesting some other site, that then sends you to youtube. (aka a "VPN", or "tunnel") 

There's no mechanism to request a fragment be resent. The entire packet cannot be reassembled, so the entire packet will have to be resent. This is why Fragmentation Is Bad(tm). Routers typically do not care about fragmentation. They pass things on exactly as they receive them. (unless it's the source of the fragmentation.) As such, the router will be unaware of missing fragments. (I'm ignoring the practice of "virtual reassembly".) 

The PTR record doesn't have to be a valid FQDN. (for internal / non-internet DNS servers, this is not uncommon.) Eg: 

600 ports would be 25U of 24port panels, just for the RJ45s! Once switches, cable management, and power are added in, that's going to be a very full rack. And it's going to have poor air flow. It can be done in one rack frame, but you lose some on cable management and future expandability. As this sounds like an "infrastructure wiring" situation, once those patches are terminated, you should never try to move them -- even with slack planned-in, there's a mess of 600 cables in the back of that rack. I would recommend two racks, minimum. All the termination on one rack, with horizontal "feed-thru" cable managers -- the ones with fingers or a tray out the back to limit how much tangling can occur. And an equipment rack next to it for the switches, power, ups, etc. In this configuration, the cabling is left to be nearly static, while the switch and power infrastructure parts can be changed as necessary as needs and technologies change. (eg. you may only need 120 ports lit at the moment that could be done with 3-4 48port 1U individual or stacked switches, and then move to a larger chassis switch later.) 

Because you specified an address, or name that can be resolved to an address. How did your computer get to this website? You entered a URL (or clicked a link) pointing here. Behind the "mouse", your computer used it's configured DNS server(s) to resolve the name to an address. That DNS request had to find it's way to your default gateway (pre-configured) -- assuming it's not a local server, etc. On your local ethernet (wifi), your computer finds the address (MAC) of the gateway via ARP. 

If you're talking about Cisco tech... there's the WIC - data only, VIC - voice only, and VWIC - voice and data cards. Each depends on the router as to what functions are supported/supportable based on the IOS software and the slot in which the card is loaded. For example, a 1750 (or 1751) has 2 WIC and 1 VIC slots. The VIC slot is keyed so a WIC won't seat in it -- and if you force it in there anyway, it won't work. A VIC will physically fit in a WIC slot, but will not function there. A VWIC can go in either slot, and will function based on the type of slot -- data only in a WIC slot, voice only in a VIC slot. A 1760 has 2 VIC/WIC slots and 2 VIC slots. A VWIC in the first two slots can be configured for either voice or data operation. 

Your phone system is not VoIP. It cannot be directly bridged by IP. (every digital PBX I know of, does this by installing a VoIP module, and even there, it's a proprietary bridge between two PBX's) If the PBX is pure POTS, then a channel bank (T1) and some circuit emulation trickery could get that T1 carried across an IP network. But such a hackish solution is a waste of time and money -- even if this stuff is in a box under your desk. 

PSTN == ancient circuit switched analog voice communication network. It has been increasingly converted to digital carrier over the decades. But, the "last mile" is still analog, and entirely digital everywhere else -- even transported by IP in many cases. It's only relation to "the internet" was by use of dialup modems. Today DSL rides on the same physical infrastructure, but is not part of the PSTN. Cellular == in it's early days, basically a wireless version of the PSTN. Today it's a totally digital packet switched system. In this sense, data is data. Internet and voice are just streams of 1's and 0's. The Internet is a global packet switched communication network crisscrossing a multitude of technologies, some wired (dialup modems, DSL, cable, fiber, etc) and some not (terrestrial microwave, laser, satellite, shortwave radio, IR, ultrasonic, etc) 

You did uninstall it... from the ASA. All that's on the ASA is installer packages. Once you've used ASDM from the firewall (https... Install ASDM Launcher), then you have ASDM on your PC; it doesn't need anything from the ASA at that point. As long as the web server is enabled on the ASA, an installed instance of ASDM can connect to it. 

This is not done in the general case because of error handling and reassembly issues due to differing transmission delays. Plus, the full frame would have to be received to divide it up for parallel transmission -- store-and-forward switching is generally avoided due to the latency it introduces. Some switches (eg. Cabletron) can do this via proprietary mechanisms. In the cabletron case, it requires the parallel links be equidistant to within a few feet; if a fragment is damaged in transit, the reassembled frame will contain that damage. (i.e. they didn't bother with error detection/correction) 

What routes were being advertised before adding the filter? My BGP is very rusty, but I don't recall BGP advertising routes that aren't in the FIB (aka "best" routes.) As such, the only routes being installed from AS2 are origin AS2 (_2$); the transiting routes (_2_) aren't being installed, so aren't advertised. 

This is true because nothing in the modern internet does classful addressing[1]. With classful addressing, the netmask is a fixed value based on the address. In your example, you cannot "merge" three class C ranges to have 700 hosts in one LAN. The netmask for each range is automatically 24 bits. CIDR fixed this by abolishing the rules whereby the address dictates the mask. Thus, a LAN can be any size. You (and a lot of other people) are still hung up on the words "Class C", "Class B", and "Class A". Those constructs no longer exist; and haven't for decades. What people mean when they use the term is the netmask size of 24, 16, and 8 respectively. They don't mean class semantics are being applied. [1] 10.0.0.1/24 is an invalid configuration in a classful system.