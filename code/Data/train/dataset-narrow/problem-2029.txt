VMware documentation mentions a "CPUID Mask", but I don't know how configurable that is. If you're willing to experiment with other VMMs, QEMU can enable and disable CPUID flags at the command line. For example, leads to a virtual CPU with the features of an n270 but with the fpu flag disabled. There's a full list of supported CPU models and CPUID flags at . 

As I've mentioned in the comments, R is no longer supported on XP: $URL$ From the information I can gather from the Internet Archive, version 3.4.0 was the last version to support XP: $URL$ The next snapshot of the R FAQ shows that version 3.4.1 drops support for XP: $URL$ This change in OS compatibility occurred between June and July of 2017. Version 3.4.0 can be downloaded from $URL$ 

I'll address the two ways the other answer mentions as routes an extension can leverage to escape the confinement of a browser profile and access other parts of the filesystem, plus an extra. The first is through the WebExtension permission, the second through triggering a file dialog, and the third is through the API. None are automatic (background or otherwise) and all require the user to explicitly agree to such access. 1) A WebExtension using the permission cannot pull in the privileged native application on its own. Until the user explicitly decides to install the native application, the WebExtension is trapped within the browser profile it was installed in. From the other answer, "[i]f any ... extensio[n] require[s] administrator access to install" then said software comprises more than just a pure Chrome extension, e.g., the extension taps into a standalone client installed outside of Chrome, and by installing the external client (outside of Chrome) one might as well have installed a system-wide standalone keylogger binary that affects much more than just the browser. Game over, but the user's fault, since s/he has overridden the security provided by the browser. 2) From the other answer: "I was ... able to launch a portable copy of Firefox in which I installed an sqlite browser ... and browse to my old profile and see my history." File dialogs require explicit user interaction, hence this is not a security bug. If the user explicitly loads files into the browser profile for the extension to manipulate, then the user has expressed his/her agreement to having their data shared with the extension. Otherwise, the extension can do nothing but hope for the user to select a file in the Open File dialog, which the user (recalling the profile is meant to trap potentially untrustworthy extensions) can simply close. 3) The API on Chrome allows read-only access to the filesystem via the file:// protocol. However, "a user must explicitly permit this behavior for a given extension through the Chrome preferences pane in chrome://extensions" and as of early 2017 only 55 extensions on the CWS ask for it. (Source: Mozilla Wiki) Not only is the likelihood of encountering an extension abusing this privilege to snoop into the filesystem highly unlikely, but the privilege also requires that the user manually grants it to a browser extension. 

So given this program works, my plan is to purchase an HP Stream for about $200 USD install IrfanView on it and connect to its HDMI port o make my own media player box. I know people do this with Kodi/XBMC on a raspberry PI or similar, and that seems like more fun, but my plan seems easier. EDIT: I executed this plan and it worked nicely. Couple things: IrfanView has command line options can can start in slideshow mode by specifying a folder, eg I tried that. It works, but it does not have the feature when used that way. So you only get the pictures in that actual dir, none from subdirs of that dir. However, there is a option. So you can manually use with checked to add all media files in the current and all subdirectories. You can then sort/order them, or include others or exclude some. Then you can to some filename.txt file. Once I had that file I created a desktop shortcut in which I modified the target to append ie that file i made. Now, double-clicking on that shortcut's icon starts the slideshow with 1 click (well, 1 double-click ;) I did buy an HP Stream. It was $188 at Walmart online plus sales tax but free shipping. I found it a capable machine. Not fast. But not painfully slow. There's lag in many things i do, but only 1-2 sec usually. It has 17GB free disk space (technically SSD space)--very liming, but with an SD Card slot which I am using for the pictures. I used Windows normally to change closing the lid behavior to "do nothing". But even when connected to an external monitor, closing the lid stops the slideshow. So the lid has to stay open all the time--even with an external monitor. Of course i changed power options to never sleep and never turn off the display when plugged in. Also, I have the TV that this is connected to via its HDMI port plugged into an outlet controlled by a wall switch. When I flip the switch off, the TV goes off, and the HP Stream keeps playing the IrfanView slideshow. When I flip the switch back on, the TV comes back on, and the HP Stream (running Windows 8.1) recognizes it and starts displaying to it again, with out user intervention. That's nice. It does mean the HP Stream goes on playing all night long while the place is closed. 

My answer was here: How do websites block selecting text and how do I unblock that? I post this because that answer on this site does not come up on a search for "copy and paste" nor "clipboard" which is often how a user (say, eg, me) might search for it. In my case it was a CSS property in a style attribute on a tag in the page source. But any of the CSS property variants may be the culprit for you. 

On the other hand, can scan for bad blocks on an extant filesystem and blacklist them without destroying the existing data: 

That's normal. The raw capacity of a (perfect) 1 terabyte disk is roughly 931 GiB, less with the overhead of partitioning and the presence of a filesystem which is roughly 4% in your situation. 

Since the drive is showing signs of damage, don't forget to take precautions to keep your data safe. $URL$ 

Under the Source header in the [Development] tab at $URL$ it says that "stable releases are available on the Linux/BSD tab", so the source under the Linux/BSD tab is also the source for the compiled Windows and Mac versions of the software. Development versions of the source are also available at $URL$ You can inspect the code yourself to verify whether it is safe to use. 

Using separate browser profiles to isolate potentially dangerous extensions is more than good enough, as separate OS-level user accounts is overkill, unless one is defending against zero-day browser exploits that completely trash Chrome's WebExtension API permission model, in which case VM-level protections are in order. If we're playing with software that leverages exploits, then OS-level user accounts provide insufficient protection as we are now toying with malware. Chrome Apps are an entirely different kettle of fish since they enjoy more permissions than standard Chrome extensions, but they are a deprecated technology and, more importantly, outside the scope of the OP's question since it asks about Chrome extensions. Thus, Chrome Apps are not covered in this answer. In conclusion, a Chrome extension cannot jump across browser profiles unless 1) the user has manually installed a standalone executable external to Chrome, in which case all bets are off 2) the user selects a file in a file open dialog generated by an extension, in which case the user has explicitly granted the extension permission for arbitrary file access 3) the user manually ticks a box in chrome://extensions that extensions cannot themselves modify. 

I'll answer for . The reason why the actual URLs aren't printed is because of abstraction, the same way why classes have getVar() and setVar() functions instead of a public variables. The packages are meant to be retrieved by a package manager, not by hand, so there is no need to show URLs by default. The current format displays information on the release and component of a package that a URL does not reveal. Consider if the naming scheme for the packages changed. Then, a URL would be missing information on the version and architecture of a package. Consider if the URL itself changed. The current output format for downloading packages can stay the same, but this would not the case if an URL was shown by default. 

Short answer: As long as you install a Chrome extension from the Chrome Web Store and do not explicitly install a separate standalone binary, then the extension is, by default, trapped within the browser profile and cannot access nor modify other Chrome users. To say that there are "no filesystem protection in place" is inaccurate, as Chrome has never supported XUL-type extensions. 

So following recommendations here I downloaded IrfanView today (thru LiberKey (a portable application launcher, although i think i prefer PortableApps.com without the launcher)). opens a dialog box with copious options. It only played one of the formats of videos i had: .wmv That was disappointing but I can use FormatFactory or iWisoft video converter to convert them, so I'm not that worried. I also assume with some codec/plugin work i could get other formats to work in IrfanView. In particular IrfanView lets you pick the pictures you want, including all of them. You can select a mix of pictures and videos. IrfanView lists what you have selected in another box where you can control the order. It auto-plays videos, and auto-moves on to the next file, whether picture or video. Here are its other features that I have seen people ask for in various threads as I was searching for an answer to this question: 

Just had same problem. Themes services was already started and I restarted and did not fix. However, The service, altho it was already, I restarted it, and it fixed my problem instantly. Taskbar icon peek and transparency restored. Note that control panel\System and Security\System -> advanced system -> Performance Settings -> visual effects tab had MISSING. It was not just un-checked, but missing entirely from the list. Re-starting service restored that option into that list (in checked state). I had radio button selected here before and after the problem and before and after the fix. EDIT: I got my hint from here: $URL$ 

First of all, the network and internet are working for everything except one website. And we visit that website every day, and it worked Thursday, then didnt work yesterday, Friday and doesnt work today, Saturday. Windows updates are set on manual, and I haven't run them this week. There's nothing new in the environment that I can think of. When I tracert that problematic website it times out in the middle. But people in other locations can get to it and tracert to it. My ISP is CenturyLink an they claim there's not an outage. This might be the weakest part of the evidence. However this has lasted ~24 hours now. When I tracert the destination, the last successful tracert connection I get is is . After that, all "" up to the limit of 30 hops. Never reaches destination. When I ping along the other guy's tracert that works, node by node, I get to (inaccurate) and I can't ping that and that is 1 hop before the destination. He and I get the same IP for the website name, so I don't think it's a DNS issue. Anyway my DNS servers are 8.8.8.8 and 8.8.4.4 i.e. google's. I have rebooted the PC, same behavior/error results. It's Windows 7. I'm going to reboot my router next. EDIT: I tried 

The page navigation action shouldn't trigger if a text box is active, but if you want to disable the feature altogether set in to . 

If your shell is , you can turn the output of into the input for with process substitution. For instance, when filtering the output of for lines that start with "De" into , the command would be: 

If you're reformatting the drive, you can scan for problematic spots via and give the information so that the filesystem can blacklist the bad sectors on creation. The following commands generate a blacklist at and use them for filesystem creation with . 

I'd just jump straight to wheezy, but if you want to run updates for squeeze beforehand you can change your to point to . 

Mozilla's Electrolysis project has allowed its browser to leverage the same sandboxing technologies Chrome does due to the implementation of a multiprocess architecture which uses a privileged process for managing the browser chrome and unprivileged content (child) processes for handling untrusted (web) content. The multiprocess architectures of the browsers are a bit more complex than that, but this is the gist of things. As of Firefox 57 and up on Linux,1 the release branch of Firefox uses the same core functionalities Chrome does for sandboxing. Both browsers use seccomp-BPF to limit content process syscall access for reducing attack surface, and the content (child) processes of both browsers are sandboxed either by a setuid wrapper (Chrome legacy fallback) or unprivileged user namespaces (Firefox and Chrome on modern kernels).2,3 Thus, from a high-level perspective, the sandboxes of Firefox and Chrome are equivalent in strength. 

There's more to the description in the manual, but this is the gist of it. Also note that for , options with and without a dash can mean different things. 

WebExtensions cannot modify or pages, so the behavior you mention cannot be changed. This is the only extensions API supported by both Firefox and Chrome since the former has dropped support for XUL extensions. Extensions can inject content scripts into tabs that match URL patterns or specific tabs via . Both methods take a "match pattern" for the target page that starts with which must be , , , or (for Firefox), so any access to or URLs is impossible. The CSS injection API uses the match pattern as well and cannot be used to modify protected pages. Extensions can also have background scripts that don't have access to web pages and must modify them indirectly through content scripts, so they fall under the same restrictions. Since the source code of both Firefox and Chromium is available, you can certainly make the changes necessary to grant extensions extra permissions, but there isn't something as simple as a compile-time switch. Keyboard shortcuts registered through a background script are effective on all pages, but the API necessary for truly arbitrary key combinations does not exist at this time. If you are styling Firefox, you might be able to affect pages with modifications. $URL$ $URL$ $URL$ $URL$ $URL$