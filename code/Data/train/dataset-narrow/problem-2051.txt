I believe the issue is that the workbook has named ranges for FTP but not for ATP. In the Function Test Procedure code, on the first iteration the analogous line 

The here will look up the value of in the first column of the table and return the associated increase value in the second column of the table. 

The allows you to compare F to A, G to B, and H to C with one comparison rather than three. That said, you could just as well use in your rule to the same effect since you're only comparing three values. 

One solution is to enter the reference to the named range as an array formula. To do this, select the entire desired output range, in your example. Without changing the selection, type the formula 

The original formula was an array formula. That is, to work properly it must be entered using the Ctrl+Shift+Enter keystroke combination. When entered properly, the formula will appear enclosed in in the formula bar. If this is missing, then you have identified the problem. Array formulas are annoyingly finicky. If you ever double-click a cell containing an array formula or click into the formula bar with such a cell selected and then press Enter, you will have removed the array entry and broken the formula. This explains how a formula that was working one minute may have stopped working seemingly for no reason. To fix this, select the cell containing the formula, click into the formula bar, and then press Ctrl+Shift+Enter. 

This should put each record on one line with tab-delimited fields. If this doesn't return what you expect, examine your data, see where the pattern-matching failed, and adjust your pattern accordingly. Finally, copy all the text from the text editor and paste back into Excel (probably on a new sheet). Everything should be aligned in the proper columns so you can sort as you would normally. (If everything isn't aligned properly, start over and fix your search pattern accordingly.) 

This will return blank for items not recently ordered and show "Recently ordered" for those that were. You can fill this formula down the column to generate flags for the entire item list. 

You need to have a separate table with each of the possible values (LIN, LOX, etc.) in one column and the associated conversion factors (13.80, 12.08, etc.) in the next column. So, if this table is in B1:C7, you would enter the following in S63: 

For reference, is the range of column headers (months), and are the values in the row. What this formula does is look for values less than 0 and then takes the one with smallest column number. It then returns the month header in that column number. This formula can be filled down to all rows. EDIT: If your data does not start at column A, you will have to make a small adjustment to the formula to get it to work. Everything stays the same in the formula except the first argument of the function must be extended to column A. For example, if your data starts in column C, then you would use the following formula instead (entered as an array formula). 

This calculates the total pots won and subtracts all buy-ins, not just those on pots you lost. For your sample data, this returns -3. 

This is easier in Access than in Excel. In Access, import your data from Excel using the import Wizard. Once your data is in a table, create a new query, go to SQL view, and use a query like the following to find users posting more than once in a single discussion: 

This will average only the entries less than 1. If no such entries exist (i.e., all values are equal to 1.00), the formula will return . 

This will limit pH values 0<=pH<=14 and only whole numbers. Since the rule is applied to the whole column, sorting will not affect the data validation. 

One hack-ish solution is to save a copy of the workbook as a website. This will create a folder of website files. Inside the folder, you will find a copy of the image file. 

The functions are used to avoid having to apply a number format to the cell. If not used, Excel will format the result as a date. 

Step 3: Copy values from these formulas over your Personnel names in your computer data. After doing this you can remove the data and formulas you added in the previous steps. 

The problem is that you have not declared a type for variable . In VBA, you cannot declare the type for a list of variables with one statement. You must declare the type for each variable individually. As a result, VBA is treating as a Variant for which it can provide no guidance for methods or properties with a hint menu. Update your code to the following. 

Sure. You can use nested functions in spreadsheet formulas in GoogleSheets, Excel, or pretty much any spreadsheet application. Just replace in the formula with the formula used to generate the value in B2. 

Enter this as an array formula by pressing Ctrl+Shift+Enter. Column H holds Timeslot Start, column I holds Timeslot End, Column C holds Start Time in your process table, and Column D holds End Time in your process table. Note that you can set the formula to look well beyond the bottom of your process table, so if the list of process is constantly changing, your count formula will still return the correct result. 

If I follow your question, you want to know how to make your table show something like the following in the case that Teams 2 and 3 are tied in both points scored and points conceded: 

This will allow entry of "TBD" or anything that Excel automatically recognizes as a date. This may allow some irregular formats you did not have in mind, such as or . You'll need to take a different approach if you want only certain date formats to be allowed. 

Another syntactic shortcut is for accessing and evaluating worksheet functions. You can use brackets to evaluate a formula as if it were on the worksheet rather than stringing together a cumbersome VBA statement. 

The key is that will return the index of the most recent date in that matches or is before the date in . Since your dates are sorted, the next date in the list will occur after the date in , so adding 1 to this index will give you what you want. 

Previous failed attempt (left only for reference; please don't use this): Here's a macro that will open a new workbook and enter all the data from your sheet with each value enclosed in quotation marks. You can then save this new workbook as a .CSV without disturbing your original workbook. This will work even if your original data included formulas. 

So, you've already formatted the cell as a date. When you enter the date as you've typed it, Excel sees it as a number, . The source of the problem is that Excel actually stores dates as numbers, specifically as the number of days since January 1, 1900. What you've entered is interpreted by Excel as the date 2,022,015 days after January 1, 1900, which is . To get around this, you need to enter your date in a way that Excel won't confuse for a number. Try an accepted date format, like or . That is, type this instead: 

Enter with Ctrl+Shift+Enter. This will return the date value of the max date with a 1 below it in row 4. If you would like to return the value in a date format, you can wrap it in a function and specify the format in the second argument.