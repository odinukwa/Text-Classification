At this point, I'm thinking, OK - have what I need to make an as-path ACL to filter out the stuff originating from AS2 since the regex searching checks out per the above. I create and apply the following: 

To easily see the traffic in it's encrypted state between the two firewalls which you own and manage. I suggest a hub. It requires no configuration, you simply plug in both firewall's outside interfaces and then plug in your laptop with monitoring tools (may need to adjust NIC settings/promiscuous etc) to see all the traffic flowing between the two devices. 

We're experiencing complaints about drops and spotty performance that improves as users go home and it got me thinking since these are lower end AP's that it could be the number of people connected to them. This week we have training customers in , so our average of ~20 people connected on all WAP's has moved up to about ~60 per WAP. The environment contains 6 Autonomous WAP's (Cisco 1142's), 3 on each end of the building, with enough overlap to allow seamless roaming between all 6. We have two SSID's an internal and an external / public facing one. The training customers are using the public SSID, the users complaining about performance are on the internal one. The common line here is that the bulk of the training traffic is on 'WAP-5', and the internal users complaining, their stations associate with 'WAP-5'. My question is: What can I do, to assess a situation like this to determine if the issue at hand is saturation on the WAP and not other external factors like interference / configuration issues / client side issues. I want to clear this off of my list before I dig further into other issues. EDITED: Reworded question, gave more detail per YLearn's comment. 

THIS IS NOT A DUPLICATE POST/SAME QUESTION! PLEASE READ FULLY!! Hello All, In a recent project, a vendor we're setting up a VPN to, proposed our crypto ACL to their service be as follows: 

THIS IS NOT A DUPLICATE POST/SAME QUESTION! PLEASE READ FULLY!! We're implementing a web-proxy service and in the tunnel config over to their service the provider requested a crypo ACL as follows: 

Why does using multiple sets of specific ip's to specific ip's in a crypto ACL - cause instability in VPN tunnels, please relate this to phase 2 SA's (IPSEC). Ex. 

They suggested we use an additional ACL to limit the traffic going over this tunnel. The reason they cited was because keeping the crypo ACL open like this and then limiting it with an ACL on the interface, you would cut down on the number of SA's built. How does this cut down on the number of SA's and is this the most efficient way to design VPN's? 

Simple question What functionally happens when executing 'clear int giX/X/X' on a switch? The port config looks the same afterwards, I see no difference. 

Shutting down the DR interface (disruptive) Setting the DR interfaces priority to 0 (non-disruptive) 

Is there an equivalent command/function either from CLI or SmartDashboard similar to the ASA 'packet-tracer' command? For those unfamiliar with 'packet-tracer' - in the ASA CLI we are able to test flows in this manner: 

[R1]---[FRSW]---[R2] - is the topology. Everything is L2, there are no PVC's, all physical interfaces. At startup everything is running with HDLC. Enable CDP - we get CDP neighbors across the board. Next steps - enabled FR switching on FRSW, made its interfaces FR encapsulation, switched interface type to DCE, the branch routers simply changed encapsulation to FR (so they're FR DTE's). Then manually enabled CDP on each FR interface. No CDP neighbors. Why? CDP is a L2 technology. I show up/up for all interfaces. Thanks in advance ! 

If a hacker spoofs packets which match your SRC/DST fields at any line in an ACL, then the firewall is going to allow the traffic. The only exception to this is if you have a stateful firewall, and the spoofed packets don't make 'sense' for the given conversation the firewall is tracking. An example of this would be a hacker spoofing tcp syn's to a host that's already mid-conversation with the real source IP. The firewall would see this behavior and drop the packet. This doesn't apply if there's no session already being tracked by the firewall, so again the cases in which a stateful firewall is going to completely block all spoofed packet is situational at best. There are exceptions for both stateful and stateless firewalls, but being general it's hard to give you more (useful) detail. You can however design ACL's in way that can detect spoofed IP's in certain situations. For instance, you could have an edge firewall, and you know logically only public IP's will be coming from the outside to your network, so you could create ACL's blocking all of the private IP space from the outside, and that could stop some spoofing attempts. In similar veins you could do this for networks you know will not be coming inbound to the interface you're making the ACL for, and so poor spoofing attempts would be stopped. There are many tools that need to work in concert with a firewall to protect against spoofing attacks, but the best any engineer can do is look at the firewalls placement in their network and design ACL's that factor in which traffic should logically ever be allowed to pass through a given interface. If you need more detail let me know and I'll reword the answer for you! 

I have been handed a ticket to work an RMA for a failed line card in a Cat6509-E. Not ever having worked with these devices before I had a few questions: 

Two routers, ethernet link, priority both set to default of 1, R1 sits exclusively in AREA 1 with RID: 192.168.23.3. R2 is the ABR leading to AREA 0, RID: 192.168.23.2. No other routers in AREA 1. Why is R2 winning the DR election? This seems very straightforward that 192.168.23.3 RID should win for this segment. Output of election process for perspective: 

We have been assigned a block of 64 IP's by ARIN (/26). We have a private range that is a /22. Every time we get a new block of public IP's we NAT them to the next available addresses in that range, so no new private subnets being made for this new /26 block. My question is: how many will be usable by hosts? Normally I'd say 61 (1 for network, 1 for gateway, 1 for broadcast) but with a public block not sure. 

Not Really sure where to go with this, i feel like the duplicate address message is telling in this case, however, sh run |i yields nothing, the interface itself doesn't even have that address to begin with.. Would really like to know more about both. I already understand UDLD - I'm just not familiar with that state and what to look at afterwards Other output: 

Looking for a good low end cisco switch for access layer at a branch office, it needs: + to utilize the standard CLI interfaces / IOS setups - no SMB solutions + 24 1GB copper ports, with some sort of SFP/GBIC expansion module for uplinks + to be at/near/or under 1k We currently have two HP ProCurve's (unsure of the model at this time). Current bid from management is a low end HP switch (SMB) but I'd really like to get our environment consistently Cisco. Trying to stay under 1k new for each device. Thanks in advance! 

For the test though we only want one machine's traffic to be pushed through this tunnel. I was told there is a way to limit the tunnel traffic with an additional ACL, but I'm unclear as to how to achieve this and still allow all other traffic through the outside interface as usual.