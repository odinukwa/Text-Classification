I think only those vertices corresponding to triangles sharing an edge with boundary or holes of the polygon will be of degree less than 3. Now the number of triangles in the triangulation is fixed. So you can always get the exact ratio of the number of degree 3 vertices for a polygon. If the polygon has $k$ vertices and $l$ holes vertices and the number of triangles in the total triangulation is $N$ then the upper bound should be $(N-K-l)/N$. 

Take arbitary points on plane. Can we always find a line such that the number of points above and below the line is same? If yes, how ? Take a point set on plane. How can we find the minimum number of points that should be added to the point set such that it contains 4 points forming a square? 

Suppose, there is an algorithm for enumerating minimum clique edge cover. Is it always possible to convert the algorithm to enumerate clique vertex cover ? 

Edit: In the clique intersection graph $C(G)$ of a graph $G$, the nodes are maximal cliques of $G$ and there is an edge whenever they share a vertex. Note: This is different from the definition of clique-separator graph for chordal graphs (Which is a tree). 

As one of the topics of your lecture, the problems from combinatorics might be good candidates.Generally, a high school student has some conception on permutation, combination and high school geometry. So, following examples illustrates what i mean. 

Hi i am looking for algorithms to decide whether a planar pointset has a eulerian triangulation i.e. a triangulation that makes every vertex of even degree. I cam across this page $URL$ which implements a program to do the above but the algorithm was not clear to me. Any idea to design algorithm for the above problem will be helpfull. Any link/paper to easier discussion is also welcome. 

and no such ball can intersect opposite groups of ​ $m\hspace{-0.04 in}+\hspace{-0.05 in}1$ ​ points. 

Warmup: ​ With respect to polynomially-closed reduction classes that can't solve all of FNPSPACE, FNPSPACE-hardness is different from NPSPACE-hardness. Proof: ​ ​ ​ ​ ​ ​ ​ Let R be the relation given by xRy if and only if [x$\in$QBF$\hspace{.02 in}$ and y is the empty string]. 

CNF-SAT ​ $\to$ ​ your problem ​ ​ ​ : The subscripts are the variables and the superscripts indicate whether the 

$\;\;\;$ , (i_1 or not output) , ... , (i_(fanin-1) or not output) $\:$ for each AND gate . However, that reduction does not blowup instance size. 

Fix some such randomness for each update, giving a deterministic algorithm, which I'll call DSSEA, whose error probability on that input distribution is at most 1/6. ​ Consider a guesser G which 

seem like natural candidates for separating those classes. $\big(\hspace{-0.04 in}$On the other hand, I wasn't even aware of ​ unambiguousPcc = Pcc , 

finite worktape whose endmarkers are at least f(length(x)) apart and for all strings x in the complement of L, M will reject x whenever M is 

Shaull already mentioned NL. ​ The same thing also applies to all super-logarithmic space classes. ​ The only other examples I can find for which I don't know of as-natural 

$5$ $k$-ary comparisons suffice for a $\: \left(4\cdot \left\lfloor \frac{k}2 \right\rfloor \right)$-ary $\:$ comparison. For $\: 4\leq k \:$, $\:$ $5\:\:k$-ary comparisons suffice for a $\: \left(\frac32 \cdot k\right)$-ary $\:$ comparison. For $\: 2\leq k\leq n \:$, $\:$ $\log_{\frac32}\left(\frac{n}k\right) = \frac{\log_2\left(\frac{n}k\right)}{\log_2\left(\frac32\right)} \:$. For $\: 2\leq k\leq n \:$, $\:$ $5^{\left\lceil \frac{\log_2\left(\frac{n}k\right)}{\log_2\left(\frac32\right)} \right\rceil}$ $k$-ary comparisons are sufficient to sort. For $\: 2\leq n \:$, $\:$ at least one $k$-ary comparison is necessary to sort. 

Since $\:$2SAT $\in$ P$\:$, $\:$ one has $\:$sPCP(2) $\subseteq$ promise-coRP$\:$ by reasoning similar to the PCP(1) equality. 

You can use the following idea. Maintain a graph,say $G^{'}$ similar to the graph that you are constructing,(say $G$) but the edges being reveresed and an extra dummy root node with a directed edge from that to last inserted node. Now when a new node comes,say $f$ in do a Breadth first search from the dummy root on $G^{'}$. Whenever a search node, say $v$ is found during BFS on which $f$ is dependent create an edge in $G$ and update $G^{'}$ accordingly. The idea is similar to you but if implemented properly runs in linear time( in number of nodes). Hope it helps. 

Is it possible to construct a unit interval graph with $n$ vertices and clique number $k$ such that any other unit interval graph with same number of vertices and clique number is a sub-graph of that graph or isomorphic to a sub-graph of that graph? My construction for k=3 is, 

For a chordal graph $G$ there is a clique tree such that its vertices corresponds to maximal cliques of $G$ and there is a edge between two vertices iff the intersection of the corresponding cliques are also their minimal vertex separator and for each vertex in the graph the cliques containing it, induces a subtree. Now my questions are:- 

Suppose there is a set of convex polygons ($\mathbb{P}$) on the plane. For each convex polygon $P_i$ there is one "facility" $f_i$ placed on the boundary of $P_i$. The distance between a point $p \in \mathbb{R}^2\setminus \mathbb{P}$ and a facility $f_i$ is the distance of the shortest path between $p$ and $f_i$ avoiding interiors of the convex polygons. My question is: Is there a known algorithm to compute the voronoi diagram ($\mathbb{V}$) in such settings ? I found something similar in Aronov's paper which deals with geodesic voronoi diagrams inside a simple polygon. Since, the paper does not considers holes inside the polygon it does not solve my problem. Edit: The problem I stated can also be formulated as follows: Consider a large rectangle ($R$) containing $\mathbb{P}$ as convex holes inside it. The point sites are placed on the boundary of the holes. Now the geodesic voronoi diagram would be same as $\mathbb{V}$ bounded by $R$. 

$\big[$DLOGTIME-uniform AC0 with k$\cdot \hspace{.02 in}O$(log(n)) bits of non-determinism$\big]$, whereas by reduction 

One could just expand $\: x\hspace{-0.04 in}\cdot \hspace{-0.04 in}2^{\hspace{.02 in}y} \:$, $\:$ but that would use at least $\:\left|\hspace{.03 in}y\right|\:$ bits of space. 

a randomized reduction from USAT to U$\Pi$, since there's one from SAT to U$\Pi$. ​ For most natural problems, if U$\Pi$ is non-trivial then one can find a simple reduction from SAT to $\Pi$ that preserves number of solutions. ​ In particular, it's reasonable to expect a reduction from USAT to U$\Pi$. ​ However, I have no clue regarding whether-or-not there's necessarily 

is formulated without any rerefence to the term "CART". Motivation: In traditional CART (Classification and Regression Trees), one simply chooses the locally-optimal question at each step. $\:$ However, it is not obviously the case that doing so produces a 

My impression is that for standard constructions of MIP ("Multiple Independent Prover") protocols, the verifiers must have shared randomness. ​ What happens if the verifiers are 

In your initial use of it, there was no need for "As far as we know" - We do know that promiseBPP ⊆ promiseS2P ​ ⊆ ​ promise - (Σ2 ∩ Π2) holds. 

Observe that a $k$-ary comparison suffices for $\: \left\lfloor \frac{k}2 \right\rfloor \:$ simultaneous (binary) comparisons. For $\: 2\leq k \:$, $\:$ $\;\; \left\lfloor \frac{k}2 \right\rfloor \: \in \: \Theta(k) \;\;$. By the AKS network, for $\: 2\leq k\leq O(n) \:$, $\:$ $O\left(\frac{n\cdot \log_2(n)}k\right)$ $k$-ary comparisons are sufficient to sort. When $\: n\leq k \:$, $\:$ $1 \:\: k$-ary comparison is sufficient to sort. $\quad$ $1\in O\left(\frac{n\cdot \log_2(n)}k\right)$ 

non-negative integer $x$ that satisfies $\;\;\; x^{\hspace{.02 in}2} \equiv y \; \pmod p\;\;\;$ and $\;\; 2\hspace{-0.04 in}\cdot \hspace{-0.04 in}x \: \leq \: p \;\;$, 

by ​ $\mathbf{P}^{\left(\mathbf{NP}^{\hspace{.032 in}\operatorname{dMCSP}[1]}\hspace{-0.03 in}\right)}$ , ​ but in particular I'm not aware of any proof of such hardness. 

I found that Weighted nearest neighbor voronoi diagrams are widely studied and there are optimal algorithms for that. But I could not find anything on Weighted furthest point voronoi diagrams !! But it is very unlikely that this version of voronoi diagrams are not studied before. So, any link / reference will be helpful. 

I know that it is possible to calculate the minimum vertex cover of a bipartite graph, However, i want that the minimum vertex cover which contains vertices from only one partite set, which will be given as input, Any ideas how to design the algorithm ? Note that the answer to the above question might contain more vertex than the minimum vertex cover but all those sets would contain vertices from both partite ! 

Does there always exist such a rearrangements? why ? What is the official name of this problem in the literature ? 

It remains NP complete even if the properties are hereditary. Now clearly a solution of the above problem for a graph also provides solution for the induced subgraphs. But upon taking union of graphs of same family as G might not be solved using that solution. For example partitioning general graphs in disjoint unit interval graphs is NP complete but upon taking union of all possible edges (making the graph complete) solves the problem trivially. 

etc. Actually, the many problems in combinatorial geometry are even though hard to solve, but since they mainly focuses on points, lines they can act as motivational problems. 

Any reference to surveys in this area is welcome. I welcome any reference relating the graphs with bounded degree and to the chromatic number of its clique intersection graph. Let the independent neighborhood of a vertex $v$ in a graph is the maximum independent set with every vertex having a common neighbor as $v$. Let for a graph family $F$, we have a constant $C(F)$, such that for any graph in the family $F$, the size of independent neighborhood of a vertex $v$ in the graph is bounded by $C(F)$. Are there any studies which relate the chromatic number of the clique intersection graph family of $F$ with the above notion. 

"For example, is it thought to be NP-complete, or likely not?" It probably is thought to be NP-complete, since I'm not aware of any reason other than mathematical coincidence for why distinct path lengths would be too close to each other. 

Yes. ​ ​ ​ This paper constructs "a one-round succinct MIP of knowledge, where each prover runs in time $t\cdot \operatorname{polylog}(t)$ and space $s\cdot \operatorname{polylog}(t)$ and the verifier runs in time" ​ $\operatorname{length}(m) \cdot \operatorname{polylog}(t)$ . 

$\langle \hspace{.03 in}y_0,\hspace{-0.03 in}y_1\rangle \:$ is chosen according to the automaton's outputs so that $y_0$ is the first up-to-length($x_0$) 

centers of optimal balls induce assignments which satisfy a maximum number of terms. If $R$ is not in $[6/5,\hspace{-0.05 in}13/10)$, then just divide all distances by ​ $4/(5\hspace{-0.05 in}\cdot \hspace{-0.05 in}R)$ . 

(This would've been a comment, but it doesn't render properly when I try that.) "I don't even see how to separate" $\;\;\;$$\mathbf{U}$$\mathbf{q}$$\mathbf{uasiLIN}$ $\cap \; \mathbf{coUquasiLIN} \;\;\;$ from 

spent between printing digit" $n\hspace{-0.04 in}-\hspace{-0.05 in}1$ "and digit $n$ being" $\;\; O\Big(\hspace{-0.05 in}\big(\hspace{-0.02 in}M(n)\hspace{-0.04 in}\cdot \hspace{-0.04 in}\log(n)\hspace{-0.02 in}\big)\big/n\hspace{-0.04 in}\Big) \;\;$, $\;\;$ as follows: (Recall that the 0th and 1th bits of $\pi$ are both "1".) $\;\;\;$ Set $\: i = 0 \:$ and $\: t_{curr} =1 \:$ and output "1", then run the following loop forever. $\;\;\;$ Compute [the first $2^{\hspace{.02 in}i+2}$ bits of $\pi$] and $\big[\hspace{-0.02 in}$an integer 

The two issues I see are attributes without a canonical total order (categorical attributes), and what trees are allowed. $\:$ One possibility for categorical attributes is to allow the nodes to apply a circuit of bounded size; however, the feasibility or lack thereof in that case is likely to depend on cryptographic assumptions. $\:$ Instead, I will require that the input come with an explicit list of the tests that a single node is allowed to apply to a given categorical attribute. $\:$ Since the number of values of each totally-ordered attribute is at most the number of data-points, one can in that case convert an instance so that all attributes will be categorical. $\:$ After doing that, the number of allowed tests per attribute is at most the total number of allowed tests, so one can convert an instance so that all attributes are binary (with the bits given by the responses to each of the allowed tests), and one no longer needs to worry about what tests are allowed. 

I think if the size of clique, i.e. $p$ is prime, then the following statement is true. If a complete graph of $n$ vertices can be decomposed into cliques of size p with $p≤n$ then $n-1$ or $n-p$ is divided by $p(p-1)$. The above statement also holds if $p=2^k$. 

There is a $O(n \log \log n)$ time algorithm to solve the longest increasing subsequence problem. You may find this and the paper by Sergei Bespamyatnikh , Michael Segal helpful. 

In general, The chromatic number of the clique intersection graph a graph can again be arbitrarily high. For example, take $n$ maximal cliques of size $n$ such that every pair of maximal cliques has a vertex in common. So, for which non-trivial graphs the clique intersection graphs has bounded chromatic number even if the graph can have arbitrarily high chromatic number? 

I want to learn graph minor theory. Now i have read the very basic things and the overview from the book of R.Diestel but proceeding further is getting difficult. Currently, I am also following the video lectures by Jim Geelan on graph minor theory. Please suggest more books/monographs/lecture notes on graph minor theory. In case there is none, please suggest a systematic way to learn the concepts. I posted the same question here, but not sure if it reached the right community. 

Suppose there are $n$ bins each having $k$ objects. Assume that capacity of each bin is also $k$. Now we want to rearrange the objects such that each bin contains $k$ objects but this time if $x,y$ belong to the same bin, then $x,y$ were in different bins in the original arrangement. Questions: 

It is a well known fact that if $H$ is a graph of maximum degree 3, then $H$ is a minor of a graph $G$ if and only if $H$ is a topological minor of $G$. Moreover, a graph $G$ has one of $K_{3,3}$ or $K_5$ as minor if and only if it has one of $K_{3,3}$ or $K_5$ as topological minor. Furthermore, in a writeup by Bruce Reed i saw the following theorem. Theorem: For any graph $H$, there is a finite set $\mathcal{Z}(H)$ of graphs such that $G$ has $H$ as a minor if and only if $G$ contains a subdivision of some element of $\mathcal{Z}(H)$. So, my question is under what condition $\mathcal{Z}(H)=\{H\}$ or in other words, what properties must $H$ have so that $\mathcal{Z}(H)=\{H\}$ ?