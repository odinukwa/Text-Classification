Database schema helps grouping tables, or help identify multiple tables that have the same table name. Most of the schema usage that I have found so far are for grouping tables, isolating tables among the users (or talents), allow different permission based on the schema. In my case, I have a predefined table definition, and I like my user to be able to duplicate this table multiple times in my application. Obviously, I can't have the user create the new tables with the same name. My original idea is to allow the user specify a table name suffix: 

If you have index added to the TimeDimensionKey, you will only need an Index Seek for the result on your fact table to search data Without TimeDimension table, you will have to do something like the following, 

To add to ConcernedOfTunbridgeWe's comment, there is a querying performance advantage if you have a DateDimension and a TimeDimension table. Consider the fact table has both a dateDimensionKey and TimeDimensionKey. If you want to find the number of something between 8 am to 5 pm, you can simply do 

I notice the query has wait_type of PAGEIOLATCH_SH. In fact, I notice some other Select statements are having the same problem. What is PAGEIOLATCH_SH? What other information should I look for to fix to issue? Ultimately how do I solve this performance issue? Thanks 

I have a very large table (200M+ row), and it is clustered indexed. I would like to change one of the foreign key column from a bigint to smallint. My questions are: 

Does SQL need to rebuild the clustered index? What if this table is a heap and not a clustered index? 

Would this help speed up the delete because it doesn't have to do cache as much data, or it doesn't matter that much since I have an index on CreationDate? Thanks 

This will probably requires a table scan because the database engine need to calculate the result for every rows before it can figure out what data can be return. 

However, this requires a bit of code change since the table name is hardcoded in the data access layer of the application. What are the drawbacks, or potential issues if I create a new schema when a user duplicate the table, instead of dynamically generate a new table name? 

I refer to the advice of Paul Randal from his article "Why you should not shrink your data files" (read the whole article to get a clear picture what happens with index fragmentation): 

Run the first to see exactly which rows will be updated. If needed, adjust the clause to get the rows you want to target. Only then mark the sentence from the till the end and execute it. Much safer then running a "blind" update, as you did, forgetting the clause (I assume that was the problem). Even safer - do it on some test database first :). 

Concerning clustering keys, here is a great resource by Kimberly L. Tripp (start with links at the start of the article): More considerations for the clustering key â€“ the clustered index debate continues! She gives detailed explanation of why a good clustering key should be unique, narrow, static, ever-increasing, non-nullable and fixed-width. The articles are about SQL Server, I'n not sure if the exact holds true for other RDMBSs aswell. 

Unless you have some kind of history table & trigger in place, to retain old values at every change, or you made a copy of the table before you ran the update, you will need to use the last backup that was taken before that update. Restore it (as some temp database) and extract the data. You do have a backup available, right? BTW, next time you're doing an update, I suggest you set it up like this: 

You can build the "Export from SQL to Excel" part also via the SQL Server Import and Export Wizard in BIDS. Check this video for a demo. For the Send Mail Task, check this BOL article. If you want to automate and schedule it, you can use a SQL Agent scheduled job with an SSIS job step. A video demo is available here. If you automate it on a server, make sure Microsoft Access Database Engine 2010 Redistributable is installed (you do not need Excel there, just the "drivers"). 

I can show you an example for SQL Server, but it should you help for your RDBMS aswell. I hope I understood the question. Suppose you want to get TOP users based on the number of same skills as the current user. Some sample data: 

Is it possible to set up an SSRS e-mail subscription, with an attachment, that is encrypted? POST ANSWER-ACCEPT UPDATE: Does the SMTPUseSSL switch in the RSReportServer.config file help me at all? ONE MORE UPDATE: No, the SMTPUseSSL switch does not get me there. I have validated the answer below here: 

I have set up a predefined replication alert (as outlined here) in SQL Server 2008 and the alert for Replication Warning: Transactional replication latency does not appear to work. This is triggered by error 14161. I found a number of posts around the web that indicated this was a bug, but the posts were so old, I'm not sure that it is still the case. Is this still a broken feature? If so, can anyone suggest a work-around? EDIT/ADDITIONAL INFO: I see there are a number of scripts that have been highlighted in similar questions. To refine my question, I'd like to confirm this is a bug and I am looking for a work around that is rather out-of-the-box... that is, just another way to write the SQL Server Agent alert to get it to work... 

I have a number of Oracle stored procedures whose activity I want to be able to audit, so I am having them INSERT some data into an auditing table. It would be swell if I could list the variables and their values as well. Is it possible to get this list in an automated way? I am already using to get my procedure name. 

I want to know if it is possible to create a group "internal" to SSRS without having to add the group to the ReportServer box itself. I do not have permissions to the box to create groups and/or add users to existing groups. I know that this is a way (the only way?) to have groups that can be assigned permissions in the SSRS interface. I do have all the permissions I need within the SSRS interface. I have the System Administrator System Role on the ReportServer instance, as well as full sysadmin rights to the ReportServer database. I am trying to simplify our security structure and it would be peachy if I could create a group, assign users to that group, and then permissions to the group. But all I seem to be able to do is assign permissions to the groups set up on the box. Any ideas? EDIT: Active Directory groups are not an option for me. :( 

The where condition is not applied at this part, as you can see from the whole query you posted. Looking at the predicates and outputs of the nested loop and the clustered index scan, I suggest you try to create a nonclustered index on . 

Long story short: Use the clause in the outer query that references the view. Do not use it in a view. Even using it with (or on SQL Server 2012, the equivalent) does not guarantee presentation order, it just means you'll get the top 100% of the rows, in any order. 

The query you posted is not valid for creating a view; running for this query will result in an error. Are you using a clause? A view, being a table expression (a set), can't have the order defined, since that would be against the principles of a relational model (there is no order for rows in a relational table - a set is an unordered collection of tuples). Same goes for other table expressions - derived tables, CTEs etc. From BOL article about the clause: 

It specifically mentions SQL 2012 at some point, but I guess the same would work for 2008 R2 aswell: 

First, are you sure the data growth won't happen again? If there's a realistic chance it will and the empty space doesn't hurt you, leave it, do NOT shrink the database. However, if you're positive you want to reduce the data file size, then you should be aware of the pitfalls of data file shrinking: 

The main point has already been stated in answer by mendosi: the Columnstore Object Pool is located outside the Buffer Pool. See the blog he linked. The question is a bit unclear. Do you want the Buffer Pool to have the same memory available when you start using columnstore indexes? If yes, then: 

On the other hand, if you're fine with Buffer Pool getting less memory and/or you can't increase memory on the machine - decrease the MAX memory setting on the instance, since you'll need memory for the Columnstore Object Pool. In any case, I recommend monitoring memory usage and tuning machine memory and/or MAX memory setting accordingly. As a starting point, some DMVs: