If these are incorrect, then your domain registration likely has the wrong name servers, so you must fix this. If these are correct, then are they returning the correct answer when you query them? In your dig +trace above they are returning 

etc. When you encrypt it with SSL, everything after the GET line is encrypted, so Apache has no way of even knowing what host you are asking for. Without knowing the host, it has no way of knowing which certificate to use to decrypt the request. It also has no idea which directory to redirect to, which .htaccess file to use or anything else determined by the host. For this reason, AFAIK you can only use a single ssl host per IP address. I would try setting 

The examples above, at least at the the time of this writing, are showing contradictory results. I assume you are changing host names and IP addresses to protect your identity? That is all fine, but makes it muy difficult to diagnose the problem. So, here is what I propose. Start by making sure your DNS records are set correctly. Verify your domain name is registered properly with the root servers and the .es domain root servers. This is shown in your first dig +trace result above. According to this, your dns servers are 

Note that your dns server must also be registered as a DNS server specifically with GO DADDY or whoever your registrar is. How to for subdomain delegation 

SERVER: Linux CENTOS 6 PLESK 10.4.4 I have been installing Wordpress on many subdomains on our dedicated server. All of them run CRON jobs every 10 minutes. Long story short, the time to load first byte was getting to over 10 seconds. I did some research and found that eAccelerator helps with speed issues for PHP-intensive websites and another website that gives some instruction on how to do this. $URL$ After installing the Atomic repo and doing a YUM update I installed eAccelerator like this: 

So I was like...YAY, that was easy. THEN I started noticing ALL the PROBLEMS. First, a few of my MYSQL tables crashed and had to be repaired. The only way to get the REPAIR to work in PHPMyAdmin was to first login through SCP and change the owner of the actual database files to MYSQL, from it being blank. After this the repair worked and the tables are fine. Next, A job I am running which connects to an external MYSQL server suddenly stopped working with a pasword authentication error. I changed the connect string from DBHOST to the actual IP:port and now the CRON reports: 

FINALLY, and the reason why I did this in the first place was that all my Wordpress installs after working FINE for a long time suddenly stopped being able to call a CLASS that I know gets included (because it worked fine before). So now I get this: 

Since you get the error when installing directly with gem and when running bundle, I assume that the problem is in your default gem sources. You should check the source list with the command above, and alter the list with 

In general, all stable gem releases should be there even if the project is hosted on Github or elsewhere. If you need to grab a different fork of it or a pre-release version, you may have to specify a different source, but in your case 0.1.0 looks like the current release version. Somehow your gem source is set to fetch from 

The broadest is on the far right (.com) and the left (www3.) most likely specifies a single host - very specific. IP addresses are opposite 

as the default apache domain and example.com if that is the only one that you want to use ssl for. I would also turn on debugging for your rewrite rules so you can see if they are actually firing. If the issue is the ssl issue mentioned above, I suspect you are not even getting that far. Hope this helps. 

I don't know what host you are running them from (i.e is run on the nameserver or another host?) so I can't be of much help. When you do run dig though, please use the +trace option so you can tell exactly where things go off the rails. 

Can you check Ping from local PC? Have you checked with Other PCs in your network? There can be issue with DNS. 

You can try with modifying boot sequence and add secondary plex. You can check following URL if that would help $URL$ 

Have you checked about Wildcard Option? I think this would work perfect if you add Wildcard in your Local DNS forwarding zone which would resolve to external network. If you have W2K8 in your environment and you can do conditional forwarding too. Gaurav Maniar MCP | MCSE | MCST | MCITP | ITILv3 Certified 

Use IIS Advance Logging option that would be helpful. There are also Options are available to write logs with options available as following: $URL$ $URL$ Gaurav Maniar MCP | MCSE | MCST | MCITP | ITILv3 Certified 

I would recommend Web Platform Installer it is easy to install wordpress on IIS 7. Just few clicks and your wordpress blog is ready. Manually would take time in configuration and everything. 

All DNS IP address should be static instead of Dynamic also There should be one local IP address which is used in your internal network instead of using external IP address. Can you share screenshot or something which makes us more understand how you have configured NIC? This would help to provide more accurate solution. 

I would suggest to use A Record instead of Alias. It is my personal experience that A record which is good and reduce the performance issue. You can check following URL for more information. $URL$ Gaurav Maniar MCP | MCSE | MCST | MCITP | ITILv3 Certified 

to add a new one. I don't know if you should leave the $URL$ source there or not - it depends on if you have some nonstandard version of a gem installed from there or not. If you do, I would suggest adding that source in your Gemfile, NOT as your gem source. This can be done with something like this: 

Or the reversed, dotted quad notation plus in-addr.arpa whacked on to the end. Something critical to note here, is that with a reverse DNS lookup for 1.2.3.4 is completely independent of the forward lookup for that host name. That is why the reverse lookup is important for mail servers, ssl servers etc. For a mail server, when an SMTP transaction is negotiated, the sender gives a HELO (or EHLO) command with the host name. Since this is all done over a TCP connection, you also get the sending mail servers IP address. If everything is on the up-and-up, the reverse DNS of the IP address should resolve to whatever the HELO specified. Of course as stated above by @Zordeache, the only header you can trust at all is the one issued by your server. Within this header, the sending hostname from the HELO (forgeable) is usually shown in the mail header along with the IP address from the TCP connection (not easily forgeable). For email, all a spammer has to do is make sure their reverse and forward lookups for their scummy spam spewing barf box match, which is not hard. Fortunately though, many spammers are careless with their setups, and being strict about this check stops a lot of it. 

That particular class is located in another directory, but it is there. Another piece of information is that the file that contains the CLASS were placed there by EXTRACTing a zipped file (via Plesk) by using PHP unzip. This unfortunately screwed up the owner and permissions, but the sites were ok. I noticed that the YUM update rewrote my PHP.ini file so I thought it screwed up the include path. I still don't know if that is the case. I have tried altering the owner and permissions on the file where the CLASS is and the widgets.php file also. None of these worked and it still thinks the CLASS doesn't exist. As a matter of fact, any time you include wp-config.php (which DEFINEs the MYSQL db, user, and password, it throws the same error about that stupid class (which I wrote and was working fine so it can't be all that stupid). Before this the only mods to the server were the installation of FFMPEG and PHP TIDY. ALSO...ANOTHER STRANGE THING is that all the CRON jobs are running FLAWLESSLY and they use the same INCLUDE of wp-config.php. It's like the problem is isolated when PHP tries to run from the browser (eAccelerator?) I have another Wordpress site that is running fine on the same server after I repaired a few of its tables. The sites that are having a problem do not have any corrupt tables. I hope thats enough information. PLEASE HELP. Rick 

The whole enchilada, huh? OK, first reverse DNS (for ipV4) goes something like this. Ya start with an ip address, say 1.2.3.4. You want to find out what A records (hosts) are associated with this ip address. The DNS guys are totally Clever Dudes, so they made the the lookups for IP addresses work pretty much the same as for regular domains. In order to do this, they have to make them go from more specific on the left, to more specific on the right. With a forward host name: 

As AndrewB noticed and I missed, this looks like your problem. If you have an A record on tsohost name server pointing to your digital ocean server, you are telling it the final answer for its A record query is the digital ocean name server. DNS will not further query the digital ocean server - it has already gotten its answer. Instead, remove that A record from tsohost and tell it to delegate requests for the subdomain to your other name server. Do this by adding another origin and NS records delegating to your subdomain: 

4 is the most specific part, indicating a single host. To fix this, the reverse lookup is done by checking 

The server does not seem to be sending a reply here. I would try cranking the debug up to 11 on the server side and see what it is whining about. How much time elapses after the publickey packet is sent waiting for the reply when it fails? If it i