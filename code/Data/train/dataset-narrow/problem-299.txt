I am familiar with the config on Cisco side, but had no success on Mikrotik side (keep getting locked out and have to reset the device). Mikrotik has really poor documentation and the config seems inconsistent on different models. With RB750G, I managed to get VLAN to work by setting master port to none for each port, creating a bridge for each VLAN, then creating a bridge for each trunk with allowed vlans added to the bridge following MUM tutorial for VLAN in MikroTik. Isn't this effectively soft switching everything? Not to mention this get complicated really quick as number of vlan grows. I had no success with the switch chip config. "Management IP Configuration" section made no sense to me and following the wiki guarantees a lockout. Do I have to create the VLANs in both switch config vlan database and router interface vlan database? 

--as-path-lookups is based on RADB IRR data, which may very well be incorrect/missing. traceroute/as_lookups.c in traceroute-2.1.0 Dmitry Butskoy 

I am investigating some CPEs that might not be properly tagging frames. What can I use to reliably capture the raw packet with 802.1q tag? It becomes a problem because the driver/firmware might be stripping the tag before the packet is passed on to wireshark/tcpdump. The same goes with generating tagged traffic. How can I know for sure the frames sent out on the wire are actually tagged when I generate QinQ frames with Ostinato, but the OS driver (such as Windows 10 + Intel ANT) doesn't even support VLAN features. The NICs I am using are all Intel (i340-T4 etc). The CPE in question are some Mikrotik RB4xx/7xx with Atheros switching chip and some unmanaged switches (testing how they handled tagged frames). I suspect there are some bugs in switch chip tagging that's why I don't decided to take a look into what's actually being sent/received. From what I have read most Intel NICs process VLAN tags in hardware and do not pass it up. 

Moral of the story, there is no way to reliable get a route's origin AS in any static database (IRR, registry etc). And the origin may very well be different depending on your vantage point in DFZ. 

What are the causes of duplex mismatch other than misconfiguration? (power outage? improper cabling? auto negotiation implementation bugs?) Any thoughts on discovering duplex mismatch? NetMRI seems to use interface error rate. Is it sufficient to just poll all interface error rates on switches/servers? What if this feature is not available on a device? Edit: Drivers can definitely cause problems with duplex. I have seen Broadcom NIC stuck in half-duplex on FreeBSD. 

ASA 5585-X with SSP-10 and IPS-SSP 60 Slot 0:SSP-10 works fine Slot 1:IPS-SSP-60 is not responsive, ports not coming up, show module cannot detect software version, boot image missing Management 0/0 on SSP-10 is connected to tftp server. I can download the image from tftp to CF. The image recovery procedure in Cisco documentations say there is no way to directly set boot image for IPS SSP. I have to use tftp in rommon or put the module in recovery mode. I set recovery config and put the module into recovery mode but console on IPS SSP still shows boot loop because no valid image found. 1) I know SSP-10 + IPS-SSP 60 is not supported by TAC. Does this work at all? ports can stay up for only 20 seconds on IPS-SSP 2) Why management interfaces on IPS SSP not showing up as management 1/0, 1/1? 3) Do I need to connect IPS SSP's management port to tftp server (SSP's management port already connected to tftp server)? Then how do I reference the management ports on IPS SSP since they are not shown in #show interface ip brief Can someone give me some hints why the recovery is not working? Apparently I can't open a case with TAC for this issue. 

Switchport puts a port into layer2 mode (ip routing disabled for the port). You cannot assign an IP address to a L2 port, only to the VLAN the L2 port belongs to. The options after switchport is used to set port operation mode for VLAN trunking. Cisco IOS command reference "no switchport" enabled L3 features on the port, you can give it an IP address, perform ip routing etc, which is usually seen on a Layer 3 switch, aka a Router with (almost) all Ethernet ports. When I first came to network engineering, I kept forgetting to set "no switchport" and "ip routing" where I needed layer 3 features. 

The full topology is on page 7 I do not understand why the NAT boxes are only connected to edge. Why not have links from core to edge carrying traffic without NAT and links from core to A10 then to edge for traffic requiring edge? 

question2: No. VLAN is a layer 2 concept. A VLAN separates layer 2 broadcast domain. You can think of a non-managed switch as a switch with all ports in one VLAN. (no VLAN support is effectively every port in one VLAN). You can have two hosts in 192.168.0.0/24 and 2 hosts in 172.16.0.1/24 connected to the switch. Hosts in the same subnet can directly communicate with each other through the switch. The problem with this approach is that everything is in the same broadcast domain. Packets destinated 255.255.255.255 will be sent to every port in the VLAN, which may be a security issue, a waste of bandwidth, processing power etc. Even if you assign each port into their own VLAN, multiple subnets can still exist on one port (multiple IP addresses on one NIC, secondary IP addresses etc.). 

The lab is configured with PVST+ on all switches. Currently I am using wireless bridges to connection different sections of a lab environment for the sake of mobility. Basically just bridging the the wireless interface and ethernet interface. All ethernet ports on the bridge are in the same VLAN. SW1 ------ Wireless_Bridge_1 ~~~~~~~~~~~~~Wireless_Bridge_2 ------SW2 When frames go through the wireless bridge, the source MAC address is changed to MAC address of the bridge's wireless interface. Does this cause problems with layer 2 features (spanning tree, VTP etc.) At the moment STP seems to be working fine. What if I connect more STP speaking switches to the bridge? I think BPDUs should have all the information needed for STP to work, but the source address overwriting can be kinda confusing. Which layer 2 features can I expect to work over this type of wireless link (aka features that work just like it's an Ethernet link)? 

Something like $URL$ Showing top DNS queries and top clients etc. I am not seeing any open source projects doing exactly the same thing, $URL$ is somewhere close but still not quite there yet. How can I build a DNS monitoring system like this with BIND? Packet capturing seems quite inefficient. 

How practical is ICMP spoofing? scenario 1: in a NAT environment, how does NAT keep track of ICMP sessions (not technically sessions since it's not connection-oriented?) For ECHO/ECHO response Windows use the same identifier (0x1) and sequence number with 256 increment for each packet. If two hosts are pinging the same outside server, how does NAT distinguish incoming ICMP packets? If the internal network does not filter source address, how difficult is it to forge an ECHO response? use case: icmp ping used for monitoring, a load balancer may take incorrect/unnecessary actions upon receiving forged ICMP responses (destination unreachable, high latency etc.) scenario 2: Some IPS device, say the GFW, inspecting packets on the transit path. How practical is it to forge ICMP error messages kill a connection with stealth. Instead of sending TCP RST, it sends out destination port unreachable/packet too large (this might get interesting :)) with forged source ip (the legitimate IP on the other side or some hops further down the path). Keep tracking of the original IP header and first 64 bytes can be expensive but with the computing power available today, is it doable? Basically either from either inside or outside NAT, how likely is it for forged ICMP to cause damages/confusions? I am not talking about ICMP flood. BTW can NAT handle anything IP protocols other than TCP/UDP? I am actually not exactly sure how it handles different ICMP types. 

Why is the as-path so long here? Several ASNs in the path are just 1-2 hops away from AS3786. And that's what they did in traceroute originated from those ASNs. For example, AS23947 can reach AS3786 via AS3491. It appears to me that this is some kind of traffic engineering effort to mitigate attacks (the prefix in question seems to have been null routed at the edge), possibly using BGP community to restrict the announcement to certain (geographical) peers. This particular prefix was never globally visible according to RIPE RIS (121.64.0.0/14 is globally visible). And how did AS3786 make it happen? imo this is very difficult with BGP if other ASNs aren't cooperating. 

Once the connection is established, all packets need to have ACK set and match the sequence number of the received packets for reliable transport/security. RST without ACK will not be accepted. When one side sends RST, the socket is closed immediately and the receiving side also closes the socket immediately after receiving valid RST. It does not need to be and can't be acknowledged. after TCP handshake A --->B Syn=x, Ack=y, len=z, ACK Flag B --->A Syn=y, Ack=x+z, len=o, ACK Flag A --->B Syn=x+z, Ack=y+o, len=p, ACK Flag B --->A Syn=y+o, ACK=x+z+p,len=q, RST, ACK Flag B closes the socket after it sends the last packet and A closes the socket after it receives it. (not considering TCP window here, or there might be more packets from one end before the acknoledgement) ACK Flag, acknowledgement number and the procedure of acknowledgement are related but not the same thing. Per RFC793 

I am trying to figure out a way to keep track of network equipment, including chassis and service modules/line cards. So when I need to find something, I know where I can find it. 1) telnet access available 2) IOS, IOS-XE, IOS-XR, NX-OS, ASA I am wondering how feasible is it to use script to parse something like #show modules, #show diag in a large scale. Any better ideas? Yes they do have asset tags but they keep getting moved around and scanning the tags is way too much work to keep the information updated. Btw SNMP is nice but it's probably not going to work in this environment. Connections and configs get changed on daily basis. 

Hyenae is a highly flexible platform independent network packet generator. It allows you to reproduce several MITM, DoS and DDoS attack scenarios, comes with a clusterable remote daemon and an interactive attack assistant. There are some options you can play with, send delay range, TCP window size etc. IPv6 supported. It can generate 100K+ pps. 

Reset Processing In all states except SYN-SENT, all reset (RST) segments are validated by checking their SEQ-fields. A reset is valid if its sequence number is in the window. In the SYN-SENT state (a RST received in response to an initial SYN), the RST is acceptable if the ACK field acknowledges the SYN. The receiver of a RST first validates it, then changes state. If the receiver was in the LISTEN state, it ignores it. If the receiver was in SYN-RECEIVED state and had previously been in the LISTEN state, then the receiver returns to the LISTEN state, otherwise the receiver aborts the connection and goes to the CLOSED state. If the receiver was in any other state, it aborts the connection and advises the user and goes to the CLOSED state.