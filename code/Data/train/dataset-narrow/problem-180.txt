This will be a bit of a layman's answer, rather than quoting spec, but it should be accurate. The collision domain is the sum total of the network segment (hosts, hubs) affected by the collision, and forced to deal with it by a random backoff delay. Anytime a collision is detected on an Ethernet line, any and all interfaces on that line are required to stop transmitting. They each then come up with a random amount of time to wait before transmitting again, in an attempt to avoid another collision. In a crowded network, this delay will start to add up very quickly, and the collision domain is essentially the sum total of equipment that delay affects. As in your quote, it comes up a lot less these days. The original Ethernet gear that filled the role of the switch was a hub, which simply repeated any frame sent to it out all of the other ports. Once a network got even lightly congested, this made collisions a common symptom. Modern switch technology virtually eliminates that problem, since any frame received by the switch is only sent to the host it's intended for. The only possible collision is between a host and the switch, making it a very small collision domain, affecting only that host. 

In brief, because a vlan should roughly equate to a subnet. If a destination address is in the same subnet as the source address, it wouldn't want to route it. You switch within subnets but route between them. For your example to work routers 3 and 4 can't be on the same subnet. If instead router 3 was 192.168.10.1 and router 4 was 192.168.20.1, they'd be in different subnets and would need routing to be able to communicate. You could put 2 sub interfaces of router 6 - 192.168.10.254 and 192.168.20.254 for example and then add a static default route to each of router 3 and 4 to point to the corresponding subinterface on router 6. That default route says "to get to anything not in my subnet, go through my default gateway at 192.168.10.254" (or 192.168.20.254 for router 4) 

For fixed configuration and not modular chassis (i.e. cannot add another WAN to the same chassis), then you need 2 routers for 2 WANs. However, I know that the 881 has a 10/100 Mbps FastEthernet WAN Interface, not T1, right ? This means if the WAN is Ethernet Acces, then you can have more than one WAN on the same chassis. 1st WAN Ethernet can be connected to the chassis WAN Interface. And 2nd WAN Ethernet can be connected to one of the 4 ports of the integrated switch, you will need to configure a vlan with ip address in order for the switch port to accept the 2nd WAN, and you will lose QoS for the 2nd WAN. But I still prefer 2 fixed config routers for 2 WANs. 

This will switch the packets between the interfaces in software rather than using fast switching / CEF. As such, you should only do it in a test environment because it slows the process of sending and receiving data. Using image c2600-adventerprisek9-mz.124-15.T14.bin provides some functions that may help, and Cisco's documentation for ping in version 12.1 (first I got in Google) suggests it's been around in general for some time. Assuming you want to monitor Router1 for pings coming from Router2 and they are at 10.0.0.1 and 10.0.0.2 respectively, you could run 

*DISCLAIMER: Don't run debugs on equipment doing even remotely useful stuff unless you have to * Also, you've specified console cable which is cool, because debugs normally go to a console session. But if you connect via SSH you won't see debugs until you type 

The two kinds of NAT your question is referring to can be categorized as destination NAT, and source NAT. Destination NAT will typically change a connection to your router from the ISP direction to a destination target that's inside your network. It's also commonly referred to as port forwarding. This lets you expose a service that would normally be inaccessible inside your private network. Source NAT will change a connection through your router from your local network to a source target that is the router itself, allowing multiple hosts to use a single public address. NAT can perform other translations, but few others are useful except in niche cases. Despite the phrasing in your question, a source NAT that you describe is not helpful. Using a global address that is not functional on the router will have no good effect. No other device or protocol would keep track of that, so all replies will be forwarded to the device that should have that IP, which would know nothing about your setup and promptly drop them. If you want to use a different IP, get it set up and functional on the router first. 

When you hit the ? after typing 'encapsulation', it kicks into ios help which will provide a list of things your router would accept as a layer 2 encapsulation / protocol. Mine are wic-2t cards and offer sdlc, ppp, hdlc among others. As an aside, to find out what protocols your actual router is geared up to work with, you can do 

This can't be done - I misunderstood DSL technologies. It's not like Ethernet / FastEthernet / GigE where they all work together at different rates. 2 x SHDSL cards can be configured as a back to back connection but ADSL won't co-operate on a line with SHDSL. 

As YLearn notes, by default this will only show packets addressed to the router you're debugging. To show transit packets as well, you'll need to run the following on the interfaces you expect the packets to pass through. 

Clients can download the software vpn client only if they access the ip via https port 443, i.e. , unless there is automatic redirection from http to https at the client. Therefore ports 80 http and ftp on the same ip address are free for you to use, take a look at the section: Single Address for FTP, HTTP, and SMTP (Static NAT-with-Port-Translation) in Cisco ASA Firewall configuration guide. $URL$ 

After Site 2 opens the VPN tunnel it should be assigned an IP, e.g. 10.10.10.2, and a route should appear on the router (acting as VPN Server) pointing to this IP. You can use Destination NAT instead of policy routing, by matching all traffic whose destination is the public IP X.Y.Z.W, and that are incoming only from the router LAN Interface, and NATTing the destination to 10.10.10.2. This will route all traffic going to Site 2 through the VPN tunnel automatically, and it will hit the public host. 

If I understand you correctly then the process you're describing happens on a couple of levels (or layers). If the switch detects a checksum failure then it'll discard the frame and probably make an internal note of the error (Cisco 3550s certainly record errors, runt frames etc). At this point the switch couldn't know if the address was 'wrong' or which part of the frame was damaged so discarding it is the only reasonable thing to do. The checksum is just a way of deciding if "an error of some sort" happened when transmitting the frame, but can't tell you where in the frame the error was. Now, that frame is part of a packet being sent somewhere. Because it gets dropped, the packet it belongs to is going to be broken and TCP is going to be patiently waiting for a packet with a particular sequence number to arrive. Part of the packet will arrive but the networking stack on the destination can't do anything with a part packet so will send a request to the source host asking for the whole packet to be resent. In reality you could have some freak error in the part of the frame that holds the Frame Check Sequence. In this case the real data might be intact but the frame is dropped because it'd be checked with an incorrect FCS. The destination knows which packet to request because it's kept a record of where it's gotten to in the sequence. If it receives packets 1,2,3 and 5, it'll know something went wrong with packet 'number' 4. The different modes you talk of are Store and Forward, Cut Through and Fragment Free, which offer different levels of checking a frame before passing it onto the next device. A hub would be oblivious to all the above since it's only concerned with bits - a hub literally just repeats everything it receives. In one ear and out the others, if you will. 

If you have no need to divide the traffic on all (and it does have to be all) the old hardware, then just make sure the switch connection from the old Cisco equipment connects to a VLAN 10 only port on your Brocade. Don't configure for trunking, tagging, or any management protocol on either side of that one link - Cisco will only tag if the port is configured for trunk. The Brocade will consider all the traffic that comes in from the old hardware to be VLAN 10 traffic, and your Ciscos will keep doing what they're doing thinking they are VLAN1 without any config changes. This is not terribly good practice, so as soon anything changes this is a rather bad idea. If the replacement simply forges ahead as you describe however, it may be a way to tide you over. 

We've started deploying cisco routers in pairs (867VAE-K9 in particular) to offer office sites failover using ip sla and HSRP. In testing I've been using 1841s and running the dialer over ethernet instead of adsl to confirm it works 95% but I don't have spare dsl lines to confirm it works with the comlete config that gets deployed so we test with PPPoE dialer and then adjust slightly when installed. I have an 1841 set up to act as PPPoE server and that works peachy. I'd like to use the same box to simulate a dsl line instead and I kind of think you can do some back to back stuff with a WIC 1SHDSL V3. But it looks like I need to use the same card at each end. I want to be able to configure a wic-1adsl at the other end or use the built in dsl connection on one of the 867s. Is it possible and can someone point to a suitable reference to do this? Or does it need to be shdsl cards at both ends for a back to back? Thanks in advance.