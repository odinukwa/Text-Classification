My default is 4GB right now for all server roles because memory is cheap. For a low usage server with hardy anything running using that software, you could probably get away with <1GB. If you're that concerned about the cost of RAM, it will be worth your time to test your RAM usage. Otherwise, just get 4GB and you're almost guaranteed to be fine. 

Probably the simplest and quickest option is to use a DNAT. You would configure an additional Internet routable IP and NAT the traffic on standard ports to your additional instance. This would be done on your router. If you have a single server bound to Internet routable IPs, you could bring that additional IP up on the server and bind Tomcat to that, which would allow it to listen on standard ports if they were not used by something else. If you have a proxy or load balancer, you can potentially configure VIPs or interfaces on them as well. 

I know it seems unrelated, but verifying fundamentals such as permissions and resource availability (memory) could potentially help isolate the issue as well. Are there any other errors? 

Using "sticky (persistent) sessions" is generally not advised. If you do this, you lose a lot of the benefits of load balancing. The load will not be balanced and you will lose high availability, as certain clients will be unable to access your application in case of failure. You want your session to be dynamic. With Java, it's typically stored in memory and clustered to all servers via multicast. More commonly, the session will be stored in a database. If your Web application requires sticky sessions, your architecture may need improvements. As far as load balancer solutions, there are many out there and the subject has been covered extensively here. I like LVS. Others like nginx. Foundry Networks, which was acquired by Brocade, makes some solid commercial products. They're the main commercial solution for hardware load balancers. Barracuda also has a Linux/OSS-based "appliance" that can be used for Load Balancing. 

You are best off focusing on network protocols for your type of implementation. Typically Border Gateway Protocol (BGP) is among the ideal solution for managing dynamic network routing but this is unlikely an option with your DSL connections. Nevertheless, this would be the first choice for different types of Internet connections. Be aware of single points of failure. A single switch, cabling, all interfaces, and devices that are shared between your two connections. Consider all failure points and types of failure to eliminate risk where possible. HSRP would be among your potential solutions. HSRP is a Cisco protocol but there are alternative implementations that can be implemented on Open Source operating systems, such as CARP or VRRP. You would want to track both the internal and external interfaces to attempt to mitigate a single point failing without failover. 

You shouldn't ever be restarting a database to terminate a query. In MySQL, you can view the running queries with and terminate the process with . You could write a script to perform this function. 

If you are not the administrator, you might be better off contacting your IT department for further details. 

I cannot speak for the exact performance in your situation due to lack of details. The header is specified by the MDA, which uses the address identified in the command. The MTA typically defaults the as the user sending the mail. For example, calling with the flag can change the to the specified e-Mail address. For example, my username is warner on the awesomebox(.awesomedomain.org) server. If I send an e-Mail using mutt and specify the header as warner@awesomedomain.org, the MTA (QMAIL) is going to default to specifying the as warner@awesomebox.awesomedomain.org. The same performance would apply to CGI running via Apache, it would default the to the user Apache runs as. 

If you want to transfer restricted data to the Internet, the solution is not necessarily to give them access to the restricted network segment via the Internet. In fact, I would strongly discourage it as you describe it. What you ask is actually quite complicated to implement in a responsible manner. For illustration, you have two network segments. A DMZ and a private network. Databases live in the private and Web servers live in the DMZ. For security purposes, you fully restrict access to and from the private network using a firewall. If the DMZ is compromised and the authentication data is stored on the server, the cracker will be able to access the restricted data. This is where encryption requirements and key management techniques come in to place, which are exampled within the PCI DSS. If you do not have an advanced encryption architecture, you will still risk the data in case of compromise even if it is not stored in the DMZ. You could potentially implement a ETL and batch out the data. Often, this solution dictates a need to have the data encrypted using strong encryption and then transferring via your preferred protocol. Once the data is encrypted, the methods used to transfer it can be substantially more flexible. Your exact situation is going to dictate how much effort is made to establish a production worthy solution. If you a dealing with a one-off request, you might be best off manually satisfying it via a tool such as GnuPG. Otherwise, you might need to build, find or buy an application. An approach that is becoming more common is using a Web application to satisfy the security requirements, while still allowing the data to be accessible to those with less technical knowledge. 

Good question. In the context of MySQL, you might be better off using tools designed for that purpose. You have Sysbench, Supersmack, and others. See the links below. 

If you are using residential routers such as Linksys, I've encountered issues due to TCP connection limits being low. If you cannot increase the connections with the default firmware, DD-WRT allows the connections to be modified. If your troubleshooting eliminates all equipment within your office, it may very well be your Internet connectivity. You could work with your ISP to troubleshoot that connection when the issue is occurring. 

If you are installing a package via yum against a CentOS repository, any dependencies should be available within the distribution. It seems like you may not have the 64 bit version of openssl installed. You can install the openssl package via yum. Edit 1 Using the Fedora package repository on CentOS is a bad idea. You're going to consistently encounter dependency and compatibility issues. If you're unable to find a mysecureshell CentOS package that someone else built on the Internet, you could use the source rpm to build your own package or compile from source. If you do find a precompiled package, it will need to be built for your major version and architecture of CentOS. 

I use it currently in a highly available production environment serving numerous public users. I swear by it and would encourage you to give it a try. With that said, there are alternatives depending on your application and preference. These include: 

The caching mechanism is different for every browser. If you would like more information regarding browser caching, I would suggest a post to Superuser. For Apache, there is not native caching functionality within the server for static content. 

It sounds like you want the server's IP to serve the content separate from the new you configured. The Apache server will default to the specified outside of the when accessing the IP unless configured otherwise. Specifying a with IP or a VirtualHost would also work. If you require additional assistance, please provide additional information including your Apache configuration file in full. 

What you're describing makes me think of Fudgie. I've used stuff like this for monitoring consoles to make logs look fancy. 

Specify this group under the SAMBA share, which can be done with . Make the user you authenticate to SAMBA with a member of this group. Specify this user within and within your share in SAMBA. This should also allow you commit to SVN. Also, specify and within smb.conf, which will set the appropriate permissions upon creation. If the files are owned by the same user as Apache, you can set the final bit to 0 on both settings. If everything is applied consistently, you should be able to perform all desired actions without negatively impacting any functionality. 

You're going to have a difficult time finding an unbiased opinion regarding Linux distributions, as this is a contentious topic. If you are looking for statistics on the most used Linux distribution as a server, I am not aware of any. You will have a difficult time locating recent, relevant, and unbiased analysis of distribution usage. It would be difficult to find a definitive source for this data. Nevertheless, Distrowatch has a Web site that counts distributions based on page views. I would say this better examples the distributions more commonly used for workstations as opposed to servers. Also, This site has user entered data that provides statistics on distribution usage. 

The issue is that your DC did not know how to route to the new subnet. In the case of Internet routable addressing, changing your subnet mask to be substantially larger without considering the full implications of your network could potentially introduce routing issues to hosts within that subnet. Add a static route to the DC for 11.22.88.99/24. Depending on your infrastructure, you may be able to just add it to the firewall or router between the subnets. If you continue to have issues, your network administrator would be able to identify the proper route. 

Why is a reverse proxy necessary? Have you considered using a Destination NAT? (DNAT) Edit 1 If you run Linux, depending on your infrastructure, you should be able to configure NATs on your server. Your Linux server would have to be routing the traffic on the Internet routable IP to an internal network for this to be a functional solution. If this is not helpful, you will need to provide additional details regarding your infrastructure for a more specific recommendation. Linux NAT HOWTO Edit 2 Network Address Translation will do what you describe. Either by specifying different ports or configuring virtual hosts in your FTP daemon, which most modern daemons support. 

I'd default to active/passive dual master replication using a floating VIP. (Heartbeat, OpenAIS, MMRM, or Pacemaker) I can't think of a reason why this isn't a good idea. Can you? MMRM 

No. PCI scope data is credit card numbers, which is typically referred to as the Primary Account Number. (PAN) The definition from the glossary is as follows: 

You can use and under the share configuration to default to a specific user and group when files are written to the share. 

Utilities and methods differ between UNIXes, I'm assuming Linux. Modifying directly will work for all of them. 

While there has not been a release since 2008, some of the policies applied within Bastille Linux also provide a general baseline for hardening Linux servers. Many of these things will make the system more difficult to use and administer, which may frustrate users of a multiuser system that have shell access. Nevertheless, if security is the absolute priority, the methods listed will harden your system beyond that of the average multiuser system. 

While you might find someone who has created a conventions including color, you will not find it respected universally in IT. Block diagram design techniques are often shared but specific and consistent conventions will be unique to IT departments and individuals. Of course, with specific types of diagrams such as circuit diagrams, you will encounter more rigid standards. This does not apply in IT. There are conventions within types of diagrams but not to the level of detail you are requesting. If you want to explore types of diagrams, this Wikipedia article is a good start. The IEC 61131 standard includes a specification for a Functional Block Diagram in the context of programming languages. Nevertheless, as detailed before, this will not be universal. If you want examples of how other people diagram their infrastructure in IT, the Rate My Network Diagram Web site is a good start. 

No Linux distribution has any distinct technical advantage for running a Java application stack. The two main issues are going to be your familiarity with the distribution as well as what the vendor officially supports. If you want official support for your Java application server and the vendor only officially support specific distributions, you want to choose from their list. 

Use a host based IDS, which is sometimes referred to as a filesystem IDS. I've used AIDE successfully against Windows before. It can be compiled with cygwin. An alternative to AIDE is OSSEC, which appears to have a Windows port. 

While a good question, the options are endless. I tend to try to contribute to things I use and find useful, while focusing on projects that are especially in need of assistance. Inprotect is a team that could definitely use some additional assistance. 

I believe is necessary for both of these commands. I suspect the only way to be absolutely certain is to test this performance. Arthur Ogawa's comment reinforces my suspicion.