Remove the FORM element completely (as the markup from exmaple doesn't even conform to HTML specifications). So it looks something like this, in its simplest form. 

Remember! That wattage draw will be by the USB charger. Unfortunately they are very inefficient. So if the USB charger says a MAX of 2A @ 5V it could use the full 10Watts regardless if the Pi is on or off. Pretty stupid but that is the trade off for being cheap and cheerful. Switching power supplies can be up to 90% efficient. That means it will only use the power it needs. On low power the minimum wattage used when the Pi is off will be up to 9 times less than that of those USB chargers. These power supplies work very well with high wattage equipment or equipment that changes wattage very often. You can buy a 2A 5V (10Watt) for 5 bucks here! 

So an easy way is to get a Wireless range extender. If you are within the same building, but don't have access to the main router for some reason? This makes sense, but the max speed is not true max speed any more, it will be less than connected to the main router. 

To make things easier with less high voltage wires is the have the Relay at the actual wall switch. Then all you need to do is pull thin wires like Ethernet style to the Pi. 

UWP is made for the Windows 10 API ecosystem. UWP also runs on the XBox, Hololens, Surface hub, and "other" compatible OS's As long as the compiled application is truly 100% Universal Platform then even graphical output will work on the Pi. Albeit the Pi does not have a HardDirectX driver yet and using soft translations.. which also means no h264 streaming. (May 2017) but neither do many other Linux distros 

I currently use this one at home because it allows me to connect my existing land line and set up dial routes inside the SPA3102 to select if it should use landline, like toll free numbers(because allot of VoIP and mobile providers charge a small amount) or VoIP 

The best network would be to use a switch. 100mb/s is fine since that is the fastest a Pi can go plus they are allot cheaper, for 10 or 20 port unmanaged switched. Look on eBay. You could go wireless but you might get problems with wireless on the Pi, just in general I find it very flakey, but 1 Wireless access point is cheaper than a 20 port switch, but you also have to get 20 Wireless USB dongles that work well on the Pi's USB, that might cost more than a switch. You can create a load balanced webserver using this tutorial. or also do something with own cloud or a cluster of own cloud It would be nice to setup a cluster of Pi's managed by an interface where you can create and destory Virtual Private servers, like in tens or twenties VPS's at the same time but I don't think it is that simple on the Pi. There is something for Ubuntu Other project are more stand alone. You could also try 433mhz communications, as they are very cheap and distance is good but don't expect to send lots of bianry data, more like text based commands, like JSON. To remote things like weather stations or wireless toy cars. Depends on your country but you might also be able to boost the signal on these to increase range. I wrote a book about various server like things you can do with a Pi with some side line ideas. But they are many more articles and books out ther. 

Overclocking is not great and causes allot of kernel panics under high load. Also the biggest bottleneck will be the USB controller hammering drives and serving data over LAN. You could offload the Software raid onto a nice USD Raid controller. I am not sure exact models of your external drives but if they have eSATA you can use a cheap converter cable to connect them to this. This will give you maximum Hardware RAID performance, offload the CPU and only USB bandwidth for data and LAN, maximising read speed. 

But here is another project using RGB LED's, which parse some kind of bitmap file to generate animated graphics. It is quite possible you can make this even wider or taller. 

I want to say Yes All UWP (Universal Windows Platform) applications are designed to run on all Windows 10 API compatible paltforms, including IoT. But the fact you are asking about this, is scaring me because you may have a UWP that does not work on the 10IoT for some reason?? 

A really really cheap solution to enable your existing home phones to use VoiP instead- If you want to recieve phone calls on your existing number, you can buy a cheap DID for voip and then redirect all incoming land line calls to your VoIP DID. Sorted 

Sometimes USB devices clash with the Network (Because network is connected via USB) Try and disconnect all USB devices. A massive pain in the neck are SD cards. They might seem fine to write and read but sometimes they just do not want to work. Try and get a recommended SD card - I have experienced issues with SD, MMC and even normal USB drives acting as Operating System drives on various hardware and using hand full of different OS's. Just get a few different ones. Try and use a completely different power supply. Just because it says 1A does not mean it can really handle it. Some el cheap'os are a pain in the but and after a few hours start to loose power because of poor design. The best power supply is a switching power supply for about 5~15 bucks delivered. They are also more power efficient. I doubt Apache is the root of the problem but lets tickle our fancy; Try go and install the base version of nginx (engine-x) Make sure you stop a-patch-me first to free port 80. (Its is allot faster than a-patch-me anyway and you can compile allot of cool things into it) 

You need to get dependencies (check the link to the blog) for building and nginx. Then you configure the build inside the nginx source linking to the rtmp module. The build takes 10 minutes on the Pi. 

You can use on most free dynamic dns's. I like to use no-ip. In my book I explain how to push dynamic IP's to a real domain, like - I use this technique for loads of people and all i have to remember is. or or 

You can play the file that is output by raspivid in mplayer. You can also try on another computer using VLC. All you doing with ffmpeg is copying the data stream from the source to destination. You can simply this by renaming the extension from .h264 to .mp4, but you may as well amend raspivid extension to use .mp4 Extensions do not govern what data lies in the file. If the stream is that is what it will be regardless of the filename or extension. The doubling up in speed might be caused by the option on ffmpeg. If you do not need to change source settings then there is no need to specify this option. It may be the culprit. Just play the original file and see if that is what you were epxecting. 

You should be able to use Dapper on the of MySqlConnetion too and execute normal SQL commands now to mapped objects. Don't forget to close the db connection on dispose. * Dapper * Dapper single file source code if Nuget isnt playing ball again * A nice tutorial on dapper 

I am not sure what the security tab does in synology but if you can view on the synology there should be an entry similar to this. 

There is a project called Raspberryâ™¯ (RaspberrySharp) At the site you find a sub project called which contians examples on how to use the SPI, I2C, GPIO and some other general purpose things. You can get the GPIO using Nuget 

This is a real simple yet pretty difficult question to answer. I was wondering what gaming server ports are there that can run on the Raspberry Pi? 

to refresh the list. Use the cursors on the keyboard to navigate up and down the list Press right to configure the wireless connection Press down a few times and check "Automatically connect to this network" Press down a few times again and type in your password in the key field Press F10 to save 

When I try to use rtmp with nginx then iSpy crashes allot and it totally floods my WiFi. Using udp means the Pi will dump the frames to the target machine and neither the source or destination is going to cry about lost frames saving allot of processing power. Using 576p the pi hardly uses 1% cpu and the cpu usage on iSpy is halved for processiing motion. 

ntp will get the time when you have internet access and fake hardware clock will save time to the Pi every so often. After reboot or power cycle - if there is no internet fake clock will read the last time it save. We dont want the Pi to crash at all and generally fake-hw clock is the best choice if you want to spend $0 :) But for a few "bucks" look at John La Rooy's answer for an external clock that will keep time for years. 

If you have access to an Ubuntu or other Linux desktop I would suggest using but you can also download a gparted live disk - Burn it and boot from it. After you have copied the 16GB to the 64GB SD card, boot up or start gparted and once its ready insert your 64GB SD card The images demonstrate resize small to 8GB max before the auto resize was available - The process is the same 

One problem with RAID0 is that it doesn't really double speeds on soft or cheap hard raids, its actually pretty rubbish. This is why ZFS was made and its supported on Linux ARM. The only problem is RAM and it may run out kernel address space if hammered, but with tweaking you will get MUCH better read and write perfomance on USB attached drives. This is because ZFS can read and write to each drive seperatly using RAM cache (this is why RAM is essential) so parts of files stripped across drives are read at full speed from each drive, assembled and served at a low level. So if you really want performance you should use a micro server/ PC with 4GB (3TBX3TB) but more is better. The results for software spanned drive pooling will blast you away. I use 4X1TB @ 4GB with ZFS on my HP Microserver and its mint! Copying from the server saturates my 100mb LAN and these are cheap, mixed set drives 

As found on the elinux site. I only selected what applies to your situation but please visit them for more information... 

Yes, you can use but you need to use a platform specific version of the DLL. This one is approved for Windows IoT usage and is stable. You can install the Visual Studio extension for SQlite from $URL$ which enables a Database visualiser. But what you really need is to install the correct DLL or package from NuGet 

I have already written code on VS2012 and deployed it to the Raspberry Pi. Got some LED's turning on and off. Yay! But for months been trying to do some clever thing and just cannot get it working. Bummer. 

Even though the browser support HTML 5 video streaming the actual decoding of the stream is done using CPU as there is no implementation for the browser to use the build in hardware decoders. I think the other problem is that desktop is also software rendered? (referenced from this forum post) So its an amplified problem where everything starts to chop out of control. If you are streaming a high quality YouTube video then you will get this choppy'ness due to CPU struggling to keep up with rendering it to screen. Kodi and XBMC have support for direct hardware decoding (and OpenGL UI rending) that is why videos can stream from Plex and other places at acceptable rates. (POssibly even plugins like YouTube) 

Alterantivly you can get your own IC and hack the Pi to have 7 ports (1 of which is connected to the existing port) using a Maxim 4999 IC. But soldering to this IC by hand is almost impossible by home DIY. 

Unfortunately not, 5v is connected directly to the HDMI port and there is no way to toggle that power supply. 

Not sure exactly how you got the stream and what protocols you used but you can use crtmp-server - I am not sure if you can compile it on the Pi but it runs well on external Ubuntu/Debian servers. nginx rtmp-module - This is a really great module. It has a ton of features that I am sure you could use for your CCTV like operations. It does require compiling but it is worth the effort and it runs pretty well on the Pi. Either way then you can use a web page and create your own layouts, or even software that can request rtmp, rtmsp or whatever. With the Raspberry Pi camera I managed to get the live stream about 0.4ms lag. I think that is the fastest at the moment using 1080p@25fps on the Raspbery pushed to external servers and also serving locally. It is wrapped in a flash container but the stream is pure h264 - You can adjsut it any way you like. 

Wether you run this on the Pi or not is a question of your requirements. You can go the server side way, recommend is Python since its easy to learn... but C# is also easy, and also supported on Linux now with Mono or KRE (vNext) using Visual Studio Community. 

IMPLICATIONS To answer your question. Yes you can supply 5v on the GPIO pin. BUT, it has no backward protection and it was not really designed to be a 5volt input pin. the 3.3v pin can also be powered with 3.3v as the regulator has build in protection- but again it leaves your BCM unprotected! Typically any power pins on GPIO area are used to power extended circuits. You need to realise that the USB schematic was carefully designed to be used as the primary +5V input and protects the Pi from getting fried. The GPIO pin does not offer this protection fully and you really need to trust your power supply if you want to do that! Usually people make another high powered PCB to drive other things. For example an H-Bridge used to drive motors for a robot. All it needs is TTL signals to control the motors but it runs of its own power supply; and most of the time it supplies power to the MCU/CPU via its own protective circuits isolating it from the high power circuit. ALTERNATIVE