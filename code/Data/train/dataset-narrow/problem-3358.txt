Xorg Pixel GUI choose "3 Boot Options - Configure options for start-up", "B1 Desktop / CLI - Choose whether to boot into a des", "B4 Desktop Atologin Desktop GUI, automatically logged in as 'pi' user", "Ok", and reboot. 

There is a very good article at $URL$ that explains what is need and several different options to add GUI to Raspbian Lite. This work for me on Raspbian Stretch Lite: 

"Remove the following text: . This no longer works with the Stretch release (there is no init parameter to remove)". Remove . 

You can mount these images files, see 'Mounting an image on the host' $URL$ as loopback with offset. Make mount points and use the offset of sector size times start sector. 

I have the new Pi Zero-W and with Raspbian Lite, these are the files in /boot that will boot up and run the system. 

To move what you have to a bigger sd card you can use How can I backup my whole SD to an img file usable with Etcher to restore later? as a guide. Using adjust the size for the partitions using the plus number instead of actual last sector number (ie for boot and may be for Raspbian). Use the subcommand to get the last sector number and add 1 for the next start sector number. 

Notice the on is the same as when I partitioned earlier. Anyway, BEFORE YOU REMOVE THE BACKUP SD CARD run to sync the data, check unmounted status with or command. Also note if this sd card is placed into another system, the hostname, network config, and ssh keys/config may need to be changed. To keep the backup current, refer to the CLONE/COPY DATA INTO FILESYSTEMS section as a guide. Don't remount root, boot, or others being used, they are already mounted. You should be able to restore filesystem from the sda card/stick to the mmcblk0 sd card, but not the ones being used, (root, boot, or others). The question about the bad sd card. Put it in a USB slot, run command , if it shows up as or , you should be able to format it, if it does not show up, the sd card translate tables are shot and the card is trash. 

Yes, it is possible to rewrite the SD card without removing it, but not with the normal install procedures. Copy the running root filesystem to a USB device. Change the root device in the SD card /boot/cmdline.txt and the USB device /etc/fstab to the USB root partition. Reboot and running on the root filesystem in the USB device, download the new OS. Remove the root filesystem from the SD card and copy the new OS root filesystem to the SD card root partition. Remove the boot filesystem from the SD card and copy the new OS boot filesystem to the SD card boot partition. Check and correct the root device in both /boot/cmdline.txt and /etc/fstab on the SD card to the root partition on the SD card. Reboot and both new filesystems are running on the SD card. The first vfat partition of the SD card contains the boot instructions and the the Linux kernel (unless NOOBS or PINN is installed, see below). The boot partition can not be reformatted on the running Pi system as the kernel is running, if it is reformatted, it will only change on reboot and may not boot up at all. 

Yes you can download NOOBS_Lite ($URL$ unzip it and write all files and folders to the SD card. On the SD card there is a folder (directory) . Create another folder (directory) and/or in the folder (ie and/or ). Download the following files from $URL$ and/or $URL$ Raspbian.png, boot.tar.xz, os.json, partition_setup.sh, partitions.json, and root.tar.xz And place then on the SD card in folder and/or . This SD card should boot up in the Raspberry Pi as mine did. NOTE: The SD card should have only one DOS (VFAT) partition for the whole card. New SD cards 32GB or less are formatted this way. 

DONE - The backup/clone card (sda) is basically the same as the system card (mmcblk0). If everything went right, the system can be shutdown , powered off (unplug power cord), and swap the backup card with the system card. Power up and the system should boot up just like before. 

I have encountered the emergency mode once for a simple mistake in /etc/fstab (default instead of defaults). In emergency mode there is a suggestion to run to view system logs. In my case after running that command and on the last page of many the error was somthing like . I can show you how to make a bootable backup of Raspbian Lite on the Pi itself if you wish. Requirements would be SD card with USB reader, USB port on the Pi, and the command which is not included in Raspbian Lite (). With the SD card on the Pi, run the command to verify that only the SD card that you want the clone/backup to be is . The following script will check that rsync is installed, use where required, unmount , format into two partition, one for boot (FAT32 66M) and the other for root (Linux the reminder of the card). It will make filesystems in the partitions for boot and root. Directories and will be made to mount the filesystems (/media/pi directories will create errors). The command will copy the and (root) filesystems to the SD card, known as and , with flags () that will not cross filesystem boundary, system generated (/dev, /proc, ...) and mounted filesystems (/mnt/d1, /mnt/d2) will not be copied (very good thing). If you wish to copy NOOBS or other filesystems, see How can I backup my whole SD to an img file usable with Etcher to restore later? for details. The last thing is getting root partition () set correctly in and in , with (). 

A way to resize the different partitions on the NOOBS sd card is to use a different sd card and reformat it with the sizes you wish (with limits) and copy the different filesystems in the partitions to the new sd card. As a guide see the procedures in How can I backup my whole SD to an img file usable with Etcher to restore later?. 

SETUP - Here is what I have done on the Pi. Download the Raspbian.zip, and unzip it, . I remaned the image file, to save on typing. Run the command to see the sector size and start sector for each image file, and . Make directories to mount the image files in loopback mode, and . With these two image file mounted, there is access to the boot and root filesystems. If you wish to be enabled (in Raspbian), and that will make available ($URL$ EDIT: It appears now that mounting two loop objects from the same image does not work. Therefore, the script will not work as written. A work around would be to loop mount the first (boot) image, create the ssh file, copy to temp file, and then umount the image file. Delete the first loop mount instruction and replace the tmp file name inplace of /mnt/d1. Also change /dev/loop1 to loop0. Here is a draft of bash script. 

After the command there should be two partitions on the the new sd card, the first is start up and has to be a fat partition and the second has the root filesystem. To start over again (as Goldilocks comment) format the sd card from beginning to end in format. 

Now you have access to both the boot and root filesystem images to configure, script, and modify as you choose. If you put a script in the boot filesystem, you also have to setup how to execute it from the root filesystem, may be in cron or other means. Unmount and copy the image if sda is the sd card. Install the sd card in Pi and power/boot up. 

CREATE PARTITIONS - Create partitions on /dev/sda to match thoses on /dev/mmcblk0 with values from the command. Your system will have different values that mine as I see that I made a mistake for download NOOBS to the sd card which is included in mmcblk0p1. I also see that I have mmcblk0p10 which is not in your mounts, don't include it if you don't have it (take the default end sector for mmcblk0p9). Some information lines are cut from the command to shorten the output. 

This procedure assumes a single OS on the Pi in two partitions with only a single USB drive to be formatted and used. Adjust if different as any mistakes may cause data lost and require rebuilding the SD card. Format a USB device to a Linux format and create an ext4 filesystem. Copy the running root filesystem to the USB device. THIS PROCEDURE WILL DESTROY ALL DATA ON /DEV/SDA