Not by default but there is a patch. Not sure if your distro has a patched package already but it may worth searching before you patch it yourself. $URL$ 

In general you should be safe unless the client shows an a warning or error. I have used the same client to different serversvwith no issues. This mysql article also says that the client and the server do not have to match versions, despite the fact that when the difference sometimes could cause problems. $URL$ Related issue: you can generally replicate from a server to a higher version of server as well, but the features are limited by the older version. Client should have even fewer problems because commands are interpreted and executed by the server. 

I would think limited shell such as $URL$ would be easier for you. Since it is written in python, you can customize it if you cannot get it to work exactly as you want out of box. 

In centos, you can run this as root service httpd status it will tell you whether it is running, or even installed. if not installed, you need to install it yum install httpd configure and then service httpd start (chkconfig httpd on to make sure it starts automatically) 

There are lots of good VPN solutions out there, but sometimes you need something quick and dirty. You can set up a VPN using PPP over SSH. This solution has lots of drawbacks but the advantage is that it needs no special tools or programs, just standard ssh and ppp. It could probably work on Windows too with a little tweaking. 

The problem might be the format of the data that is sent to the printer. Do you use native printer drivers on the windows workstation? If so, you might need to enable "raw" printing, that is, sending raw binary print codes from the workstation through to the printer. You might need to edit the cups configuration file and uncomment to enable raw printing. I'm not sure what the security ramifications of this are. The other thing that may or may not work for you is setting your printer up as a postscript printer, using a generic postscript driver on the Windows client. However, I've rarely gotten this to work properly. 

Generally the main difference is in the quality and features of the hardware, as well as the support offered by the vendor. Server hardware often has features to ensure uptime or easy maintenance in a data centre: 

while your laptop is unlikely to have an interface that will do vlan tagging, some servers can. vlan tagging just adding some info to the ethernet frame so presumably you can do it with programming, but usually it is done by switches to send them through trunk lines where frames from all vlans are mixed together. yes, generally switches, but other devices can do tagging as well. the end devices should only see untagged ethernet frames, as the vlan tags are stripped before handing it to the end devices, unless the end devices have interfaces that does the stripping. 

It is because you must have used ssh somemachine and ssh somemachine.search.domain in the past, which creates 2 different entries. In ubuntu this is how my entries were created, in any case. 

either will work no issue there is an option to have the task run even when the user is not logged in. whether user is logged in or not. you need to check that. 

what is your os version and mysql version? depending on what they are, you can use something like /etc/init.d/mysql (could be mysqld in some versions) status to find out if it is running in ubuntu. then you can use locate mysqld.sock to find out if the socket file is actually in the location postfix user is trying to use. 

I have 2 webapps deployed in the same JBoss/Jetty server. In Jetty 5.1.14 I had the following jetty-web.xml which configured one of the apps to run as a virtual host (on the same port): 

It's basically a tradeoff between the cost and the benefit. Java, like all apps, has security flaws. Sun updates their JVM every now and then and the Linux vendors that ship Java also do the same. How do you plan to push updates to this machine? How important is it? If the machine has proper firewalls and limited network daemons running, Java as an interpreter on the disk is probably not much of a hazard. Java typically doesn't run as root. Almost any arguments that can be made about Java can be made about Perl, Mono, GCC, or any software that can run arbitrary code. Furthermore most Linux software is typically shipped by a distro, so you can often rely on the distro's updates to keep things secure. Sun Java, in this case, would be the same as any third party software. Does it matter if this third-party utility requires a library that happens to be Java? Maybe not. The scenario is slightly different if you are talking about Java running a service application, such as Tomcat or JBoss, where Java is then listening to the network. In that case the security risk is higher. But you have the same security risks with any network-facing application such as apache or ssh. 

Linux man page clearly says that "one line per IP address", so what you are doing is undefined. You can get the first one in the file, the last, or random. It is better for your application just to use the ip in this case, maybe based on some criteria. 

which version of net-snmp you are using? you might have to upgrade your package. this MIB has inodes information: $URL$ 

Looks fine but in linux probably there is always some way to get around it, because once you have an account, escalating your priv. is far easier than breaking in, if you do not trust your users. If you are really concerned, I would suggest some sort of restricted or limited shell. These are not hacking-proof either but tend to help with most cases. You can make it a little harder for the user to chattr +i file to make it immutable. 

The order should be the same of zip. So if you can control the zip process, then you can order the file addition as you please and unzip should come out in that order. If you do not do the zip yourself, then you would have to unzip them to the file system and reorder as there is not an easy way to order them. If you really want to avoid create temporary files, you can use something like 

You want to ensure no unauthorized person can read it again (e.g. a stored credit card number: if you erase it an intruder can't get it) You want to ensure that the information can't be requested from you (e.g. through Freedom of Information Act requests) You want to keep the data size small for space or speed reasons (proper indexing and partitioning can help with the speed issue). You are required to delete it by law (e.g. privacy laws). 

It's not possible to guarantee that files end up in the Recycle Bin. Some files are too large. Or a user might delete too many files and a file that was recently deleted gets evicted right away. Technically that file went to the Recycle Bin but for practical purposes it did not. The TweakUI Powertoy lets you customize certain key-bindings but Shift-Delete isn't one of them. 

In addition, you often get server-class hardware such as network cards, which may mean better performance (not guaranteed). If your needs are small or your budget really constrained, a non-server computer can act as a server. But you will likely pay for it down the road in maintenance costs. Also take note of the warranty and service contract differences. Does your workstation have the same on-site repair, with the same guarantees for response time from a technician? Etc. 

How did you do P2V? Is it with the converter? For linux vms, you could also just boot up physical and vm both with livecd and do an rsync with grub installation, or dd if the disk sizes are the same. I often find this works better than converter. You can try copy initr image for sure. initrd image is just an archive that among other things loads modules necessary for booting. Is your customized initrd image for handling nonstandard hardware in the phsical server? In any case, loading the modules without the corresponding hw available should not matter. 

yes, godaddy can handle your domain email accounts already so you don't have to install your own mail server. it is probably the simplest way to go. $URL$ however, i have not been actively managing any godaddy domain for a couple of years so you need to read their latest documents and email their support if you have more questions. 

it could be the poor connectivity. you might want to try mosh in this case. $URL$ not sure if there is an equivalent java ssh client, however, that will be more tolerant of lost packets, high jitter, etc. 

I finally solved my problem. I suppose it was a Fedora problem all along but Fedora was not letting me edit system connections in NetworkManager. I changed NetworkManager's configuration so that it used its native connection information backend and edited the policy to allow my user account to edit the connection information; once I did that the "available to all users" checkbox finally started working. Thanks to all those who answered. 

This worked perfectly fine. Unfortunately, it doesn't work with Jetty 6.1.17 at all. First of all, "JBossWebApplicationContext" seems to now be called "JBossWebAppContext", and secondly the documentation I could find suggests that I should be using a jetty-web.xml that looks like this: 

I'd like to add a me-too to Mike Arthur's answer. I've used a Linux desktop since 1997 and have migrated my home directory along the way. Most apps just work. The only problems I've had was when I switched distributions. Upgrading from RedHat to newer RedHat or RedHat to Fedora or Fedora to newer Fedora is usually really easy. But when I switched from RedHat to Mandrake (now Mandriva) and Mandrake to Fedora it was not a pretty sight. Mandrake and Fedora both used a customized KDE directory structure that was incompatible with each other. As a consequence at that time I deleted most of my .kde directory to recreate the settings. But since then I've not really had problems. In any case, you can always just erase whatever's in your home directory that you don't want after a system update. I find it extremely convenient that my data is separate from my programs. Even if you have to blow away your whole home directory every two years, as a Fedora user that would save me about 2-3 backup-restore cycles (Fedora updates every 6 months). You can also set up a directory for use with programs. I typically have /usr/local as a separate partition. I install anything I compile from scratch there. This doesn't work as flawlessly as in the data case because many times the distros are not binary compatible with each other. But at least your programs are all there and you can assess them as needed.