Referring to THE LATEST UPDATE TO RASPBIAN it can be done easily. Just place your WiFi configuration on the freshly burned SD card: 

That would be it. After a reboot your device will mount automatically. If you don't want to wait for a complete reboot you can start the service right away with 

You will need an USB Video Grabber like this one ($URL$ This is no recommendation for a particular device but a hint on what kind of device you need! With that you will get a device where you can grab frames using v4l2 library in python, C or any other language with a binding. Additionally you will need a cable with a 3 or 4 pole Jack on one side and RCA on the other side. (The pinout may vary so not all cable will work. But you can test it with TV first.) 

No, you won't fry the GPIO pins. The RasPi doesn't really care where the signal's coming from or going to as long as it conforms to the 3.3v logic level on the inputs, and doesn't draw more than 8ma from the outputs. See this for a more complete discussion of pinouts and restrictions. Note that two of the GPIO pins are intended for I2C and have 1.8K pullup resistors attached. Your key scanning scheme should work- it's often implemented on numeric keypads- as long as you have enough I/O ports for the job. You might want to investigate a keyboard encoder chip to make things simpler. Many of them include debouncing and 2 key rollover protection. 

Yes, the Lite version of Raspbain 9 "Stretch" uses systemd just like 8 "Jessie". Also I highly recomend using systemd over other options. 

should also work if you run the script from within the same directory or change into the dirctory within your script. 

According to eLinux 128 GB SDXC cards have been successfully tested by individuals. But not all cards seemed to be working. Entries with "Card Type" SDXC can only be used with RPi 1 Model A and B. All other models use microSDCX. 

You didn't say which OS you were installing or which version of NOOBS you were installing from. NOOBS Lite requires that all OS's be downloaded. NOOBS contains the full Raspbian release, other OS's are downloaded. The Model 3 can use it's WiFi system after configuration, or a Raspberry Pi dongle can be used for earlier versions. I suspect you misunderstood what NOOBS was doing. Perhaps the progress messages are vague or misleading... Edit... The NOOBS document shows the configuration window for WiFi. 

I think your best bet is to dive into Processing. But to my best knowledge you will only be able to mirror your desktop. But with 24 screens that might also be neat. 

What you really want is a VPN-Server. L2TP would be what you want as the much simpler PPTP is no longer supported by newer devices. I have a RPi running at home for exactly this purpose. I can access any device in my home network remotely from my MacBook Pro, iPhone and Windows 10. There is a fairly easy setup script for that on github. Read everything carefully before you do something. 

If you reformatted the SD card and didn't put another operating system on it, the RasPi will not boot. The RasPi needs an operating system on the SD card in order to boot. 

When you say that you're using the power cord that came with the Pi do you mean the USB cord? You should be using an external power supply with a capacity of at least 1 amp- preferably more (2 amps is plenty). USB ports often can't reliably power the Pi. 

Where XX:XX:XX:XX:XX:XX is the MAC address of your bluetooth device. You have to create the serial device that binds to your paired bluetooth device. 

(Adapt the values as needed.) This also works for OpenGL applications but it does not with a desktop environment. There is something different missing after powering on the HDMI port to get xserver back instead of . I think Unix StackExchange is a better place to ask about that. 

I don't think it would work. You still can develop on your i386 desktop and compile/deploy remotely via SSH. That would be the easiest way I can think of. If you really want it, you can setup a cross-compiling environment. But you'd get much overhead in the beginning. I personally use a set of Makefiles that copy the changes to my Raspberry Pi via (only copying deltas) and running on the Pi to compile the code (that changed). It works pretty fast and is convenient. But for why you should not try to compile directly on your i386: works by utilizing hardware capabilities of the VideoCore IV part of the CPU which has an embedded media encoder and decoder. OMX refers to OpenMAX which is an interface to that hardware. I am not aware of any device compatible with OpenMAX except in the mobile/embedded space. But as modern intel/AMD CPUs and also nVidia/AMD GPUs also include hardware media encoder and decoder, they might provide OpenMAX compatible driver. Only then you might have a chance. But still I am not aware of such drivers. 

You can connect directly to the IO pins. The GPIO pins on the RasPi processor (BCM2835) supply 3.3v @8ma of drive by default but are programmable as far as pull-up, current, slew rate, etc. see $URL$ for a summary. Having said that, unless you're adept at programming those pin parameters, you probably want to limit current with a resistor. Assuming your LED needs 1.5 volts @ 5ma, 3.3v - 1.5v = 1.8v drop. R = E/I so R = 1.8/.005 = 360 ohms should be safe. Solder this resistor to one leg of the LED. One side of the LED/resistor goes to the GPIO pin, the other side goes to ground. 

I've made a fork of shairport-sync which is an AirPlay client. You might want to take a look at it. It does some OpenGL audio visualizing. But it does not do anything more. But to my understanding, Volumio is a collection of programs just like shairport-sync along with other. So I don't see a solution that covers all your audio paths. 

No, this particular camera module can't be used with Raspberry Pi 3. While the camera hardware itself would work, the ribbon cable is of a different size and won't fit. 

A classic, comprehensive but aging book that's still a great choice for learning the basics is 'The Art of Electronics' by Horowitz and Hill. According to an interview with Winfield Hill there is an updated 3rd edition in the works slated to be released in late 2013... 

The Raspberry Pi will only take as much current as it needs, assuming the voltage stays at 5 volts. A power supply with a higher current rating just means there is more power available than is really needed. It's not clear what the 10 amp figure is referring to. The RasPi board cannot come anywhere close to providing that amount of current from its ports, so you'll need to clarify what you mean by 'handle'.