I was not able to find examples using this and I'd like to get it right. I have tried both and none of them seems to work: Using seems to replace that with the last command starting with that I used (?): 

I²C is used for transmitting the touch data. The full model names of the Pi 2 and Pi 3 are actually Pi 2B and Pi 3B. In those models, the I²C communication can be done through the display adapter. Same applies for the Pi 1 A+ and Pi 1 B+ (with +). However, on the first editions Pi 1A and Pi 1B (without +), I²C needed to be set up with the separate wiring. In the linked tutorial, a Pi 2B is used, so it would not have been necessary to connect the additional wires for the I²C bus. 

Therefore I'm looking for a way to run the script automatically at second startup (at first startup, Raspbian will resize the partition). Since we're totally Windows-based, I only have access to /boot and I can modify files there only. Is it possible to run it with these limitations? Other options like mounting in a VM or booting the Pi and modifying other files are just not convenient enough, so it won't be used. 

I have the linked housing and your setup will not fit in there, but I guess you're asking for housings in general and not the particular one. Next, I think you want to know what the impact of the additional plastic is on the wireless signal. 

I am reading about setting up the Raspi as a WLAN access point. There is an article (German) that says for the output of : 

Root does not have a password on Raspbian. You do all actions through , so that should be fine. Fail2ban should be ok with the default settings for SSH. There are predefined jails for Apache which you should activate in a file. 

I'm going on vacation into a foreign country and I want to take my Pi 2 with me to play a bit, not having a particular project in mind. I may not have Internet access all the time or it may be limited to a few 100 MB or has a limited band-width. While I might be able to google for answers, I don't want to download and install large amounts of data. Is there a way I can install all python modules, so whatever code example I'll find I have at least the module already installed on my Pi? I can install single modules with e.g. 

I am connected to 2 Raspberry Pis via SSH. They are running the same OS (Raspbian in this case). How can I tell which one is Pi 1 and which one is Pi 2? I know how to identify the physical hardware (e.g. micro SD vs SD slot, yellow video output etc.) but I just don't know which IP address which one got via DHCP. 

I'm trying to write a shell script that does all sorts of configuration for me that I always do on a clean Raspbian image. I find that I do many things with tools that use either some CLI menu or even some LXDE GUI configuration. It's hard to find out what those programs internally do and which config files they modify. On Windows, I simply launch SysInternals Process Monitor, do the stuff I like and look at the log which files were changed. In order to ask less questions here and to spend less time on Google searching for problems that I could solve myself with an appropriate tool, What is the ProcMon equivalent on Raspbian? I have tried and , but they focus on CPU only. My focus is on changed files and not CPU at all. I don't want hashing of files, since this would require a lot of unnecessary overhead. 

I read some instructions for modifying the RPi that would require the to be modified. Unfortunately I have nothing but the Raspberry itself to mount the SD card, so I wonder whether I can mount the FAT32 partition of which the Raspberry booted, then modify the from and then . 

For the housing, you could design a 3D model and then have it printed. That way it will fit exactly to what you have built. In my company we're using RFID readers as well and they are behind a thin plastic (0.5mm maybe) and behind a backlight (2.0mm maybe) so 2.5mm in total. The RFID reader still works, but as a consequence, the RFID tag has to be held very close in fron t of the reader (~ 10mm max.) Make sure you don't have additional gap between the reader and the plastic inside the housing. 

is a special bash character for history expansion and has to be escaped. The exclamation mark needs to be escaped in single quotes and the position is before the interface name, not before the argument. So your command becomes 

There is PyCharm, an IDE for programming Python. It's available in a Community edition for Linux as well. The problem affects (at least) version 2017.3.3. I installed it as a normal user with 

IMHO a server is a server, no matter on what hardware it runs, so yes, don't be lazy and apply the best practices. Even in a private network, I do it as a practice. So you should worry about SSH and 

I understand that the monitor mode is even more promiscuous than the promiscuous mode and is used for monitoring and/or sniffing. However, I don't understand why that would be necessary to set up an access point. My main concern is that the Raspberry 3 built-in Wifi does not support the monitor mode, so the article would not apply for me. 

What is the cause and how can I fix it? I have installed the Rasbian IMG file from 2017-11-29 and performed and prior to the PyCharm installation. 

Exchanging the micro SD card is a very nice feature. Thus it's possible to experiment with different OSes, different projects etc. I really don't want to miss that. However, I experience the problem that the number of SD cards is increasing and it becomes harder and harder to figure out what the SD card is currently used for. I am trying to work around this issue by buying cards from different manufacturers, so they optically look different. They also come with a micro SD to SD card adapter, so I write the OS and the project on a small piece of paper and put that paper into the enclosure of the adapter. That still does not solve the issue, because sometimes the paper gets lost and it's till possible to mix up the micro SD cards if you accidentally use two of the same manufacturer at one time (because the micro SD card itself is still not labelled). 

Clarification from comments: the content is dynamic, i.e. it depends on the GET parameters of the HTTP request. So it's not as simple as scarping a website into files on disk and then hosting it with Apache. 

I've created a shell script that is setting up things for me and my colleagues. This script is the first thing to be run on a clean Rasbian installation. Problems: 

Since then, PyCharm operated totally fine for us. You could also download and install a Java version manually, but since we are teaching kids, we wanted to have a simple OS-supported solution. 

My Raspberry acts as a Gateway between a local LAN and the Internet. So it has IP forwarding activated and does NAT for the devices on the LAN. Things work fine. The devices on the LAN are connecting to a server via HTTP and since all the traffic goes through the Raspberry, you could call it a "man in the middle". Our HTTP server has a bug regarding encoding of XML, which will eventually be fixed but it may take some time. However, the fact that my Raspberry is in between, I wonder whether I could modify the response of the server and correct the invalid data in advance. From an answer I don't expect a full configuration, just a list of packages to be installed with a short hint of the purpose. Once I know the package, I can lookup the configuration myself. It's ok if there's some programming required. I just don't want to implement a full proxy. In pseudo code, it should work like this: 

as well as getting a rough idea how much disk space this would need. At the moment I have a 16 GB SD card, but I could switch to a 64 GB disk. 

The same version is also mentioned in the PyCharm about dialog. You may not have noticed it, but PyCharm displays a message in the event log. 

The position of the optional ! seems to be before the hyphen. But from the description I understand it should be before the interface name and not before the switch itself. Is it 

I see that it is possible to play MIDI. Unfortunately, none of the question specifies the hardware needed to achieve this. Do I need a shield or is it a USB to MIDI adapter? Can I just use any or should I pick one for which drivers are available? My OS would be Raspbian. I have Model 2B. Low latency would be preferred if there are multiple options. 

Main functionality of a man in the middle for HTTP is provided by $URL$ is already available if you enabled NAT, that’s fine. You can use it for (a parameter to ) and forwarding a port (port 80 probably) to another port (choose whatever you like). Let listen on that port and you can write Python scripts to perform replacements. Major packages needed: 

I bought the official 7" touch screen. In the instructions, I was told to connect the GND and +5V connectors only, even if 4 wires were shipped. So that's what I did until now and things were working fine. Today I received another 7" touch screen, but it came without a manual, so I looked up the wiring in the Internet and it told me to connect the SCL and SDA pins as well. What's the benefit of connecting SCL and SDA to the official 7" touch screen? What can I get out of it? My OS is Raspbian, which detects the screen automatically. I'm using Pi 2 and Pi 3. 

At this time, I saw the output on the ODroid 3,2" display. After an additional I also saw the Raspbian desktop. Unfortunately I was not able to calibrate the touchscreen and I was not able to apply the changes permanently. After a reboot, the display was white again. 

This is different in that it only requires AP and neither managed nor monitor. This makes it suitable for the Raspberry 3 built-in Wifi. 

I then checked whether the VGA via HDMI monitor will be recognized as a frame buffer device in order to exclude the possibility that an HDMI monitor is never recognized as a valid FBI device: 

That way, the WLAN will be cheaper than the LAN, so it will be used by default. Apply the changes with a . 

I'm building a LAN to WLAN router and I need setting up NAT using . I don't get the description of the -i and -o command line switches (emphasis mine) in the MAN page: 

I own the official 7" touch display for the Raspberry Pi. I also own a HDMI monitor and I wonder what happens when both are connected to the Pi. I am using Raspbian Jessie and the Pi 2B, if that matters. 

So far, everything is fine. However, even when all those steps have completed successfully, PyCharm hangs in several situations, e.g. 

This might not sound like a typical Raspberry question, but I only have this problem since I have the Raspberry Pi (actually 3 of them). The number of micro SD cards is at 15 for the moment. So, how do I best label micro-SD cards? 

Fedberry is worth having a look at. It is based on Fedora 23. They provide images as download. The large one (~720 MB download) extracts to a 4.6 GB disk image including XFCE. On Windows, I was able to uncompress the unusual extension with the help of 7Zip. I then wrote it to the SD card using Win32DiskImager as I would do for Raspbian. Since the extracted file does not have the required extension, you have to enter in the file open dialog to find it. Like Raspbian it will resize the disk at first boot and ask for configuration when booted. 

I have tried: Yes, it's safe to connect the 3,2" touch screen. While it didn't display anything (completely white display), I could still attach an HDMI monitor and operate with it. It sometimes displayed the "battery warning" icon in the top right corner, but never failed on a 2A power supply. To get something displayed, I mainly followed the instructions of the Raspberry Forum. Here's the sequence that made it work for me: