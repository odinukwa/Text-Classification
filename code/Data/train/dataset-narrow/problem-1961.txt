I cringed at this a little. You didn't do port forwarding, you put your computer in the DMZ, (De-Militarized Zone). Basically ALL traffic is able to to hit your computer when you're on Ethernet. GET OFF ETHERNET RIGHT NOW!!! Posting to get the last bit out to you, more to come. Edit: In an nutshell, try to undo everything you did to get things back the way they were. Disable DMZ and any port forwarding you did and see if you get a 192.168.X.X address again. 

In my experience, that was perfectly reasonable a long time ago; however with everything getting more and more complex, I personally believe that it's best to at least glance at the manual for any gotchas before building something. 

Yes, your modem seems to be a router as well. If you look at the IP address assigned to your router, if it's not your public IP address, (such as: , , or ), then you can simply hook you other router into one of the other ports and you'll be good to go without any further setup. If it is a public IP address, then you may need to get a second IP address from your ISP to allow traffic from both routers at the same time; however do keep in mind that most ISPs will charge you for more than one public IP address. 

cell is seen as a height printable-character long since only both escape characters are detected as non-printable. Hence C column is given seven unwanted padding spaces. 

Also note that the command you run will search for every files as a first step, and then call only once with all matching names as a second step. Calling with 20 filename arguments is reasonable but 800 file-path argument becomes to be a bit too much. You system has limitations about the length of command-line argument (see ). I would suggest you directly ask to execute your command which will break calls in several sub-sets. Next command will call once per folder containing files, which appears reasonable: 

I don't think you can do this. You need to copy/past again. The issue is not related to slash beeing also the substitute command separator, since substitute command accept any separator. The issue is about the back-slashes to be substituted, which have been already treated as simple useless escapements of character on their right. Hence, when you call the substitute command, backslash is already vanished from the source. Just try to re-call the command as is (). Instead of printing the exact same command including , it will execute the command minus already-processed backslashes which result in . And obviously you can not find nor replace a missing character. Trying to do so will fire an error. 

I believe that you can install POV outside of the Program Files* directories, so you can install the program in: and it should work, (any directory in your user profile should work as well, but I recommend installing it into its own folder to prevent issues with other programs). Really, any folder that you can create folders and files in will work as well. As for the files locked in the Administrator's folder, why not just copy the files into your home folder while logged in as an administrator and then grant yourself full access to the files? I haven't installed POV-Ray in a while, but running the installer gives me the option to change the install path, so I'm pretty sure at least one of the above methods will work for you. Currently I don't need it; so I'm not going to fully install it. 

with the field taking almost always the form . Hence, you can inject your username and password this way: 

The feature accessible from the Network advanced settings of your virtual machine allows you to selectively expose a port of your virtual machine to your host. This way, you can setup virtual machine port 80/tcp (http traffic) to be easily accessible from your localhost port 8080. Below is an exemple for this setting: 

Yes you can. I finally successfully repaired my Win7 x64 computer few days ago and gave it a try this way: 

Windows file property You can also see this weirdness when you open any file property dialog under Windows. It will show you something like "48 KB (49,152 bytes)". 

If you did not write it somewhere then you are unlikely to find it back. One of the very few way to get it is to consult ARP cache of computers connected on the same networks your laptop connected recently, and not restarted meanwhile. You must know that it is very hard to locate a computer given one of its MAC addresses since they are only visible on the same network the computer is currently connected to. You can not use it through the Internet. Another way could be to use online accounts your computer is configured to auto-join and track activity from there (online antivirus account if any, google connection logs if a google account is automatically used, maybe Microsoft Office 365 or Skype account, etc). You will then get public IP addresses the police can work with, or you can give those details to the police for it to ask any activity to the service provider if they don't give those data to end users. 

I believe that my hunch was correct, the problem characters you are seeing seem to be a *nix style of newline, (ASCII code: 0D) or the Apple version, (ASCII code: 0A), whereas Windows typically uses a combined newline coding, (ASCII codes: 0D 0A). I can recreate the issue by creating a text file and manually editing the hex values of the file to give me the *nix newlines. Opening up the text file in Word shows the newlines as expected and attempting to copy them into Notepad(++) will display them as spaces. I even copied them into the file you posted and saved it, closed Word, reopened it and tried to copy and paste the text, same results. Other programs that were written to be portable, (LibreOffice, OpenOffice, probably others), have the ability to use the different types of newline characters, which is most likely why they're not affected by this issue. In order to get rid of them, you'll probably have to use either OpenOffice or LibreOffice and use a regex to find them; however they're not being saved as the hex value 0D, so I'm not sure what value you should use to find the characters with. 

And git v1.8.2 fixes that new behavior for command which was still affected. The workarounds I can see of interest are: 

Hence every users added to the group can raw read the hard drive which is what you actually need. The group name might vary on your system. Just add yourself to that group, logout/logon for this to take effect and give it another try without root privileges. 

I don't think you need to run as root for your need. Let's have a look to your hard disk device file. It should looks like this: 

The daemon can also helps in this situation. It runs in background and learn which programs and libraries are often in use. It then them on next boots for a faster launch. As opposite to those files are not locked in RAM but read once after boot so their RAM space can be reused for something else if required, hence there is no guarantee of a faster launch.