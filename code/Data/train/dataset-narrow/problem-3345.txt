The short answer is no to using RDP for this, and YES there is a better way. If you use ssh sessions, even with X11 enabled, you will find that they are not affected by the screensaver. This is described in more depth in the Q&A's at: How can I set up my G-Mouse USB GPS for use with Raspbian? Can I achieve multiple independent sessions into a Raspbian Pi3? When you use ssh like this to connect you will get a terminal window that is not capable of launching leafpad or gnuplot plots or any other graphical output: 

Problem: When using devices that Jessie assigns to /dev/ACM0 Python does not trigger the OS to send the RST signal like it does when using /dev/USB0 (I have not found a way to force Jessie to assign the serial port to /dev/USB0) 

I don't mind the automatic screen blanking but would prefer that it ask for a login password when it wakes up. In Jessie that is easy. 

and make sure there is only a single entry for the interface you are trying to use, with the correct IP and gateway addresses. Then reboot. By then, iwconfig should show that you are connected to your router, and ifconfig should show you have a proper IP address. 

There is only one way to reach the Stratum-1 servers, and that is to use time.nist.gov which is a pool address all by itself. It will reach the quickest and most accurate time available on the web. It will run automatically. Here is a Q&A on this Stack Exchange that explains how to do it: How do I set Raspbian to use the primary time server time.nist.gov? 

Question: In Jessie, how to deal with Python open of /dev/ttyACM0 not sending RST signal like it does with /dev/ttyUSB0 

That is default behavior. When you reboot, the system resets itself into the state determined by the startup files. If you need to preserve your desktop then don't reboot. I've searched for a way to save them and cannot find the solution you are looking for. 

What a cool idea. I use those linear actuators for my solar panels, which have to adjust in both ways. Here is how I do it: Use 4 relays - one pair to switch power on, then the second set to select polarity. This is what I have done for my solar tracking system. It takes 4 pins to make it work (active-low). You can get 4 relays on a single board, like this: 

--EDIT for new information on persistent share connections. In this question, My Windows share will not mount during boot, @Cary posted an answer that deserves mention: In Raspbian, 

and it said that some index files filed to downwload. So just for a test I tried to ping that address and it said unknown host - I then pinged www.google.com and it worked fine. I have plenty of disk space available on the SD card. df says I am using 19% and have 22G available. fsck throws a warning saying that to continue will cause severe damage. So I said not to. sudo fsck / simply said it is mounted and it cannot continue. My question is: Is there anything I can do on my end to make updates work? --UPDATE: Based on comments from the community it was determined that this was an intermittent problem. By waiting for a while then trying again, it went though as normal. 

So, having tried RDP enough to know it isn't the answer, the question stands. Can I achieve multiple independent sessions into a Raspbian Pi3? 

You are correct about - and kudos to you for discovering it. It cannot react to the absence of an event. What you are going to want is a script or a python program to do as you described. Either can monitor a directory to see if it has had a file added. It is not clear to me whether your stream of files means that every XX seconds a NEW file is added. If so, it is trivial to do a script that is regularly run as a script that does a then some logic to determine whether the length of is getting longer. Python works much the same. You would then use to get the list of the current directory. I would save the directory as a file, then each time use this to both compare with the file and to then save it for next time. Note that the most frequently that can launch a job is down to the minute. Using is much more efficient than leaving a program running all the time comparing the clock, unless (for example) you use a command in a script to release the processor for a second each loop. 

Just found a short video that shows how this guy was able to support two monitors by changing things in the Kernel. I can't comment on this other than to simply list the link: $URL$ 

First thing is to find the tty port it uses. Start by opening a terminal window. Look at the devices, then plug in the GPS unit and look again: 

Upon further investigation I have discovered that only this particular image is of a different size: 

I am trying to format data from several Arduino-based systems so my Rpi3 can display it as a web page. But the Rpi3 seems to only work as an I2C master, and the Arduinos have little memory in which to store data. The sensors include weather and a solar panel sun tracker. Arduino has no problem sending out the data to other Arduinos. The only device on my I2C bus with the memory to do the data logging is the Rpi3. It looks like the alternative is to do some kind of polling but then I am faced with the question of how often to poll each device, etc. And the Arduinos then would have to spend much more time looking for the requests. My Arduino programs utilize specific delay() times (like when they are moving the solar panels) so interrupts would be a problem in maintaining proper timing. If there is a solution whereby I can have the Rpi3 waiting for data to come in, then I can handle the programming to do the rest. So my question is: Is there a good way to set up the Rpi3 to wait for the data and process it as it comes in? 

There are great HDMI-over-CAT6 cables. Some use 2 cables and can go up to 300 feeet. Others use two cables and go 100 Meters. Then there are also single-cable adapters that actually go 300 feet over a single cable, supporting 1080p and audio. Here is the search I used: HDMI to Ethernet converter single cable So there's your answer. They are quite available, and affordable. Whatever your software can generate to the HDMI port can run a large-screen at the 100 Ft specified. 

Short answer is YES. Instead o fusing RDP, there is a much better way to achieve this, as spelled out in the answer to this question: How can I set up my G-Mouse USB GPS for use with Raspbian? EXCERPT (with edits to make it applicable to this answer): 

It has taken a while, but RaspberryPi.org has now announced the official release of Stretch to replace Jessie. Does this mean everybody should start changing their repos and doing the upgrade? Myself, I am always opposed to adding or in this case, changing, repos for any reason. The standard plain-vanilla Jessie repos have been time-tested. 

Upgrading to Stretch is not difficult, as per: RASPBIAN STRETCH HAS ARRIVED FOR RASPBERRY PI Excerpt: 

All Windows machines have an RDP client called Remote Desktop Connection. Plus, you can use Remmina on linux machines as a client also. 

My answer: Do it the Ubuntu Way. System is a Ubuntu 16.04 LTS on a HP Notebook 15. I shut down the RPi3 and pulled out the SD card. Plugged it into the SD card reader with an adapter It came up in nautilus File Manager as two volumes: boot and root. I ejected both in nautilus. Then plugged in the target SD card into a USB adapter It is blank - brand new. 

It is very easy to wire a hardware reset to the Rpi3. Here is where you will find holes already open and waiting: 

----------------------------------------------------------------------- Background on why I believe this is your answer: I use a script that does this: 

You are going to want to make sure your Pi is getting the time from the Master Clock instead of from the pools that are set up by default. That time server is named time.nist.gov The best part about using this URL is that it is smart and finds the quickest time server to give you the best results. Rather than retypee the whole procedure, I'll refer you to a Q&A on this Stack Exchange that shows how easy of a change it is: Fresh installs have it pick up time from a variety of sources that can be many hops from the Master clock. For details, and for the reason why you should change it to time.nist.gov, see this Q&A: How do I set Raspbian to use the primary time server time.nist.gov? Same thing with Windows computers. They also are set by default to pools, with the same result. The procedure to fix them is included int he same article referenced above. 

In my case, my Windows machine is on 192.168.2.x and it connects through the WAN port to an extender router on 192.168.1.x where my Internet gateway is located at 192.168.1.1 I connected the Rpi3 to the extender router's LAN and it has the address of 192.168.1.202 My Windows machine is 192.168.2.205 Remote Desktop Connection gets me to get the Xterm desktop window, and PuTTY works as well for character-based access. FileZilla also works well - selected SSH login and put in my login name and password. SSH is enabled on the Rpi3 so the first connection with both PuTTY and FileZilla prompts me to save the keys as I declare it a trusted host. Upvote on your comment to the first answer. Sounds like you found the right solution. I also use the same setup to access my hosting service at Bluehost. It seems that SSH has no problem passing through the routers in that direction. When the Rpi3 is on my other subnet (router) of 192.168.3.x I can't see it at all from my Windows machine. 

where remote-host is a name of the other server from my /etc/hosts file It will prompt you to accept the other host's key - you answer yes (not just y) Then it will prompt you for the other server's password. I ran that the ssh-copy-id -i command for each of the 5 remote Pi3s, using their name from MASTER's /etc/hosts file. It works with plain IP addresses also. That's it. Now my script runs with no prompting. Best of all, it works in cron so I don't even need to be here when it runs. 

Remmina has the advantage that it can connect via either VNC or RDP, and uses a tabbed interface if you connect to more than one server. 

The simplest method is to use the Win32DiskImager program. It will a card to make an .IMG file containing the entire contents of the card. Restoring is just as simple as putting in a new card and clicking the command. The program is OS and partition-agnostic. It simply works with entire images of the cards. 

Then the device itself provides data points every 60 seconds. So far, so good. It works well and gnuplot makes great plots from the data: $URL$ When I use a device that shows up as /dev/ttyUSB0 and upon running of this script it resets it by sending the serial RST signal as soon as the serial.Serial(...) command is executed. When I use an Uno it shows up at /dev/ACM0 so the relevant code is 

Which has the effect of not prompting for any sudo command as long as I am logged in as user pi. (note the syntax has to be exactly this way) This is great. The group line is still there as So to answer the first part of the question: When I moved the file /etc/sudoers/sudoers.d/010_pi-nopasswd file up one directory level to make the include fail, then waited 15 minutes, it caused my Raspbian system to prompt for my own password upon use of sudo, just like my Ubuntu 14.04 LTS system used to do. Then when I moved it back where it belongs, even after 10 minutes it no longer prompted me. No reboot necessary. Voila, no prompting for a password when using sudo My lubuntu 14.04 LTS test system has the same setup except that the 010_pi-nopasswd file was not present. lubuntu was installed with pi as the root user. It prompted me for each time I used sudo, then didn't prompt me for 10 minutes afterwards. I added this same file to the Ubuntu system just like the way Raspbian is set up, (remember to chmod 0440 on this file while you still are in that 10-minute window) - and Voila, it no longer prompts me for my own password when I am logged in as pi even after 15 minutes. Again, the change happens instantly with no reboot necessary. This is the May 2018 answer for how to disable and enable the prompting for the use of the sudo command when logged in as root user pi. Other users and groups can be configured in this same fashion. --UPDATE for Ubuntu 16.04 LTS This system is very similar also. However, the biggest difference is that 16.04 has much tighter file permissions so the work must be done in mode. If you have forgotten your root password you can reset it from your normal prompt by using Then the command will work and you can go from there. 

4 flashes of green probably means the circuitry is actually working but that it cannot read the SD card. This can be due to too many insertions/removals. Or, as mentioned in another answer the software on the card may be bad, or the card itself may have gone bad. 

I have several USB microphones that all work fine under Windows, but not all of them work well with the Pi. Interestingly, the ones that do not work well with the Pi also do not work well with my Android tablet. Can't explain why; That's just the way it is. One alternative is to pick up one of those $7 USB sound cards - they work great with Pi, and use a microphone with a 1/8" plug with it. I've had 100% success with them, plus if you also use it for sound output it gives cleaner audio than the Pi itself. I use a 4-port USB 3 micro-hub so everything fits. They are available from the usual sources. Guaranteed results. No muss, no fuss. They just plain work. 

rsync is working great, with the proper exclusions so it can be run from my Raspbian systems that are on 24x7. But it thinks it is the only program on the network and tries to take over. Of course, I use Win32DiskImager every few months to make sure I have a known, good copy of the setup for each of my 7 Raspbian sensor systems scattered about. Some of these systems operate outside in the SoCal heat. SD cards work great, until they don't. Every night at midnight the cron scripts fire up to collect the day's data and put it all on hard disk. To protect against forgetting the system files (like in /etc) that I have changed since the last SD card backup, I run rsync about once a week with options that make it act a lot like Windows Robocopy with the /MIR option. However, it is really hogging the bandwidth of the PiNet subnet. Enough to block other traffic. It also seems to stop for many minutes at kern.log while pushing more than 3-4 Mbps, for a long time. 

I found that this is really easy. First, I generated a public key on my master unit that can be shared with the other computers. 

To make a local copy of, for instance, your Arduino sketches and libraries, you can do something like this: 

I have several Rpi3Bs and for the most part they work well. But one of them insists on changing the USB keyboard type to the UK keyboard. I fix it after a reboot by going into Menu..Preferences..Keyboard..Keyboard and Mouse..Keyboard Layout It would me nice if I could figure out where this setting is stored and mark the file read-only or something. The one thing I have figured out is that it is not set in /boot/config.txt In Raspi-config, localization is set for both gb and en_US - not sure why. So the question is in the title: How can I force Raspbian stay set to the US keyboard? 

But with the new Rpi3B+ which requires Stretch, it has a problem. It will still allow you to get to the login screen, but then after supplying the credentials it then goes to a blank screen. How to make xrdp work with Stretch on the new Rpi3B+?