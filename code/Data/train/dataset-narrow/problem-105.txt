IOS Image: uc500-advipservicesk9-mz.151-4.M6 This configuration is on a UC520 so the licensing is user based. It doesn't show anything related to features. Looking at that, you may be able to remove the command by changing the protocol, removing it, and then changing the protocol back. Then you could try this command: 

EDIT: Short Answer is that PPTP protocol was selected and the l2tp options for the timeout were unavailable in this context. Changing the protocol to l2tp under the vpdn-group allows you to remove and configure the l2tp settings. I don't have enough rep to comment so I will post an answer here... I have a similar configuration and I am able to edit the session timeout under the vpdn group. 

I would run your APs in local mode and make sure you are trunking to the controller. Then put the ports that your APs are plugged into as access ports for vlan 10. This should get your roaming working. In your controller, configure two interfaces with vlan ids for 20 and 30 (Controller > Interfaces). Then on your SSIDs assign the interfaces that your just created. (WLAN > [wlan_name] > Interface/Interface Group(G)). When APs are in local mode, they tunnel all client traffic back to the controller to make a routing decision. This way you don't need to trunk to each AP and the roaming will be controlled by the controller. I seen in your partial solution that you have to configure DHCP relay on the 2960S switch. I thought this was strange because the switch is a layer 2 device and DHCP broadcasts should work without it. That is unless the trunk isn't correct to the Mikrotik. I have this setup in a few places where wireless is critical and it works very well. Josh 

There is another feature of to consider: External Routes. One trick I have used to influence EIGRP Primary and Secondary paths over DMVPN is to use a dedicated EIGRP AS for the secondary path and then redistribute it into the primary AS. Redistributed routes will be injected into the EIGRP process as External Routes. Externals Routes will have an AD (Administrative Distance) of 190 by default and therefore be less preferred. This is not always optimal nor can it always be applied in all use-cases but it is something to consider. 

The author of your reference article does not appear to fully understand or clearly illustrate the relationship of Bandwidth/Latency. 

Aside from CLI show commands, you may want to look into 3rd party software with traffic visibility. I cannot give specific names as applications and vendor recommendations are off-topic. However, there are a lot of options out there that give granular visibility of the traffic flows and break them down and track traffic tags such as IP ToS. Look for applications with NetFlow support. Cisco basic NetFlow v5 will track the following information: 

On the ASA running the version 8.2 code, there are a few potential issues. The first is the SSL VPN could be setup for split tunneling and they would need to add your subnet in the split tunnel list. Second is the SSL VPN connects to the outside interface as well as your site to site VPN. They will need to permit hair pinning on the outside interface by issuing this command on the remote ASA . The third is the NAT exemption. They may need to do something like this on the remote ASA . If this doesn't work I would verify the remote end's crypto ACL and make sure the SSL VPN subnet is specified and that routing to the SSL VPN subnet is added to your router. Josh 

I am running IOS version Version 15.1(4)M6 which is a few maintenance releases newer than the one you are using. I would try updating it. EDIT: Here is the VPDN configuration 

Cisco has a large listing of Syslog Messages and Severity level here: Syslog Messages This list includes Syslog Messages for the following: 

Prefix Length - The longest-matching route is preferred first. Prefix length trumps all other route attributes. Administrative Distance - In the event there are multiple routes to a destination with the same prefix length, the route learned by the protocol with the lowest administrative distance is preferred. Metric - In the event there are multiple routes learned by the same protocol with same prefix length, the route with the lowest metric is preferred. (If two or more of these routes have equal metrics, load balancing across them may occur.) 

By default, the router will install the route learned via EIGRP into the routing table. This is because EIGRP has a lower Administrative Distance than OSPF. It should also be noted that both learned routes will remain in their respective routing processes. Thus, the router knows about both but will only select one route when routing. Routers select routes in the following order: 

The biggest concern is likely to identify where your bottlenecks are going to be, in terms of route aggregation. The basic parameters are likely going to be: each subnet must be a /64 (dictated by IPv6), and you have a /60, /56, or /48 to play with. As others have said, a /48 gives you 64k subnets, but it's still easy to paint yourself into a corner if you just assign them randomly. Let's say you have 1000 store locations, and give each one a /64 sequentially from the start. Then you find out that the 43rd store needs a second subnet - that means, either renumbering that network, or giving the store two separate subnets that can't be aggregated. Incidentally, in the IPv4 world, you also get 64k subnets if you use the 10.x.x.x network and subnet it to /24s. Some of the practices you use in that scenario may translate nicely. One company I work for uses 10.x.x.x internally for about 150 branch offices (with some 100-500 computers at each location). The second byte is the branch number, and they use /22 instead of /24 for their subnets. So each branch office can have up to 64 subnets, which works nicely for them. 

Interface F0/0 and F0/1 on R1 are misconfigured. R1 interface F0/0 is configured for instead of . R1 interface F0/1 is configured for instead of . I recommend either "swapping" your cables or re-IP addressing your interfaces. 

$URL$ The line up/down Message ID can be found in the "Cisco ASA Series Syslog Messages" documentation. 

To oversimplify, devices running STP will broadcast BPDUs and listen for duplicate messages. If duplicate messages are heard, a loop will be detected and the STP domain will converge by blocking the appropriate ports. Many consumer-grade devices do not call out support for IEEE 802.1D or newer flavors of STP such as this common D-Link switch. Consumer-grade devices, without this mechanism, can form a loop between itself, or with another consumer-grade layer-2 device. The rest of the broadcast domain could be then subjected to the resulting crippling, broadcast traffic even though it is not a part of the actual layer-2 switching loop. There are some mechanisms (such as Storm Control) and strategies to reduce the risk and the effects of the negative traffic but they are outside the scope of this post. 

There are two parts to the answer. First, to answer your question directly: the official recommendation on this topic has changed. In the past, RFC 3627 is titled "Use of /127 Prefix Length Between Routers Considered Harmful" The current recommendation is different, though: RFC 6164 recommends using a /127 (not a /126!) on point-to-point links. Both RFCs outline the reasons for the respective recommendations. The second part of the answer is that generally, outside point-to-point links, IPv6 will break with any prefix longer than /64. It is actually not IPv6 itself, but many of the protocols it uses, such as SLAAC, Neighbor Discovery, etc. Since a point-to-point link does not involve any form of discovery, that consideration is not relevant, and a /127 will work. 

The design philosophy behind IPv6 is that having a reasonably-structured address space is more important than conserving addresses. Incidentally, IPv4 was conceived with the same idea (which is why each device has 16 million loopback addresses, but only ever uses the 127.0.0.1 address, and most of the class D and E addresses are unused). Link-local addresses theoretically do waste gazillions of IP addresses, but it's not considered a problem. Similarly, giving each customer a full /56 or even /48 is technically very wasteful, but not a real problem. There is a dark side to this approach: the claim that IPv6 can give an IP address to each grain of sand in the world (or some such) is nonsense, just as the claim that IPv4 can support 4 billion devices. In reality, by the time you add up all the waste in IPv6, you'll find that the limits are much narrower (still bigger than IPv4).