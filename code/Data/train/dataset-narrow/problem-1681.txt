The type you want to use is not . This is for static files that the web server is meant to serve to user agents. For a socket used for interprocess communication, the type you are looking for is . Though, please note that because you ran gunicorn unconfined, there may be additional issues communicating with it. 

Rather than storing host-specific data such as ssh host keys on the SD card or other read-only media, you can store this in NVRAM, which is what it's for on an embedded system. You'll need to do some custom scripting to store and retrieve the keys at boot time, but the scripts will be exactly the same for every device. 

HTTPS requests, which squid simply passes on to the remote site. Requests for ads, where it seems that the URLs are customized for each user. 

The virtual console you're using is a virtualized serial port. It has absolutely no idea -- and no way of knowing -- how large the virtual terminal really is. So, you have to give it this information explicitly with . For instance: 

This tells nginx to listen for IPv6 connections. Your existing directive listens only for IPv4 connections, and this is borne out in your output. The reason this is required (in addition to the existing directive) is that resolves to an IPv6 address in addition to the historic IPv4 address . But, IPv6 is the preferred protocol for making connections. Thus is attempting to connect to nginx via IPv6 and failing. Of course, on the global Internet which you will (probably) eventually put your site on, you also will have to use IPv6, either now or in the near future. So you should prepare for this today. 

You should use public key encryption in this scenario, when your offsite backups are stored by a third party. This way, the machine being backed up has only its own public key, and therefore can only create backups. You store the private key offline, and use it only for restores. Backup solutions such as Bareos already support public-key encryption, or you could fairly easily integrate it into your existing setup with GPG. 

If your PHP script already has an open database connection, why don't you just use to import the .sql file? If the syntax of the .sql file is valid, of course... 

You don't need to be messing with . This is actually a rather dangerous setting when applied to KVM guests. I would remove that section immediately. 

That IP is not valid with that netmask. You can only use 5 of the 8 addresses. The sixth is the gateway, which you also can't use. And the first and last addresses in the block also aren't usable, as they are the network and broadcast addresses respectively. 

The way described is the way you create multiple records on Route 53. Entering two values in the textarea separated by a newline will result in two distinct records in the DNS. This is why Amazon call it a "record set" - it is a set of records. 

After you restart, go to Device Manager, select the Microsoft Basic Display Adapter and Update Driver. Point it at the latest QXL WDDM driver. Though installing the driver will reset your resolution to 1024x768, you can then change your resolution and use the full Desktop Experience at any resolution you wish, up to 2560x1600. 

Use to erase your local cache and metadata. It will get rebuilt the next time you run . Use to bring your system into sync with the state of the repositories. This may both upgrade and downgrade packages, so inspect carefully what it intends to do before committing. 

If you wish to require a sudo password to run playbooks, you can simply set in , and do not create as shown above. 

Start fewer processes, so that you do not run out of RAM. (Try 1500.) Add more RAM to the server, so that it can run all of the processes. 

You don't need to make command groups if you want a group of users to be able to execute any command with . You just need a sudo rule that permits all commands, and one should have been created for you by default when you installed FreeIPA. 

In short, no. You can only make it more difficult and costly for someone to rip out your proprietary stuff from the VM image; you cannot make it impossible. Once I have your disk image I can pretty much do whatever I want with it. Even if you encrypt it and embed an encryption key somewhere within it, I can just poke through it until I find it. The usual solution here is to use code obfuscation tools such as Zend Guard for PHP, Dotfuscator for .NET applications, etc. 

I think the right answer here is going to be driven by business considerations, not technical ones. In general, my advice is: If the developers maintain this file as part of the application, then they should package and ship it as part of the application. But they also have to have the responsibility if their changes break production. If you maintain this file, or if they aren't responsible if they break production, then you should maintain the file and put it in puppet. 

is a device special that represents the disk drive; it isn't a filesystem, but you've tried to use it as one. Instead, try this: 

Without this, depending on which trailing slash is missing, URLs may have double slashes (which Linux doesn't care about, but web applications might) or URLs may not have a slash at all (which always breaks). 

Yes, just have two directives in the same block. Since in one block overrides any such directives in outer blocks, you have to copy and paste the directive from the outer block into the inner block if you need to log twice in an inner bock. 

And even if mail connections do break, when you have to restart the mail server, the sending mail server will just try again later. 

Change the CNAME for to an A record now. Point it to the same IP address as . Then, when you are ready to go live with your web site on the new server, just change the A record. This has the additional benefit that you need not make any change on the old server. 

In this particular case, one rule might be slightly faster than two CIDR rules, but the difference is so small it will likely be unnoticeable. Unless you're routing multiple gigabits per second, it's not worth trying to optimize here, and if you are, you should probably buy a purpose-built router anyway. I recommend you use CIDR comparisons anyway, as this will be faster if you ever add disjoint ranges (and you probably will sooner or later). And it's cleaner and easier to understand. 

Active Directory, of course. Which is probably what's in your production environment. Set up a VM with a domain controller running Windows Server and a second VM with your web server, joined to the domain you just set up in the first VM. Get your license keys from your MSDN account. 

When you give a boot command line option to start networking to load a kickstart file over the network, the corresponding line in the kickstart needs the option added. From the documentation: 

You must configure MediaWiki so that it will actually obey the header. Without these settings, MediaWiki will ignore it. (For historical reasons all of these configuration options refer to Squid...) At a minimum, these lines must be in your : 

You're not actually receiving traffic on port 25, but on port 80, via your web server. This traffic is attempting to use your server as a proxy to disguise the origin of the traffic. We generally call such servers open proxies, and they're quite useful for delivering spam and conducting attacks on other sites. For some reason, some people seem to think your IP address has an open proxy server, but the log entries show that the requests are being refused. If the volume of requests is too high, I would suggest firewalling off the IP address blocks rather than simply denying them in nginx. For instance: 

As the section of the appendix you linked to states, it's strongly recommended to enable or disable the consistent network device naming feature at install time; doing so after installation is messy and not guaranteed to work, as you've discovered. To do this, install the system passing on the boot command line when booting the installation media, and add the same parameter to the grub boot command line. Since you've just installed the system anyway, this shouldn't be too big of a headache... 

Whatever GUI tool you're using in OS X is doing that, not . If you actually use to extract the file, you will get the expected directory structure. 

Your is wrong. You specified but your app is actually in . This is why Passenger can't find it. The resolution is to fix the configuration. 

Finally, you probably want to rename your item. is very generic, and is already used by common MySQL templates. Something like might be more appropriate. 

Even if you do use an IP address, SNI will be used anyway, for all s which are ing on the same IP address. 

It's completely redundant, since any path that isn't found as a static file will be directed there by your first anyway. It's only necessary or useful to use to serve static error pages. 

If you see a connection for listed, double click it. If you don't see any connections listed, go to File > Add Connection, leave all the defaults set as they are, then click Add. 

Using policy settings here, you can either create a whitelist (which you seem to not want) or a blacklist, either of individual devices or entire classes of devices (such as network adapters). These take effect when a device is removed and reinserted, so it will not affect the NIC built into the machine, provided you don't apply the setting to devices that are already installed. You will need to reference the list of device setup classes to find the class for network adapters, which is . Add this class to the blacklist, and soon afterward, nobody will be able to use USB network adapters. 

You can use multiple names in and even repeat it. For instance, to answer to three hostnames, you could do something like: 

Your nginx configuration doesn't show any redirects on port 443, and you claim not to have a load balancer in front of nginx, so the only other place the redirect could be coming from is ... your application. I see that you are running the app on https, but you have not told Rails about this. In particular, your nginx configuration is missing: 

Disclaimer: I'm the author of Bad Behavior. The file is interesting in that it's a publicly accessible part of the phpMyAdmin installation which happens to contain the version number. With this, a malicious party can determine what vulnerabilities the system may have, because of the phpMyAdmin version in use. (And a Google search revealed a shocking number of public, very old phpMyAdmin installs...) If you don't have phpMyAdmin on your system, then this is no particular cause for worry. 

OpenVZ providers typically sell RAM capacity of their virtual machines as two numbers: "guaranteed" and "burst" RAM. You are supposed to always get the "guaranteed" amount of RAM, and may use up to the "burst" amount if host resources permit. For example a VPS might be sold as "512MiB guaranteed 1GiB burst RAM". You should always have a successful memory allocation below the "guaranteed" amount, but memory allocations may sometimes fail above that amount, if other virtual machines on the host are consuming RAM as well, or if the provider has oversubscribed the machine (almost always). To learn what these numbers are, look at the for which represents the "guaranteed" RAM, and the for which represents the "burst" RAM. Each of these numbers is expressed in a number of 4KiB pages. So in your case, we can see that you have 1GiB (262144) "guaranteed" RAM, and 4GiB (1048576) "burst" RAM. (If these aren't the numbers you were promised, you need to have a very unpleasant talk with your VPS provider.) Since you are already well over 2GiB used in the VM, your memory allocation may fail, because it is above the "guaranteed" amount. 

The first regex takes slightly longer to execute, but on modern CPUs the time is going to be pretty trivial. But, the first regex will not match a file named . The second regex will match a file named . 

Once you've gotten your configuration to this baseline, you should find things start working again, or you might have a different issue which is easier to deal with. 

The directive is meant to specify the IP addresses on that same system to which MongoDB listens for connections, not IP addresses from which it receives connections. 

Comment this by adding a sign in front of it. Further down in the comments you will see the following explanation: 

When you to a domain, the redirected domain becomes the target for all subsequent DNS lookups, such as those performed by . See RFC 7208 § 6.1: 

The PulseAudio developers don't seem to like a lot of things, one of which is this workaround: Use PulseAudio as a system daemon, rather than running it per-user. As I mentioned, the developers don't particularly recommend this, for their own reasons. If you do this, be aware of the potential security impact on your systems. 

You need to check that is as shipped by the vendor, and has not been altered in any way. If it has been changed at all, you should restore a clean copy. 

This might be a long-standing bug in OpenSSH which was only fixed in 6.0p1. In that case you can safely ignore it. However, if you want to be safe, the original answer (assuming you aren't affected by this bug) is: 

The ability to set SELinux contexts on files in GlusterFS volumes was added in GlusterFS 3.11.0. AFAIK Red Hat has not yet shipped this version or a later version of GlusterFS in RHEL or Red Hat Gluster Storage. However, it is available in Fedora, and in CentOS 7 by installing or depending on the desired version. 

In most cases you should have already disabled SSL 3 months ago, or more, for the POODLE vulnerability. So that isn't a concern. The interesting part of this requirement is not being able to use TLS 1.0. The official word is: 

The use of hostnames is decided on the server side, not on the client side. You cannot change anything on the client to affect this. To use only IP addresses, the MySQL server must be started with the option, or set in . 

That's how bridges work. When you bridge devices together, the networking configuration applies to the bridge since it is representing all of the connected devices. Therefore you must apply the network settings to the bridge, and not to any of its constituent devices. 

You then configure the guest OS with the associated IP address, netmask and gateway. The IP address is not assigned to the host. 

You should use subscription-manager. For connecting directly to Red Hat, Red Hat Network Classic has been deprecated and this service will end in July 2017. You're expected to have switched all systems over to subscription-manager before that time. This doesn't entirely apply if you need to connect to an older version of Red Hat Satellite. In this case you can continue to use rhn_register to connect to Satellite. 

You can override anything in a unit with drop-ins, files that systemd automatically reads from an include directory if it exists. For instance, if you create a directory and then a file within that directory, directives in that file will override whatever is in the system shipped unit. For example, : 

With version 1.0.15, you won't be able to use it. You can either upgrade nginx, or omit the directive. 

Unfortunately, Google hasn't been too helpful here; most people seem to have the opposite problem. How do I cause requests for anything in the directory or the file to be sent to Drupal's 404 page? 

RFC 5321 section 2.3.5 requires that domain names used in email be resolvable to addresses. From the relevant parts: 

I have two CentOS 7 systems on which I've installed these packages and rebooted. According to Red Hat, I can check the status of mitigation by checking these sysctls and ensuring that they are all 1. However, on these systems, they are not all 1: