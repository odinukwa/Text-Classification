This example also gives you control over the Reply-To headers. There's no need to touch anything in Postfix! 

The official list of root servers is maintained here. This is the "hints" file which most recursive servers will use to figure out where to start looking for domains. It only very rarely changes. Most of the changes I recall recently have been just added AAAA records for IPv6. For more details of what happens at the root level, there's plenty of documentation here 

With technologies like XEN and HyperV, if you have a SAN with multiple servers hanging off it, you can live migrate a running SAN backed virtual server from one server to another. Very handy for load balancing and doing maintenance on physical machines without any downtime. 

Em, you don't seem to have a DocumentRoot defined in the HTTPS virtual host. Copy the DocumentRoot and Directory Stanza from the HTTPS virtual host. 

Another thing to watch out is the "lovely" perl scripts that often get uploaded to out of date third party CMS installs. These often have their own SMTP engines which avoid the local mail log. Fortunately this is relatively easy to stop with iptables: 

If you run your own bind server, have a look at proper Dynamic DNS rather than options like dyndns and no-ip.com. This uses features available as standard in Bind to update the zone directly. It's a bit more involved than setting up a CNAME for one of the above services, but at least you have full control. There's a webmin module that will seemingly handle is here, although I haven't used it, so don't know how good it is. For details on how to set it up manually, you can have a look here. 

My theory is that Virtuozzo hasn't touched the OOM manager in the host kernel to make it aware that there's virtualised processes running, so it doesn't realise it's killing privileged processes in your "VPS". However, that's just conjecture as I haven't been able to check it with Parallels, who're the people responsible for Virtuozzo. 

This is actually the way MailScanner works, so it might be an idea to have a look at the setup documentation for MailScanner/Postfix here. Basically, all email is sent to a hold queue, MailScanner scans it, and anything that's passes is put into the outbound queue. Hopefully, ignoring the MailScanner specific parts of the doc, you'll be able to extract the Postfix setup you need. 

If you're moving the mail over the Google Apps, the MX record is going to point to Google Apps more than likely so the forwards on your DirectAdmin box aren't going to do a thing, so the dummy account method is probably your only option. However, there's another gotcha to look out for! If you're going to keep the domain setup on the DirectAdmin box, you're going to need to disable the Local MX feature. DirectAdmin provide the instructions here. The reason for this is that if you don't, any time you try sending email to your domain from the DirectAdmin box, the Directadmin mail server will think it's local and refuse to pass it onto the Google Apps server. If you don't have access to the "MX Records" page from your DirectAdmin login, you will need to contact your hosting provider. 

You will need a MX record pointing at the postfix server, for example: host.example.com IN MX postfixserver.example.com Then you can set up forwarding to forward to address@host.example.com where address is the alias on the postfix server that's piping to the script. Also, be aware, only system aliases in /etc/aliases can be piped to scripts in Postfix, virtual aliases can't be setup to use a pipe. 

The best bet is to look at top's batch mode. You can do something like to get a snapshot of the system. I'm not aware of anyway to get top to stop clearing the screen on exit. 

Why not just use Fail2Ban? It should be easy enough to setup a filter for it. However, something like the following would also work. 

Do they have a local DNS server with the IP pointing at the wrong place? Or a hosts file? If they run "ping www.website.com" does it resolve to the right ip? 

You can get Apache to pipe the custom log to a script. So for example, change the CustomLog entry in the vhost to: 

I haven't used ucarp on Linux, but in BSD land, it's as simple as bringing down the carp interface on the Primary, and the Backup will promote the carp interface to master. 

This means that anyone who has an account on the system is able to read the contents of . You need to run something like the following: 

My bet is that the files in that the files in /home/newuser/domains/joomlasite.com/public_html/ are owned by root. It looks like you're using suPHP which will run the PHP files as the same user as owns the files. The min_uid restriction is there to make sure that suPHP isn't run as root or another system user inadvertently. The fastest fix will probably be to run the following: 

In order to block it in one section of our network the following domains were redirected to a site with instructions: 

Read the second line, specifically . Your system doesn't have any swap, so that alert is really a false positive unless there should be swap there. The only systems I've seen without swap recently are OpenVZ/Virtuozzo contatiners/VPS' where there's no swap given to each container as the hardware node handles all swapping. However there are plenty of other reasons for not having any swap space setup. 

Amazon's ELB operates at the IP level, it doesn't care about the protocol running on top. What you're looking for is a HTTP reverse proxy. You could run another two EC2 instances with something like Apache, Nginx or Varnish to decides which back end instances to use based on the directory structure. Then you could use ELB to balance between these. 

You're using a Virtuozzo instance, which isn't really a VPS but a container, basically a kernel enforced chroot. From what I've seen from my dealing with it, its OOM manager is very dodgy. Because of the way it works, another container on the same hardware node could be hogging memory, but because your processes started after the processes causing the issue, your processes get killed. Unfortunately you can only see what the OOM is upto on the host server, so you'll have to check this with your provider. Most likely they've oversold the memory on the server you're on a bit more than they should. To quote the Linux Memory Manager page: 

You can point the domain's A record at your VPS. This can probably be done from 1&1's control panel. Otherwise it's either have the frame redirect masking your ip, or having the ip shown in the address bar when using a HTTP Redirect. 

Have a look at WinEXE. I'm not sure if it will compile correctly on an N900, but it will allow you to run command to run "process -k whatever" remotely. 

My own personal preference would be ipsec or Openvpn VPNs, but this might be overkill. OpenVPN tends to be easier to deploy, and works on every version of Windows that I've ever tried. 

Replace with the external ip of your server. You might also look up DKIM records, but I'm not familiar enough with GoogleMail to be able to see if they're support there or not. 

Have a look at mod_status and in particular the extended status. It should be easy enough to match the PID given in the server-status page to the output of top and ps. 

That means you have no A record for just mydomain.eu. *.mydomian.eu won't match just mydomain.eu. You need something like: 

I'm unaware of any proxy software for RDP, but what should be possible is to setup a VPN (PPTP, IPSEC etc) to one of the remote servers and NAT the connection behind the server's ip address. This will make the connection appear to come from the server's ip and it should be a lot easier to keep the VPN up to date. If one of the remote servers runs a favor of Linux/BSD with OpenSSH, you could also use Putty to tunnel. In Putty, before connecting go to "Connection -> SSH -> Tunnels". Under the "Add new forwarded port" section, but the source port as 66389, and the destination as $rdpip:3389 and hit "Add". Then open the connection as normal. Then tell remote desktop to connect to localhost:63389 and it use the tunnel and will appear to come from the ssh server's ip address. 

The first warning is probably the answer. You have NameVirtualHost defined as *:80, however by the looks of things you have or similar rather than on the bit of config defining each virtual host. 

Why don't you try downloading a couple of Linux Distro isos? They're usually mirrored in various places with high speed links. For example $URL$ or $URL$ ?? 

This will force all email to be sent through localhost or a local relay, and only the mail user and root user will be able to send mail outbound. This presumes you are running Linux, and that the ipt_owner module is avilable. Also, there is the mail header patch for php here which will put the name of the script sending the mail in the headers. As far as I'm concerned it should be part of the core PHP, but unfortunately, it's not. 

The variable will only be read on start-up, so it will stay going to the same CDN until Apache restarts. You could look at some form of round-robin DNS, but that would require setting up a local DNS server. 

I'm not 100% sure, if the last one is needed, but that should get rid of the warning and make sure that only you can read the contents. 

You need to lookup SPF records as these allow you to specify what hosts are allowed to send mail on your behalf. In this case you need something like the following added as a TXT record on your domain: 

is specific to RIPE so not supported in the generic client. Fortunately the whois protocol is exceptionally simple. This means you can telnet to port 43 on whois.ripe.net and type in the following: 

Looking at the output of . The default should be 32768. The safest way of changing it is to edit to whatever value you want, and then run to make it active. This way it will survive reboots. However, you're probably going to run into limits in CPU, RAM and Disk IO long before you hit the max number of processes. Without knowing what your app does, the best bet is to simply test and benchmark your app limiting it to differing amounts of forks. 

You don't mention OS, however: Linux: You should be able to get at least the Product Name and Serial from the output of Windows: Run the following on the command line: . You can also run to get the information remotely. 

What do you mean by fake? Non-existent server or a public secondary in front of a hidden master? I can't see any issues with having it as a public secondary. However if it's straight out non-existent, there's plenty of CCTLDs that check the SOA and NS records before letting you change the NS servers, and their systems probably will throw a hissy fit. 

ICMP is a lot more central to IPv6 than it was to IPv4, and the above is what I have on my local ip6tables script. 

Every well run shared hosting shop will have their servers with names like serverXX.hostingcompany.com with the PTR records matching. Blocking based on the whether the PTR record domain matches the email's From: domain would affect a massive amount of legitimate mail. You'd be better off making sure that: 

Is /usr/local/apache2/bin/ in your $PATH? Run on the command line to see. If not, when in /usr/local/apache2/bin/ did you type in or ? If you left out the then the shell is going to search in the various directories mentioned your PATH, and not find apachectl. If you have the before the executable, it will run it from the directory you're in.