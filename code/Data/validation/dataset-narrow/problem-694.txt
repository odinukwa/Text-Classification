The "WHERE p.idpost IS NULL" is removed. Now when I access a child's votes like this : , the size will be 0 or 1. That this method actually gives me the already filtered data even with . My guess is that since I already loaded the data JPA doesn't go ahead and reload it with the data I don't want. I ain't sure about this because of something I'll tell later. So yeah after querying all the result I just deleted all the Post which are replies from the list : 

The weird thing is that if now I access a "child" of a post it will have only the votes by the current user: will be either 0 or 1. The thing that I don't understand is that if I load the data in two separates query it doesn't work anymore. Like this : 

To learn some PowerShell I made a tool, I've made before in bash. It pings the subnet for arp values and checks if there is no weird behaviour. 

Tests The description is a rather simple one, when pipes are leaking then things become interesting. So here are a few Testcases if you want to have a go with this. 

I wonder if I use the correct syntax in bash? Further I think my scanning function is not all that good, I bet there are more pretty ways to check. Lastly maybe checking wifi's near me with instead of iwlist scanning would be a better way of handling this? 

This could be done in one loop, by tracking if any of the current visited vertex in the dfs, are in either the last or first (row or collumn) Alternative code 

Putting in s everywhere makes your code look somewhat cluttered. Instead, use Python's support for raw strings, in the form . Note the prefix before the double quotes. That's what designates the string as a raw string. In raw strings, each character is stored WYSIWYG, which means that linebreaks in the string are preserved. Avoid the burden on the user of the script for choosing the correct clear-screen command. It is possible to detect the OS in Python via: 

And why restrict yourself to arrays of ints? With generics, you could have the following modifications and make this rotation routine work with all types of arrays of objects (note that is not an object, it is a primitive type, you'll need to use , which is the object-oriented wrapper type for , instead of . Same goes for and other primitive types, you'll need to use arrays of their wrapper types, look this up). 

Basically there is an input field on the website. When user types an URL in the input field, an ajax request is made and the method above is called with the URL the user typed (He could change 10 times the URL which means it will go 10 times through that method). When I've the data as base 64 I send it back to the browser of the user which displays the image. Then the user can crop the image as he pleases and when he is done he presses OK. Afterward I crop the image on server side with the (that I already have because of the previous ajax req) and save the file. I would have done the process of converting an URL to base 64 on client side if I could but after some tries it seems like it is impossible because of cross-origin issues. Whole code works though. 

Are my use of OK? I feel how I use Regex to parse the password from each site is bad, can this be avoided somehow? Any other styling/issues? 

Should add a second white line between imports and your functions Line too long, at your statement Continuation line under-indented for visual indent style formatting is recommended against 

Be sure to check out PEP8. There are some nifty tools which will alow you to check your code for PEP8 violations. For instance, PEP8online Return when search not succeeded instead of Add a and a overload 

Note that using wilcards would be considered bad form in a regex You might want to change that to suit your needs. 

This would change the logic a bit, now the list will be empty if all men_proposed to all woman, but since empty lists are considered falsey in python you could check like this: 

I made it work a better way. I think I know why it works but I'm not sure though. And it turns out it actually easy. So what I wanted is to keep the Tree structure I had when I was querying like this: 

Here all the post are the "parent" posts and the children post are get with the method . Since JPA would requery those, they wouldn't have the Filter on I put in the left join assossiation in the query. So I thought I had to query all the results with the correct and remake the three with the parent id and the method. It turns out I don't have to. In other words : When I query like this on the list I get from the query, I have only the vote by the current user ie: will be 0 or 1 (he voted or didn't). But this : will be >= 0. Because the children are requeried. So to fix that I query all the data with the correct votes like this: 

Looks \$O(N)\$ to me, making your total time complexity \$O(Nm)\$ worst case. The other guy has 2 separate loops, one \$O(m)\$ the next \$O(n)\$, for a total time complexity of \$O(m+n)\$ or \$O(max(n,m))\$. Take home message: Ditch the \$O(N)\$ array initializer, it's not worth it. Use 2 separate passes, like the other guy did. 

(This is in fact what I translated into Java, having coded this much earlier for a personal project). This is not as memory-efficient as @coderodde's iterator version, but it is algorithmically simpler and easier to understand, I hope. I put in a few tests in so that you can check that this code does the same thing as yours. Note that here you can replace the and with and to get an even more general version of the code which can find the Cartesian product of any collection of s. Here, you should also swap 

You should remove the from the second loop, this will save some time. You only have to compile once per word in the wordlist Regex is really slow, you could use the keyword instead however there are some tricks/risks involved with this approach 

BUT I think if you put this conditional before your block, this would be one loop, because after this conditional you kinda repeat yourself alot. 

Why all these temp variables? They are never used, and since the original list is not altered. It makes no sense to use a temp variable. Just call 

Make it work for both and . use a body. Added a dictionary to map the (no more need for an block) According to the python style guide, functions and variables should be 

Style You have inconsistent indentation and spacing. If you are using some very simple text editor like Notepad for writing your programs, you might one check out editors with auto-formatting of code, or use an IDE. Also, you don't have proper whitespace surrounding binary operators. Finally, your variable names are somewhat nondescriptive, but in this case it would have been OK if you had properly documented your methods. 

All in all, functional programming is about composing functions together to write programs; immutability and stuff is good to have but it isn't primary. You have some repetition, as in the check - see if you can get rid of it (Hint - you might want a function which can iterate over the values of the enum and check if any of them have won). Also, this