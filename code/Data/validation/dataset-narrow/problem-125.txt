A host will first determine if the destination IP address is on the same network. If not, it will send the IP packet to its configured gateway. A switch doesn't decide this, and, to a switch, a router is just another host. The MAC address to which a frame is delivered is determined by the host before the host encapsulates the packet in a frame. 

NAT really has nothing to do with routing or bridging. NAT is simply translating either the source, destination, or both layer-3 addresses in layer-3 packets, which are never seen by a layer-2 bridge. Remember, bridging is on the same network, routing is between networks, and NAT is translating addresses to other addresses. 

Layer-2 switches are oblivious to anything above layer-2. Layer-2 protocol carry a variety of layer-3 protocols (IPX, IPv4, IPv6, AppleTalk, etc.). The layer-2 switch knows nothing about this; it only sees the layer-2 frame header. The layer-3 protocol can carry a variety of layer-4 protocols (TCP, UDP, etc.). The layer-2 switch would need to strip the layer-2 header to look in the layer-3 packet to see which layer-3 protocol the layer-2 frame is carrying, and it doesn't do that. Routers (layer-3 devices, including layer-3 switches) will strip the layer-2 frame to reveal the layer-3 packet. A router will then switch the layer-3 packet, based on the layer-3 header to a new interface, and create a new layer-2 frame for the new interface. A layer-3 switch is really a layer-2 switch, but with a router built in. The routing part of a layer-3 switch only gets involved when a frame is destined to a layer-3 interface in the switch. Edit to answer your comment: An application will send data to UDP, which encapsulates the data into layer-4 datagrams, including a UDP header, which are then sent to IP (either IPv4 or IPv6). IP encapsulates the UDP datagrams inside IP packets, including an IP header. IP sends the packets to ethernet, which encapsulates the IP packets inside ethernet frames, including an ethernet frame header. The ethernet frame header has the source and destination MAC addresses. Your host may not know the MAC address of the destination host. It will look in its ARP cache for the MAC address of the host with the destination IP address. If it is in the ARP cache, it uses that MAC address. If not, it will broadcast an ARP request, asking for the MAC address of the owner of the IP address. The destination host will reply with its MAC address, and the frame is built. The frame is then sent out the physical interface to the switch. The next part involves the switch. A switch will build a MAC address table with the MAC address and port. Every time a switch receives a frame on a port, it will update its table with the MAC address and which port that MAC address comes from. When the switch receives a frame from your host, it will look at the destination MAC address, and it will look that up in its MAC address table so that it can deliver the frame to the port where the destination MAC address is. If it can't find that MAC address in its table, it will flood the frame to all ports. When the destination host receives the frame, it will reverse the encapsulation process. As you can see, each layer is independent of the other layers, and the switch knows nothing about IP or UDP. The process is the same for a destination on a different network, except that your host will use the MAC address of its configured gateway (router, including the routing part of a layer-3 switch). The router will strip the frame, look at the packet, switch the packet to a different network interface, and build a new frame for the new interface. 

Each switch port is a separate collision domain. A switch is a bridge, and bridges separate collision domains, unlike hubs, where every hub port is in the same collision domain. A VLAN is a broadcast domain. If the whole switch is, or multiple, connected switches are, a single VLAN, then you have a single broadcast domain. Routers break up broadcast domains, and to get from one VLAN to another, you must pass through a router. 

You forgot to use the command. It is also a good idea to set a preempt delay. Hot Standby Router Protocol (HSRP): Frequently Asked Questions: 

Your home router needs a route to the route. It needs a route to know where to send traffic destined for that route, else it will send it out the default route (WAN). 

You are correct. Non-Area 0 areas cannot directly communicate; all inter-area traffic is through Area 0. An ABR is a router with one foot in in Area 0, and another foot in a different area. The one exception where you may have two non-Area 0 areas connected to each other involves a virtual link, but even then, the area not touching Area 0 must communicate using the virtual link to Area 0. This is not a recommended solution since traffic will not be direct between the two non-Area 0 areas, but it is available if there are no other options. It may also be used if you have a disconnected Area 0 to join the disconnected part of Area 0, but, again, this is not a recommended solution. 

Decreasing the query interval could needlessly increase the traffic on your LAN segment. IGMP is between a host and a router, not a switch. A switch can snoop on IGMP, but it doesn't do IGMP queries. 

Anything that fills your bandwidth, including torrents can cause latency and jitter, and interfere with your normal business operations. 

You should study the OSI Model. MAC addresses are layer-2 addresses in a frame, but frames are stripped off at a router. IP addresses are layer-3 addresses in the packet. Only packets will cross a router. Hosts and switches use MAC addresses in the frames to deliver frames to the correct host (including a gateway, which is just another host on layer-2) on a LAN. When a gateway (router) gets the frame from a host, it strips off the frame header to get to the packet, and it routes the packet based on the IP address. When the router sends the packet out the new interface, it will create a new frame encapsulation for the new link, using its own MAC address for the new frame. As a packet moves from router-to-router to its final destination, the only surviving source MAC address will be that of the final router. 

The ethernet UTP cabling standard defines that a single UTP cable (for a single connection) use four pairs (8 wires). If you have an 8-wire cable, you have a single UTP ethernet connection. Anything else is non-standard. 

This depends on a lot of factors. Deep packet inspection is for upper-layer protocols. Does the device do upper-layer protocols, any network protocols which a firewall may be used to block, or are are you just looking to block some codes that the serial connected device may send on what it expects as a serial connection? You may be trying to use a torque wrench to drive a nail. 

The Cisco documents provide a full explanation for the options, and examples of how to configure your router, depending on the ISP requirements. Be sure to read and understand the text. It explains what you need to do, and why you need to do it. Here is a very good Cisco document, and an example of one way to do this (your ISP may not do it this way): REMOTELY TRIGGERED BLACK HOLE FILTERING â€” DESTINATION BASED AND SOURCE BASED 

The routing table will only install the most preferred default route, and if the interface to that route goes down, then the other default route will automatically be installed in the routing table, and if the primary route comes back up, it will be installed in the routing table in the backup's place. If you use a routing protocol (eBGP, but that is unlikely, although not unheard of, with your router), you can also use AD to prefer one over the other, or there are other methods using the routing protocol. 

No. IPv4 addresses in the range are not regular addresses; they are multicast addresses. Multicast is normally confined to a single LAN. Multicast routing must be enabled on all the routers between the multicast source and the multicast group subscribers for it to be able to be routed to another LAN, and that simply isn't practical on the public Internet. There are several multicast ranges within the overall multicast address range (see IPv4 Multicast Address Space Registry), and is the Local Network Control Block of addresses. Multicast packets sent to addresses in this block are not to be routed (see RFC 5771, IANA Guidelines for IPv4 Multicast Address Assignments, Section 4, Local Network Control Block). 

A collision happens when two devices transmit at the same time, so, yes, a collision occurs, even if the two sending devices cannot detect the collision. It is, after all, CSMA/CA (for Collision Avoidance). The WAP will dtect the collision, and it will not send CTS to either requesting host. Both hosts will try again, later. 

If your router is a client to the VPN server, then you really don't need to worry about split tunneling, which concerns host configurations. You simply use routing to determine which interface is used for traffic passing through the router. You normally would have a default route to the public Internet, and a route to specific networks through the VPN tunnel. The packets will be routed based on the routing table in the router. The hosts on your network will be oblivious about whether or not the tunnel is up. All they know is to send packets, and the router takes care of routing them to the Internet default or VPN. What you may need to worry about is the networks to which the VPN leads may overlap your network addressing. You will need to take some ugly measures (e.g. readdress your network or NAT) in that case. 

There is always a risk when adding something to a device or stack that the device or stack will reboot, but adding an unpowered switch to the stack, then powering it up, should not cause the stack to reboot. 

I'm not sure what you mean by this question. You can do what you want with your existing equipment, and there are many other options to do this, but product or resource recommendations are explicitly off-topic here. 

PIM is a router-to-router protocol. I think what you are missing is IGMP. The clients wanting to receive traffic from a multicast groups will use IGMP to inform the router that they wish to receive the traffic: 

All the NICs actually support half-duplex since autonegotiation is a requirement for 1000BASE-T; you just can't manually configure it. As far as I know, there are no hubs for 1000BASE-T, which is where half-duplex would be used. There was a strong movement not to include half-duplex in the 1000BASE-T standard, but it was left in to support hubs. However, half-duplex was left out of the 10GBASE-T standard. 

You didn't detail what you have tried, but from what I find in the manual, 3Com SuperStackÂ® 4 Switch 5500G-EI Family Configuration Guide, Chapter 8, ACL Configuration, page 205, inbound is the only ACL option: packet-filter inbound ip-group acl_number [ rule rule [ link-group acl_number rule rule ] ] | link-group acl_number [ rule rule ] } 

This leads to some confusion. Certainly, if a host is configured to forward IPv4 packets to other hosts on other networks, including VMs on an internal, virtual network, it should decrement the TTL, but that doesn't always seem to happen in real life. For IPv6, the wording is more specific, telling you that a node that forwards a packet must decrement the Hop Limit field. Instead of a TTL field, IPv6 uses a Hop Limit field. The IPv6 Hop Limit field is really the same thing as the IPv4 TTL field. RFC 2460, Internet Protocol, Version 6 (IPv6) Specification: 

A VLAN (Virtual LAN) is an implementation of a layer-2 broadcast domain. Originally, bridges, including switches, had all the interfaces in the same LAN, and broadcasts would be sent to all interfaces (except the originating interface). VLANs were created in order to be able to segment different bridge interfaces into different LANs, breaking up the network into multiple broadcast domains. This reduces broadcast traffic on each LAN. It also provides the ability to easily place restrictions (security) on traffic allowed between the VLANs. On a layer-2 LAN, frames are delivered directly from one host to another host. In order for traffic from one layer-2 LAN to reach another layer-2 LAN, you need a layer-3 device, e.g. a router. Routers route packets between networks (LANs). Routers strip off the frames from the packets, and this means that you cannot broadcast between LANs. On a layer-3 network, you also need a router to get to a different layer-3 network. Trying to run multiple layer-3 networks on the same LAN is problematic because routers should run split horizon, meaning a router will not route from an interface back out to the same interface. With VLANs, you can set up logical router interfaces on the same physical router interface to get around this. There are some corner cases where you may want multiple layer-3 networks on the same LAN, but you really need to understand what you are doing before attempting this, and you should not expect hosts in one network to be able to communicate with hosts on a different network on the same LAN. This is why you will almost always see each layer-2 LAN (VLAN) with a different layer-3 network. 

The current best practice is to only connect the access switches to the distribution switches, not to each other. You should then have a VLAN only on the distribution switch and one access switch. An access switch can have multiple VLANs, but those VLAN should not be on any other access switch. You restrict this on the trunk links. This helps to prevent STP problems. 

You are creating a default route on Router 2, but you are not originating it in OSPF, so it doesn't get sent to Router 1. You can originate it on Router 2, set a default route on Router 1, or, better yet, originate it on the firewall so that it gets into OSPF from there (you can then eliminate it on Router 2). Originating it in Router 2 could be problematic because your firewall is now participating in OSPF. Since Router 1 doesn't have a default route (either specifically configured, or from a routing protocol), it has no route to anything on the Internet, so the router will drop traffic to routes it doesn't have in its routing table. FYI: You seem to want all your interfaces on each router to participate in OSPF. You can do this with a single network statement: