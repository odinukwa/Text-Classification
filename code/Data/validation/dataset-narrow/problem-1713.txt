d) Then I try and access the stream from my laptop's browser by placing the text in the browser, when I get the same errors as listed above from the running incrementing script (in the run-ssh-window). e) following the error, the script continues to increment (in the run-ssh-window), so in the command-ssh-window i which gives: 

These ips aren't either of my pis on the network, so i'm guessing they'e my Laptop. The bit i'm interested in is the "crash","down and "pts/o". Could someone please explain what these are? 

Iv'e just managed to get a WIFI re connect script working and have been testing it by pulling the power on my router and re connecting it; sO far so good. It all seems to reconnect, but when I try and access the Apache server from my mobile phone, I get server not found! It works from within my WIFI, but not from the net. I haven't changed anything on my router, apart from rebooting it a few times I found this article on the net and wondered if it's not the script but noip's DUC (dynamic update client) not working. I don't seem to be able to log in to noip.com either! If NoIP is compromised/blocked by Microsoft, will things go back to normal, or do I have to search for an alternative free Dynamic update client. Any ideas? I don't think it's the script, as I can get access if I find out my external IP address, but hear it is anyway, just in case anyone can spot a reason why this may have upset my Apache server. 

I needed to make the file "motion.conf" user, owner and group to "motion" then it let me control it using the web interface. 

I pulled the power, connected it to a keyboard and tv, then did a 'shutdown -rF now' and 'rpi-update' and now have it connecting via ssh 

I found the reason why it wasn't working, I needed to set the permissions on the PI_pictures folder to 0777! for other users! 

I'm trying to understand how this Python script works, but am struggling with 1 to 3 below, so if someone could explain these I'd appreciate it. 1) 'ping -c 2 -w 1 -q 192.168.1.1 |grep "1 received" > /dev/null 2> /dev/null' Iv'e tried this at terminal, but it didn't work, how can I test it outside of this script? 2) 'logger "WLAN Down, Pi is forcing a reboot"' Where does this message get logged; Iv'e looked in syslog and messages, but cannot see the text inside the double quotes. 3) 'sudo /sbin/ifdown wlan0 && sleep 10 && sudo /sbin/ifup --force wlan0' 

3) The current network setup worked prefectly with this adapter but I think I need to find the correct driver to install for the current adapter. 4) I've found this, but it only lists drivers up to Linux version 3.12.26 and I'm on 3.12.28. Can someone please point me in the correct direction for the correct driver and how to install it? 

Oh dear! I didn't read the comments, the first comment suggested i chainge the type of quotation marks, and bingo it worked, Sorry! This worked: 

I seem to have got it working by placing in the start section of and commenting out see the below code: 

My Headless PI has been running for months without any problems, but in the last few days I've run into problems SSH'ing to it, and thus have had to pull the power. 

Which, to me, suggested that I needed to flush the first two values i'd loaded! Following this example, I could see that following a popleft I got 0 then 10 then 1a, so it dawned on me that I was preloading the dque with 2 integers not numpy arrays. so I modified my script to flush out the 2 pre loaded integers and it worked: 

I have Motion installed on one PI and wondered if it was possible to easy duplicate the install process, with dependencies, on a another pi without either: 1) Installing and configuring it again 2) Removing the SD card and making a backup of the image, then duplicating the image to the second PI I remember it was difficult to get it working with the NOIR PI-cam, and I cannot remember exactly what I did to get it to work. 

Thanks Bex for your help :) I think it's working now by changing the uid and gid to motion in the fstab davfs mount command. I used this page for reference. I also noticed that the mounted directory had 0777 permissions with user pi, then I modified the fstab file then did a reboot; to test the re mount. Following the reboot the permissions changed to 0755 with user motion ; this may explain how the permissions could change, as you suspected. I'm happy, thanks again, Reggie :) P.S. I didn't change the rw to rwx after looking at the above link, i didn't think it was valid. 

Iv'e tested this script on my pi, by running it every min, but cannot see any messages in the logs from the script. I can however see it being called by the cron. 

I have a python script to send me an email when i detect motion from my noir Pi camera, which is been successfully called. I know the script is being called, as i get the email on movement; but the script doesn't copy the jpgs from to Have i got the syntax correct at the bottom of this script? 

I have a streaming server / motion detection script that works on my laptop, but when I move it to my PI it gives the following error when i try and access the stream: 

and the resultant jpg output of an integer of value 10: I'm assuming eclipse doesn't complain when you ask it to convert the number 10 to a jpg, but the PI does! 

1) Could someone please explain what the above command does? 2) Why might I get this error? 3) Does the folder structure matter? When I downloaded the source files from github, it was in the format userland-master/userland-master/then_all_the_files so I took all_the_files and placed them in the /opt/vc/ folder. 

where I cannot see two processes trying to access the port 1991 on 192.168.1.61. Am I doing anything incorrectly? I'm still confused what could be happening with the "address already in use" error listed above. Another edit resulting from comments I start the socket using the command: which calls the CamHandler class to deal with constructing the stream. the CamHandler class looks like this: 

I've recently moved my headless PI to a hard to get at location, and now am having problems with my WIFI connection dropping out. I'd previously installed a script to reconnect the WIFI if it didn't see an IP address present, and all was dandy; but since moving it's resulted patchy reception. 1) Does this script actually work if iv'e hard coded the IP address to be static, not to use DCHP? 2) It only reconnects if I pull the power and reboot, why could this be? network interfaces file: 

When testing in sonic Pi I could hear the same (loud) hiss in the gaps between beeps -- I suspect you're only not hearing it during the samples because it's drowned out by the sample. Like you the volume and mute buttons didn't do anything. My tests were with some awful earphones in the onboard audio port. The fact that the hiss was louder with playing software suggests 2 sources. I don't know the topology but I would guess the DAC and the amp, with the amp always powered. As I'm into playing with the hardware, and have made some simple audio hardware years ago, I'd consider a hardware mute circuit controlled by a GPIO pin. Off the top of my head I'm thinking something like a 1K resistor to ground switched by a small FET (all per channel, but you could run them off the same GPIO pin). This is likely to be better than breaking the circuit using a transistor, as you may get a switch-off pop and increase pickup at the next stage (I assume amplified speakers). Of course this wouldn't help much if you have silences within your audio clips. It sounds like white noise (near enough) so you wouldn't be able to filter it (unlike mains hum), and I suspect it's loud enough that ramping up the output volume so you can turn down your amp/speakers wouldn't be enough. 

is probably your problem. I suspect you mean . If you're testing in the evening you'd never trigger the nightlight setting with your conditional. 

Maybe. Pin 1 of the header (on all models I believe, but do check yours) provides 3.3V. It doesn't give much current (it's rated to 50mA but more may be available in practice, according to people who have looked at the components. I have successfully run two different micro water pumps (RS M100, RS M400 off this line (via a gertboard) for several days on end (while using HDMI and USB keyboard/mouse). I'm probably pushing it too hard but I haven't noticed the regulator getting warm or any misbehaviour. NB: I'm using a Pi 2, which has a switching regulator circuit; some earlier models used a linear regulator chip which would get hot under load. The limit for the 3V3 supply is no longer as clear as it was, but is likely to be higher. (official forums) As regards back EMF -- if you have another pump in the circuit it's probably a bad idea with the M100 pump I've linked. The M400 is brushless with its own control electronics - so won't act as a dynamo in the same way. I would assume that when we prime the pump by pulling water through, we spin the motor; this has't caused any problem with either pump. For longer term use I intend to put a TO220 (through-hole) LD1117 voltage regulator on a piece of stripboard, run off the Pi's 5V supply (2A in my case) and run the pump off that. If you want to switch it, use something designed for the job such as the open collector relay drivers used on the Gertboard (ULN2803A). 

We get accuracy of better than a second on several units using a public NTP server the other side of a complex and busy network. We also only need accuracy of the order of 1s (which the system clock can maintain for days while powered up). Check out the ntpd man page, but after configuring a server, making sure that runs on boot should be all you need. The gets you back to real time if the clock is way out, such as after loss of power. 

Yes. As an EE you'll know more about the hardware side than I do, but I could design the hardware if it was my project. For protoyping if you're using DC motors I suggest you look at the Gertboard: here's a directory of links to the schematics, manual etc. For the final project I suggest you use the motor driver IC off the Gertboard (or a similar one in through-hole if it's easier), combined with GPIO pins for the limit switches (perhaps using the buffer/driver IC). Note that you may need to add a real-time clock/have network access if you want to operate at specific times of the day. This wouldn't be required if just a 4-hour pause is needed. Alternatively you could use a light sensor and solar time in this sort of application. Software-wise, python is easy to learn (that's the point). Like you, I knew VB when I started to learn Python, and I learnt it for a specfic project. There are python examples for all the IO you'd need on this project in the Gertboard manual or online at raspi.tv. Alternatively there are C examples if you know C and would rather not learn python. 

Without using encryption, you can't. Permissions can be used to make access difficult on that machine if the user doesn't need root and you're selliing either the hardware or an SD card image. I'd just put the SD card in another linux machine, do and access it all. If you start encrypting, you have to worry about where to store the keys, but unless the content is incredibly valuable (in which case you shouldn't be shipping it) a fairly crude encryption scheme will probably stop most users. 

There certainly are products using the graphics output. Here's a 7" screen at £31 that runs off 12V. This model is VGA but the with extra cost of an HDMI-VGA converter it still comes in cheaper than the HDMI version. Here's a 5" HDMI monitor with touchscreen (over USB) at £26. I'm thinking about getting a couple of these for my lab but haven't yet, so haven't tested. I assume that on this sort of thing you'll get $1=£1 or near enough, which would put both of these in your budget. A search term that seems to work on eBay or Amazon is "mini monitor" (with or without "HDMI"). 

I'm designing a system that will power a 2B using an OKI-78SR-5/1.5. It's a switching regulator, pin-for-pin compatible with the classic 7805 linear regulator. I'll be using a 15V PSU (for a motor) and once connected it will stay connected. So after some fairly basic testing I'm just planning on being careful to connect it the right way round. This only does 1.5A, but do you really need more than that on the Pi PCB? If you've got further significant 5V power requirements I'd be very tempted to run them separately -- I've crashed a Pi a few times by connecting a not-very-big capacitor to the 5V line using the official 2A PSU, so inrush currents are something to be wary of. They happen fast enough that no reasonable fuse could blow/trip fast enough to prevent a dip in voltage for a big enough surge load so are hard to protect against. Even though I'm guilty of it, I don't recommend plugging anything in while powered up. I'm not sure what current the PCB traces and headers are rated for, but for large 5V loads you may reach the limit. So there are two reasons to separate the 5V supplies to the Pi and other hardware, even if it's not a situation where isolation is required. One decent 5V supply could even feed both the Pi and the accessories, but I'd run independent cables back to the power supply with capacitors at the power supply output and the Pi input.