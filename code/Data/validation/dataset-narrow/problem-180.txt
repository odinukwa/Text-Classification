For you to be able to run the traffic through your software, you need to run the traffic through the device on which you have your software installed. You probably could use SPAN on the switch to which your WAP is connected to copy the traffic to a device on which you have installed your software. 

Copper cable splices are not allowed. Cabling standards are set by ANSI/TIA/EIA 568 Commercial Building Telecommunications Cabling Standard. For instance, this is for copper cabling: 

A better solution may be to use ISSU for your switch stack. FHRPs are slow to converge, and they are a security weakness on your LAN. 

Routers route between networks, so each router interface, physical or virtual, must be in a different network. If you are connecting each switch to a different router interface, then you can use the same VLAN numbers, but they are not the same VLANs, and they cannot use the same networks. VLANs are layer-2 broadcast domains, and they are bounded by a layer-3 device, e.g. router. Your VLANs cannot extend across a router. To have the same VLANs on both switches requires that the switches be connected together, and that you trunk between the switches. How, for instance, would the router decide which of multiple interface with the same network to send a packet destined for that network? A router's routing table tells it which interface to use for traffic destined to a particular network. 

The MAC address table of the switch will only allow a single MAC address on a single port so that it knows, in a deterministic manner, to which port it should send traffic with that destination address. MAC address spoofing is an attack which will cause disruption by bouncing the MAC address table among two or more ports. This aspect of port security prevents that from happening. Port security can be used without specifying exact MAC addresses. A port can dynamically learn a MAC address, and keep it on that port for a specified time period. Cisco has documents which explain port security in detail, e.g. Chapter: Port Security: 

The OSI model is ISO/IEC 7498-1:1994. It was last updated in 1994, and it had corrections applied in 1996. The seven-layer model itself has not really changed since it was first described, but the document containing it is in its second edition. 

It sounds like you need to create your own protocol. A layer-2 protocol, e.g. ethernet, has a frame that is fixed and not expandable to add information. Trying to change the frame will cause the FCS to be incorrect, which will cause the entire frame and payload to be dropped as damaged. If the frame is already at its maximum size, then it would be dropped as a giant if you make it any bigger. Also, the layer-2 frame headers are stripped from the layer-3 packet by a router, so the frames never cross the Internet. Layer-3 packets also have limitations. You can wrap a packet inside another packet (tunnel), but then you may exceed the MTU. The layer-3 packet header will be in the format of the layer-3 protocol, and changing it by adding information will have consequences. You can easily create a tunnel (this is done all the time for different reasons), but packets are routed based on the packet header, which include a length for the payload. If you change the packet payload to add information, then you must change the packet header, and in the case of IPv4, that will require recomputing the CRC in the Header Checksum field. There are many things to take into account for what you are trying to do, and this would be a custom protocol, which would be off-topic here. Also, it would involve programming, which is off-topic here. 

RFC 4291, IP Version 6 Addressing Architecture, Section 2.7. Multicast Addresses defines some of these: 

If these are separate customers, and you do not want them to be able to get to each others' networks, you will need to create ACLs to block that. For instance, if your LAN interface has an IP address of , you could have an ACL that only allows a customer's traffic to get to that network: 

This will immediately drop any TCP traffic coming into the router from destined to , preventing the router from having to route that traffic. It will allow ICMP echos and other TCP traffic to , but it will deny all other traffic (ACLs have an implicit as the last statement. You should probably change the ACL so that it will permit all other traffic, unless you really only want to allow hosts on that VLAN to ping and use all other TCP only with . The hosts on that VLAN will not be able to get to any other VLAN, except with ping. 

The destination gets the layer-2 (e.g. MAC), layer-3 (e.g. IP), and layer-4 (e.g. TCP) addresses from the source when something is sent from one to the other. Other information, e.g. serial number, has nothing to do with the network, is OS specific (off-topic), and it would need to be handled by a protocol above OSI layer-4 (off-topic). The frame sent from one to the other has both the source and destination MAC addresses (assuming it is a layer-2 protocol that uses MAC addresses, e.g. ethernet) in the frame header. This only works if both the source and destination are on the same layer-2 LAN. An IP packet in that frame will have both the source and destination IP addresses in the packet header. A TCP segment or UDP datagram will contain both the source and destination addresses (ports) in its header. The addressing will be part of what is sent, but other information, e.g. the serial number, will be OS specific (off-topic) and require an application (off-topic) or protocols above OSI layer-4 (off-topic). 

A server can have as many clients connect to a single port (TCP or UDP) as the server (hardware and software) can handle. A client could have a limit on the number of servers to which it can connect because there are only so many ports available for outbound connections, but it would probably run into hardware/software limitations before it runs into port number limitations. 

A Cisco ISR router like the 1841 excludes the router's address on the subnet for which DHCP is configured if the router is performing DHCP. If you have two routers and an FHRP on the subnet, you need to be more careful. 

In twisted pair cables, different pairs have a different number of twists per inch. This helps to prevent signals on one pair from being induced on another pair. The more a pair is twisted, the longer the wires in the pair need to be for a given cable length. The different twist rates will cause different lengths between the pairs. The longer the cable, the more there is a difference in the lengths of the pairs. 

You either need to run a routing protocol between the two routers so that they can share routes, or you need to put static routes on each router pointing to the other router for routes on the other router. Static routes don't scale. Using a routing protocol can automatically share routes. You will probably learn RIP first. Something like this on each router: 

You don't have enough power. If you have replaced the SFPs and patch cords, you need to try different horizontal fibers. You may have bad fiber terminations on the fiber patch panel. I would get a cable vendor in there to run some tests on the fiber and correct any problem found. They will have the proper test equipment. Always start troubleshooting at layer-1. 

This is a 16-bit boundary. A byte is 8 bits, a word is 16 bits, a double-word is 32 bits, and a quad-word is 64 bits. Edit: Network protocols must be processor and OS independent. You could not have a definition of word which varies on each side of a network conversation. How would a 16-bit PC deal with IP packets from a 32-bit PC if the 16-bit PC is expecting 16-bit words, but the 32-bit PC is aligning on 32-bit words? The whole Internet would be broken. 

The public Internet is decentralized. It is simply the ISPs connecting to each other in whatever way each decides and negotiates with its peers. ISPs decide to which other ISPs they want to connect, and they negotiate the connections. Some ISPs will offer services that let other ISPs connect to each other, and there are some inter-connection points where a bunch of ISPs will connect to each other, but there is no central authority dictating how ISPs connect to other ISPs. There are some generally accepted practices that ISPs use. For example, the routing protocol of the Internet is BGP. That doesn't mean that an ISP cannot reach an agreement with another ISP to use a different routing protocol between the two, but in general, ISPs need to use BGP with other ISPs, which is by general ISP consensus. 

You have BT sending the route to Sprint with the community so that the Sprint router will not advertise it. BT needs to filter the prefix to Sprint. Something like: 

You need to peer with your ISP, or you need to create a tunnel to the network with which you want to peer. ASes (Autonomous Systems) are, by definition, autonomous, so you will have no control over what the other AS will or will not send to you. All you can do is advertise some or all of your prefixes to the other AS, and use any of the prefixes the other AS advertises to you. 

Any tests that are out of specification will fail the test, and the condition must be corrected and the test suite performed again until the cable passes or is replaced. You can also permanently damage a cable by exceeding the pulling tension or minimum bend radius when installing the cable run. 

Ethernet is not controlled by the IETF RFCs, it is from the IEEE 802.3 committee. Many devices do ignore ethernet flow control; it is poorly supported, and it is not required. Even among network devices which do support it, you must often enable it. 

You problem seems to be related to the iBGP rule that iBGP routers will not advertise a route learned from another iBGP speaker. The problem is that iBGP will not change the AS_PATH, and this creates the problem of routing loops. To avoid routing loops, iBGP speaker will not advertise to any other iBGP speakers prefixes learned through iBGP. That is why iBGP requires a full-mesh (every iBGP speaker must have a connection to every other iBGP speaker) or a mitigation such as route reflectors or confederations. If you are trying to advertise, through the tunnel, prefixes learned from another iBGP speaker, that will not work. You need to either use eBGP through the tunnel, or set up the routers at the tunnel ends as route reflectors or separate confederations. The route reflectors must have a connection to every router for which it is a route reflector, or confederations must have a full-mesh of iBGP speakers. The methods used to modify routing for eBGP, such as AS_PATH prepending or changing the metric (MED), are for eBGP, not iBGP. 

An extended ACL has both the source and destination addresses. It should be placed inbound on the source interface where the source address is. This prevents the denied traffic from being routed at all. A standard ACL doesn't have the destination address, only the source address. It should be placed outbound on the interface where the destination address is. This means the traffic will be routed, but it prevents the ACL from affecting too much traffic.