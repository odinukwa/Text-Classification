You can remove the log_write from the ACL once you know it is working. For this to work you need to ensure that you aren't using TURN or ETRN to receive mail back on the connection you used to send the message for spam filtering. If you want to try modifying your conditions you may want to look at the match_ip operator instead of in_list. To filter out messages routing within the same domain try a router condition like: 

Looking at the project site it is still immature. It hasn't had a 1.0 release. While I don't have anything against software which hasn't had a 1.0 release, in this case I would skip it. There are a number of programs I use that haven't had a 1.0 release. Many of these are very good, and in my mind rate a 1.0 release. Given the choice for core services (such as a web server, email server, and other public services), I evaluate a number of factors: 

Any of the better routers that will run DD-WRT, OpenWRT or similar firmware should be able handle this. I have seen reports that some of the newer routers are distributed with DD-WRT. Any small computer that can run Linux with two or three good ethernet interfaces (buy and add good cards if needed). I would run Shorerwall as the firewall on either. The OpenWRT solution would require Shorewall-lite with a separate system to compile the firewall rules. You should be considering setting up a DMZ for the Internet accessible servers. 

These are a couple of other options to use the command to run the file. Java uses the CLASSPATH to find classes and other resources. The classpath can contain jars and directories. Java will search the classpath for resources. Define an environment variable containing the path(s) you want searched. The path seperator is ; on Windows and : on most other systems. This will work for classes on the command line, but not jars. If you read the of you can write a short class which invokes the main class. Alternatively, just invoke the main class directly as specifed in the manifest instead of (as specified below). You may already have a classpath defined. Try to see if it is. Try 

If you disabled SSL_3 by removing ciphers, you have likely also disabled TLS1 and TSL1_1. This leaves TLS1_2 which is not yet supported by all applications. As I documented in my post on Disabling SSLv3 to block Poodle, you can block SSL3 in Apache with the configuration line. 

Use the command to see how your names are being resolved. This should help identify where the issue is. When changing you nameservers you need to update the records at your Domain registrar to point to the new nameservers. The DNS lookups generally are done like this (using www.example.com with ns1.example.com as name server for example.com): 

If your processes are leaking memory, you can use to limit the amount of memory a server can contain. This will prevent servers from growing too large. The same effect can be achieved on a temporary basis using the command. It may be best to use to discover an appropriate size, and then set those values in the file. If your server supports it, drop a file into rather than editing . 

If your software follows the RFCs no delay is required. You should be able to send multiple emails in the same connection without delays. If your software just sends messages and relies on delays rather than following the RFCs, there is no correct answer. EDIT: If you read the RFCs you will see mail is sent using a conversational protocol. If your software follows that protocol, there is no need to insert delays between messages. Some software just uses delays where it should be following the conversation. Software that does that is very fragile and may break if the other end does not respond within a reasonable time. Adding delays between messages when you send a bunch may or may not be a good thing. Delays give the server time to process the last message before a new message arrives. Not having a delay increases the chance that multiple messages can be sent upstream with one connection. Unless you overload your mail server I would opt for no delay. 

Yes this is expected behaviour. It would appear you had 5 copies of ab running at the same time. This resulted in your 150 PHP processes to handle the 30 requests for each of your 5 ab processes. Apache works best when all its threads can run in memory. There will be a load at which the threads will need to be swapped to disk. Response time will degrade rapidly when this occurs. Killing processes as you did will improve performance. Server performance may become poor in this case. If the maximum threads are configured too high it is relatively easy to perform a DOS (Denial Of Service) using this behavior. Another reason you can end up with problems is if two processes deadlock on two resources. If the other processes need either of these resources, they may fail to respond. Apache will limit the number of processes created in this case. Killing either of the deadlocked processes should clear the problem. Depending on the normal locking order it may require a specific process to be killed to prevent another deadlock. This will have little or no impact on server performance. Programming errors may also cause threads to hang. This can result in the theads sticking as you saw. Finding what happened is difficult after the fact, but the contents of your apache server's logs may help. Check the error log for problems. The access log may have entries for the requests that hung around the time you killed the processes. Apache should kill off some of the processes if they are not used for a period of time. This is controlled by the parameter. Check your control file which should have some comments about the parameters for Threads, Servers, and Clients. The default values are usually good. If there are problems with code, setting to somewhere in the range 5000 to 100 often helps. The smaller the number the more often new threads need to be created and the harder the apache server needs to work. EDIT: Apache will open up a number of threads at startup. This depends on the interaction of several parameters. See the MPM configuration documentation for details on the parameters. This is independent of any loading of the server, and normally be the minimum number of threads a running server will keep running. 

and are special names for this directory and this directory's parent respectively. You probably want something like as your match pattern. This pattern requires at least three characters in the file name. It should exclude all hidden files and directories. It will miss directories like , but I haven't run across any such directories in the wild. 

Check /var/log/mail.log to see if you were sending a lot of mail. Disabling the daemon will not necessarily mean you will stop getting mail. It will disable mail sent by connecting to your SMTP port. It will also disable retries for mail which couldn't be delivered immediately. You should be able to setup sendmail to only run the periodic queue processes, without running the daemon. Not running the daemon will also prevent incoming mail from other servers. If you were accidentally running an open relay, it will be shut down. 

Allowed ports are usually configured by the . The configuration file should have an ACL configuring a ports list. This is used in an rule. My configuration has the rule . The Debian system may be running an iptables firewall which prevents outgoing access to port 4040. EDIT: It may be easier to read the configuration if you strip comments and blank lines from it. This should reduce the number lines you are looking at to under 50 or so. Commands to strip down the file and extract the acl data are: 

You have a lot of routes with the same priority and different devices. You are routing your /64 out eth0 which may cause you problems. It is generally easier to have different /64s for different subnets. Verify IPv6 connectivity within your network before you try reaching out. Can the client and host ping each other over IPv6. That must be working before you can route. Some providers dedicate a /64 for routing between your server and their network. These connections may only support one address which should be allocated to your external interface. They should also provide a /48, /56, or /60 for your internal network needs. EDIT: I reviewed your routing again and compared it to mine. I would suggest checking your output. In my case I have a IPv6 point-to-point link over a tunnel, and it doesn't show my external router. It appears you have an external adderess 2001:41d0:2:b353::/64 for External routing and 2001:41d0:2:b300::/56 for internal network. Try using 2001:41d0:2:b300::/64 for your routers internal network block and 2001:41d0:2:b301::/64 for your remote servers block. Try a configuration more like this. Server: (sit0 - 2001:41d0:2:b300::2) 

Determining which types of users you have can be done my monitoring queries and updates to your DNS. It will take time to determine this kind of data. Of importance in determining TTL is determining how long after the last query an update occurs. Examining this value over time may help determine a reasonable TTL. Examining query frequency and source IP distribution versus update frequency may also be helpful. This is data which you can use to tune your TTL value(s) over time. 

Yes you can log to a remote syslog daemon. The default program will truncate long messages. If you have memory your can use syslog-ng. Installation should be similar to my installation of Syslog-ng on openWrt. 

If you have lots of small files then you may run into blocking and directory overhead in tar. The important information is how large was the source directory. tar may have compressed empty space in files by not allocating blocks for them. Try the option to . You could try comparing the list of files generated by to the files extracted. Extract with to see if you are getting any errors on extract. Try recreating a copy of the tar to see how large it is. 

You would use the CA certificate if you want to automatically trust any certificates it has signed. This usually applies to clients like your web browser. Servers use the CA certificate for two purposes. 

It is quite possible that the does not match the lines you have. The filter I have installed would not match those lines. There is a utility that can be used to test your regex. A multi-line string in the regex contains multiple regexes, one per line. A regex like the following may match better. I think the existing regex is not finding enough data. 

The effect is that your SPF record is ignored. Please do the following. Your SPF record requires 6 lookups excluding any MX and A records included in the record. (An MX record lookup may result in 2 or more lookups.) 

Queued message are only held locally until the message has been successfully delivered. As the messages where successfully delivered to the smarthost, Exim should have purged the files from its queue. It is possible, but unlikely that some messages were not remove from the spool directory. The Exim log should include the Sender, Recipient(s), and Subject of the messages. The logs will also contain the times the messages were received and delivered. It is unlikely to have kept much more of the message. Exim can be configured to keep a copy of messages, but this is not default behavior. User email clients usually keep a copy of sent messages. These messages may be on the individual user's computers. However, if you use IMAP, the messages may be on the system. Applications may log the generation of the message, but usually do not log the full message. Depending on the application it may be possible to regenerate the message, although it may take some programming effort. 

You can do everything you want with one instance. This is an example based on a configuration I have used. 

10.4 is an long term support (LTS) version. You may want to upgrade to it so you have support for a longer period. 10.10 will be on the normal shorter lifecyble. For your usage you are likely best of using LTS versions and upgrading every two years. 

The simple solution is to configure one address in the definition, and use it's domain name in the helo message. If you use SPF, allow this address to send mail for all three email domains. Its domain does not need to match any of the web servers. records are for incoming mail, and your MX does not need to be the address your email originates from. Automated mail servers tend to be poorly configured and cause me no end of problems. I applaud your efforts to get it right. Please make sure your outgoing email is properly formatted with all the necessary headers. Often the simplest thing to do is to use the MX for the web server's domain as a for the web server. It is fairly easy to routing rules for different domains. In this case you would use the to select the routing. 

sda is not processing I/O requests promptly. If it is not the drive, then you have an imbalance in I/O. Do you have a swap partition on sda? If so you could have memory issues resulting in thrashing of memory pages in and out of swap. Make sure you have swap space allocate on both drives at the same priority. The program sar may be helpful. 

These errors don't seem to indicate a reputation issue. The first three indicate issues with the destination address being sent by your server. It appears the address entry has been mangled. This likely applies to the address in the RCPT TO data. The last may be related, or a different issue. Again it points to mangling of the message. Try running a program like to capture the traffic to one or two of the destinations having problems. Examine the contents to see what is being mangled. It is possible that some address rewrite rules were implemented on your server that are mangling the data. This may be expanding the addresses to excessive lengths and or inserting invalid characters The bounce messages should include the original message or at least the headers of the message. These may help understanding what is happening. The RFC describes the headers and their correct format. Building a new mail server and replacing the existing server may be in order.