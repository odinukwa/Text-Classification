Note that DIN is a control data signal input (input at the LED) and DOUT is a control data signal output (output at the LED). The DOUT of one module is typically used to chain to the next LED module. Do not connect DOUT to a GPIO pin of the Pi that is set to output. 

You could use or as configuration utilities of the X-server itself (well if using omxplayer with X-server). 

The thing is that RS will sell only to business customers. If you click home use, you'll get a direction to other resellers that sell to consumers too. Unless you convince RS that you are a business customer (providing a VAT number) there'll be no deal. 

If connected to 3.3 from the Pi as power supply you'll be within that specified range and everything should work just fine. Voltage level on the serial data pins (I2C and SPI) will be acceptable for the Pi then. Common power supply From your question and comment I take it that a common power supply should be used - but without the Pi. I'd advise against that. For the BME280 and from the tutorial we learn that: 

Setting the GPIO to input turns off both LEDs. GPIO output, switching high/low turns on either one of them. It is however noteworthy that it will only work if the sum of the forward voltages of the LEDs is higher than the supply voltage (tricks to work around that are in the linked page). Depending on the forward voltages and the supply voltage it is also possible that both LEDs will light up dimmly even if they're not supposed to be on. That is an unfortunate side effect of the strongly non-linear current-voltage characteristics of a LED. At voltages well below their rated forward voltage a small current is still flowing and thus a dim light can be observed. It also requires the forward voltage of each LED to be less than the voltage level of GPIO high (i.e. it will likely not work with white LEDs). It also relies on the fact that the current is limited by the GPIO pin itself (one may or may not choose to go with that assumption). If in doubt use a series resistor at the GPIO pin (see final figure, just skip the additional diodes if working with 3.3V at the Pi). 

According to the product description there is a wire connected to the screen with a red RCA jack (for right audio) and a yellow RCA jack (for composite video). The front A/V 3.5 mm input jack is unfortunately not described in further detail. It could be a four contact jack or just three contacts (as the wiring suggests mono audio only). But (as desired) to keep wires to a minimum I would suggest to get an adaptor cable four ring 3.5 mm jack A/V to three separate RCA connectors. Plug those to the wire of the screen and be done (no additional wiring on the front of the screen). 

Not really. As long as it is dry, you keep some clearance between the wood and Pi, and you do not completely seal of the enclosure you should be fine. 

Official documentation and schematics for the Raspberry Pi is available at the Raspberry Pi Foundation's Webpage. However, as of today and to my knowledge, the full schematics for the Pi3 are not released. I am also not aware of any published reverse engineered schematics of any kind (not judging the ethical or legal ramifications of such actions). Asking for a specific format on the other hand is even more out of line (if you ask me). 

This calls for a relay that completely isolates your low power circuit (the Pi) from the 230 V. Consider that (for all intents and purposes) the two contacts of the lightbulb are potentially at 230 V since the plug could be put in the socket both ways in most systems (you would not know which is the "safe" neutral pin and which is "hot". So again, think twice before tinkering with 230 V. 

Format and syntax of the crontab a very, very, very well documented both in the internet and the page (try ). So I will just give a very short example here. There is many more to however - just look that up in the web. 

So the BCM2837 is supposedly identical to the BCM2835, except for, uhm, all that changed. Interestingly this part of the Foundations documentation - The Raspberry Pi UARTs - which refers to both the most recent models, the Raspberry Pi 3 and Raspberry Pi Zero W, also links to the spec of the BCM2835 (btw: a noteworthy link for the issue of the UART, the mini UART and Bluetooth). The BCM2835's datasheet (secondary link) reveals on p. 175 that 

Desoldering a component with 40 pins is quite arduous without proper equipment and some experience. The trick is to heat all pins at the same time - a hot air gun comes in handy. Of course you wouldn't want the heat the PCB or adjacent components. Another way to remove the old header is (thanks to Steve Robillard) to use some cutting pliers to cut them into pairs then heat up the pairs and either pull or push them out. Again careful handling is imperative; cutting the header might damage the board. It could also be possible to heat single pins of the header (from the backside of the PCB) and pull them out individually. After removing all pins the pads and holes need to be cleaned with desolder braid or a small tool - Mr Robillard recommends a small drill bit or male header pin (not the round ones) chucked in a slow speed drill. Here's something about the "Slap Method" for through-hole rework (discovered by Goldilocks, thanks). If you really want to go that way: it uses a standard 2.54mm (0.1 inch) headers (see here). They should be available at virtually any (online) shop that sells electronics components. However, I would try to bend it back first. Be sure to disconnect power first (obviously). Using flat nose pliers (a small tool) it should be possible to bend single pins back. 

One easy way to solve this is the use of GNU , see wikipedia. It allows you to multiplex multiple virtual consoles and therefore to access several different separate terminal sessions inside a single terminal window or via a remote terminal session (e.g. ssh + putty). Just start a (named) screen session with , do what you want to do inside that session and detach it by pressing CTRL + a d. Resume that session to pick up where you left with . Another tool to achieve this is which is also quite powerful and can be heavily customized to your needs. 

In general: yes, there will be a way to connect two Pi's to one Arduino given the numerous ways the Pi's can connect to the world and the number of interfaces on the Arduino Mega (I'll refer to the Arduino MEGA 2560, but as far as I can tell the "Mega" predecessor share these characteristics). 

where contains the first line and has executable flags. An example how to use and print the passed parameter (per question of the OP): 

While not exactly answering your question it still might help. There are tools available - such as - making compressed images of partitions. So no matter how large a partition is, the image size will be mainly influenced by the disk usage. On a side not however: is not working on ext4 or btrfs filesystems; is doing no defragmentation before saving an image; and needs the filesystem to be unmounted prior to saving.