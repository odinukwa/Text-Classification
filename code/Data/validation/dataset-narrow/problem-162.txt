You have two options. Option One: Configure DHCP smart relay (see more on this in the answers from Dave and Mierdin): Option Two: Set up a shared-network statement in your dhcpcd.conf (assuming you're running a Linux-based DHCP server - see Peter's answer below if you aren't) 

HSRP is Cisco-proprietary. VRRP is not (RFC 5798). There are probably other nitty gritty technical differences, but that is the major one. And IIRC VRRP doesn't have the ability to do interface tracking, while HSRP does - might be wrong on this though. edit: RFC 5798 gives v6 support to VRRP. The original RFC was 2338. 

Keep in mind that if you're monitoring input queue drops, you'll see these happen across multiple subsets of ports, because (IIRC - someone correct me if I'm wrong) these map to the port ASIC's and the buffers are shared across port groupings (ASICs). Here's a link to a Cisco doc that has some other good info: $URL$ 

Does anyone know of a way to execute in some way independent of the console, e.g. an equivalent to or by creating a timer or some other one-shot mechanism that can execute the script outside of the console context? 

Note I am using in the route-map to fall back to using the routing table (shown above), but I have also tried and that doesn't work either. I can see that my pings are hitting the route-map: 

ssh to gateway via switch, on . connect to switch CLI via 10.x.x.x network via a different port to the interface. download the modification script to the switch run screen scripts to take down the switch ports to on the gateway, and configure the switch with a new VLAN and give it the ip address. collect diagnostics and capture PCAP. screen script reloads switch and reboots gateway host to get us back to the current setup. 

If you guessed the third option, you'd be correct, as this is the most specific route to the destination address, and thus will be the route that the router uses to send the traffic to that IP address. Now, with that said if you get your own IP space from an RIR and you want to connect to the Internet, you will be required by most transit providers (ISPs) to announce this IP space with a prefix length no longer than a /24. The point of doing this is to keep the global routing table of the Internet as small as possible. In the example you provided, if "the site" has an entire /16 of their own IP address space, that creates a possible 256 subnets (routes) of a /24 mask length. Only under certain circumstances would the site want to do anything besides announce a single /16 prefix to the Internet Service Provider in order to route traffic to their network. This concept is referred to as route aggregation and is generally regarded as a desirable thing to do whenever possible, especially when connecting to the Internet. 

I have an existing switch configuration which works, but is not satisfactory, and I want to switch to a different configuration that seems straightforward but I cannot get to work in production, though my scripts work perfectly in a staging setup here. We have a rack in a distant DC. We have 2 stacked Dell N2024s, and various servers. Our ISP has supplied us with 2 subnets - one is a /26 range of public IPs, and the other is a /30 range, for routing: they have at their end and we must have at our end which they will use as a gateway. Currently, we have a gateway server which has the allocated to one of its ethernet ports. What I want is to allocate to the switch, so that other devices can stay available even if the gateway host goes down (one of which is the gateway host's iDRAC), essentially using the layer 3 routing features of the switch to make it behave a bit like a router. I am able to apply updates to both the gateway host and the switch via , which I have set up to reboot both GFW and server if I cannot get in after the config updates, which so far has happened 100% of the time. I have however been able to collect, diagnostics, logs and PCAPs of me trying to ping the address. I have a great deal of data I can share, but I will start with the basics, and perhaps anyone who is willing to help could tell me what needs to be expanded upon. The gist of the process is this: 

What problem are you trying to solve? Most CDN's work off of Anycast/GeoIP to serve the requested content as close to the source of the request as possible. I'm also not sure what you mean or what you're trying to accomplish by "finding out what users are doing" - CDN's are designed to be transparent to users to provide a better user experience when browsing the web (the biggest use case for a CDN - there are obviously others). I'm having a tough time thinking of what an average user would use a CDN for for reasons that would warrant monitoring of this nature. If you did want to build a lookup table or a database, it shouldn't be that difficult, since you could query whois or an IRR to get IP/routing information (assuming the CDN operator does the Right Thing and puts their info in the IRR - most of the big ones do). I'd start with figuring out which CDN's own which blocks and then cross-referencing which IP belongs to which block, and then you could make a distinction on who owns the CDN IP that your users were hitting. It's possible, but it will get hairy very quickly and may very well be an exercise in futility (thinking if CDN's resell services to other smaller companies and solutions like CloudFront). 

I am using ACLs to manage inter-VLAN routing. I am currently allowing 'any' ip to access the router subnet from the internet: 

The answer is yes. This white paper describes how to use ACLs and routing maps handle inter-VLAN traffic in a more secure way. $URL$ 

We have a Dell N2024 switch stack on the other side of the planet. Our ISP has assigned us a /30 routing network where they have and we have . Currently is assigned to a server, attached to the switch. I want to move the IP address to the switch itself by assigning it to a vlan, and changing the server's IP to something else from a different subnet. The problem of course is that the script is run via a console into the switch which passes through the machine whose IP I want to swap out! I have a script which works great on a staging system, if I were attached by the serial port there would be no issue. But I tried running the script via ssh in the hope that it would continue to run regardless of whether the console was still attached or not, but sadly it doesn't, and the script aborted at the point where I shut down the ports to the current machine. A manual reset by staff at the other end took care of that, but I am now back to square one. The part of the script that is creating the problem is: