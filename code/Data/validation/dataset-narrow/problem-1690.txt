I believe that the problem you are facing is because the pi is not recognizing your display as the resolution that it is and I'm going to walk you through manually setting that resolution. 

For tft displays that do not support touch either line will work. Note: that is a Device Tree function that is used to enable the SPI driver. Now when you save and reboot HDMI will probably not work on all monitors, and it is recommended that you disconnect the HDMI display before attempting to use the tft one. If you don’t already have the PiTFT assembled and connected, do that now. Now only one more piece of software called retrogame lets you connect buttons directly to the Raspberry Pi’s GPIO header and simulates key presses. It can be downloaded from the command line using: 

I believe that it is unlikely that you will be able to create an os, and also that people on this site will be able to help you create an os. As there probably aren't to many tutorials of that online, and a lot of the gpu is held in secrecy so your own os will never be able to use hardware acceleration which is a big part in what lets popular pi uses operate smoothly along with many other optimizations. My personal recommendation to you is to create a gui in your favourite programming language and have it run whenever your pi boots similar to what projects such as kodi, and emulation station are doing, as this will allow you to spend more time on your program and less on the underlying os. Furthermore you are able to package your program into any pi os and create your own iso which gives the feeling to the end user that is pretty much the same to what they would be experiencing if you had created the os. best of luck with you piventures and feel free to open up new questions if you would like to inquire about the creation of a gui or on how to create your own linux distribution image(iso) 

I think that your problem may be that you are connecting to the Pi through ssh and expecting it to restart, the problem is when restarting the ssh process your ssh connection to that very same process is broken. If this is not the case and you are actually physically connected to the Pi with a monitor and keyboard then please elaborate on what you see when it hangs? 

Be sure to replace the file path with your actual file path. Furthermore if you wish to have the video loop please use the line below instead of the one above. 

Note: The command above may need to be run with After your SD card has been successfully unmounted, use the command below to write your iso to your sd card. 

For the solar power just buy an off the shelf solar phone charger then connect it to a phone backup battery such as one from morphie, for the gif loading you could use some of the tools from image magic. Please install it by typing into your terminal from there you can enter the command into the terminal with mohammadIsAwesome.gif being the location of the gif, note that you have to be in an X gui for this to work and that the animation will be border less. To resize the gif to be full screen simply enter to resize your gif, note that's width by height. Furthermore, resizing will probably make a mess of most animated gifs. You need to process them first. 

Your potential problems: your problem maybe due to video bitrate, you may have noticed that video from certain places such as a certain website or file type such as .mp4 may have less issues while playing video than other video file types or from different places. This is likely due to bandwidth limitations which is why videos using a lower bitrate or a highly compressed file type such as mp4 may be playing with less stutter than other videos. Furthermore another problem that you may be facing is that it is likely that devices such as your tv may not support hardware decoding of certain file types which may be forcing the pi to decode the video or may be forcing the client to decode the video sans hardware acceleration which is what may be causing the lag. My opinion on which on of these is most likely the problem: The first paragraph is likely to be your true problem but also ties into the problem below that one. This is likely because the pi share bandwidth between the usb and ethernet because ethernet is simply a built in adapter, using a better usb to ethernet adapter may help with your problem. But also do keep in mind that your video must be loaded via usb off your hard drive then sent back over usb to the ethernet bridge via the same bus so stellar performance shouldn't be expected. The solution: I recommend that you go through your video library at random and find out which ones that lag and look for a pattern in them, maybe they all have the same file type or maybe they all have a high video bitrate, and be sure to preform this testing with multiple client devices so that we can rule out client side lag. If your problem is consistent with videos of a certain bitrate you will likely need to re-encode those videos using software such as ffmpeg or similar to compress those videos and lower their bitrates. 

All you need to do is buy something like a relay or an NPN transistor connect it to the two sides of your switch and use the Pi to set the base of the transistor or relay to high for about half a second to bridge the connection as if a button were being pressed. 

now all thats left to do is to save and close by pressing and run the script by entering the following into the terminal: 

my real world limit was 22 school kids in a classroom connected via there smartphones directly to the pi, now the access point was an open hotspot so the overhead was reduced drastically reduced as no encryption took place, also my pi-3 hadn't actually reached its limit as I'm sure more clients could have connected but was preforming rather sluggishly especially since every student had to click the same link at the same time to follow along. I found that page loads took on average 2.5-3seconds for me. With the server being node.js http server and the content being returned the contents of a static file that were being stored in a string. 

Yes there should not be a problem having the Pi run apache and be the access point as the Pi will act as a device on its own access point allowing the apache server to seem as if it is running though a router. 

is optional. It stands for and is used to create larger blocks to write faster, if this does not work for you try 

Im not too sure that this is doable, as any display's i've seen for the pi being marketed for the pi that don't use hdmi seem to use the pi's gpio ports and some custom code. I believe that this maybe because broadcom may be using a custom implementation of the dsi interface or maybe because the pi foundation may have only written dsi support code for their official screen. either way you can read more about this issue here. 

So currently you state that you can connect to the Pi just fine, but require a monitor for the pairing process. Note: accepting any connection is an incredibly insecure idea, and if you are only using a limited set of devices, setting them up as trusted devices would make a lot more sense as it would limit connection to your Mac addresses but wold not allow for new devices to be added without a monitor But anyway, the commands that you will need to run to accept all connections being made to the Pi, to make it discoverable and to set a predictable pin are listed below: Note: you may need to change the zero in to your devices Bluetooth number. 

This is not possible as the Pi model b+ has a built in USB hub that prevents it from being configured as a slave device 

I see that you have stated that you have not yet attached the pigtail antenna yet, I have also noticed that my phone will tell me that I'm moving when I'm not, it's because gps Relies purely on timing and your lack of a proper antenna is also limting the number of satellites that your Pi is able to connect to. furthermore I was wondering why you would need to record gps data on a device that's speed is zero and is stationary? It just feels really redundant to me, if your end goal was to only have it record gps data when in motion you should consider attaching an accelerometer to your Pi to have it activate gps immediately as motion is detected. Yes your issue should be solved when you connect your antenna as the only antenna you are using right now is the internal patch antenna which Even on the adafruit page that is trying to market the product, states that it should be used "outdoors in clear sky's". Which is never a sign that's it's of good quality. On a side note: the gps on your phone doesn't jump around so much because 

It is likely that the port is damaged, as it is constantly trying to create a new connection to the USB device, and is constantly failing. I recommend that you try plugging in a usb flash drive and see if you can access that, it is unlikely though. What is more likely is that the port is damaged, you may flip the board over and inspect the solder joints by hand which are the most likely points of failure, but the damage may be anywhere between the port and the CPU. Although you pi may still be underwarenty which you can read about here (you would fall under the manufacturing defect category) 

I'm pretty sure one of the numerous barriers you may be facing is that the Pi 3 uses arms v8 architecture and the Pi model 1 uses arms v6 architecture. Which kind of makes what you're trying to do impossible without integrating multiple kernels into one os and having the system choose which kernel to use on boot.