Two things I've learned when debugging bash commands: One) If it's not working like you think it should, echo/printf out the commands to ensure they display the way you think they should. Two) Manually run the commands you have within your commands to see if they run properly, (unless these are potentially destructive commands, such as: rm, dd, chmod 777, etc.). How or what exactly are you trying to accomplish? Mine seems to work fine with that command verbatim, so you'll need to explain what you want it to do. Do you have spaces in your filenames that are causing issues with your command? So long as you get rid of the space from the IFS variable, it probably work the way you want: . The option basically strips out all of the line separators, so everything that you want from those commands has no separators at all unless the files have spaces in their names. For your second set of questions: 

In a nutshell, when a computer goes into hibernation, it takes everything in RAM and writes it to the hard drive and then powers down. When it boots up, it reverses the process and reads everything that was written to the hibernation file into RAM. If the external drive is in the same port and unlocked when the computer powers up from hibernation, then it should resume as if nothing happened. VirtualBox shouldn't actually care which port the hard drive is plugged into if you are using a virtual hard drive on the external drive, it only cares about the path to the drive. If you're forwarding the USB directly to the VM, it mostly shouldn't matter as I believe that VirtualBox goes by USB IDs when forwarding USB to VMs. 

Here, there be dragons! The following is very destructive if you don't know what you're doing. Proceed at your own risk. 

Just because the fans and LEDs power on does not mean that the power supply is good. Fans and LEDs use up very little amperage, and the rest of the system may not be getting enough power to fully boot up. If you search on Google, (or other search engine), you can find a power supply tester that you can use to see if it's really working or not, (search for: "power supply tester"). If the tester shows that the power supply is good, then you'd have to test the CPU and motherboard with different units to see if they're bad or not. There's no real way to test a CPU and motherboard individually without another one to test with; in other words, you can't test if a motherboard is bad without another motherboard. CPUs and motherboards change too much for them to have dedicated testers on the market, bit of a shame too. 

In your command the ending slashes are escaping the double quotes symbols. Robocopy then assumes that it's a full argument, which it then can't find. Try one of these instead: 

First of all, I applaud you for using only a limited account instead of an admin account on a regular basis. If you're not making a living off of repairing computers or removing malware, you shouldn't be using an admin account regularly. 

Before I start, please take note that securely removing data from an SSD can still leave traces due to the way that SSDs store data. When an SSD writes to itself, it may not always write in the same place like a hard drive would. It spreads the write loads out so that the storage medium is written to evenly, (this maximizes the lifespan of the drive). This will all depend on how the drive was engineered. If the drive doesn't support secure shredding, then it's going to take a few writes to get all of it overwritten. I know of two options that might work for you. The first one is to try using Eraser, which is an open source file shredding utility. I don't have any affiliation with them, but the software can be found: here on their website. It can do a thorough job of wiping data as that is its only function. If that doesn't work, make sure that everything you want to be removed is deleted, (and the Recycle Bin is emptied as well). Then use a tool such as Clonezilla to make an image of the OS, (requires another hard drive to backup to). Clonezilla by default will only image the files that are not deleted on the drive, so all the deleted files/folders should not be imaged with the OS. You can then restore the data to a new hard drive, (I'm paranoid about loosing data so I recommend checking to make sure everything works out first before the next step), and then DBAN the drive a few times to wipe everything off of it. After DBANing the drive, you can restore the image you created with your cloning tool to the disk and the OS should perform like nothing happened. (unless you deleted something that was needed, or the clone didn't go perfectly, very rare occasion though). Clonezilla can be found here on their website. 

The lower the metric number, the higher the priority if your prefix length and administrative distance are the same. Reference. This reference is mainly for routers and such, but from my experience Windows will use metrics to prioritize the traffic. Since your wireless is set to 11 and your wired is set to 18, the wireless will take priority over your wired connection. Think of metrics as choices, 1 is the first choice, 2 is second, 3 is third, etc. Also, please be aware that the icon is just a status indicator, and I believe that the wireless icon takes precedence over the wired icon. Edit: I forgot to mention how to change the priorities, you can change them by following these instructions. 

There are no shortcuts per se, but are a couple of ways you can restart the computer once it's booted up. You can attempt to open the command line and send the shutdown signal from there, or you can try to use the tab key to get to the shutdown button on the lock screen. To do the command prompt way: After you're logged in, hold down the key and while you're holding it down, press on your keyboard. Type in the Letters: Hit the key. Type this in: Hit the key. To restart the system when it's at the login screen, press the key three times if you don't have to hold ++ to log in, five times if you do, some systems may take six s to get there. After you've hit the key the required number of times, press the . Press on your keyboard. Lastly press again. If you feel you've made a mistake, then you can hit the key to try again if you have to hold ++ to log in. Alternatively, if you just want to shut the system down altogether, you can press 2-4 times and hit and it should shut the system down. If everything worked, the system should reboot. These will all be blind, so good luck. 

Yes to the first part, and are both considered NULL, so they are basically the same. This is due to bash interpreting as an ANSI C string. And you need to have quotes around the \n to have bash interpret it as a C string so that a newline character is placed in the IFS. You can read up more about these here. 

After reading 3, this shouldn't be an issue. Shouldn't matter for the rest of your network. You may need to have the WAN use DHCP depending on how your modem receives its IP address from your ISP. If your modem simply acts as a bridge, then your router will need to have your public IP address. Shouldn't matter if it's an actual WiFi router or just an AP. That depends on the way the devices were designed. Without knowing what kind of APs they are, or their model numbers, we can only guess. For your routers, simply disable their DHCP, give them static LAN IP addresses and plug the cables into the LAN ports. There's no need for you to use the WAN ports as WAN ports are designed to limit/block incoming traffic. The LAN ports on the other hand will act as a switch between the LAN ports and WiFi. Read above for the first part of this bullet point. Without knowing more about your house, the wiring situation, and what you're attempting to do, we can only guess at how to better implement your network, for the most part though, it seems serviceable. 

From what I can tell from your post, you probably only have your SSH daemon listening on one interface. In your file, make sure you have listed as this: . If it is enabled, the OpenSSH server will only listen for incoming connections on the specified address(es). If you want to use ListenAddress for multiple IPs, then you will need to have them on separate lines, like this: 

The first line sets IFS to: . After that, the next line reads as: , which doesn't work since the command requires a loop of some sort to be the preceding command. The next one works because the semicolon tells bash that the end of the command has been reached so: