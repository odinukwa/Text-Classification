To the best of your knowledge, does the paper make a significant, well-presented, and correct contribution to the state of the art? If the paper fails any of the three criteria, it's fair to reject it for that reason alone, regardless of the other two. Here's what I think a report should contain. Everything should be visible to the author, except possibly for serious accusations of misconduct. a. A quick summary of the paper, to help the editor judge the quality of the results, and to help convince both the author and the editor that you actually read and understood the paper. Place the result in its larger context. Include a history of prior versions, even if the authors include it in the submission. Be respectful, but brutally honest. b. A discussion of the strengths and weaknesses of the paper, in terms of correctness, novelty, clarity, importance, generality, potential impact, elegance, technical depth, robustness, etc. If you suspect unethical behavior (plagiarism, parallel submission, cooked data), describe your suspicions. Be respectful, but brutally honest. c. A recommendation to the editor for further action — accept, accept with minor revision, ask for a second round of reviewing, or reject outright. Keep in mind that you are making a recommendation, not a decision; if you can't make up your mind, just say so. Be respectful, but brutally honest. d. More detailed feedback to the author — more detailed justification for your recommendation, requests for clarification in the final version, missing references, bugs in the proofs, simplifications, generalizations, typos, etc. Be respectful, but brutally honest. Conference reports should be shorter; program committees have hundreds of papers to consider at once. Whether there should be a difference between conference and journal papers is up to the journal (and indirectly, up to the community). Most theoretical computer science journals do not insist on a significant difference; it is quite common for the conference and journal versions of a theory paper to be essentially identical. When in doubt, ask the editor! If you still don't understand the paper after making a good-faith effort, it's the author's fault, or possibly the editor's, but certainly not yours. The author's primary responsibility is to effectively communicate their result to their audience, and a good editor will send you a paper to referee only if they think you're a good representative of the paper's intended audience. But you do have to make a good-faith effort; do not expect to immediately understand everything (anything?) immediately on your first reading. If there are a lot of errors, don't even read the paper; just recommend rejection on the grounds that the paper is not professionally written. Otherwise, if you really want to be thorough, include a representative list of grammar, spelling, and punctuation mistakes, but don't knock yourself out finding every last bug. Be respectful, but brutally honest. Expect to spend about an hour per page, mostly on internalizing the paper's results and techniques. Be pleasantly surprised when it doesn't actually take that long. (If it takes significantly less time than that, either the paper is either exceedingly elegant and well-written, you know the area extremely well, or the paper is technically shallow. Don't confuse these three possibilities.) You should write at least as many referee reports as other people write for you. If this takes more time than writing your own papers, you're not spending enough time on your own papers. 

I think a list of fields of mathematics that are not useful would be much shorter than a list of fields that are! I can't think of any. Study whatever math looks interesting, and/or whatever it looks like you need at the moment. Even if you don't use it directly, it'll help you learn other stuff that you do. 

This is a standard minimum-cost circulation problem. Give each directed edge capacity $1$ and cost $-1$. Then a feasible circulation is a sum (ie, union) of edge-disjoint directed cycles, and the cost of the circulation is the negation of the number of edges. Because all the costs and capacities are bounded by constants, a simple cycle-cancelling algorithm will find the required circulation in polynomial time. This is almost the same as the obvious greedy algorithm: 

Not even no. Algorithms are not the right class of objects to be Turing-complete; asking whether an algorithm is Turing-complete is like asking whether a cat is prime. Objects that can be Turing-complete are usually called models of computation. 

My favorite corollary of these results is more recent and more subtle: It is undecidable whether a given finitely-presented group is the fundamental group of a 3-manifold. Perelman's recent proof of Thurston's geometrization conjecture implies the existence of an algorithm to determine whether a given 3-manifold has a trivial fundamental group. (As @SamNead points out, results of Rubenstein and Casson imply an algorithm that runs in exponential time.) If a given group $G$ is not a 3-manifold group, then $G$ cannot be trivial, because $\pi_1(S^3)$ is trivial. Thus, if you could decide whether $G$ is a 3-manifold group, you could decide whether $G$ is trivial, which is impossible. 

A combinatorial embedding or signed rotation system is a combinatorial representation of a cellular embedding of a graph on some surface. An embedding is a drawing of the graph such that no two edges cross; an embedding is cellular if every face is a disk. Consider an undirected graph $G=(V,E)$. It is helpful to regard each edge in $E$ as a pair of directed edges, or darts. Each dart goes from one vertex, called its tail, to another vertex, called its head. The reversal of a dart is obtained by swapping its head and its tail. Let $\vec{E}$ denote the set of all darts. A signed rotation system consists of two functions: 

@Alextfish has posted a new solution at Draw3Cards, which does not require cooperation between the players, but rather models the complete execution of a universal Turing machine in one turn: $URL$ (Flagged CW to avoid reputation.) 

Without further assumptions about the point set, the answer can be anywhere between $1$ and $n/(k+1)$.