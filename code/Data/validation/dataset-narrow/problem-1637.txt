There is a PoE solution designed specifically for the Pi. The Pi PoE Switch Hat is in production and available for presale). As this is a hat it is designed for the 40pin Pi's (A+ B+ and Pi2). 

You may want to spend a few more dollars and go with one of the higher end ESP8266 models. These higher end modules have a couple of additional benefits, while still costing less than $10, they contain an ADC something the Pi does not, they also breakout all of the pins from the ESP chip. 

The imutils library per the github page is written for "both Python 2.7 and Python 3" so you can copy the file(s) from to . 

replacing URL_of_the_repository with the URL of the repository you want to clone. You can find this URL on the homepage of the repository. You can learn more about git from the following resources: 

The first 26 pins are the same as the B model. The extra 14 pins can be seen in the image below. Three of these are grounds, two are reserved and labeled do not connect (DNC), which IIRC are reserved for use with the eeprom used to configure Raspberry Pi hats (add on boards). The nine remaining pins are GPIO's. How you address these pins depends a bit on the library and pin numbering scheme you are using. There is the BCM numbering scheme (used in the image below), 

Using your up down arrows select option 3: Boot Options Then select Option 1: Desktop/CLI Select either option 1 or 2: Console or Console Autologin Then Click (use the tab key): OK Finally click: Finish and reboot to test. These settings are also available from the GUI preferences menu. 

This will add a panel applet to the menu bar (far right by default) that will allow you to click and switch between the desktops. 

While both of these use a Pi Zero, it would be fairly easy to use with any Pi, given a long enough cable and close enough mounting surface. 

Assuming you installed it using , you can remove it and its config files with the following command: 

Right Click on the menu bar at the top of the screen; Select Add/Remove Panel Items; Select the Panel Applets Tab; Click the Add button; Choose Desktop Pager from the list; Optional, choose Desktop Number/Workspace Name; Click Close. 

You could also start fresh again and make a backup after every package installation. Though this will involve a significant amount of time, disk space and patience. You may also want to look at etckeeper. Etckeeper is a package which basically allows you to keep your /etc directory in version control. It supports several VCS, but I would suggest using git. If not already installed you can install git by doing: 

I believe they are referring to the pin on the hat not the pin on the Pi. If you look at the following picture . You will see pin #4 labeled in the third row of pins across the top. It is a little hard to be sure from the pic but it looks like it is connected to GPIO4. 

You can add the core_freq and over_voltage option if they are not present (not all options are included by default). You can read the latest on all of the overclocking options, and the full documentation for the config.txt file in the official Documentation. It is well documented, but worth mentioning that some values and options can void your warranty. 

If you are using a standard US keyboard the single quote is to the left of the Enter key. Note: the issue is not limited to that one occurance, and you will need to correct them all. 

You don't mention which distro you are using, but assuming you are at the Raspbian command prompt and looking to start the graphical desktop, you can switch to the desktop (GUI) mode by typing: 

Please do not submerge or wash your Pi with water. This is likely to both destroy you Pi and void your warranty. I would suggest changing the flux you are using, or if you have already done so leave the residue assuming it is non conductive. Is this flux even designed for electronics? In general water and electronics do not go well together. 

I am assuming this will be a mobile based device, or one not located near a power outlet, hence the need for the battery pack. One of the biggest current drains will be the WiFi dongle. This will need to be on continuously to be able to receive data, likewise the CPU will need to remain powered. So only processing the small amount of data on demand will not greatly extend the system's run time. As for your questions regarding cases (waterproof and heating) a quick search of this site will turn up several related questions on this site. However, the short answer is that the Pi may overheat in a high temp/humidity environment - Only by testing can you be sure. This is a case of a more complete description of your project may help us give you better answers. 

The simplest solution is to install RealVNC Viewer. You can download it from here, and it is available for Linux, MacOS and Windows. The issue is with the encryption schemes used by different VNC servers. 

The decision not to populate the headers means that you do need to solder them yourself, but has the benefit of more flexibility in mounting and and connecting wires to the GPIO pins. I replaced a (first Gen) Pi B with a Pi zero, because it made fitting the whole project into an enclosure much easier. Images form adafruit.com Introducing the Raspberry Pi 

It may be a little easier to see and play with here. I Used bootstrap just to add a little styling quickly. You can tab through the buttons (you can also assign keyboard shortcuts) you just need to make sure that when they receive the focus it is obvious (change color size etc. (watch out for just color though it is not accessible to colorblind users). Note you could use a dropdown as well but this would be less usable. Also it is possible for a user to return to this page using the back button. There are ways around this if required. 

to your ~/.ssh/config file, to send a null packet every 120 seconds. If you are using Putty (PC) you can set the seconds between keep alive to 120. This option is located under the connection menu. Of the two options, I would suggest using the server based approach first, as you only need to make a single change no matter how many clients you use to connect. 

The recovery option you mention is part of the noobs boot process. Therefore the simplest solution is probably to create a new SD card with Raspbian without using noobs. The Raspbian disk image can be downloaded from here, and installation instructions are available here. If you want to hide all boot messages and not just the recovery option this question provides the details. 

While you may be able to safely power a Pi on 700mA it is not recommended and leaves little room for expansion (e.g. adding a wifi dongle). You run the risk of undervolting the Pi, which can lead to SD card corruption and other hard to track down gremlins. There is no harm in using a higher amperage charger; the Pi will only draw the current it needs. In short get the 2.5 or greater Amp charger and a high quality cable and avoid the needless headaches. 

You will at the very least destroy the pin, and most likely the entire Pi. The Pi is not 5V tolerant. All of the GPIO pins are 3.3V tolerant only. To bring the voltage down to the safe level you can use a level shifter or a voltage divider circuit. 

Looking over the link you provided, the likely problem is that the environment variable JS_HOME is set for the pi user (or whatever user you installed node as) but not for root. The simpleset way to fix this is to use the full path to the npm commnad. To determine what the proper path is type 

It seems like you have messed up your SD card partitions or image. To correct this, reimage the card (instructions here). Then on first boot you will be presented an options screen. One of the options is to resize the root partition (more info on the raspi-config file and its options). That will format the card's root partition to utilize the full 8GB of your card. Note this will require a reboot. 

When you clone a git repo (and don't specify a directory name) it is placed in the current working directory, in a folder named after the repository name. So in your case it will be in the directory linux a subdirectory of the directory you were in when you cloned the repo. Since I don't know what directory you were using at the time, you can search for the linux directory with the following: 

You now have multiple desktops, However, the GUI does not give any indication of this and you need to remember the keyboard shortcuts to use them: Ctrl + Alt + Left/Right will switch to the next desktop. To make this more usable do the following: 

Breaking it Down: sudo tells the system to run this command with root privileges - this prevents lots of errors cluttering the system from directories that your regular user (pi) can't access. find the name of the Linux command to find files and directories. / tells the find command to search the root of the filesystem and all its sub-directories. -name tells the find command to search by the file name. 'raspi-config' this is the file name you are searching for. to find a different file just replace the raspi-config with the name of the file you are looking for. There are many other options for the find command and you can find all of the details for most linux commands by typing 

In XBMC, go to Programs → Raspbmc settings → Wired network configuration. Uncheck the Automatic DHCP option. Provide a static IP address. Make sure the IP address is far away from the IP addresses typically assigned by the router to the networked devices at home. For example, if a router assigns addresses starting from 192.168.0.10, then pick a static IP like 192.168.0.50 Scroll down and check the Update Now option. Raspbmc will take a few seconds to apply the new configuration. Make sure you can ping the static IP address you assigned. Voila, your Raspbmc now has a fixed IP address! 

Note: depending on the header used on the LCD you may have difficulty fitting the board. If this is a problem stacking headers, jumper wires or a Pi plate are a cheap fix. 

The yellow square denotes a high CPU temperature warning, and that CPU overclocking has been disabled. If I remember correctly the square appears when the temperature reaches 75 degrees Celsius, and turns red at 80. The Pi will throttle back the CPU frequency to prevent overheating the Pi. You may want to look into some additional cooling (fan/heatsink) or a different case to avoid thermal issues. I saw this behavior with a new Pi3 in the foundation's case - the solution was as simple as removing the cover when watching YouTube videos at 2x speed. More info can be found here