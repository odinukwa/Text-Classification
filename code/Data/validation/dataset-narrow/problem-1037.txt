In a pipelined set of processes it is almost always a terrible mistake to write to a file that is also being read from at the same time. This is because the write operations occur concurrently with the read operations. Usually resulting in a prematurely truncated file. In the past this surprised people more used to DOS pipelines where the operating system serialised the processes by means of hidden temporary files (or their moral equivalent) Solutions mostly involve using temporary files and renaming them on completion. 

Unless you have lots of httpd files in bin directories. Otherwise you can scrutinise the contents of startup scripts such as or 

You could try using a text mode browser such as Lynx This should not fetch linked images or JavaScript resources 

Another solution to the same problem is to use split-horizon DNS and refer to the server by name. However this isn't easy to set up if you are currently relying on a typical SOHO router to do all your DHCP+DNS. 

Intel have a Problem Resolution Wizard You may need to download the latest driver to correct a fault in Extended display identification data (EDID) recognition. I'd try the "Automatically detect and update drivers and software" option at Intel's 82865G support page 

Generally, with cloud computing, we expect that command-lines are probably not involved and that the "cloud" is often doing quite a lot of the actual processing and display and IO for us. 

Vim has a very good and extensible set of digraphs. You can also use it as a text editor in web-browsers by means of the ItsAllText plugin or TextAreaConnect, thus bringing digraphs to web-applications. Quotes are from Wikipedia 

It is unusual to get a "Permission denied" message when running a command using . I might check that SELinux isn't installed/enabled. The usual reason a network service fails to bind to a port is because the TCP port is already in use by some other service. The usual way to check this is 

You probably dont need (see man page). I invented and so check for real equivalents (if any). See also in your shell's man-page. Note: many of the above features are shell-dependent. Should be OK in bash, ksh and their ilk. 

You can then find httpd.exe (or whatever program is listening on port 80) If you use it will tell you the process id, 

You restore important data from backups. The problem with "Ten Things To Do To Secure An Important Persons Computer" is that it forgets the usual definition of Information Security: 

The filename extension serves a purpose on Windows, where the filename extension helps determine which programs are associated with that file - which one is used to open, edit or perform other types of action on it. On Unix/GNU-Linux, the system works out the type of a file without referring to the filename extension. It does have some uses in Makefiles. [update:] As grawity noted in a comment below, the filename extension is used by Linux file-managers (I assume this means GUI apps like nautilus and character apps like ). However I find it a useful convention to adhere to anyway. 

I don't know of a method that works in a variety of different editors. In Visual Studio might work In vim you would use Other programs prabably have different methods 

Note that the KILL signal is signal 9 (not 2). You can send any of these signals using the command but only one of them is a KILL signal and it isn't signal 2. 

The Processors used in mobile phones (cellphones/feature-phones/smartphones) are a different category (they are mostly ARM processors) and are optimised for even lower power and cooling resources. Tablets/slates/pads/fondleslabs form a middle ground where traditional desktop/laptop CPU architectures (e.g. x86) and traditional small-device architectures (e.g. ARM) are both used. You can view this as convergence from both directions. A necessary consequence is that mobile processors are slower but they probably incorporate power-saving tricks that are not so much used in desktop PCs (I think variable CPU clock-rates started in mobile processors). I wouldn't be surprised if a laptop with a workstation-class CPU had a very short run-time on battery and ran very hot (reducing the overall life of CPU and other components) 

I don't know of any image format that consists of unstructured bytes - is the data 8-bit RGB values? If the file contains 30000 bytes is that RGB for 100x100 pixels or RGB for 50x200 pixels or RGB for 200x50 pixels or something else? Is there a palette? You have to know something about the organisation of the data! To view it as an image I would use the NetPBM utilities or maybe ImageMagick to convert it to a form understood by an image viewer If the above can't do the job I'd investigate writing a small Perl script 

Add the option to to see the server's response headers. If you get something like "connection refused", Apache isn't listening on port 80. Netstat The output from should include 

Pseudocode This corresponds line by line with my perl code but perl is a bit terser (and I cuddle my elses even though Larry disapproves). 

If mRemoteNG is getting in the way of seeing Putty settings, stop using mRemoteNG until you have everything working in plain unadorned standalone normal unviolated Putty. 

The NICs must each have a separate IP-address, these should normally be in separate subnets. The exception would be when you are using something such as channel bonding or some hot-failover redundancy system. 

This isn't going to be possible in the general case. In general, multiple layers of NAT implies that there are several routers applying NAT in a fairly transparent way. The point of NAT is that it replaces addresses and thereby discards any information that the exterior see's as your address. The only ways to achieve this are 

Once installed, from the GUI, select Administration, Services and enable Telnet Distros using Xinetd You need a file named /etc/xinetd.d/telnet with contents something like this 

I'm not sure the difference in speed should be the primary purchasing criterion. Perhaps, for the cost of a SAN device, you can buy a NAS device that provides better IO. 

Don't worry too much about ping, it isn't unusual for ping to be blocked by server infrastructure. Ping and traceroute typically use ICMP. A better test is to use which uses HTTP. First use to test DNS (older Linux systems would have or instead of ) 

Make sure both the routers are properly configured. Each should have a routing table entry for both LANs (192.168.1.x and 192.168.0.x). Such routes can be statically configured or dynamic (using a routing protocol such as RIP). Properly configured routers will let PCs know what to do when PCs contact the wrong router (typically by issuing ICMP redirects). 

There isn't a lot you can say for certain. Ports 25 and 110 are SMTP and POP3 services respectively. If you (or a colleague) haven't set up some kind of webmail front-end on a Cloudflare account, I'd guess a Cloudflare customer - or software infiltrated by someone who hacked their account/apps is attempting to break into an Email server at your IP-address. The source IPs vary, that could just be a feature of Cloudflare's interconnection or it might mean there really are several sources (several distinct Cloudflare customers - perhaps all using Cloudflare provided apps with a common vulnerability). S means SYN. This is the first part of the three-way handshake that is used to establish a TCP connection. Since your output shows no evidence of continuation it looks like you don't have any service listening on those ports. To get a better answer you'd have to liaise with Cloudflare support. 

You can't Firefox doesn't make that decision, it just calls an operating system API like The operating system resolver hands that off to a DNS server. You might think you could set up your own internal DNS server and configure that to only use TCP. Here's a relevant post from someone who probably knows more about DNS than anyone else. 

I can't, but maybe you'll get lucky. Given a scrambled configuration of a Rubik's cube it is very easy to work out a set of moves to return it to the starting state. It is usually impossible to work out which moves were used to arrive at the scrambled state - because the number of possible sequences of moves is vast. Your problem is similar. Partly because you give no clues about platforms, locales and tools that may have been used to create this text file. 0x89 is not a valid first-byte for a three-byte UTF8 encoding of a character. 0xDBAA is Arabic empty centre low stop. Which is of course implausible. Perhaps UTF8 has been misinterpreted as some 8-bit encoding and then saved as a different 8-bit encoding. If the file has been near Japan you might throw some misuses of JIS, Shift-JIS and EUC into the mix. There are maybe a dozen plausible Unicode characters and probably a greater number of plausible 8-bit and 16-bit encodings. That's too many permutations to try manually. If it was important enough, I'd maybe write code to try all permutations of starting character plus two scramblings and see if any arrive at 0x89DBAA. Statistically I'd expect the most likely scenario is something almost but not quite entirely unlike: 

The above is a simplification and reflects my own opinion and limited understanding. Virtualisation is a complicated subject (viz Paravirtualisation, Intel VD-x, AMD V, ...) - consult Wikipedia, Google and other sources for a better understanding of Virtualisation. 

If you visit the manufacturers website and search for the "Support" pages for your specific model, you may be able to download some software to help with this task. 

Because Windows attempts to render large numbers of Unicode combining characters when your text contains them, even though no actual script would ever combine that many marks together. 

No - at least, none that I know of, it would involve downloading dozens of pages and stitching tables together or at least concatenating the results intelligently. 

So you can easily create a file containing that number, as needed (e.g. using PHP's system() function) Or just read it directly 

If you get an answer, it is a version of BIND and might give a clue to the OS as well. For obvious security reasons, this sort of facility is usually disabled. There is also fpdns, it may not have a Windows port but you could boot a Linux live CD. 

2. Installation I use a package manager wherever possible (e.g. yum or apt-get). This is possible for a very large number of applications, in a few cases you may have to add a repository. My second choice would be lower level packages such as RPMs and compiling from source would be my last resort (but some people prefer this) Some package managers can install from RPMs (e.g. ) If you are compiling from source, its probably not a huge step to create your own package so that the system installer knows what you've done. Then your problem reduces to e.g. The alternative is to keep good documentation about all sysadmin activities undertaken (I keep a journal in a text file anyway) 

Your 32-bit OS can address 4GB of RAM however the PC architecture means that Video memory and a lot of other resources are memory mapped so not all of that address space is free for use as ordinary RAM.