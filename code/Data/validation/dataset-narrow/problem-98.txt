If you feel that way you should try to find the answer yourself. The first result you get when Googling "tcp cwnd" is this Wikipedia page which states: 

As I have highlighted in bold, conwind and cwnd both mean Congestion Window. If you'd like to learn more about TCP/IP, I can't recommend TCP/IP Guide enough. It is an excellent book, and free too. If you do get good use out of it though I suggest you purchase a copy of it too as a "thank you" to the author. 

Another possible cause is micro bursting which happens when you've got a speed step down (e.g a 1Gb interface connected to a 100Mb interface). If your interfaces are configured to auto negotiate their speed and duplex, check them all to ensure that they've negotiated their settings correctly. 

Very strange topology... However in my opinion you have to add route on "Router to configure" for 192.168.10.X network pointing to PC1 ( 192.168.0.9). 

You can attach cisco switch with two PCs behind the router. Dot1q trunking can be used with 1 vlan per PC for traffic generation and second one for SLA probes. The router must be used for inter-vlan routing, traffic shaping also should be configured here. IPERF/JPERF can be used for traffic generation. On both switch ports you can mark the traffic with specific DSCP value, which needs to be used later in the policy. Speed can be easily measured with IPERF: 

The practical rule for latency calculation is ~0.3 ms for every 100km. In other words for the distance between Singapore and Canada (13 000 km straight line) the latency should be around 390ms. I assume it is little bit lower. You can measure it by using ping. The output will give you the RTT. Once you have that value you can use following calculator: TCP CALCULATOR So if we consider that you really have 100Mbit/s international traffic available and default TCP window size of 64kbyte you will get following as speed: 

The reason why you're not seeing the same problem with UDP is because it is connectionless and therefore it does not know nor care whether the remote end has buffers available, it will continue sending more data anyway. My suggestion is to first ensure that the hosts you're using for testing have sufficient RAM and CPU, and if they do, try testing from a couple of different hosts. The fact is that it's not the network connection which is holding you back, it's that your host(s) are not processing the received data quickly enough which is therefore delaying their ACKs which in turn is slowing your connection down. 

The first three VLANs allow the switch to perform routing for these three VLANs. The fourth VLAN is used for routing between the switch and the router. Through this VLAN you will need to configure a default route on the switch witch points to the router's IP address as the next hop address. Note that instead of using VLAN 100 you could issue the "no switchport" command on the switch's gi0/1 interface and use it as a layer 3 interface instead. 

Latency can be extracted from iperf test, but I'd recommend adding SLA probes via some external software like this one 

I used to have lots of strange issues with SIP400 cards and 7609 chassis... Not sure if this one is matching the behaviour but please check it: CSCsb69734 SIP400: Sub-int IP state up but not reachable after SSO & reload Symptom: In rare situations, the 7600-SIP-400 SPA-2X1GE sub-interfaces can be unreachable even when the interface state is up. Ping or even control plane traffic (such as OSPF hellos) do not pass through the sub-interface but traffic passes through the main interface. Conditions: The problem might be encountered when a SSO switchover is done concurrently on one of the routers and line card/SPA reset is done on the directly connected interface on the other router. Workaround: When the interface is manually reset the problem disappears (i.e. shutdown, then no shutdown on the interface). A SPA/line card reset also solves the problem. Further Problem Description: This problem is seen with IP & IPv6 configurations on the subinterface. 

This is expected behaviour. As you were using a hub originally (which sends the packets out all interfaces except the one they were received on), the routers were receiving packets destined for other routers on the same subnet. As a result, these routers were sending redirects to the ping originator telling it "don't send your packets to me, send them directly to the router you're trying to ping." As you mentioned, using a switch instead of a hub resolves the issue. This is because the switch ensures only the router which the ping is destined for receives the packet. As the other routers on the subnet do not receive these packets, they do not send redirects anymore. 

This is spot on. There are 32 bits in an IP address. As you've got a /30 that means 30 of those bits are "reserved" network bits. As you know, you're not "allowed" to change network bits otherwise you're more than likely end up with IP address conflicts. This therefore leaves you with 2 "Host" bits which you are "allowed" to play with. As you correctly point out, these 2 bits result in 4 addresses. However, when we use the 2 ^ n - 2 formula to determine the number of usable host addresses we're left with two addresses. As you already know, we subtract 2 in this formula to account for the first and last addresses in the subnet as they are the network and broadcast addresses respectively and cannot be assigned to a host. Now if I understand your question correctly you're asking can a /30 be used to create a couple of subnets. To calculate the number of subnets we'll get we need to use a formula which differs slightly from the one mentioned above - this formula is 2 ^ n (note that we do not subtract 2 here). Let's say we use the two host bits in this calculation - 2 ^ 2 = 4 subnets. However, as this uses all of the host bits we don't have any left to allocate to the wifi routers. Because of this it would be more appropriate to use only 1 host bit for the subnet and leave the other bit for the hosts. Therefore our subnet calculation would look like this: 2 ^ 1 = 2 subnets. However, we hit an issue here too. As as we've only got one host bit left we won't have any usable addresses because 2 ^ 1 - 2 = 0. Therefore the answer is no, you cannot subnet a /30. Note: OK I may be fibbing a little here... there are some situations where you can use /31 and even /32 addresses (for example, loopback interfaces and point to point links) but they're another kettle of fish. Now if you were asking about a /29 address instead, then the answer would be yes, you can use this network address to create two subnets with a couple of hosts each. Let's look at why: 

I have personally done that ARP timeout set to 60 sec for a single VLAN caused 0.05% ARP usage on cisco 29XX series. It is running like that for over a month. No problems at all. Still I'd not recommend using the network for solving clustering problems. 

More specific match is always going to be selected, so all the traffic will go to 234. You can't control how other ASNs are going to do their routing. If they decide to announce more specific static via redistribution then all the traffic will use it. However in normal situation ISP is not going to use static routes for subnet which is not part of their address space. 

Normally the router will periodically send a membership query to destination 224.0.0.1 (all hosts multicast group address). Hosts that receive this message will respond with a IGMP membership report to tell the router that they are still interested in receiving the multicast traffic. When the router receives the membership report, itâ€™s expiry timer will be refreshed. Expiration can happen due to 2 reasons: 

In regards to graphing the information every 5 or 10 seconds, you could use monitoring software like Cacti to achieve this. References: 

Guy's answer is spot on. Just an FYI, if you're interested in reading more about MSS and MTU, I've written a couple of blog posts on the subject - $URL$ Back onto the subject of the Window size - the calculation is as follows: 

You're right - it is like comparing apples and oranges :) For exmaple, RIP's maximum metric is 15 but doesn't mean anything when compared to an EIGRP metric of 30720. In regards to the EIGRP metric being so high - part of the reason is because EIGRP multiplies its metric by 256 in order to be backward compatible with IGRP (EIGRP's predecessor). As per this Wikipedia entry: 

3) If you issue the boot command and the result is in a successful bootup, either the default switch> prompt or the hostname> prompt displays 4) If you issue the boot command and the command does not result in a successful bootup, either the switch: prompt displays or you are stuck in a continuous reboot again. The only option to recover the switch is an Xmodem file transfer 

Please do the following: -shutdown the switch -press Mode button while power on the switch to enter in switch: mode. -set BAUD 115200 -flash_init -copy the file The random symbols are normal since you are transferring the file via console. So you can actually see the data flowing via the link. Just leave it for few hours and image will be uploaded. 

Imagine a situation when packet arrives at the first router and it's size is nearly to the MTU of the physical egress port of the router, then it is encapsulated with IPSEC headers. Those additional headers will probably exceed the MTU of the egress port In such situation the packet is going to be fragmented after encryption - post-fragmentation. Of course this forces the remote IPsec peer to perform reassembly before decryption. You can avoid post-fragmentation if you set the MTU in the upstream data path to ensure that fragmentation occurs before encryption (prefragmentation). Prefragmentation is really important from performance perspective because it is moving the reassembly task from the remote IPSEC peer to the end host. 

The first two bits of the fourth octet in the "IP Address" (highlighted with * below) are included in the network portion. This is because the first two bits of the fourth octet in the "Subnet Mask" (highlighted with ! below) dictates this. 

It's impossible to say to give you a definitive answer. A router is like a computer. If you throw a big workload at a cheap, home grade one you're likely to hit its limits. However, if you use a suitably sized one it will have no issues doing what you need. In other words although your router doesn't seem to be able to handle your applications load it does not mean that everyone else's router would struggle too. 

It's funny you e-mailed me about this question, I'm writing another blog post at the moment that answers this very question. I should have it posted in the next few hours. EDIT: The blog post has now been published. Anyway, let's get started on your question :) 

You can add ip flow ingress/ip flow egress under the interface (Ethernet0 in your case). This will enable NETFLOW caching of the traffic passing through that link. No worries no risk involved. After that you can execute show ip cache-flow and you will see all the packets passing through that interface. Most probably the rest of the devices have more specific routing and default gateway is not used at all. 

The new SUP-2T can support up to 4000 VRFs. This design has two main drawbacks which you need to consider: 

Most probably you have an application issue on the server listening to the traffic and it is not sending IGMP messages correctly. You can solve the problem by adding ip igmp static group to the outgoing interface. 

If you really want to explore the topic for measuring optimizing TCP perfromance I'd recommend to read RFC-6349