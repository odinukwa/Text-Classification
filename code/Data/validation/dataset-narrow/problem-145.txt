As others have mentioned, Access Ports are the way to go, but in a Colo senario I would look at Private VLAN's as a way to isolate every customer from each other by using Isolated ports thus saving on addressing space in your DC. 

I've done large scale wireless deployments and while that figure that you were provided is completely not out of the ballpark for 2 AP's and labor, you (and your superiors) need to ask if you have the time (which often equates to MONEY) to spend learning how to setup and install these AP's. I remember back when I first learning how to deploy wireless networks, design considerations were much different than traditional ethernet network and I myself had several stumbling blocks along the way. I would suggest showing these comments/responses from everyone here and then discuss the pros/cons of such a deployment by yourself or by an outside vendor. Some of the pros of doing it yourself: 1: Less money up front (as you don't have to pay a consultant) 2: You gain some knowledge that you didn't already have! Some of the cons of doing it yourself: 1: Longer deployment (which does equal money as you have to spend time away from other tasks) 2: Security issues with the final deployment could potentially cause Layer 2 breaches out in the parking lot of your building if your not careful Some of the pros of hiring a consultant: 1: You get to spend your time on your projects 2: The wireless project will most likely get done in a day or less given the amount of AP's to be installed 3: The wireless network (should be) will be as secure as your wired network Some of the cons of hiring a consultant: 1: Cost! 2: They often setup and run with very little knowledge transfer (not all do this I know...) Often you will find that it is easier to bring someone in to install these systems in less time than yourself, but I would make sure that in the contract that they provide some form of knowledge transfer on how to not only access the wireless network but how to administer it on a basic level. 

Does anyone know why on earth should I specify the Ipv6 address of the tunnel (last command)? The fact that I've written: 

Why is it necessary to configure tunnel source IP? Isn't it something R1 can figure out on its own? When pinging 172.16.0.2, it adds IP and GRE headers, and sets dst IP to - it knows it based based on the configuration above. Can't R1 simply figure the source IP on its own? R1 just checks its routing table to find out the next hop for and chooses the interface with the longest prefix match. There's no ambiguity regarding which interface it should send that packet from. 

$URL$ Let's say I have a bunch of hosts connected to a typical router (which is in fact a switch + router) that has a public global IP assigned by my ISP. The hosts use private IPs that are non-routable addresses, and need to be translated using NAT to the public one so that it can talk with the rest of Internet. Now, my router is connected to a network of my ISP. It has some IP address in that network, but that address is different than what my public IP address is, right? - it follows from the article linked above: by this command: 

TCP and UDP are two protocols that operate in the layer 4 (transport) of the OSI/DOD Model, however tcp might use different port number for different type of service, for example if you are sending a mail, tcp will use smtp tcp port 25, if you send large file without messaging system like mail, tcp will use ftp tcp port 20/21 

A subnet mask is a 32 bit value that allows the device that's receiving ip packets to distinguish the network ID portion of the IP address from the host ID portion of the IP address, so without a subnet mask that can be represented in form of a 32 value like (255.0.0.0) or slah-notation(/8) it is impossible to identify the network prefix of an IP address. 

In this situation, you don't actually have load balancing, both routers are set with a priority of 100, you should set a higher priority like 110 to the one you would like to become the active router. 

When a packet with dst IP address arrives to R1, how does R1 know where to send it? It checks its routing table and knows that is directly connected? Anyway, it adds new IP header (dst IP set to -tunnel destination) and GRE header to that packet. When R2 receives the packet, it knows the packet was addressed to its interface and it matches the tunnel source IP address that was set up on R2. So it removes the outer IP and GRE header, leaving the packet with dst IP and routes it forward (not in this case of course, but it would if the dst IP was different). Suppose there was another router - R3. Is it possible to set up a tunnel between R1 and R3 using the same network - ? When R1 pings the tunnel interface of R2 - , how does it know how to send it there? It probably checks his own Tunnel0 configuration: oh, I should send it to , which is in the same subnet as my Tunnel0 interface . Then it checks address to learn it's . In other words, it can't directly ARP because it's not a physical connection. Let's say I add R3 with Tunnel1 interface whose public IP is . Next I configure Tunnel1 on R1: 

If buffer size is an issue, and you have physical access to the Router (which I know I am assuming that you do), set up a TFTP session between the 7609 and your laptop. Then you can dump the config file that way to the router. 

Did you issue a show controllers ethernet-controller gigabitEthernet 0/1 ? If so, what did you notice on each interface that your are having trouble with? I agree with irina, check L1 first, then further check your switch for controller errors if there are any. If you can rule that out, the most likely culprit is the machine or configuration of the machine. 

Personally, if the network is for the most part an all Cisco shop, meaning at least your access layer is setup with Cisco switches; I would look at port security and DHCP Snooping as a way to guard against this type of issue. Setting a max of 1 MAC address on all Access ports would be extreme but would ensure that only 1 device could show up on a switchport at a time. I would also set the port to shutdown if more than 1 MAC shows up. If you decide to allow more than 1 MAC, DHCP snooping would help as most consumer grade Wireless Routers introduce DHCP in the local subnet when the end user plugs the device into the switchport. At that point port security would shut the switchport down once DHCP snooping detects that the Access Point is offering DHCP. 

Pinging 172.16.0.2 from R1 probably wouldn't work, because now I have two tunnels on R1 using the same subnet (R1-R2 and R1-R3). R1 has no idea which tunnel I mean here and therefore it doesn't know the tunnel destination. 

In a GRE tunnel, when R1 (public IP , tunnel address ) sends a packet to R3 (public IP , tunnel address ) and R3 receives it, the following happens: 

TLDR Does it mean we need a different subnet for each tunnel? If so, shouldn't all tunnel subnets be /30? We only need two IPs for a tunnel - source and destination. 

which assigned a public IP (in other words, inside global IP) to the host . That's quite weird, because you usually give a public IP to all devices in your network, not to just one host. If the inside global IP address is indeed my public IP address, can't I just change my public IP? I guess it has to be configured in the NAT of my home router. If it's not possible, is it just because the router firmware doesn't provide a way to change that IP? 

accessing your 2 networks with only one PC it ok, but if you want to fully Protect your intranet, I suggest to use a KVM, this will give you the impression of using a single monitor. 

Media Endpoint Discovery that is an enhancement of LLDP, known as LLDP-MED, may help you doing that. 

ICMP is a protocol used to report problems or issues with IP packets (or datagrams) on a network. The most popular use of ICMP is to send ping packets to test the network connectivity of remote hosts. The network device generates an echo request packet that is sent to the destination device. Upon receiving the echo request, the destination device generates an echo reply. However the term binding is used when you have a DHCP server. 

sometimes you need to reboot your router to affect election process during OSPF BR election, sometimes you do it after modifying the configuration register to actually modify the boot process or restoring password, if your network is experiencing congestion you need check it out, I don't think rebooting constantly your network/router is a solution. 

Translating private IP of my host to the public IP of my router with a special port number (that allows the inverse translation back to my private IP to happen when the other host sends a reply). Translating private IP of my host to a public IP that's different from the public IP of my router. The problem is - how does my NAT router know that his public address used for translation isn't already used by some other host on the Internet? 

A packet is received on R3's physical interface. A routing decision determines that the destination address belongs to R3. The router recognizes the destination IP address ()and GRE header as belonging to the tunnel interface. The tunnel interface removes the outer IP and GRE headers, and the original IP packet is sent back "in" to the router. A second routing decision is performed based on the original destination IP address. The IP TTL is decremented by one and the packet is transmitted out the appropriate interface. 

If you want to add multiple devices to your network, I suggest to use Switch instead of HUB, switches have been invented to resolve many problems caused by HUB like "one single big collision domain, one big broadcast domain, speed/duplex limitation and so on". even with Switch sometimes it is necessary to create smaller broadcast domain wich is good for network performance by using vlan. so avoid using hub in your network if you can afford switch. 

Each VLAN is a network, Basically according to your diagram you have 9 networks, with a Router you don't need to do routing with a layer-3 switch, However maybe you don't have 9 ports on your router for your 9 networks, in this situation, you can use a technique called router on a stick by creating virtual port for each vlan, here is an example. on the router Interface Fa0/1 ip address 192.168.10.1 255.255.255.240 interface Fa0/1.2 encapsulation dot1q 2 ip address 192.168.1.65 255.255.255.192 interface Fa0/1.10 encapsulation dot1q 10 ip address 192.168.1.129 255.255.255.224