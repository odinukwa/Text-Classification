You NAT from the inside interface to the outside interfaces and . You use the interface as the address for the translation, not an outside interface, with the command. 

The particular device you have listed is required to be used as a pair. This is for someone who want to extend a network across voice cabling, or for a small ISP to use to connect to customers. It doesn't work as a general replacement for a DSL modem. This is explained in the device description (my emphasis): 

I'm not sure what you mean by a real example? If you want to see it in action, you can use something like Wireshark to capture a TCP conversation during a download. You could do a simple Internet search to see a lot of contrived examples. Your calculation is far short of what is needed to calculate TCP throughput. Also, you need to understand that dynamic factors like congestion will constantly change the throughput, with the windows growing and shrinking all the time to adapt to the changing network environment. Without a lot more information, it isn't possible to, "know the number of packets that can be received by a receiver in each second," and that number will change from second to second. 

Since AD is only local to a router, not affecting any other router, it would be the router vendors. AD is not sent to any other device; it is only used to determine which route is best in the local router. Certainly Cisco decided EIGRP should be more trustworthy than the other protocols. 

RFC 4291, IP Version 6 Addressing Architecture will give you the basics, and RFC 5952, A Recommendation for IPv6 Address Text Representation will give you the canonical representation. FYI, the IPv6 address is canonically represented as and is called the Unspecified address. Also, the address you list, is in the part of the Unique Local address range that is currently undefined; would be in the part of the Unique Local address range that is defined, but it would be missing the required Global ID. 

I would also suggest that businesses probably (or should) use a separate DHCP server. There may also be more to the network topology than you may see. Without specifics, we really can't tell you why any particular implementation was done that way. 

VLANs allow you to have different networks on a single switch. Rather than getting two switches, one for each of two VLANs, you could run both networks on a single switch (assuming you have enough switch ports on one switch). If every switch connects directly to a router, and you only need one network per switch, then there really is no need for VLANs. It also obviates the need for STP and the problems inherent in that. 

You could put in a router with NAT or a firewall between, and set the TCP timeout to be very low. Alternatively, you could try to correct the situation by using TCP keepalive. This will periodically send TCP ACKs with no data in order to keep the TCP session open. 

That sounds like a layer-1 problem. You need to check the interfaces on both ends of the links to make sure they are set to Auto/Auto, and you need to test the cable. A 1000BASE-T connection will fall back to 100BASE-TX if the interfaces cannot use all four pairs. You should always start trouble shooting at layer-1. When you rule that out, move on to layer-2, etc. 

The document to which you link claims a specific IOS version. It may be incorrect; that would not be unusual in Cisco documentation. In reality, having tested this on several IOS 15.X versions, you do not specify a prefix length on a link-local address since it is implicit for the link local address, as you saw in your CLI help ( shows , the address without a prefix length). You do specify the prefix length on a non-link-local IPv6 address since there is no implicit prefix length. Personally, I think specifying specific link-local addresses on your interfaces is going to be a giant pain, with little to no gain. Just enabling IPv6 on an interface will assign a unique link-local address, and that is all you really need. There is really no security risk about having the Interface ID being derived from the MAC address, since the address will never be seen off-link, and it won't be tracked across the Internet as a Global Scope address could be. 

Your device doesn't need to tell the router anything. The router knows the networks which are attached to its interfaces. It will ARP to resolve the layer-3 address to a layer-2 address before encapsulating the packets into frames for the network segment. IPv6 has DAD (Duplicate Address Detection) built in. For IPv4, it was not part of the original standard, but there is now RFC 5227, IPv4 Address Conflict Detection: 

If this traffic is not encrypted before it gets to an external firewall, it is possible to capture network traffic either as it leaves the PC or just after it leaves the PC before the firewall. If the traffic is encrypted by your application, there are proxies that can decrypt/encrypt HTTPS traffic in order to change the source address of the traffic. Whether or not a particular proxy lets you capture the decrypted traffic before it re-encrypts is something you would need to research. Large companies often use these sorts of proxies, and some allow the company to do this in order to snoop on employee web use. These are typically high-end, dedicated proxies that require lots of CPU horsepower. You will need to do your own research to see if there is a product that fits your needs. Product/resource recommendations are specifically off-topic for this forum. 

Routers route between network, so each router interface belongs to a different network. Since you cannot connect both switches directly to the same router interface, you would be connecting them to two different networks. Also, switches use spanning-tree in order to create a single, loop-free path on the layer-2 LAN. In order to do this, all switch traffic is sent to the elected root switch. A switch has no idea which packets are destined for the Internet because all layer-2 traffic is local. Switches know nothing about your layer-3 addressing. 

The flaw with your statically configured routes on Router 1 is that Router 1 has no idea where is, or how to send traffic to it. Router 2 will also need to know how to get back to the Router 1 networks. 

The host with the address thinks that all the other hosts are on the same network, so it will happily send out a ping on the layer-2 network. For a response to be sent back, the hosts need to believe that the requesting host is on the same network, otherwise the hosts will try to send a response to their configured gateways. There is something wrong in the configuration of the two hosts which do respond. Unfortunately, host configurations are off-topic here. The masks may be incorrectly configured, or, as I have seen in a few hosts, they do not have a gateway configured so they do respond. You need to figure out what is wrong with the configurations on those two hosts. 

An end-station would send beacons for an Ad-Hoc network, but not to a WAP. You should really get the scoop directly from the IEEE 802.11 Wireless LAN Standards, but Wikipedia has a description of the management frames which IEEE 802.11 uses: 

As far as the outside TCP peer is concerned, it is connecting to the outside address of the NAT device, even though that device is forwarding to the other TCP peer on the inside, based on the connection initiated by the inside device. You can also study RFC 5382, NAT Behavioral Requirements for TCP. 

The answer @kll gave is probably the best you can do, although geo-location is getting worse all the time with the IPv4 address shortage because some users are using addresses assigned to RIRs in other continents. I know of at least one company that will only use ARIN (North America) addresses for its addressing, regardless of the site location anywhere in the world, because of the problems with sites being blocked, based on geo-location, from certain regions. The most reliable method would be to use GPS, but that can be problematic indoors, and it would require extra hardware in your device. On the positive side, it would give you the most accurate time, too. 

Note: The switches have MAC address tables, but the PCs do not. PCs are layer-3 devices, and they maintain ARP tables, while switches, as layer-2 devices, do not. The switches have MAC address table to tell them to which interfaces a MAC address belong, but the PCs have ARP table to tell them which MAC address belongs to which IP address. A switch MAC address table will be updated every time it receives a frame on an interface. 

You need to set the community on any prefixes that you advertise. It is unlikely that you are advertising only a host prefix. 

I believe that CS stands for Computer Science, and EE stands for Electrical Engineering. What it means is that electrical engineering looks at the physical circuit properties, while computer science looks at the practical application of moving bits. The number of bits can be more, less, or the same as the frequency in Hz, depending on several things, e.g. encoding. 

Yes, the PIX can use access lists which use a wildcard mask, not CIDR notation. For instance, the range would be entered as . Convert the CIDR notation to a mask ( -> ) and get the inverse of the mask ( -> ). This is pretty basic network stuff. It is much easier to do in binary: 

There is no specific discovery for border routers. You need to understand more about OSPF and the LSAs which it advertises. Every router in an area knows the complete topology of the area in which it resides, so every router knows by the LSAs it receives which routers in its area are border routers, and which routers are not border routers. All OSPF routers generate Type 1 and/or Type 2 LSAs. ABRs generate Type 3 and 4 LSAs. In OSPF, all the ABRs are connected to Area 0, so Area 0 knows about all the ABRs. ASBRs generate Type 5 LSAs. By looking at the received LSAs an OSPF router can tell which are border routers. A more in-depth discussion of OSPF and the LSAs is too broad for this site. If you learn more about this, you can ask more specific questions. 

It may be possible to have a host that receives multicast traffic and sends it to a different multicast group. Unfortunately, questions about hosts/servers are off-topic here. You could try to check for such an application on Server Fault for a business network, or on Super User for a personal network. 

No. It is like a chassis switch losing a port line card. You will lose the ports of the non-master switch, but it doesn't affect anything else. 

It sounds like someone removed the domain name and password on the switches in question. This leaves them with no VTP set, just like a new switch, which will auto-configure VTP from VTP advertisements it sees, even from new switches added. The VTP domain name is also carried in DTP messages. A best practice is to use the and commands to disable DTP on the trunk links and unconditionally trunk. You should set the domain name, password, and Transparent mode, and insist that all new or replacement switches be set that way prior to connecting to your network. Another Cisco best practice it to only use a VLAN on one access switch, rather than have VLANs across multiple switches. This will prevent many STP problems. It used to be, "switch where you can, route where you must," but that is now obsolete. It is now a layer-3 world, and almost nothing requires hosts to be on the same layer-2 broadcast domain. By the way, switches in Client mode could have done that to you, too. It is not only Server mode switches which can override the VLAN database (see highlighted text): 

This really has nothing to do with the host interface, which is only going to receive at the rate send by the interface on the other end of the link. You can't have two other hosts connected to a single interface in another host; there must be some network device (router, switch, WAP, etc.) in between. For example, if the host is connected to a switch to which the other two hosts are connected. The switch, absent any special configurations, will send traffic to the destination host on a first-come, first served basis at the rate its interface is configured. Any traffic above the interface rate will be dropped. 

Of note is that you want flexibility, but you have painted yourselves into a corner by specifically using IP addresses, removing all your flexibility. Your applications should be using domain names rather than specific server IP addresses. If you correct that problem, you will regain your flexibility. This is the point in time which you should bite the bullet and fix things to the way they should be.