It's kind of strange to differentiate price for the service based on technology rather than SLA. Nevertheless, the best way to find out certainly is to ask your ISP, because there're plenty of techniques to do so, such as: 

I think your question is way too wide. There's protocol stack for 2G, and for 3G. They're different. Frequencies are different. Even controller/core is at least logically different. For documentation you can visit $URL$ Find protocol stacks and compare them "line by line" if it meets your purpose. 

I've done some tests with different MTU values. All tests were performed for mobile data, no voice affected or tested. Results are as follows: 

Flow is a chain of packets combined by some attribute. For different protocols attributes are different (ports, seq numbers, etc). Load balancing in LAG may differ, but usually per-flow load balancing is being used. When per-flow balancing is used, flow is guaranteed to be transmitted via the same link. On the other hand it is possible to balance based on packet (per-packet balancing). It's not usually the case because of issues, such as out-of-order packets. You should consider using different hash methods based on your traffic profile. If you have big diversity of MAC addresses (e. g. L2 switched domain), use MAC for hash. If you have big diversity of IP addresses (e. g. small L2 domain + routing), use IP for hash. 

VPWS and Xconnect is about the same technology. VPWS is the name of technology, xconnect - keyword for configuring pseudowire. You can find different naming like VLL, L2VC, PWE3, etc. Essentially they are referring to the same technology of p2p l2 connections. You can find more info in RFC 4664 For instance section 1.3 says: 

One more notice: packets with DF (don't fragment) bit can be successfully fragmented on underlying level and reassembled at packet core with DF bit preserved. E.g. pinging some host with DF bit set and ICMP payload of 1472 is possible, but packets between base station and mobile packet core are still small. 

I am curious to know if in an Ethernet network the techniques used in LTE or other High Speed wireless Network that allow different devices to send data at the same time can still be used. For example would it be possible to use different frequencies for different devices on the same network and still have the devices "understand" each other? I know that when hubs were used and many computers would have access to the same wire there was a system called CSMA/CD that would prevent two devices from talking in the same time. What if the devices would communicate at the same time but at different frequencies? 

I am interested to know if the CSMA/CD protocol is still active in modern Networks and if it is active why and what is his role now? 

I recently found out that lots of different types of devices have a MAC address not just ethernet devices. I was thinking that it is possible for Internet protocol to run over many other types of technologies besides ethernet layer. Are there scenarios where other technologies besides ethernet are more practical or efficient or reccomended to use for communication of INTERNET protocol (like connecting through the internet) ? 

I know that most wireless communication devices have a MAC address. I wonder if the pool from which their MAC addresses are assigned is the same address pool from which physical Ethernet devices also take their MAC addresses from. In my opinion it should not be the same pool because it would be no problem if a Bluetooth Device and a Network Interface Card in a Personal Computer have the same MAC address? It is not possible, in my opinion, to have a collision. Even if a Bluetooth device would somehow be connected to an Ethernet LAN it would be through some sort of network adapter and the network adapter should have a MAC address of its own and that MAC address will be the one that will be used to communicate in the respective LAN. Is this right? 

Both IPv4 and IPv4 vrf TEST22 address families have Lo0 as the source. As long as IPv4 adjacency is I assume Lo0 is not in VRF. That makes your BGP source inaccessible. 

End to end VLAN or bridged connection through router L2TPv3 VXLAN OTV Older technologies such as Frame Relay more and more. 

MAC address consists of 48 bits. It is 2**48 or 281 474 976 710 656 addresses, which is more than enough at the moment. Plus there is practice to reuse MAC addresses of obsoleted equipment. MAC address is usually represented in hex, which is n in your formula. But one "element" has 00 to FF - which is 256 - combinations. So 256**6 should be used for calculation. 

There's bug with some line cards on this platform which leads to card crash when reboot occurs after long uptime. If this happens, the card is subject to RMA. Cisco can determine potentially risky cards by serial number. Best solution for you is to contact technical support and ask them. You should use specific version of software based on features you're using. Again, best advisor for you is Cisco. They can verify all potential bugs and recommend good variant for your needs. 

You can't determine configured hostname by using IP or MAC. You can do it with CDP or LLDP, if protocol is enabled on interface of the switch. 

PPPoE stands for Point-to-point protocol over Ethernet. It is protocol designed to transmit PPP frames over Ethernet network with additional Ethernet header. This protocol is used for obtaining PPP software properties (e. g. call to some station and thereby establish stateful connection) over Ethernet infrastructure. 

I don't know platform that allows IP address with mask of 0. So generally the answer is you simply can't use /0. On the other hand if route is pointing to the interface, hosts with /32 masks can reach each other. Again, not each host allows /32 on the interface configured. EDIT: Linux does allow /0 CIDR notation. Behavior doesn't really change: you still can access hosts on shared segment with ip route via interface. General answer: If host supports particular CIDR notation and routes are pointing to the interface, it can reach other hosts with similar route configuration. Mask doesn't really matter in this case. Note: all of above may be useful for educational purposes but is almost not applicable in practice. Don't do this in production. 

I know there are certain error detecting and correcting codes added at the Layer 2. However is it still possible to have errors go undetected eve with the addition of these codes? What type of networks are more prone to undetected errors? Are wireless networks more prone to undetected errors? 

I never worked with bridges because they were no longer used when I first got internet at home, and I have some troubles understanding what exactly was the role of the switches. From my search I concluded that a bridge can be viewed as a simple switch with two ports and it does MAC switching between two SETS of MAC addresses instead of two MAC addresses. Is this way to view a bridge correct? 

I am asking this because after doing some research I found some conflicting information. First, on Wikipedia page on Ethernet physical layer I found that the voltage on the lines is 2.5V. $URL$ But in more trainings and course that I take in Uni the professors said that it is 9V or 12 V. Are there more standards for the physical connections and voltages on ethernet lines? 

I want to know what is the EtherType field of a BPDU frame in various versions and variants of the Spanning Tree Protocol. 

I am analyzing the block diagram of a switch and I would like to know more about the difference between PHY chip and ASIC (which I think is also called Switch controller). What is the JOB of each device and how do they communicate? 

I am not a native English speaker and I know what MAC addresses are and how are they used in networks. However what I do not understand is where this words came from independently. What does Media mean in terms of networking and what does media access refer to? Maybe for an English speaker it would be more easy to make this connections but for someone that is not is not that easy. 

I noticed that many companies that manufacture switches including Cisco, Avaya and Extreme Networks use processors that use PowerPC architecture. However they are inferior as speed to Intel and AMD and other x86 architecture processors. Why are PPC processors STILL so popular? 

Tier X is formal reference. Traffic flows according to IP routing table. Basically you can access some resources without even leaving your provider's network. And some others require traffic to flow through several ISPs with different "tier". 

Generally all the devices at the AP communicate through AP. There are technologies as Wi-Di and Wi-Fi Direct, but those are beyond the scope of this question. So devices can't communicate directly in common Wi-Fi network. Regarding traffic interception, you should take into consideration ciphering here. Though there are ways to intercept traffic and read it contents, with WPA2 those attacks are very complicated. 

VPNv4 is the "transport". Your VRF route-targets match on both devices. Long story short, RT is extcommunity that is sent over VPNv4 session in BGP update. If one of local import RTs matches received extcommunity, routes are being imported in VRF with this RT configured. Actually VPNv4 is quite complex and complete explanation is beyond the scope of this site. VPNv4 is not required in order to run routing protocol inside VRF. Cisco calls it VRF-lite. Your problem with state here is related to routing. 

All your assumptions are correct. Subnet mask determines subnet length. So in cases you described length of network changes, but host remains inside of the network. The difference is .145 will not need routing entry (except connected 192.168.1 one) in order to reach, say, .200 with /24 and /25 mask, but it will need route in order to reach the same .200 host with /26 mask. And similarly it'll reach .1 without routing entry with /24 mask, but not with /25 and /26. 

Why would you need filters to begin with? It is in Cisco IOS. Copy all the interface config into you favorite editor, and replace with . Then just paste result into console. Make sure it is pasted properly using some technique. For instance you can simply paste not all 100 at once, but 10-20. If you need to change priority for plenty of noncontiguous vlan interfaces, delete unnecessary ones manually or use regexp. 

I know that there are devices that now support agentless SNMP configuration. However I believe that the SNMP agent application has to run somewhere. It has to be some code running somewhere stored on some flash memory or a similar device. 

What are the algorithms that are used by Fabric Connect protocol/protocols to choose the best path to forward a packet? I know that Fabric Connect is used to replace the Spanning Tree Protocol that chose the paths that are to be disabled in specific VLANs to prevent network loops. 

I know that when hubs were used there was the possibility of collisions whenever two devices would transmit data at the same time. However on that time I believe that communication was done in Half-Duplex mode rather than Full Duplex like today. Hypothetical Question: Suppose that Full-Duplex communication would have become really popular before the invention of Ethernet Switches. Would Switches have been so necessary in that case. Would it have been possible that switches would have been delayed because they would not be needed AS MUCH as they were because the communication between Network Interface Cards would have been already Full-Duplex and collision would have been already rarer? 

Do managed switches have regular x86 CPUs? Do they have proprietary CPUs? Or other types of processors like PowerPC processors or others? Is it possible to find out what type or model of CPU is inside a particular model of managed switch for example CISCO or AVAYA switches? 

What was the protocol usually used on top of X.25 and ATM or even Frame Relay Networks when those were commonly used? Was it also TCP/IP protocol stack or some other protocol stack? From what I know since the beginning of the Internet (ARPANET, NSFNET) TCP/IP protocol stack was widely used at least on the access layer of the networks (host machines). However I know that X.25 and ATM networks were also widely used but I am not sure at what level did those networks work. Were they also carrying TCP/IP traffic? 

I am interested in the terminology of the following words: baseband, broadband and bandwidth applied in tellecomunications. What is the meaning of the words, how were they formed and what do they mean in the context of modern networks?