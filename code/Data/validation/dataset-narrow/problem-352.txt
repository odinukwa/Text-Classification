Here is an old instructions for setting up master-master replication for windows but concept is same. Considering you already have a 3306 instance by default you can follow below steps to setup as well (if above doesn't help) 

In case of logical backup you can extract single database from mysqldump and put it in a different database. 

If you're using MyISAM, convert to InnoDB and you might see some drop in this counts. There is no other way to reduce this unless you stop querying them. Increase the table_open_cache and table_definition_cache & observe the stats...Raise this as much as you can! May be you need to increase system file handlers too and that is a way to go. 

Is your slave of older version than master? Say 5.5 or less. As you say fails on slave => you're on older slave and that is not required on slave as well. 

Solutions to consider even before we identify exact error here: - separate instance for reporting. - optimize the query. 

MySQL Installer provides an easy to use, wizard-based installation experience for all your MySQL software needs. Included in the product are the latest versions of: 

No. This is not possible using command. All you can do is write a procedure to grab the table & column-name. Get the column definition from information_schema. Create alter-table-modify-column syntaxes & exec... Something like following: 

You want final answer as because both "v" and "d" are "n" at-the-same-time (for id). If this is right requirement then below query should work. 

Looks like in the name of alises you also seem to ignoring the join ! So my guess is non-existence of index is causing the delay, but you can confirm by posting explain plan and/or table definitions. 

Well you can review what mysqldump does on git and try working on it!! Though I'd not go this way... Few things to suggest: 

After all these slave will have the "latest" data. Assuming that that's the only thing we have got: - Restore your master from slave's backup. - Reconfigure replication from master to slave afresh. For next time onwards: 

mysql will write rollback to binary logs provided the transaction has mixture of engines (myisam and innodb tables). As the myisam can not be rollbacked. I guess you'd like this piece of documentation... 

You might need --base64-output=DECODE_ROWS for row based binlog format. You can analyze your day worth of binlogs or use --start/--end options to select time. Check out this and this blog posts. 

While WAMP comes only with MySQL-Server (no client tools etc), not 100% sure but did you see if the wamp-setup is offline installer only? 

So yes as you have mentioned about SQL injection the other advantage is what you guessed. Quoting from documentation: 

"Nov 11 09:05:14 localhost kernel: [ 5931.834129] Out of memory: Kill process 6761 (mysqld) score 233 or sacrifice child" You are crossing system memory and then kernel is killing highest user of memory - in your case that'd be mysqld. Consider revising mysql global and per-thread variables in order to limit total usage under control. You may use this procedure to estimate MySQL memory usage or you might want to fill in here to check the usage details. Also... Swapping is not good for MySQL, it's better to have swappiness set to 1-10 or 0 depending on your kernel version. Refer here. 

The ".frm" file holds table definition. You might want to check mysql file-types info. Usually when you move data-base physically do following: 

As you mentioned of 5.6 i guess tables are Innodb... Where we have PK stored as clustered index. The rows are stored in an index or say leaf node of the PK index is data itself. Secondary further contains the PK key columns as well. So a long PK key => longer Secondary index (WRT size). About large indexes, you might need to look out for duplicate indexes. Also one thing to make sure is having large enough innodb-buffer-pool to make sure indexes are in memory for quicker access. Refer: 

No. Grants are not defined per database (as in mongodb 2.4). mysql database is a centralized system of records for authentication etc... (just like admin database in mongodb 2.6+). You might want to refer the document for mysql privilege system. 

You can replicate Transaction to Reporting without any issues are it's "independent" but Reporting to Transactional may cause issues depending on your foreign-key settings. You can easily replicate single table with the help of replication filters (in your case replicate-do-table or replicate-wild-do-table). There are plenty of blogs for replication setup instructions, say this one from Percona. 

It is obvious to have better performance for the value of innodb_flush_log_at_trx_commit as 2 than 1. As commit operations are fairly dependent on underlying system even fooling-by-OS is an extra step one takes for every commit. For value of 1 flushing to disk operations are bound to happen every transaction while for 2 it happens once a second (depending on OS scheduling) 

Now, if you need slave's changes to be reflected on master, you need your master to be replicating from your slave as well. That's known as master-master replication. You can find plenty of posts around that. By default, all the databases are replicated. If you want to replicate only few of the objects (DB / tables) there are replication filters for that. 

So there's tuner's logic, if the (Created_tmp_disk_tables/Created_tmp_tables)*100 is more than 25(%) then increase your tmp-table size (upto max 256M). Again, mysqltuner is for reference, if you don't see performance issues you don't need to blindly follow the suggestions. Also note that tmp table has nothing to do with InnoDB vs MyISAM (if you mean that in your last line). You might want to read about internal temporary tables. 

When you're comparing, RAID-10 is still a better architecture than RAID-5. My opinion is that regardless of hardware improvement the underlying functionality still remains the same for RAID-5. (Even though Ronado's answer has "If you do not use innodb_file_per_table...", he'd still recommend the same.) 

If you are interested you might want to refer this blog post which explains various use-cases for loading delimited data to mysql. 

Use mysqltuner for some quick suggestions. At a glance it's easy to tell that you will be alerted for high memory allocation!! Your innodb-buffer-pool is much higher WRT available memory. About high CPUs, what does your processlist or slow query log tells you? Sort or long running queries, using tmp tables? Queries not using indexes? Make sure you have well indexed tables for respective queries. Use to review and optimize your queries. 

ALL privileges includes "ALL" of them except "wITH GRANT OPTION"... Thus above command will let admin user create the database too. You might want to show the error that you're getting. Note that in above GRANT you have not specified the password for admin user too. Update: You should be able to do following: login as root and create user: 

2TB restore from mysqldump?? How long do you have? mysqldump produces logical backup and it'd take longer to restore. Not scaring but I'd not dare to dump a 2TB database (unless you must)! I'd rather consider taking hotbackup. About your other questions: 

You can generate these SQLs from information_schema database and source it to mysql to quick action. 

This will extract your table in "out" folder and then you can import that to the workbench. Source: MySQLDumpSplitter 

Try to locate my.cnf or my.ini file. You will see config items and importantly datadir. See if that location exists. Default installation layouts are explained here for you to look as well. You can search your computer for *.ibd/*.myd/*.frm files and look into respective folders. As far as you can find the datadir (data) you should be ok to reinstall MySQL! (Yes there are some version differences issues but let's find out mysql data first)