The output md5 hash values should match. You can check your csr also to ensure that it matches your private key and cert. 

Office 365 will not be allowing you to send on behalf of a 3rd party address. To do what they want, you will need an email server. The problem is that many of the emails will not get delivered since they will not originate from the proper email server(s) for the client and will be flagged as spam. To make this work, you will need that email server, and the client IT department will have to make DNS changes to make your server an authorized source of email from their domain. Or just set up a quick ubuntu server with postfix configured as the MTA for the client and send the blast. Some (or most) won't get delivered though. 

The closest thing I'm aware of to what you are asking is the Securich project. It creates a set of stored procedures and helpers that you can use to create pseudo-roles and manage a lot of privileges in MySQL. Note that I haven't really used it myself; I've just watched the blog posts with interest. You can read more at $URL$ It was also presented last year at the MySQL conference: $URL$ although I can't find the slide deck, and Sheeri K. Cabral has mentioned it in her talk at IOUG Collaborate: $URL$ 

You might take a look at XtraBackup Manager, by Lachlan Mulcahy. (It's not a Percona product; it's a community-oriented manager for Percona XtraBackup). If it doesn't meet your needs now, it might meet some or all of them in the future. 

If one cert works and the other does not, then my first suspect is that both certs did not originate from the same private key. Start by checking that both certs actually are the same 

I am a system administrator and not a programmer. I frequently su to different system users for task so a .vimrc file for each system user is cumbersome. I need to be able to read the comments in config files and VIM syntax highlighting gets in the way for me. How does one globally turn off syntax highlighting in VIM on Ubuntu systems? 

If these both came from the same csr, then the md5 will match. Check the certs against the private key as follows to ensure the cert and private key match up: 

You can use the nc_cmd configuration option in the template, as stated in the comment just above your last comment to the bug report on the Google Code Cacti template project, where you linked to this question. In addition, you should know that you are using outdated templates. As stated on the Better Cacti Templates project, that project has been discontinued and is now part of the Percona Monitoring Plugins. See $URL$ and note that this software is fully covered by Percona support or consulting contracts, which is a great way to get help with installation. Or, in the unlikely event that there's a real incompatibility that won't let you get the templates to install as-is, you'll be able to get bug fixes to the software. 

It appears that you are running the script manually as a non-root user and cron is running it as root. If that is the case then you will need to define the path to the ssh private key. If you are connecting as root to the remote server (bad) then you will need the root authorized_keys to have the public key of the workstation 

It appears that you may be missing some settings and may have some incorrect. You might try these settings 

This is known to work, so no worries there. The ssh tunnel needs to be automatically created and there must be monitoring ensure that it is functional end to end, and if not to be restarted. Additionally, this functionality may not be dependent on or interrupted by a VPN tunnel that may or may not be present from the user remote workstation into the corporate network. I would appreciate any suggestions. Please, no comments on the why of using ssh tunneling if a VPN is available. I have listed the requirements levied upon me. 

I assume this is straightforward, but I'm lost in the abstractions in Chef. I want to create a new Unix group on Red Hat Linux, called deployers, and then add some of my users to that group. What are the steps to achieve this? 

I created the pt-stalk tool in Percona Toolkit to help diagnose problems that happen when you are not looking. It will not only help you catch the problematic query, it will gather enough information for you to determine whether the query is the problem -- and if not, what else might be. 

At a 5GB data size, you almost surely cannot and should not use a dump (myslqdump, phpmyadmin, etc) as a backup. The reason isn't the backup. The reason is because the restore will take a long time, potentially many days depending on the table structure and your server hardware. You need some type of file backup. Whether you use LVM snapshot or Percona XtraBackup or rsync or something else will depend on the storage engine you use, the hardware, filesystem, and a number of other factors. This is much too complex of a question to answer without a lot more detail, but I can simplify as follows: 

The public key to use is set in the authorized_keys file for the user account on the server to which you connect. It is not set in the client. $URL$ is a good read for how this works. 

This will turn off syntax highlighting globally. This can be undone on a per user basis by adding a file in user homedirs with the command Hope this is helpful. 

This is correct behaviour. SSH does not log commands that are issued (aside from use of to change user. If you wish to have the commands logged, then you should use sudo for all commands. BASH history for the user will capture the activity also. 

I have a requirement to have a users home workstation (mac) connect via ssh tunnel to a corporate bastion host (bastion.corpnetexternal.com) and through to a mac workstation (host.corpnetinternal.com) in the corporate network. Here is the connection string: 

I would suggest the so-called user_statistics feature that Google originally developed. It is available in Percona Server and MariaDB, and there is a similar feature in the PERFORMANCE_SCHEMA in the upcoming MySQL 5.6 release. All of them make it rather trivial to determine what tables, indexes, etc are used. If this is not an option, then I would choose pt-query-digest as suggested by sreimer. 

The problems you're seeing could be caused by dozens of different root causes. You definitely should not guess; you certainly need to measure and diagnose carefully. If you gather enough information, the true cause will be evident, and the solution will be obvious (provided that you also understand enough about the server's internals to know what you're looking at). If you guess and try to do things such as reconfiguring the server, my experience shows that you can make the problem much worse, or cause other problems, and you'll never really know whether any specific change helped or not. I would suggest using the pt-stalk tool from Percona Toolkit to capture a set of diagnostic data from the server when one of the spikes of slowness happens, and ditto for when it's running more quickly. There should almost certainly be enough information there to understand what's happening. If you are not comfortable making a diagnosis from it, any competent MySQL support provider should have no problem if you tarball the samples from pt-stalk and send them over. I don't mean to be too repetitive or insistent, but again please don't use trial-and-error on this one.