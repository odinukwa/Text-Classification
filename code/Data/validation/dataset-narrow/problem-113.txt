What you are seeing is the local forward and reverse entry for the ip address 127.0.0.1 (localhost loopback) in.addr.arpa is a reserved top-level domain for infrastructure purposes. The reason you see the ip address in reverse format is due to the way DNS works. The notation is used to pass the Forward Confirmed reverse DNS process that is used for verification purposes (e.g. does a mail from the ipaddress 1.1.1.1 really belongs to the domain example.com). Long story short... in.addr.arpa is a reserved top-level domain for reverse lookups and the inverted format is used because it was specified back in the days. Reverse DNS is used for verifying that a certain ip address really belongs do a domain. 

CLOS network architecture is a viable option for a scalable datacenter network. It is a good option for connecting multiple pods to each other and is ideal for optimal east-west traffic flow within your fabric As for L2 vs L3 fabric. Layer 3 scales better and is a good option for keeping failure domains small but technologies like TRILL (e.g. Cisco FabricPath, Brocade VCS Fabric, etc.) may be used to build a non blocking L2 fabric which are easier to manage and are suitable for small size datacenter networks If you would go for a Layer 3 CLOS architecture you would need to use overlay networking for virtual machine mobility between your leafes / pods which might complicate your design. 

You may want to implement Quality of Service to limit the usage of bandwith. By using traffic shaping you would be able to limit the bandwith usage. 

The way you connected the Controller is technically correct. By using DOT1Q VLAN tags you allow traffic within VLAN 1,2,3,4 to be sent from and to your Controller. Keep in mind that it might not be necessary to allow all VLANs on the port to the controller (e.g. UserLAN, DevLAN) because you might only need Guest and UserWIFI for WLAN. Only allowing certain VLANs on a Trunk is called VLAN pruning which can enhance network security and stability. 

DynDNS Using DynDNS is not a viable solution for your usecase since its primary use case is mapping a dynamic ip address to a dns record. If you have two Upstreams with different ip subnets you would need to edit ip address or nat confiuration on failure which could be scripted but is prone to error. GSLB Another way of using DNS would be GSLB, which utilizes DNS to load balance and use a keep alive method to check for availability. Since DNS is bound to TTL you will always encounter a certain downtime since clients will cache the ip address to fqdn mapping and it will need to time out so it might be the wrong solution for you. BGP Using BGP to solve the problem would be the optimal solution. You would have an AS and your own ip address range which you advertise to both providers. If you encounter issues with one provider the peering between your local router and your isp would time out and traffic will automagically be routed to your other provider (I will not get to technical, there is still more to it) Considering Complexity... BGP is not complex to set-up in this scenario. You would still need an experienced network engineer to ensure best-practice configuration but your scenario does not require much BGP knowledge. Considering Cost... Annual costs for AFRINIC & additional costs of ISP peering with you. You would need router(s) to be BGP capable but nowadays there are even small HP/Cisco/YouNameIt routers that are capable of BGP...heck even Sophos UTM is BGP capable. :) Hope I could help... I tried to be generic and not go too much into the details, drop me a note if you need to know more. 

Let me recap what you are trying to achieve. On site A you got two ISPs. One Uplink is used for Internet traffic (A) and the other Uplink (B) should only be used for Site2Site VPNs. You are trying to establish a Site2Site VPN from B to a site that has no static ip address. One could argue that you could just add a /32 Host Route on B to ensure this is working but since you have a Dynamic Peer this wont work. I would recommend using Security Context feature on ASA. Depending on your model and license you can segment your firewall into multiple logical firewalls. Since you would have a different routing table for your VPN context you would not have any problems. Let me know which model you are using and if this was an option for you. 

Using a 2nd Uplink and using link aggregation (etherchannel) is the right way to go. Keep in mind that your throughput problems might be due to the ASAs limitations (which model do you use?) Another thing to keep in mind is the load balancing algorithm you use for etherchannel (src-mac, src-dst-mac, src-dst-ip, src-dst-mac-ip). Based on your traffic patterns the default algorithm src-mac might not be the right choice. Let me know if you need any configuration examples. ASA 

Looks like a duplicate IP issue to me. Is outbound traffic working fine when your servers are not reachable from the Internet? 

Since you are dealing with a dynamic cryptomap, traffic must be initiated from your router. Using IP-SLA you could schedule an ICMP operation from your VLAN10 interface to the anyconnect ip range that is scheduled to run in a defined time interval. IP SLA Config Guide: $URL$ Let me know if you need a config example. 

There are many solutions to achieve redundancy on the first hop (Router). Normally one would use two routers which make use of a FHRP (First Hop Redundancy Protocol) like HSRP (Cisco-Propretary) or VRRP (open standard). A virtual ip address would be assigned to one of two routers and in case of failure a failover would occur and the standby router would take over the VIP. Since in your case you have a firewall and not a router your solutions will differ. You only have one firewall in your disposal and want to connect it redundant to both your switches. Many firewall vendors offer a "redundant" interface option. A secondary link may be connected to another switch and in case of the primary link going down a failover to the backup link would occur. You may want to check your software version, FortiGate supports this feature $URL$ 

Your definition might be somewhat too generic in the networking space. "Accomplishing a task" would have to be adapted based on the scenario The Linux Information Project provides a clear definition for convergence. 

An interesting counter from Gi1/0/28 (Site A) are the input errors on the interface. Might be a layer 1 issue but since you do not have any crc errors and the realibility is 255/255 it may be due to repluging cables. Since there are no obvious configuration issues I would recommand re-enabling the port and posting the output of: Site A: 

You may use IP Event Dampening to solve your issue. For each flap a so-called penalty is incremented and when the penalty reaches the suppress threshold the interface is being dampened to ensure network stability. IP Event Dampening is an automatic process that uses timers to make sure an interface is stable before enabling it again. To get more information on IP Event Dumpening click here 

Mode general and trunk are both used for VLAN trunking mode general You may choose multiple tagged and untagged vlans, default is tagged mode trunk You may define one native vlan, all others are tagged mode access You may define a single untagged VLAN Could you post your configuration for further troubleshooting? If you set the interface to mode access and specified the VLAN there should be no issue. 

A) SoC based models are able to offload processing to the silicon, cpu based models are not as optimized and may implement certain functions in software and not hardware For more information click B) Depending on the model internal storage may be used for logging, wan optimization and caching purposes C) It depends... If you need segmentation between your VLANs it might be a consideration but keep in mind that a firewall has certain throughput limitations that you should think of. Your setup is rather small so I think you got about 3 segments (DMZ, Clients, Server).... If that is the case and you are using fileservers etc. you may not want to route Client and Server VLAN on the firewall but only DMZ for seperation between your trusted and untrusted zone... If you need any more information let me know. 

You have diagnosed the problem correctly. The problem is that you try to access your webserver which is located within your local network by its public ip address. Your router will not NAT your DST ip address back to your private ip address since traffic is originating from within your network. To work around this issue you would need NAT hairpining also called NAT loopback as you stated above already. To verifiy why you can access your webserver with the URL mysubdomain.ddnsprovider.net could you please do a nslookup via Windows Powershell/CMD and post the result. If both your domain and ddnsprovider.net ip address matches the problem might not be related to NAT hairpining. 

A policy as stated above may be implemented by using a modern firewall that is capable of L7 firewalling (e.g. Cisco FirePower, Palo Alto Networks, Checkpoint, Sophos, etc. etc.) I have only listed a few vendors for reference. There are many solutions for your problem and a firewall capable of deep packet inspection may be the best fit to solve your issue.