You really want to power the Hard Drive from a powered USB HUB - what are the LEDs on the Pi-2 doing? I suspect you will find the one that indicates the Power is OK is telling you it is NOT. 

As you surmise, linking those two wires together will return normal operation - to be honest the wiring up of those contacts is about as much use as NOT wiring up the read-only slider detection contacts on the side. The RPi cannot do anything without the SD Card being loaded and, other than detecting an insertion of the card after the RPi is powered up, is of little practical significance - as that is not best practice anyhow. Of course removing the card whilst powered is as safe as switching the RPi off without shutting down first - and we all know where that leads, don't we, Boys and Girls! If you can find a way of tying those two contact wires together (a bit of 5A fuse wire comes to my mind but that is just because I have some, somewhere) - that would do the trick - but I'd also carefully wrap a bit of PVC or insulation tape around that to prevent the metal bits coming into contact with anything else. I take it you do not still have the broken off bit of plastic anywhere - presumably it has disappeared into the same void that all ball-point pens escape to? Otherwise it would be feasible to replace it to effect a repair with some hard-plastic adhesive. I'd be reluctant to use a Cyanoacrylate adhesive (e.g. a Super-Glueâ„¢ like one) here as, if you subsequently do have to do any soldering, it will reacts with soldering-iron type heat to release nasty, (I thought cyanide but that is not the case) fumes that are not good for you! 

I would check that you really have an up-to-date list of packages available from the servers that you are using. You have just done a: first haven't you (things can change on a daily basis) then try the again. The problem you are experiencing is that the extra package you have requested is later than the ones already installed but apt-get does not know (without running the "update" instruction) that new versions for all the interconnected packages have become available...! Failing that it may be that (temporarily) one or more packages have not been updated on the servers so that there is a mix of updated and un-updated both on the server and you have got a mix of both. If that seems to be the case (the previous paragraph did not solve your problem) try running - without any arguments aptitude runs as a text-mode application and it can show you the interrelation between packages and if there is a problem it offers an interactive means to fix things... Here is a capture of the information for that package on my Debian (Wheezy) PC (not a Pi!): 

I do not believe that is the right link. You ought to be able to build a custom kernel with the relevant packages, which I think could be: and and dependences although the exact process on an RPi is not one I have engaged with... 

You did not remount the root file-system (with the command ) so you cannot change the and files concerned...! Also, in that article, I'd recommend reading the comments as well. 

I am not sure you have the package installed - that will provide the command which will probably be stored in or . I'd also recommend "Reading The Fine Manual" i.e. look at the output from as that points out that leaving the password in the file is not secure! Also, I hope the line in that file is not literally: 

Ah, but how did you turn it off? This sounds like damage/corruption to the files used by the window manager or some session related software that is a client to the X Server (which is providing the base, black {unless you use the or option when it is started!} screen and mouse as it is supposed to.) Given that you have not been messing in that area I have a hunch that perhaps you did not wait long enough after issuing the (or clicked the corresponding GUI option) before removing power from the Pi. {You DID use a shutdown process I hope, you must not just "pull the plug"!} As a somewhat imprecise approach if you can identify which "packages" might be providing the bit that isn't working you can reinstall them using Edited to insert the "--" and "install" that are needed! where you replace with what you need to fix; if you include an between and it will just tell you what it would do without actually doing it. My difficulty in advising you is that I don't have a Pi up and running at the moment to look for possible candidates to check. I suppose it might be worth looking through the contents of various log files to find issues in , you might possibly pay special attention to any of these if you have them: , , oh, and also in your home directory (the leading means it is a "hidden" file and won't show up in output unless you include an in the options, e.g. use to see the contents of your home directory to hunt for that last file. 

In some situations you are actually expected to power the RPi via the 26/40 Pin Header - specifically physical pins 2+4 (+5V) pin 6 + others (ground). For instance I have an RPi 1B that has been running for a couple of years now which is powered from a Basic version UPiS unit which is a UPS from PiModules, now pretty much unobtainable but replaced by the more sophisticated PICO though I suspect THAT unit now sucks in power via those same pins when the RPi is powered normally {to charge the on-board LiPo cell} and then only provides it when acting as the backup supply... 

I suspect your Power Supply - when used to charge a phone the USB specs allow for the "usual" wall-wart adapter voltage to fall away from 5.0V as the current demand increases - given that the Lithium Battery that is probably the intended target for all the electrons originally has a terminal voltage between 3.2 and 4.2 volts this is allowable for that purpose - but not so good for an RPi which gets unhappy if the supply gets below 4.something - especially with the series PolyFuse which also introduces a voltage drop. As the subsequent comments point out your supply is not up to the task - and for really good measurements there are a couple of test points on the PWB for most (all ?) RPis that allow measurement after the Polyfuse - you will probably find things are even worse than you measured above... When you go to get another PSU ask about/look for details about its regulation (how much does the terminal voltage fall under full-load conditions) - hopefully that will provide a solution that works for the combined load of the camera AND the RPi (and any other device also powered by it)! 

Ah, ha! Some paragraphs in the man pages for refers to the depreciated interface of writing a one letter value to (now replaced by ) and then sending a signal; the letter should be one of: If the specified file does not exist or contains anything other than the letters , or , init will behave as if it has read the letter . Beneath this is the advisory: 

Note that my answer is based on general shell command line knowledge, I am assuming that and handle standard input and output respectively as something to output to / input from a sound device as a file. I see on my Debian PC that both are aliases to {Sound Exchange - the Swiss Army knife of audio manipulation}. 

Assuming that you specify the save location as a variable (and that the location exists before you use this) I think (I am not strong in Python!) this might work for you: 

Don't give up hope yet, though: for your stated aim - to send/share USB with another computer - you may want to look for the package and/or packages containing the phrase "usbredir"... 

I see that you are mixing major distribution versions, i.e. your listing has both Raspbian 7.x (Wheezy) and 8.x (Jessie) in your sources.list files. That does not sound good to me - I would suggest that you choose one (probably Jessie) and then use to identify packages that are probably specific to Wheezy and carefully try to remove/upgrade them to "deb8" ones. For this may be more helpful than because it will tell you if multiple versions of a package is available and allow you to choose which to install - and work out if it is possible with the addition or removal of others. The only niggle with aptitude in its default interactive mode is the ncurses (text) UI which may take some getting use to if you are not familiar with it. 

That looks like two different output lines have been written at once which can happen if the X server is writing error output to stderr/stdout at the same time as some other process is writing out something. It is possible your Pi has been configured NOT to start the GUI by default or (more likely IMHO) somthing is going wrong. Please try and post the contents of (the mentioned!) file. You may also like to try to run though I suspect may be trying to do that already. 

For a free Electronics CAD system why not use the GNU Public Licensed GEDA suite! That is as much OSS as anyone wish for - though that does not answer your original question about a pre-designed schematic. One feature that relates to the worthwhile advice of @ppumkin is that when laying up the schematic you can work in "blocks" which you interconnect and then you can drill down into each block (component) and fill in the circuitry that needs to be wired into each connection to that block - which helps to make the thing modular and so you can work on a bit at a time {like when writing software code in functions/subroutines/blocks!}. Obviously you will want a DDR2 SODIMM connector in the design as that is where everything for the Compute module will be wired into your circuitry! EDIT {2017-02-11} There is now the Compute Module Farnell On-Line catalog link which ought to be compatible with any existing PWB you have designed but offers three more cores running a bit faster - and the option (which will need a revision to the PWB) to use external Flash memory in the "Lite" rather than the 4Gbyte onboard of the original CM or "Full" CM3. 

Secure SHell is, for most user, a way to access a shell ("command line interface" or CLI in some circles) on a machine across a Local or Wide Area Network. As such, provided you have a resolvable name (a name that can be resolved into an Internet Protocol Address) or the IP address directly AND the access credentials (in simple cases often just the user-name and password) you can use the remote host as if you were typing at a keyboard and screen on it when that screen and keyboard is actually the ones on the local host you are sat at. If you have a *nix (Linux, Free/OpenBSD, Solaris, MacOS X) PC all you need to run is something like however the complication is that you may not know that IS the address (it probably ISN'T) for you to use. To obtain that, one way is to run the (network map) command with arguments to search your Local Area Network, and filter the results to get the one that matches the range of MAC (Hardware address) assigned to the Wired Ethernet Port on the RPi. One way is using the command: on your PC - I don't have a Pi up and running now but the output should be obvious. As of Windows 10 Microsoft has not got a native equivalent to SSH (As Far As I Know!) but there is a well known Free and Open Source solution in the form of Putty("It makes windows usable!") which when run in a Windows GUI, will create the equivalent to a text screen on the remote host. You will still have the issue of finding the IP address to use (though you may get somewhere with if Zeroconf/Bonjour is in use on the PC and the RPi.) Assuming that you can get a SSH link running to the RPi for the first time you may get a warning that the remote machine's (the RPi) finger print is not recognised/known - this is to be expected - you will need to respond with to proceed - then you will be presented with a username then password prompts - unless you have changed them the defaults of and will be what you need to get in so that you can issue the command before waiting say 45 seconds to allow everything to finish before removing the power... 

Welcome to the Raspberry Pi community of Stack Exchange. Any "normal" USB keyboard that you might use with a (say) Ubuntu {I see you are in other SE communities including that one} PC should work for you - the Raspbian distro is derived from the Debian one of the same version ("Jessie", although older ones were previously used). As per Debian, the change from "Wheezy" to "Jessie" marked a switch from sysV to "by default" but from an OS point of view you could find yourself fairly at home on a Pi, IMHO! The boot-up process is (a little) different, as you spotted there is not a BIOS, instead the NOOBS system occupies the first (VFAT) partition on the SDCard and that normally switches to whatever you have chosen in one or more of other partitions. For Raspbian and other distributions the part of the eventual filesystem contains config.txt and cmdline.txt which play a special part in how your system operates. Compared to a PC Distribution there are extra libraries and stuff to work with the General Purpose Input Output (GPIO) bus which is that row of pins that look like what you might plug an IDE HDD connector cable into (don't do that) - instead that is what you use to attach a wide variety of hardware both ready-made and things you can build yourself to do all sorts of things with. The Pi does seem to have 4 USB 2.0 ports however there are limits to the power that attached devices can draw - usually for the power hungry things you will need to use a powered USB HUB for things like external HDDs should you wish to use them. The Pi 2 that you have is indeed a quad-core {ARM7} processor (running at around 1GHz) IIRC with 1GB of memory separately on the PWB - the GPU is also included inside the same package. Earlier Pis had a single processor with the same GPU and 0.5GB (or 0.25 on very early ones) and ALL of that was squeezed into two ICs packaged "one-on-top-of-the-other"! This only touches the surface of what you have just got - so hang around here for a while, ask good questions (use the search box on the top right corner of the screen to avoid asking questions that have already been asked many, many times before), and enjoy your Christmas present! 

You would than want to add a "dead-zone" so that so that you do not try putting a very small amount of current through the motor - depending on the type of DC motor it probably won't produce any significant torque for small currents anyhow and this will prevent anything happening until there is a definite movement of the joystick control from the default position. I think the value tells you which axis (control) produced the event that the event is reporting. 

In your case you will need to edit and to be the vendor and product id of the readers and then copy this three more times and replace with the individual serial numbers of your devices (I assume they all all the same device!) and the in with I suggest a number from 1 to 4 or (perhaps a "_location" for each device). Now, when each RFID USB device is plugged in it is detected and the symlink will appear and become available as, say to respectively. The complication is that the input will still get treated as if it was typed at a keyboard - which will be treated as username entry on the local console as if there is a user trying to log in locally on the Pi. Further work is needed - possibly to get the device(s) to be ignored as keyboards and have a daemon to open those devices and monitor the input... A (stupidly insecure) use of an RFID device (as a keyboard) as an access device: