The provider should have a filter inbound to ensure these communities are only accepted from customers. If not, then that's the providers issue. Some Tier1 providers do accept these sorts of communities from anywhere though. This is based on RFC 1998: $URL$ 

Dynamic protocols only really make sense if your sites have more than one exit point, or you have many routes per site that can't be nicely aggregated into a single static route. I would stick with OSPF, simply to be able to use other vendors. I know EIGRP has been 'released' but its going to be years until you see other vendors using it and you dont want to be locked into a single vendor 

I would use vlan-based policing which works better on these switches. This is an example matching a speed value of 48Mb 

That will fail. MTU is setting the L2 MTU while IP MTU is setting the L3 MTU. The CLNS MTU determines both the maximum size of LSP plus the hello size when padding. If you tried to send a 2000 byte LSP over a 1500 MTU L2 link, it will get dropped 

A traceroute will show you how many layer3 hops you are getting to from A to B. However you could be going through hundreds of switches inbetween. You could also be going through 10 ISP routers running a layer 2 vpn which appears as a single hop. An MPLS network could hide its internals, or show its internals to you. You could have transparent firewalls in the path as well. Either way your Professor is correct in saying that your cannot guarantee that every single device in the path will count as a hop to you. Because of the above points I mentioned, you could be going through 50 devices but it could look like three to you. It doesn't happen all the time though. If you see 15 hops it very well could be 15 hops. This is a basic example of an MPLS set up in regards to TTL: $URL$ 

Even in real hardware, the HWIC-4ESW and 16ESW modules do NOT support LACP/PAgP In order to play with these sorts of tech you'll need a regular Cisco switch that support it or another vendor of course 

If you have proper security policies in place, there is no need to separate these two devices out. If you have a properly spec'd firewall, then performance is not a reason to separate them out either. It's good of the vendor to tell you to split these two out as they end up selling you two firewalls instead of a single device. 

I too do not have that SUP available, but can easily do this on a Brocade Netiron. Simply put two ports in a VPLS and tag them with different vlans. Like so: 

There is no country group. Germany is in the RIPE region and hence RIPE assigns the next available AS to the next company that requests that sites in the RIPE region. Everything yellow in the following image sits in the RIPE region: $URL$ 

Is it possible to get support for BFD for OSPF on vyatta 6.2? I cannot find any information about it on the internet. The only thing I've seen is that the support is available on Brocade Vyatta 5400 vRouter. Does anyone know? 

Can someone tell me what I'm missing? It's a really simple configuration but from what I've read it should work. Thanks, Muff 

I'm trying to setup a very simple OSPF network with Vyatta. From the best of my knowledge they let all traffic in by default, and I haven't set any firewall rules. The vyatta instances are launched as virtual instances inside DevStack, and I've allowed ICMP messages to get inside them. The network looks like this: I'm able to ping from: * 10.0.1.4 (R1 eth1) to 10.0.1.6 (R2 eth0) and vice versa * 10.0.2.7 (R3 eth0) to 10.0.2.5 (R2 eth1) and vice versa However, when I try to ping from R1 to R2 on the address 10.0.2.5 I never get back any reply on R1. When sniffing traffic with tcpdump on R2 I can see the following: 

However when I turn off tcpdump in the situation when I don't lose packets I get this output from tcpdump: 

It seems that the request is received and a reply is sent back, but it never gets back to R1. I can verify this by sniffing on eth0 on R0 without seeing any traffic going trough the interface. This is a big confusion for me. The same thing happens when I try to ping from R3 to 10.0.1.6. When I try to ping from R1 to R3 and sniff traffic with tcpdump on both R2 and R3 I can see that the requests goes trough R2 but never reaches R3. Output from tcpdump on R2: 

I have a server and a client on different machines and on different locations. I'm trying to capture TCP packets with tcpdump on an interface of the server machine. I've injected an identifier in the payload of the packets to I can identify those packets when the output from tcpdump is displayed. The full command I'm using is: 

The routing table on R1 shows that it should send the requests with destination of 10.0.2.0/24 to R2 on ip 10.0.1.6 and routing table on R3 shows that it should send the requests with destinations of 10.0.1.0/24 to R2 on ip 10.0.2.5. This is also confirmed with the output from above. Below is output from the ip route and configuration from R1, R2, R3 ip route for R1: vyatta@R1:~$ show ip route 

If I give tcpdump the option (display the whole packet) together with the other options shown above, tcpdump seem to miss packets arriving at the interface. However, if I give tcpdump the option (display the first 100 bytes of the packet) together with the other options above, tcpdump seem to give me all packets that I expect. The larger packets I send over TCP, the higher ratio of missing packets I experience. An import note is that I receive all tcp packets on the client and the server as I'm expecting, I just can't see all of them arriving on the interface if I'm specifying the flag to tcpdump In the situation when I'm losing packets and turning off tcpdump I get this output from tcpdump: 

If using Cisco at the edge, then PfR would indeed be the best option here for the reasons you specified. You can set up master controller redundancy and Cisco shows how on this link: $URL$ 

No. A interface description is just a label. The only way to find out what's REALLY plugged in is to show the MAC addresses as you noted. For networking equipment, if you turned on LLDP or CDP it would make it easier to determine what networking equipment is connected to each others. But for hosts you need to use the MAC address table 

A tunnel give you a route-based VPN option. This allows you to run routing protocols over your tunnels which allows for better failover capabilities. You can also set up a single tunnel, then route many different prefixes over that same single tunnel. If the other side adds a new prefix, just add another static route to the existing tunnel. I also find it easier to do network-wide NAT for overlapping VPN subnets as the tunnel interface is just another layer3 point-to-point interface Tunnels are also handy for times when you need to run two different VRFs over an interface that doesn't support many subinterfaces. A DSL link is an example. In this case you can run a tunnel over the normal link, and have that tunnel in a different VRF 

Int vlanX is simply the Cisco way of creating a layer3 interface on a switch. for Brocade Netirons you use interface ve while Junos uses vlan.x When you bridge on a Cisco router you create a layer3 interface on a BVI interface. On Junos you can create an IRB interface. At the end of the day it's simply a name. It's a routed interface that all the other ports on the same vlan/brocadcast domain is connected to. 

On frame-relay point-to-point interfaces, your OSPF priority is set to zero automatically. Also you have no DR election on a p2p links 

The main current issue with the Brocade line is that you can only enable one at a time, per chassis. i.e. If you want to run VRRP-E, you'll never be able to run VRRP with another vendor on another port. They are not compatible in any way. VRRP-E is proprietary. 

I configure all my core OSPF interfaces as p2p. I would do the same for integrated IS-IS. This stops the DR/DIS election process from happening which can take a fair amount of time in a re-convergence scenario. You do not HAVE to have them running as /31. It could be any mask as long as you only have two active speakers. An added advantage on the OSPF side is that you get no type2 generated for the link. From Cisco's site as well in regards to integrated IS-IS ($URL$ 

There is no tunneling. This is completely normal. With IP routing you are concerned about the source and destination address which doesn't change unless something is NAT'd. If a router in the middle has an RFC1918 address that's fine as it can still forward transit traffic as again the source and destination is unchanged. Each router will simply reply to the source with their own directly connected interface address. The 10.14.0.1 above is not being routed over the internet, it's simply the device that is attached to the CPE on the WAN side. There is no magic technology being used. It's pure standard routing. 

Athan, As other guys suggested, you would need to provide more information but you need to bear in mind that pinging and browsing are different.Also we don't know where you are pinging. Browsing first of all requires connectivity to the target node, do you have it? If yes, then drill down on other mechanisms. Does your DNS work? Can you resolve addresses? Did you try doing nslookup? You say some nodes can access while others can't. Is there a difference in their DNS configuration? Have you checked your devices' logs for any event that may give you a clue? So I ended up asking more questions then you unfortunately. 

If I understand you correctly, you could remove the application of ACL from the interface first, edit or rewrite (copy-paste) your ACL and re-apply to the interface. This is if I got you right. 

When it comes to ISP redundancy, if your circumstantes allow it i.e. you own a Public IP address or subnet; you could use BGP protocol which would connect you to internet with more than one ISP. They would both point your network from internet ad you could assign priority. That's a method. Secondly you could have a load balancer like a Peplink device.You have multiple WAN ports on load balancers and can establish clever and flexible algorithms on it. You don't have to use such a device to use 1 active connection. In theory you could have 3 ISPs at the same time and divide your traffic on the way to the internet based on your source addresses, destination addresses and protocols for example. Thirdly, you could use things like IP SLA commands to costantly check if one ISP available, as soon as it goes down the traffic could be diverted to second ISP. In order to do this you should have L3 devices that can support these capabilities. Hope this helps. 

Michael, there are many problems with your post. Your topology is not here so we don't know if there any routes at all to route. To be able to route the traffic to another node, you have to have it first. With one ISP, can you really create a routing difference unles you are talking about a more complicated internal network where you have multiple routers etc? Your ISP meets you at your doorstep and takes your traffic away. You don't have a say then how this traffic will be routed. You can check it by issuing a tracert command. Plus if you are writing a route for one specific public IP address, you should give 255.255.255.255 subnet mask. If you want to change the route for all nodes in your network, it would be enough to write the route to the Layer3 device only i.e. router. You don't have to add static routes to all PCs. If everybody has the same default gateway and the gateway is located just before meeting routing alternatives then you can add the route to this device. But Michael,It is not clear to me what you are trying to achieve and what sort of setup do you have.. So I might have just talked rubbish :) Regards..