It wants to know the domain name of the system, so that it can pair that with the hostname to come up with the system's full-qualified domain name (FQDN). See here. I'm guessing this is an installation for your home, where you don't have a default DNS domain, per se. As such, this should probably be asked on Super User rather than Server Fault. The impact this will have is that software that looks for the FQDN will find it, e.g., mail server software.. It will also impact the domain that gets appended to a lookup. For example, if you type "ping systemxyz" it will actually try based on what you entered. Running will also help you understand some of the DNS resolution things that go on behind the scenes of your operating system. 

veth[1,2,3,4] are still in the global namespace, and thus routed by the kernel. Your commands are adding vlan interface to the respective veth, which is not what you want. ( should show a veth1.11, etc. (depending on how name_type is set)) I'm not sure what you're trying to accomplish with VLANs. If you want to isolate n1+n3, and ns2+ns4, then move the other end of the veth to different namespaces: 

The real question is why are hosts sending so many ARPs in the first place. Until this is answered, the switch(es) will continue to have a hard time dealing with the arp storm. Netmask mismatch? Low host arp timers? One (or more) hosts having an "interface" route? A rouge wireless bridge somewhere? "gratuitous arp" gone insane? DHCP server "in-use" probing? It doesn't sound like an issue with the switches, or layer 2; you have hosts doing bad things. My debugging process would be unplug everything and watch closely as things are reattached, one port at a time. (I know it's miles from ideal, but at some point you have to cut your losses and attempt to physically isolate any possible source(s)) Then I'd work towards understanding why select ports are generating some many arp's. (Would a lot of those hosts happen to be linux systems? Linux has had a very d***med stupid ARP cache management system. The fact that it will "re-verify" an entry in mere minutes, is broken in my book. It tends to be less of an issue in small networks, but a /20 is not a small network.) 

The only way to do redirection of a web request is using a web server. When a DNS resolver, like the one built into a user's system, requests an address, it gets an address. A CNAME just tells it the other place to get the address from, but it wants an address, period. It will then initiate a request to the web server for the domain it asked for, using the address it got as a means to initiate the TCP connection. There is no connection between your browser and your DNS resolver. Therefore, what you are asking for is not possible in a pure DNS scenario, even using DNAME (which is just CNAME on a bigger scale). I am not familiar with the configuration of nginx, but in apache, you can create a virtual host to service domain-b. The top virtual host acts as a "catch-all" for any other way the site is accessed. You can redirect all those catch-alls to domain-b using some rewrite rules. So you can capture aze.domain-x.com, or aze.domain-y.com, etc, and grab the host part and redirect it to aze.domain-b.com. You'll have to use some regex, etc, but it's the right way to do it. See Apache 2.4 Redirecting and Remapping with mod_rewrite. I'm sure nginx has the same functionality, though perhaps executed in a different way. 

Unfortunately ESXi doesn't include the diagnostic commands and . NFS, by default, uses UDP. In order to execute a mount, the system must be able to talk to the rpc portmapper on the NFS server (tcp/udp port 111.) That provides the ports for the and services. On any other system, I'd use to make sure portmap is working, and to see what's being exported. Also, unlike vMotion, FT logging, and iSCSI, NFS isn't locked to a specific vmk. It will use any available interface. As you have an interface in the same subnet as the NFS server, it should use that one. If there are logs on the NAS, check there for any clues. Otherwise, dropping back to a single link and monitoring the traffic may be your only recourse. (does that switch do port mirroring?) 

First off, you really only need one subnet mask entry, since they shouldn't be put on the same subnet if they have two different masks. But beyond that, yes, you AND the addresses with the mask, and if you get the same result, they're on the same subnet. 

I would start by disabling the Windows firewall (temporarily) altogether. Also, you can do a packet capture on the server to verify that the attempts to tcp/445 are getting there at all... something like assuming that 192.168.1.10 is the client machine and interface is the server NIC in question (run to get a list of NICs on the server). You can get WinPcap and WinDump from Riverbed. 

Many pieces of software can do this. I'm not familiar with Mikrotik, but I have used BIND for this on Linux. You can find an overview here. Windows Server 2016 also has the ability to do it, though I believe the configuration for the particular feature you're looking for is via PowerShell only. Find an overview here. I have done DNS views on Cisco IOS routers (!) as well, so if you have one of those around, you could use it too. One limitation, however, is that the TTL on all records is set to 10 seconds, with no way to override it, so I would not advise that. 

Two words: route cache UDP is stateless, so the system will build a "connection" to give it state. As long as you keep sending packets, the cache for that connection will remain valid. As such, when the Machine LAN is disconnected, your traffic will default to the Mill LAN. Until the incorrect route cache expires (due to inactivity), the app will not work. There are two ways to address this: 1) add code to your app to directly bind the correct interface, and/or 2) add firewall rules to prevent 192.168.1.0/24 from ever using the Mill LAN interface. (As @Ron points out, 192.168.1.0/24 is a very poor choice of network.) Note: and 

I'll assume you ment (and eth2.) Bridging requires two things: changing the mac, and promiscuous mode. If the USB adapter refuses either (likely the latter), then it won't work. You could add the USB interface first so it'll use it's MAC, but that may not fix anything. Look at output to see if the kernel is logging a reason for the failure. 

We have a domain, say . We use a cloud-based provider for the authoritative servers. We have some customers with an IPSec tunnel that we need to give some of our internal records to. For that we have "semi-public" name servers that give a different IP address for some records, but if those records are not defined on these "semi-public" servers, the response needs to be forwarded to the "real" authoritative servers. We don't want to duplicate every record (there are somewhere around 1,000) in our "semi-public" name servers. We're currently using Cisco IOS (yes, IOS routers have name server capabilities) with views to accomplish this. It works okay but it's a bit flaky and the TTL is always 10 seconds with no way to change it. It also means that only the network engineers and not the server admins have exclusive access (politics suck). I have it working in the lab with BIND using RPZ (Response Policy Zone). However, an unfortunate consequence of that is that the responses never have the authoritative flag set. I'm nervous this will present a problem for some resolvers. I could skip the RPZ feature of BIND and just create a separate zone for every record, but that wouldn't be fun because who wants to maintain somewhere around 100 zones for BIND, just to have one record in each? dnsmasq would work for this, I believe, because it sets the authoritative flag. But unfortunately I'm constrained to something that will run on Windows Server 2012 R2. So I'm asking if anyone knows of a Windows solution (which I consider BIND to be since I can install it on Windows and it runs fine) that will provide authoritative answers to queries within a zone but forward on if a particular record is not defined? Perhaps I'm missing how to do this in BIND or perhaps there's another solution (e.g., Unbound).