You can read and set the status of the page. (Set the status before outputting anything else as you need to set the status before the headers are written.) From the PHP documentation on http response code: 

Your errors should be in /var/log/daemon.log. Comment out the include for /etc/bind/named.conf.default-zones in /etc/named/named.conf I have the zones defintions for my public zones in /etc/bind9/named.conf.zones. My external view (included in /etc/named/named.conf.local looks like: 

As reported in $URL$ the letsencrypt.sh updater supports validation via DNS. Few updater scripts seem to have implemented this. However, the HTTP method is the simplest to implement for initial configuration. The script you have may use TNS SNI or Proof of Possession of a Prior Key for renewals. Specification can be found at $URL$ If this is the case you won't need to have HTTP enabled. 

After changing values in you will need to reload the Exim4 configuration. IP Routing or even name based routing can be done with the file . Add line of the format to this file. For details see the output of . You may need to modify how recipients are verified for domain1. Normally, you want this to be a callout. 

You want to accept established and related traffic first. This will usually be most of your traffic, and you want to process it as fast as possible. The connections will need to be accepted by other rules, before this rule will be applied. If you are just learning about iptables firewalls, you may want to use a firewall builder to build your firewall for you. This will help you get the policies and common rules setup with a minimum of effort and likely of better quality than you could hand code. I like Shorewall, but there are several other tools available. 

Rate limiting connections or blocking the sending addresses should help resolve the issue. You may need help from your provider if volume is too high for your connection. 

Only and will resolve. will not resolve as it isn't defined. Unless designates other name servers for , its name servers will be used to resolve . Unless the domain is misconfigured there will be at least two name servers such as and . However, the name server could just as well belong to another domain such as and . (Note: rather than .) The NS record you have is redundant and likely incorrect. Just configuring or any other name server will not work. In this case would need records for pointing to the name servers. 

Install the package. It includes the Samba3-By Example document which covers most of what you want to do. For now you may want to use Samba3, but Samba4 is developing rapidly and should be able to provide AD (Active Directory) services. I found the shell version of easier to work with than the scripts. will provide your DNS requirements. Out of the box it provides recursive lookups. You will need to configure a zone file for your internal zone. It will be simpler to use your domain registrar to maintain your external DNS. If your domain is , it is possible to have domain like defined in your local bind. If you do move your external domain into your local bind, setup a split zone configuration and prevent access to cache and recursion for external users. This will prevent your server from being used in amplification attacks. I have used a variety of LDAP adminstration tools. If I remember right, I found to provide reasonably simple web-based interface for managing LDAP users and Samba machines. 

You are rewriting at the wrong time. The rewrite option specifies rewriting incoming addresses as they received. The pattern must match the whole address received in the command. You likely want to rewrite when the headers are read during data processing. Please be aware that the rewritten addresses may trigger SPAM avoidance measures. In particular, the SPF records for the domain are likely not to include your host as a permitted sender. Try using a rewrite rule something like: 

TIME_WAIT is a TCP state indicating that the connection is closing. It is normal for a large number of connections to be in this state on a busy server. A closed connection will stay in this state for about 4 minutes before disappearing. ipconntrac has nothing to do with this. ipconntrac is part of the stateful firewall available with Linux. Basically, it tracks the state of a connection so that it does not have to check each packet. Once a connection is accepted, it is tracked and can be given an express acceptance with the a check for an Established state. Some protocols use multiple ports and with the appropriate helper modules Related connections can get the same express ride. Some distributions load the firewall as modules. On these distributions ipconntrac can be disabled by unloading the module and any related modules. To prevent it loading on restart there is a module blacklisting mechanism. Unless you have a firewall in front of your server I would install a firewall script disabling access from the internet on ports other than 80 and 443 (if HTTPS is supported). I use Shorewall which has some good example scripts. In your case, the two interface example would be a good starting point. 

I use procmail with MAILDIR specified as . Mail is delivered to with names like . When I pick mail up dovecot move them to and appends to the filename. When the file is read flags are appended. I don't need to know dovecot's uid to handle the messages. I have procmail filtering mail into other mailboxes, and those are handled well without knowing dovecot's UIDs for that folder. 

Do you have 'recusrsion no;' in your named.conf. If you don't have a dual zone configuration you should have it. However, it will prevent bind from answering recursive queries for you. I expect you may want to configure dual zone with recursion allowed from your LAN but not from the Internet. 

I used to create my certificates. It is available as a package. In Ubuntu you may want to add to the group. This will allow it to read certificates from the standard directories. Try using the following command. 

The documentation refers this as the . Recursive bind configurations have a zone file for '.' often named . The Wikipedia article for the root nameservers does refer it as both the root domain and the root zone. The root zone consists of the top level domains such as com, net, org, arpa, us, ca, etc. 

You can use the same key for multiple domains. Using different selectors for the same key won't help your reputation. It will also make signing more difficult. You can use the same selector for different keys as they will be published under different domains. You will need to publish the selector DNS record for each sending domain. Sign the outgoing message with the matching private key. In my experience, a high percentage of organizations either don't publish a DKIM record. Others publish an invalid record. Neither case adds credibility. If you are sending from the same IP address, all domains will be marked as spam. Most blacklists are IP based, not domain based. As long as you are using a properly configured server, including DNS configuration it is unlikely your server will be flagged as spamming unless you send spam. Double opt-in should prevent that. Do ensure your servers are not open relays. Open relays do get flagged and are commonly used to send spam. I do my best to ensure the spam gets left on the open relay as long as possible.