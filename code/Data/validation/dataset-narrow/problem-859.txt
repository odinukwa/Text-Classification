They don't really mean anything. There are certain reserved blocks, which are good to know The following are reserved for "private" networks. These only ever apply in LAN/WAN environments. 

NMAP determines that information based on a certain amount of guesswork. If your SSHD responds to an NMAP probe at all then NMAP will check that response against it's database, and make a guess as to what system you're running. The probes are pretty sophisticated; for example, it may try several variations of initiating a SSH connection on a port, to see which versions are recognized. It may attempt to provoke an error message, or it may just check the "hello" screen. The surest way of blocking NMAP probes is by simply blocking NMAP probes all together at the firewall, and white listing servers that are allowed to SSH into your machines. 

That'll make it so you have to hit return to move to the next screen. Less and More are well and good, but who wants to page down through a 200,000 line file? 

I'm pretty sure this isn't the problem. Nothing has changed on the proxy, and this configuration has worked for years. 

Switches generally don't show traffic for other addresses...That's pretty much the point of a switch. A lot of them can be switched to "promiscuous mode" for debugging though, so that'd be the first thing I'd try. A switch in promiscuous mode will broadcast every packet it gets, so you can see the full range of traffic. The second thing is to put a machine inline between the server and the switch (or just run wireshark on the server) so that you can see the whole of the traffic. 

The capacity of the tape is also not used (90% before, now only a fraction of it). I've seen behaviour like this, and what the problem was was that the tape set was X uncompressed, and X*2ish compressed. Once I got more than X, the backup slowed WAY down (because of the compression overhead) and suddenly I had all this extra space. 

I work for a media company, so we have a very lax ban standard when it comes to online content, and even given that we have an IPS system which aggressively kills any Flash content that meets it's obscure "Fishy" criteria. I hate it personally. Every time there is a zero-day, we have to rush out the patches, and we're not browser standardized so that's a huge pain. 

After about 10 days the issue just went away. Seems like something weird was propagating through the AD. I bounced it off the corporate exchange people, and they had nothing. I ran through the whole configuration and it was all normal. Unfortunately I have no idea what eventually fixed it: it was certainly dependent on some screwy behaviour attached to the admin who left, but his credentials weren't directly attached to the exchange server or IIS, and I fixed so many peripheral issues in that time period that it could have been any number of things. Highly unsatisfying non-solution. If has any AD experience that would explain a server that forced repeated re-authentication, I'd be interested in hearing about it, and I'll switch the accepted solution to anything convincing. 

Sure. Microsoft instructions here. In a nutshell though, you give execution privileges to the IIS directory that holds the files, and then set up the python.exe file as the default handler for .py files. It's pretty much the same as other CGI stuff in IIS. 

You can lock it down in Apache with RLimitCPU and RLimitMem. Or you can renice the whole process at intervals from the OS itself. 

You'd be better off adding the script to all users .login file, or .bashrc, or similar. 1) It'd only run when someone logged in, so more efficient. 2) it would run instantly when someone logged in, so no delay. 

I'm not sure what you mean: you want to install a whole ubuntu distro inside a chroot jail? Sounds more like you want to do a virtualized server instance on an existing server... 

Meaningless buzzword. Basically it tends to apply to scalable application hosting provided by third parties, but most people use it to mean effectively, "We don't know where or how we're going to host this." So called because of the "cloud" icon commonly used to represent the internet. 

Tomcat listens on 8080 by default, because it's assumed that apache will be running as well, and that'd cause all kinds of conflicts. Here is a short tutorial on how to get it to run on 80. 

I'm not sure imaging is the right way to go; you'll be moving around a lot of redundant data. Have you looked into terminal services? Set everything to boot straight into the terminal, and you can add new machines to your location just by plugging them in and pointing them at the server. 

Lot of sites reject mail if they can't do a reverse lookup on the host, so you may have to try several if your host doesn't resolve. If you still can't tell, you're going to have to learn to wade through the cf file (or show it to someone who can read it). Hope this is at least somewhat helpful. 

Aside from removing or disabling the default.aspx file? Not sure there is a way. Rendering the HTML as opposed to the index is the designed behaviour. 

You can try Thunderbird, but depending on how the Exchange server is configured, you may not have any luck. This is a pretty good how-to regarding Thunderbird and Exchange. Or, depending on how sensitive your mail is, you can just forward a copy to a gmail account and use gmail. 

The only good reason to go IPv6 internally is to be ready when the world switches to IPv6, and I think that's a pretty bad reason, given the rate of adoption. Since most internal IPs won't be externally reachable, it wouldn't be a big deal to translate the rest. My corporation will probably never switch to IPv6 internally. It would require a fundamental shift in policy so massive I can't honestly conceive how it could come about. A lot of people would have to get killed, and a lot of inexplicable hiring choices would have to be made. Likewise, any attempt by individual business units to switch to IPv6 on their LANs would be squashed with prejudice by the corporate networking overlords based on interoperability and maintainablity concerns (we allow a lot of leeway locally, but not that much.) Basically, if switching to IPv6 was painless, we'd have done it years ago. 

Yum only requires port 80 (HTTP). Is the firewall under your control? If it's on the local machine, you can configure it to allow 80 with the system-config-firewall gui. If it's not under your control, call the admin up, and tell him to lighten up. Allowing 80 out/established is a very minor risk. 

If by "unformat" you mean, "reformat as NTFS" the answer is yes. If by "unformat" you mean "revert it to the NTFS it was formatted as before I reformatted it" the answer is no. Formatting a disk completely destroys the partition information on the previous disk. It's possible that you could recover something with some partition recovery software (a la Partition Magic) but not certain. 

From my experience, your CMOS battery can fail and you'll never notice...as long as the machine has power. If everything keeps flipping back, I would definitely check for power loss. Check to make sure your UPS isn't crashing. Check to make sure your power supply isn't failing. Did you add more drives to the RAID, or just bigger drives? If it was a graphics card or something I might think that you'd simply outstripped your power supply, and it was crashing while under load due to voltage issues. I'd really expect to see RAID errors then, however. I'm surprised you're not seeing them anyway...RAIDs don't like crashes. 

Got that from this thread in a Drupal forum. Ymmv. I'm going home now, since clearly my brain is shot for the day. Also, make sure you allow for override, or the webserver will ignore your .htaccess file.