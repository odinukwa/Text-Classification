Try using a Powershell script for New-ADUser with try/catch or in order to find a duplicate AD user before you get to the point where Exchange renames the alias. Then you can use whatever logic you wish to get it named the way you want. 

I don't think there's any way to do this after looking through Microsoft's password policy documentation, but on the off-chance that someone was particularly clever: Is it possible to create a policy so that only business days count towards password expiration? The idea being that a password that expired on Saturday would not necessitate a helpdesk call until Monday, and VPN users would be able to continue to get in. We're Server 2008 R2 here. The best workaround I can come up with is to enable this in Outlook Web Access: $URL$ But not sure how this will play with our Duo two-factor. I'm open to third-party stuff if that will work. I don't see this as a PowerShell opportunity, but tell me if I'm wrong. 

I'm planning some expansion on an HP MSA1000 SAN. My boss says that we need to have two separate arrays on the new enclosure, one for Bays 1-7, the other for Bays 8-14. Is there any reason that we need to do this? My plan was to have the entire expansion shelf be 1 array, then create RAID 6 logical drives from that. I don't understand what splitting drives into separate arrays gain us. We don't have dual controllers, so there's no benefit there. Thanks, CC 

This might be better for Superuser...but can also be covered here. It seems clear that you've lost DNS on the client somehow. If you can connect to sites/servers by IP, but not via domain name, that would confirm it. Check your network settings and make sure that there is a valid DNS entry in there for your DNS server. You can try using the Google DNS 8.8.4.4, but bear in mind that if you tried this on many corporate networks, it may not work. You may only be able to use the internal DNS, since a firewall may stop outbound DNS from all but the internal DNS servers. If you truly think it's malware, you might also want to check the hosts file and make sure it's not redirecting all of your traffic to who-knows-where. 

I've verified my domain\Scheduled Tasks account has Full Control NTFS permissions on both the source and destination, and the Full Control Sharing on my hidden \server1\backup$ share. Just for giggles, I've tried adding the domain account to the local Administrators group on both servers. This works fine, but that seems like a lot of privileges just to copy files. Any ideas on what I'm missing? EDIT TO ADD: I've tried using the robocopy \copy:DATSO flag rather than \copyall (I can skip the auditing info), but I still get the same error. I've also tried using runas \noprofile \user:my Scheduled Tasks user for the robocopy command. I get the same error again. I'm not averse to simply adding the user to a Built-In group, though Administrators seems like it would be overkill. I'd be interested to know how others handle their Scheduled Tasks. 

If you have little to no budget, I'd recommend that you use some free (as in beer) wiki software of your choosing (even Google Sites would probably be fine). I'm afraid I don't know offhand a particular template that will help for your documentation, but the big advantage the wiki has (over, say, a Word/Excel template) is that you can easily see the changes to a particular page over time using the history function. It's more cumbersome to do something similar with an Office document. This would be best for account info, privileges, procedures, and other similar documentation. For software & hardware audits, inventory, configuration, I'll second the recommendation for Spiceworks. Download and install on a spare PC if you don't have the budget for a true server now. While we didn't opt for it when we were checking out helpdesk/network monitoring software, it is free, and it seems to have a nice community built around it. 

There are a number of questions that arise from what you're describing. First, if you're talking about vSphere, you should check that the hardware (which you don't describe) is on the VMware's Hardware Compatibility List (HCL). This will tell you if vSphere is going to be an option. If it's not on the list and you run into trouble, VMware will tell you it's unsupported, and you're out of luck. You also need to reconsider your hardware. Fault-tolerance doesn't seem to be addressed if you're just using a workstation. You definitely need to have some sort of fault-tolerant RAID 1, 5, or 6 setup, so that one HD failure doesn't ruin your day. Hot-swap HDs will make your life simpler when one fails. Plus server hardware should have redundant NICs, redundant power supplies, error-correcting RAM...just buy a server. Server hardware is cheap compared to the value of your office being down while you figure out what's wrong and restore from backups. Unless you have particular vSphere experience or needs (there's nothing in particular I see in your post), I don't understand why you wouldn't use Hyper-V virtualization that is built into Windows Server. For modest needs as you've described, VMware appears to be overkill. Since you already need to upgrade Windows (and you definitely do -- Windows 2003 end-of-life is July 2015), Hyper-V would offer less complexity in this scenario, and it comes as part of your license. 

Should you opt not to use the ADmitMac software, there is a metric ton of Mac-Windows integration info at MacWindows.com, including how to bind to the domain using only the Mac's built-in tools. In our environment, we bound our very few Macs using the Directory Service application (under Applications/Utilties). It asks for domain info, an admin password, what AD groups should be admins on the Mac, and that's gives you network logins with local profiles. For us, that's all we needed. 

I'd definitely use robocopy for actually copying the data. This syntax should be a good start: robocopy source destination /e /copyall The /e flag will get empty directories, the /copyall flag will ensure that you pick up all of your NTFS data. Another bonus of robocopy is that it will do differential copies, so you can copy all of the data over initially, but then slowly roll out the login scripts, doing a new robocopy to pick up only the changed data. As others have mentioned, the login script or GUI are your best bets. I know that there's also Group Policy Preferences now that can do mapped drives, but I've not tried that myself. 

It really depends on your situation. We do let most users have more than 1 login available, in case they move from one desk to another and only need to do a quick login somewhere else. The applications that they might use may enforce a single login, but our AD is not so strict. If, however, you are using 1 login for multiple users, that's a definite security no-no. Each user should be associated to his or her own account.