The accepted answer is out of date. The official camera is available from most channels that sell the Raspberry Pi. I don't believe that there are any other cameras working with that interface though (yet!) However some people have used additional lenses or removed the IR filter for their special purposes/needs. 

Samba is one option - probably you just have permissions wrong NFS is another option If Sublime Text can't work with networked filesystems I guess you need to choose a different editor. You can also run an editor (doesn't have to be vim) on the raspberrypi For text based editor you just ssh in and fire it up For graphical editor, make sure you have "ForwardX11 yes" in your , and fire it up 

I'd suggest doing a Bloom Filter in RAM and then you only need to do a small amount of checking (on average) for false positives. 

The maximum safe current from a GPIO pin is only 16mA 3.3v/16.5Ω would be ~200mA, so No. Definitely not safe You would need to add a series resistor of 190Ω or more to make it safe to connect and then the voltage across the buzzer will be only 0.26V, so very very quiet 

Again - either or work fine on their own, but playing both at once gives silence from the Sony. The Samsung plays both sources simultaneously. 

Nothing at that URL indicates that there should be any software changes if you are not using the GPIOs - however there is sure to be something they overlooked. We'll just have to wait until someone finds it :) They've swapped the I²C connectors. For I²C, this just means you need to check the revision in and use or as required. Or you can use to look at both busses for any devices you are trying to talk to. If you are using the I²C pins as GPIO, it's a bit worse because if you are using a GPIO library you'll have to make sure it's recent enough to check and remap those pins. The good news for some is that the 4 pins that were to be used to indicate board versions can now be soldered to and used as GPIO if you need some extra :) 

Is it possible that the routers are filtering on MAC address? You'll also need to make sure any encryption is set up correctly. 

Depending on the LEDs you are using, It may be possible to use a multiplexing scheme to reduce the number of drivers you need. It's probably simpler to use a bunch of 4094 shift registers daisy chained. You can bitbang the clock/data or use the SPI hardware to drive them Each 4094 can control 8 LEDs. You'll most likely need a small driver (eg transistor) per LED if you do it this way. If there is a regular layout, you will save a lot of work (and opportunities for mistakes) by making a small PCB that can be tiled together. 

to set the font to VGA 16x32, but that doesn't take effect until partway through the boot process It may be possible to pass a font to the kernel by adding 

There are a bunch of things that cec can do, that aren't on the list though too. You can press buttons on your remote and see the raw data being passed. By playing back those same bytes, you can simulate the same functions. 

There are plenty of very inexpensive ones based on the DS1307 battery included! I've connected one of these previously, but I don't think I posted the code anywhere yet. I'll add it to this answer when I find it. The other chip is an AT24C32 flash memory that you can ignore. 

This lists the size in megabytes and sorts numerically. ie. the biggest directories/files are at the bottom of the list. 

You don't need a window manager, or even X. I'm starting up to the console and running a program via auto-login. The program simply draws the GUI on the framebuffer. 

As I recall, Eben or Liz said they wouldn't mind releasing the board layout, but there's no point since you can't buy the CPU from Broadcom. However it's not clear what they mean by "releasing". Does it mean you can read the specs? copy the specs? copy the RPi? 

The polyfuses have a pretty wide tolerance, and can also be very slow to act. The Pi might work indefinitely like that, or the polyfuses might kick in eventually 

Python3 isn't really an upgrade of Python2. Only trivial programs will run without at least being run through 2to3. On the other hand, when there are minor updates, eg 2.7.2 -> 2.7.3 the 2.7 will be updated to the new version and the older one gets deleted. This is generally ok as there isn't supposed to be backward incompatible changes (I won't say this has never happened though) You won't usually see say 3.3 being added to the repository between releases, but when it does show up and you upgrade, the 3.2 will remain installed in case you depend on that specific version. Pure Python code that runs on 3.2 should be mostly ok on 3.3, but C libraries may not work without being rebuilt. 

Lets look at it the other way round. Lots of people who have only previously used linux on x86 are experiencing the linux on ARM for the first time with the RPi. Lots of what they know about linux doesn't really matter which platform it's running on. Setting up a LAMP server will be quite similar on RPi vs x86, but you should be aware that the RPi performance will probably resemble a 300Mhz PIII or thereabouts. Round here I have seen x86 PCs with better specs on the side of the road :) 

There is a recommended circuit on page 7 of the data sheet The transistor isn't critical, any small NPN should work fine. 1000 ohm should be ok for both resistors 

Here's how I've connected the AD9850 module up and a simple Python program to show how to set the frequency to 1000Hz. The AD9850 needs to run at 5V to work properly with the 125MHz crystal. It would probably be ok to wire 4 GPIO pins directly to the module since they are just inputs, but connecting via a MCP23017 effectively turns the module into another I²C peripheral and makes sure the RPi inputs are safe. Important Note About +5V The +5V pin on the GPIO can't really supply enough current to power the AD9850. You should use an external 5V supply. 

You can easily get 16 (or more) outputs using an io expander like the mcp23017. It has 25mA per output which may be enough to drive a small relay directly, otherwise it's common to use something like uln2003 to boost the signal 

There is a polyfuse in series with the power. This can have quite a large voltage drop, so perhaps that is what you are seeing. The more current you draw (including the usb ports) the higher the voltage drop will be. Eventually there is not enough to function properly It's possible that all the power supplies you have tried so far are not up to spec, but that seems pretty unlikely. 

That looks like the power is being shorted out Perhaps your meter is on the wrong setting. It should be on DC Volts If you meter has separate jacks for current, make sure you have the leads plugged into the correct jacks. Usually the red would be the right most and the black would be the one next to it (common) If you could tell us the meter model or add a picture, it might help get a better answer. Many USB devices have too much capacitance on board to be hot plugged into the RPi. The Supply voltage will drop momentarily as the device is plugged in, and that is enough for bad things to happen. 

So this device is capable of Bluetooth, but perhaps the software never supported it. I haven't seen anyone using it for Bluetooth apart from the WICED dongle 

Microchip MCP950X have a logic output that changes state at a particular temperature Available switching temperature are -35°C,-25°C, -15°C, -5°C, 5°C, 15°C, 25°C, 35°C, 45°C, 55°C, 65°C, 75°C, 85°C, 95°C, 105°C, 115°C, 125°C 

Assuming you know roughly how long the pi needs to run (battery capacity etc), just have a process that sleeps for X seconds and then shuts it down. 

The causes seem to be 1) poor connection of the ribbon cable. 2) power supply - the camera can use quite a lot of extra juice. I've been able to stream for quite long times now without issues. 

7805 can easily be destroyed by reverse current. That means if the 12V supply is off, but there is 5V from another source - HDMI, powered USB hub or GPIO the 7805 can die quite effortlessly. You could prevent that by adding a reversed biased diode between the input and output, but you'll still need a decent heatsink which will likely cost more than a 5V power adapter if you can't scavange one. Overall it's a very wasteful (energywise) design. It's still good to try this type of thing for learning. Also consider the LM2596 based regulator modules from ebay for a low cost voltage reduction. They have variable output, but you can set it to 5V easily if you have a multimeter. 

No, the pins are all connected to ground, even on the early Rev 1 boards. You shouldn't have currents large enough to have a significant potential difference across the various pins. 

You just need to have a (pullup) resistor from the output to +5 of the driver board. The value of the resistor isn't too important. Something like 1k is probably a good starting point. 

If the LEDs are lighting, and you've double checked that you have 5V on the red wire, it's time to suspect the motor is faulty. With the motor disconnected, use a multimeter to check the resistance between each wire and the red wire. They should all be about the same 

The comments indicate that you are powering "it" from a kindle usb-wall adapter. If by "it", you mean the RPi and the drive is plugged straight into the RPi, then the drive won't work. This is because the USB ports on the RPi are only capable of passing through 100mA to the device. Your choices are to use a powered USB hub so the drive is powered by the hub, or to do a hardware mod to get 5V to the drive without needing to go via the RPi 

I have seen this happen when there is a connection problem. Double check that both ends of the ribbon are not damaged and inserted fully. Second guess would be power supply problem. The camera can use quite a lot (relatively) amount of power 

It's a good idea to use to edit the file. It will prevent you from saving the file with errors. The easiest way to fix it will be to mount the SD card on a linux PC (or use a live cd) and fix the file there 

I'm working with a samsung right now, and have seen this problem with just a console screen. It's very intermittent, so will take a while to confirm the cause. The usual suspects are 

Obviously there could be a problem if files are missing from the SD card. Other possibilities would be the USB port getting fried, or the devices being fried. Check the power supply is sufficient for the extra current used by the USB devices. If you have another SD card, it would be a good idea to try a fresh install. You can also try the USB devices in your Mac to confirm they are ok. 

Should be fine. Antistatic bags are very slightly conductive, but I doubt you can affect the operation of the RPi with it. They are typically made from PET which has a melting point of 260°C which is somewhat higher than the lead free solder 232°C, so if you are melting the bag you have other problems! I used mine in the cardboard box is came in (from farnell/element14) for quite a long time with no problems. 

At a current of 1A, the LM1117 is dissipating (12-5)*1 = 7W. Unless you have a big heat sink, the thermal limiting will shut the regulator down. You would be better off to use a Buck converter. There are some on ebay quick cheaply based on the LM2596. The more efficient conversion will double your battery life 

I²C Hooking it up is fairly straightforward. The contrast pin(VO) of the particular displays I am using needs to be connected to ground. Usually you would connect it to a potentiometer to set the voltage between VSS and VCC My displays don't have a backlight, so I haven't connected those to reduce clutter on the schematic. If yours has a backlight you should of course connect it in the usual way You can connect up to 3 displays in parallel to each port of the MCP23017. The only difference is the enable pin from each display needs to connect to a separate pin (GPB1-GPB3) 

Do you mean when sshing into the RPi? In that case you need to copy the files in . I don't see any problem with doing that. The primary reason for those keys is to prove that the machine you think you are logging into is the machine you are logging into. 

It looks like you may want Blink() to be a generator. In that case you need to something to . You'll need to can create the generator like this 

Older PICs relied on the programmer to provide the timing for programming the Flash. I suspect that the RPi would be capable of getting those timings correct. The main difficulty in that case would be the level conversion from 3.3V to 5V for the PIC Newer PICs do the programming timing internally and some can be programmed at 3.3V. Those should be able to be connected directly to some IO pins. Now you have the read the programming specification for that specific PIC family and work out how to manipulate the GPIOs to get the program in there. It will be quite interesting if you get something working. 

If your wires aren't too long, you can use higher resistors - say 10k & 20k If you can't find 2k resistor, you can connect 2 1k resistors in series 

Mosfets should work fine if they are correctly rated. What do you mean by the grounds not being the same? You need to make them the same by connecting them with a piece of wire. 

It should work fine. Note that some powered USB hubs will also let power into the RPi through the fullsize USB ports, but on the Revision 1 boards not enough current can flow due to the polyfuses. Revision 2 boards can be backfed just fine if the USB hub is happy to supply enough current You can solder a wire across the polyfuses on the Rev 1 boards if you wish to use this trick Rev 2 board is easy to identify as it has 2 mounting holes in it 

The relay board you linked to says it is suitable for the raspberry pi. The optocoupler means your raspberry pi is just being used to turn on an LED. The light from the LED switches a phototransistor which then controls the relay. The only problem I'd expect with a board like that is if the 3.3V drive isn't enough for a 5V input. But this board looks like it's inputs are 3.3V compatible. Probably the 5V is referring to the relay coils. You should take that 5V from a separate supply - not the 5V GPIO pin as it may cause spikes on your power rail. 

For Raspbian, this has got me started so far: Raspberry Pi is on Munin Server is on On the RPi as root 

Apart from instability? Not much really. You'll use a little more power. Slightly shorten the life of the processor (probably not significant) Removing overclock is easy if you have a card reader on your PC If you don't have a card reader, it will depend on the distro. NOOBS has a rescue mode for example Otherwise you can try holding down shift when it boots - but that assumes you have a keyboard plugged in 

You could get one of these (RF) remote control power switches (Assuming you can find one suitable for your local power receptacles) 

As blogged on raspberrypi.org, the USB fuses are no longer on some of the later revision 1 PCBs or the revision 2 PCBs