There should a white list file you can add their IP address to. Look in the Exim configuration file for the the message. There should be lookup there. This will be the file you need to add the address to. Check your logs to see which servers you are blocking. Unfortunately, you are likely blocking banks, airlines, and governments among others. All organizations that should be capable of getting something this simple right. 

Normally, you shouldn't need to log queries, especially on a caching server. Memory requirements will vary depending on how many different domains you cache. However, on a modern server this is unlikely to be a concern. 

This kind of requirement may be better handled with a web proxy and/or filter. Dansgaurdian can be configured to do this. You will need to use NAT rules to force your traffic through the filter. Using iptables to filter will allow any sites available from the relevant IP addresses. This is normally a small subset of the entire web. 

The techniques I use to identify spam have little to do with volume. They are bases more on how well the server complies with standards and best practices. 5,000 is a relatively small mailing list and shouldn't trigger spam classification. Getting your server correctly configured to use its FQDN and having PTR configured so you pass rDNS validation will get you most of the way there. The spam filter I use triggers on content and looks for indication that the message is similar to previously seen spam. Well formatted text not selling things in a spamish way is unlikely to be blocked by the filter. During some research into the incoming spam I posted an article on Running an Email Server. It is a bit of a rant at marketers who do everything they can to look like they are sending spam. It is mostly mailing lists (including major mailing organizations) and automated systems (including airlines, banks, and others) that tend to be poorly configured. My article on Detecting Email Forgery (which a lot of spam attempts) may also be helpful. EDIT: If everything else is configured correctly, you should be able to send batches of up to 100 using a single connection. Your mail server should handle the batching for you if you get ahead of it. 

Before you can create any records on company B's nameservers, someone there must authorize you to. You should ensure you have that authority before changing your name servers to point to their server. Once company B is hosting your nameservers you are dependent on their security to ensure that unauthorized persons can not change your DNS records. Just because your site is hosted on company B's server you do not need to host your DNS with them. You could just as easily setup the necessary A record on company A's servers. It is common for smaller sites to have all their DNS records hosted by their domain registrar. (When you first setup your domain the registrar would be company A in your example.) The registrar will always be the source for looking up the authoritative name server records. It is also common that a third company hosts the nameservers. In this case you would depend on their security to prevent others from changing your DNS records. As long a you have the authority to update your records with the domain registrar you can always move your name servers to a different company in the case your DNS records get hijacked. Due to DNS caching, it may take some time to redirect your DNS A records to the correct locations. PTR records are a different matter. These are always controlled one of the organizations which supplied the IP address(es). It is possible for them to delegate control of particular addresses via CNAMES. It is now possible to increase the security of your domain records using DNSSEC. This allows you to sign your DNS records. Not all clients will check the signatures, so it does not protect your domain records for all clients. Local DNS spoofing is always possible. Some people use local spoofing to block traffic from ad sites. There are a number of site lists available which are intended to be used for this purpose. 

Locate the files in /var/lib/munin. Directory strutcure will be old/name*. Move the files to new/name*. You will loose the history between when you made the change and now. If you plan such moves in the future, create hard links in the new destination before the change. Then remove the old files after the change. 

I am not an ISP, but do accept email. If I can't verify your rDNS then I am likely to block your email. If you are using your ISPs servers as a relay, give the Class C back and use their private namespace. As a mailer you need postmaster@ and abuse@ address open for every sending domain. Track bounces and bit bucket the rest. If you are mailing on behalf of someone use a secondary domain like campaign.client.com. Check out $URL$ Setup an SPF like 'v=spf1 a -all' for all your sending domains. This will help limit their use by spammer. Failing this SPF on your HELO will get your message rejected. I may investigate its use on the rDNS address of the host as well. It should be the same as the HELO address but unfortunately is not always. Bulk and automated mailers make blocking server forgeries difficult because they so often get their DNS and server configuration wrong. I hope you do it right. 

In general what you are looking for is a VIP (Virtual IP). This can be done by some routers. You may get higher availability with redundant routers You can provide the functionality with a proxy listening single IP address. An application like can do this for you. In any case you will need a health check to test the state of the servers. This is what will trigger switching to a different server. If the proxy goes down you will loose access, but you can use redundant proxies in an active passive pair. A keepalive process can be used to automate activating the passive server if the active server fails. Either option allows you to spread the load across multiple servers. A proxy server can use different servers for different contexts (paths). Some routers can also do context based routing. 

PRO: I assume that you intend to use the main mail-server as your MDA. Having only one MDA makes life simpler. CON: The backup-MX is likely to be used as target by spammers. If it can't fully validate incoming messages when the main mail-server is down, you may need to silently drop messages arriving there or generate back-scatter email. 

Whois is not the tool for checking DNS resolution. Try using nslookup or host to see if your domains resolvable. If you are using a third party DNS service, you need to enter the nameservers they assigned to you into the registrars data. They will publish then nameservers for your domain. Your third party DNS service will used to resolve DNS queries for your domain. I suspect you haven't supplied the registrar with your name servers, or they are slow in publishing the data. 

Basically, the better you comply with the relevant RFCs the less likely you will be blacklisted. There are no guarantees, but there are a number of things that will get you low trust ratings and/or blacklisted. 

Not all applications are updated to TLS 1.2. My SMTP logs indicate about a 50/50 split between TLS 1.0 and TLS 1.2. That likely overstates the adoption of TLS 1.2 as my internal serves use TLS 1.2. Try running your tests with , , and as well as . For now only should fail. That should enable most modern clients connect. I disabled SSLV3 on my servers last week-end. I run Dovecot, Apache, and Exim, so I don't have instructions for Postfix. For Dovecot I used: 

Congratulations on implementing DMARC. It looks like you are taking a measured approach. It is not uncommon for people to use email addresses that are forwarded to real mail boxes. Google will be aware of the servers for some of these and may deliver them to the user's mailbox anyway. This is likely what happened with examples 2, 3, and 4. Over time you will see multiple records that are alike other than the report time. Based om my records Google will report a reason of "forwarded" for mail it identifies as legitimately forwarded. Other domains may also report forwarded email as such, but I don't have any such reports. If users have mail from their forwarder being incorrectly sent to spam, there are various options available. This is one case where they may want to whitelist your domain when recieved from their forwarder. The server should learn that you aren't sending spam if your mail gets refiled in the inbox repeatedly. Some spammers will try to forge your identity in spite of DMARC. As DMARC is not yet frequently deployed, many mail servers will process email without reference to your policy. If they don't sanitize there recipient lists to remove addresses handled by providers that have implemented DMARC you will get reports like Example 1. (If you don't require the use of your authorized servers to send email from your domain, you can get reports like this.) However, in this case example 1 appears to have originated within the Google network. DNS indicates the IP address belongs to Google. A whois lookup on the domain indicates its nameservers are in the domain "googledomains.com". The addition of a reason to the record indicates that there is a local policy that permits this email. You may want to check the IP addresses that are reported against various DNS blacklists. They may also be listed in a DNS whitelist. If you store the data in a database, you may be able to automate the DNS lookups. 

Just ensure local_domains does not include any hosts you want to require authentication from. This will prevent an open relay situation for those servers. However, it is common for servers to send email via the MX to the internet. Generally you do not want to require authentication in this case. Ensure relay_to_domains is empty, or contains only domains that you want to allow relaying to. (You are an open relay for any domains in this list.) Make sure you require STARTTLS before accepting AUTH requests. Otherwise, your passwords will be easily sniffed. 

Ask your tunnel broker for a /56 or /48 allocation, at least another /64. You will then be able to generate a /64 in this block for the far end of the link. If you have multiple tunnels you will need a separate /64 for each tunnel. I would expect the FED1 addresses to always be on the TUN devices only. (Site local addresses are deprecated and should not be used.) You will likely have to specify routing for ::0/0 on the Ubuntu side. Use the 2001: or an FED1:x: address for the Ubuntu eth0 interfaces. RADV should pick up the address automatically, but I program it in. My configuration uses my /48 allocation for LAN devices, and the /64 for DMZ addresses. This makes firewall configuration easier as they are in non-overlapping ranges. Your ping results are what I would expect. You will need to specify a link to FED1::1 on Ubuntu. Changing the Centos eth0 address to FED1:1::1 and specifying the addresses as /32s or /64s should help. You only need to know the link addresses on the tunnel ends. The eth0 interfaces should have your 2001: (public addresses). It the eth0 on Centos is your upstream link it will likely have a Point to Point IPv6 address for the local end of the upstream link. This should be handled by your 6to4 tunnel setup which should also add the default route to the Internet. EDIT: Suggested configuration Centos (Server/Network) 

You need to provide a configuration line in addition to the configuration file. You have configured one of two options for CA certificates. You may not need either. This may be configured with the file that should be the GoDaddy provides documentation on installing your certificates. According to that the gd_bundle-g2-g1.crt should be configured with the parameter. This parameter is called in Apache versions before 2.4.8. 

Unless you are using commands in , NUT should wait until the UPS reports low battery before doing a shutdown. Check to make sure you have nothing scheduled there. Once NUT starts the shutdown, it will trigger the UPS to recycle after a timeout. This is to ensure the Server comes back up if Power is restored before the UPS runs out of battery. The time is specified as in . You may want to enable logging of all notifications for all events in . This may enable you to determine why the system is shutting down so soon. These are the settings I use: 

These messages are likely from a spambot that is being blocked. It is unlikely to be an attack, although I have been experiencing some AUTH cracking attempts recently. This spam is being blocked at it is sending a command before your server has sent its banner. This is desirable behavior as it limits load on your server processing and filtering spam messages. You could limit log messages by blocking this IP at the firewall, or by adjusting the log parameters. I would avoid manually blocking IP addresses, the the log messages are useful for monitoring spam traffic. I do use fail2ban rules that temporarily firewall servers like this one. Unless the server is extremely misbehaved, I would expect the message to pass eventually. If you are not running a caching DNS server for your mail host, I would recommend configuring one. It should help with DNS lookups, as they can be repeated multiple times for the same message.