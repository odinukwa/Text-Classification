There are several ways that you can do this: Use a build server I've heard of teams using CCNET.net or FinalBuilder Server for this. Basically, what happens is that the build script has code to push the latest build, every time somebody makes a check in. I wouldn't recommend this for production though. This should work fine for a staging environment though. I'm not very familiar with build servers on Linux, but I know that there are a few. There's also Ant, and even Make scripts that could be used for this. Put a working copy on the staging server Just do a check out, and map the correct folder to be the root of the web app. Somebody on the team will have to manually update this working copy, but this gives you the flexibility to revert to a previous version if necessary. Caveats You'll need to make sure that you exclude the .svn folders when you pointing the website to the working copy. I wouldn't recommend using a Subversion hook script for this. You can pretty much use any scripting engine that available in Linux to do post-commit scripts. I typed "post-commit hook script linux" in Google, and got some good hits. 

I'd take a look at how many file handles you have open, and what the max is set to. is a good place to start. If the first number is close to the last, you're running out of file handles! you can up them by setting it in systcl.conf, or by . If this is the case, I'd look elsewhere in your code for why file handles anrent being closed. 

The problem is the tail part; since it is in continuos mode it wont ever spit out something for "read" to read. This should work: 

Your kerberos setup on the would appear to be incorrect. (unless you edited your output to say krbserver.test.com) $URL$ If does not work also, look in . Make sure is set up to reflect your setup. 

I have been in a similarl situation before; The way I did is was using netdom, less clicks, and you can use a batch file or psexec to make life a lot easier/quicker. e.g. 

Subsequently, if it is in a location that can be found automatically by ssh, the path won't need to be specified at all. i.e. 

After remaking the /tmp dir with mode of 1777, the next thing I'd look at is the permissions on your .Xauthority file; make sure it's owned by you, not root i.e. 

I'm currently using the free hMailServer for SMTP, POP3, and IMAP. It has been pretty solid in the couple years that I've been using it. I've run it on Windows 2003 R2 and Windows 2008 Standard and Enterprise. I'm using SquirrelMail for webmail. This is PHP, but it wasn't that hard to setup. This is free as well. The best commercial experience that I had with a non-Exchange server was MDaemon from Alt-N Technologies. It has the best OWA like UI, and it has a connector for Outlook, so that it thinks it is an Exchange server. The price for this server is not as much as others, but still too much for me. There are several other email servers: Open Source/Free 

There's several good alternatives now days: Free: CollabNet Subversion - $URL$ VisualSVN Server - $URL$ Commercial: PainlessSVN - $URL$ 

There are many more servers out there. The ones I listed here are the ones I had tried at one point in the past. 

My favorite utility is RAdmin by Famatech. My favorite feature is the ability to work behind NAT firewalls. It is mainly a remote control administration tool, but it has different connection "modes" that lets you work with the specific computer in different ways. There's another tool that I want to try, but haven't yet. It's called Network Administrator by IntelliAdmin. It will let you a lot of stuff in the background, without interrupting your users. These company also has several other useful tools. 

My co-worker sent me a '.ssh' directory with files in it. He said that I can put that directory in my user directory then connect to ssh without password (ssh root@ip). I put that directory in my home directory then tried ssh root@ip, but it didn't work. Am I missing something? 

I looked up google then found out that Nginx can't read either the cert or key file. I opened the cert file and everything looked good. When I opened the key file then I realized it is a binary file. is this normal? I thought a key file is just a plain text file. 

I'm trying to install a SSL with my nginx setup. I configured nginx with those two files, but it doesn't work. Nginx complained the following error message. 

My client sent me a CER file so I installed on my IIS. How do I verify that it has been installed correctly? The purpose of CER file is to access their SSL protocol. Is there a sample aspx file that I can use to test ? or is there a tool that IIS provides ? 

I have a weird problem. I have two exact website on two servers - dev and qa. The dev one shows that my javascript size is 100kb, but the qa says 400kb. When I save the script on my local, it is 400kb. I looked at the header of the javascript on the dev and it looks like..it's sending 

If you don't mind a commercial solution, there a business telnet client called TeSSH, that has a rich scripting language, and can be run from the command-line. It has support for writting scripts in vbs, perl, and lua. It's fairly inexpensive at $34.95. You can also visit the TeSSH Support Forums. 

One way of doing this is through path-based authorization. This way you could setup the archives to be viewed only by those people in your team. Here is a page from the Subversion Red Book about Path-Based Authorization: $URL$ You will be able to set the permissions using what's called an authz file. Just make sure to test this with different users. Play with the different settings. Once the authorization settings are to your liking, then you can open your firewall port to the WAN. Subversion has 2 servers, svnserve (svn:// protocol) and Apache-WebDAV (http:// protocol). I recommend that you use VisualSVN, if you choose the HTTP protocol. I have a product that handles the svnserve server. It's called PainlessSVN. There's a couple places where you may be able to get help. WanDisco Subversion Community Subversion Forums 

One way of getting this to work is to download a copy of SQL Server Express, and restore the backup there. Sometimes this doesn't work, so you could try downloading a trial version of SQL Server Standard. I think it has something like a 180 day trial. Once you got the database restored, then you can use your favorite ETL tools to move the data into PostgreSQL.