Finally check Network | Routing. There should have been a rule added automatically for Source = Any, Destination = X4 Subnet, Service = Any, Gateway = 0.0.0.0, Interface = X4 so that the inbound traffic can come BACK to the correct subnet. 

As others have said you can't use IPs that are already in use. You should use a separate subnet that you can route through (to the other network). I would suggest using something larger than a /30 block (in case you ever add additional locations) -- a /29 would allow you to expand to 6 locations for example. I would use something separate from your existing networks (so it stands out) but not adjacent (in case you expand). I would suggest something like 10.99.9.0/29. If you want to be able to test then you should convert your existing VPN to Tunnel based VPNs first: $URL$ OR: $URL$ This has the advantage that you can then more easily make routes to test than Policy based IPsec VPNs. Do this during a period of downtime as the VPN will be down while you switch to a Tunnel interface in the VPN and then create the routes. Then configure X2 on each router with 1 IP from your Point-to-Point range: 

Both in the LAN zone, both in Static IP mode. Connect X2 to the PtP interfaces of your ISP's device (eg. the MPLS). This assumes the link is just a Layer 2 link, no routing is being done by the ISP. You should then be able to use the Diagnostic Ping (or CLI ping) commands from each router to ping the other router's X2 interface (eg. Arlington should be able to ping 10.99.9.2. If things are working then you can create a Routing policy to test: So on the Arlington router: 

Ron is correct, SonicWALLs will not do DNS Proxy/redirection or act as a DNS forwarder. BUT you can use NAT rules to accomplish the same thing! If you need your SonicWALL to act as a DNS resolver for LAN clients then configure a loopback NAT rule like so: 

That's to allow the remote site to initiate the connection, you would need to publish/NAT inbound those ports to the W0 interface if you wanted to initiate from the central office to the remote site. I would suggest testing this before sending any equipment out as the little routers inside those hotspots are often troublesome. If it works please post back with the make and model. 

The problem is likely that you have VLAN tagging mismatch between the two SonicWALLs. How are they connected? With a switch? Or some other device? (an ISP's MPLS device of some kind?) Note: I am going to assume on SonicWALL B that the interface is X3, since you don't state it -- just so things are clear. Your packet counts are for X0. If SonicWALL A has: 

On the SonicWALL, configure: Configure X2 on the SonicWALL with a free IP on the VoIP subnet, let's say: 172.21.1.2/24. If the vendor controls this subnet ask them for a free IP, otherwise do an IP Scan. Under Network | PortShield Group, edit X2 and ensure it is Unassigned (not assigned to X1). Then under Network | Interfaces, edit X2. Assign it to the LAN zone (assuming you trust the VoIP traffic - if you don't then use DMZ and you will need to create Firewall rules; choose LAN if you're unsure, to start). Set it for a Static IP, configure the IP, and other settings as desired. Note: A route will automatically be created under Network | Routing (from Any to X2 Subnet, for Any Service). If you selected X2 Zone = LAN the Firewall rules will already be created (assuming Interface Trust is enabled for the LAN zone, which it is by default). If you set X2 Zone = DMZ you will need to go to Firewall | Access Rules. Create or edit rule from LAN > DMZ, and DMZ > LAN for the X0 and X2 interface (I would suggest keeping things wide open, Any/Any/Any, during testing and then tighten up after if needed). Connect X2 to the VoIP switch. On the Phone Router: NOW: you or the Phone Vendor will need to create a route on the other router. No IP or interface needs to be configured. The route will need to be: 

Your question doesn't list any specific IPs so I'm just going to make some assumptions, change them as needed. You can do what you want, DHCP is broadcast only within the local subnet (won't be passed by a router unless you configure specific options to do so). Assuming: SonicWALL: 

As Network administrators we can modify the bridge priority value. When VLANs were introduced the needing of differentiating the STP protocol raised (Per VLAN Spanning Tree - PVST). To accomplish this the bridge priority value was modified as follows: 

When you read "Vlans allowed and active" it simply means that just the active VLANs (the ones you have defined) are allowed in that trunk link. Reference here: How to define the VLANs allowed on a trunk link EDIT: Analyzing the output of the command it's easy to see that it is organized in 4 sections; 

Pay attention that if you want to add a vlan on a trunk link (for example VLAN 100) you have to use the add statement (this is really a commond mistake), for example: 

In the spanning tree algorithm the process of determining the root bridge is based on the bridge priority (BID). When there were no VLANs (meaning that switches had to deal with only one broadcast domain) the BID was equal to: 

A common miscomprehension when dealing with streaming is the relation between bitrate and throughput. Meanwhile your throughput is higher than the bitrate of the stream you are, generally, OK. (ever heard about the Nyquistâ€“Shannon sampling theorem)? Therefore you should first of all try to stimate the bitrate of the stream and than do your estimation based on this and not on the maximum throughput of your devices. Consider also that the worst enemy of real-time video is the jitter. For what concern the problem of the association this is not a problem at all since each AP can broadcast an arbitrary SSID (even hidden) while referring to the same VLAN. Of course go for the 5GHz spectrum since you will need to use, a lot, of non-overlapping channels. I'm sorry but with my limited knowledge I can't suggest you more than this. 

Doing troubleshooting with comments it turned out that the pre-shared key was missing on the router. To add this just type: 

If you are interested in a more general method for troubleshooting refere here: Troubleshooting RADIUS and TACACS+ 

Half duplex implies that there is a shared medium (in this case the radio spectrum) that is capable to transport one data flow. Usually when an host wants to transmit over a shared medium has to run an algorithm to ensure he is the only one that is transmitting to avoid collisions. In the wi-fi world the alghoritm is the CSMA/CA. When an host "wins" the channel he transmits at the full bandwidth of the channel. What you've described better fits in the Time division multiplexing (TDM) that is not really an access method but is a multiplexing one. 

But as you pointed out why an host would use the broadcast address in an ARP reply? Maybe because this could seem clever: using the L2 broadcast address all the hosts in the LAN would immediately know a new (IP,MAC) pair saving time. Actually this method is not desired by the RFC (even if they refer to periodic broadcasting): 

One of the most notable feature of NetSnmp is the possibility to extend an OID tree running aribtrary commands using the extend and the pass persist methods. I was wondering if there is such a fuature also in Cisco devices. For example is possible to answer with the hitcout of an ACL? Is so, how to choose the OID? To my knowledge there is not a private branch for custom OIDs. 

If you want to achieve a more granular specification you could even think using NetFlow but this represents a more complex scenario. If you need suggestions about products please use the chat. 

Reference: Private VLANs Actually if you have a look at the structure of a Subset Advertisements packet in VTP v2 (used to annouce the VLANs) you won't find any option to announce a "private" VLAN. So it seems more an unsupported feature rather than a design choice. Reference: Understanding VLAN Trunk Protocol (VTP) At the end it seems that this feature is avaible with VTP v3 

It also depends on the host's OS to add in the ARP table a tuple learned by a broadcasted message. EDIT: As stated in the comments the RFC 5227 updates the RFC 826 and it says 

all the vlans will be allowed in the trunk link. If you want to control which VLANs are allowed in a trunk link use the following commands: 

The really first step is to look for Radius support. With Radius support you are able to manage the authentication authorization and accounting (aaa). In this case you are not concerned with authentication and authorization since you are, essentially, asking for accounting. Accounting is the process by which a network device (called NAS - Network Access Server in the Radius world) periodically sends accounting messages to the RADIUS server (the aaa server) about the activity of its clients (the supplicants). For example an accounting message could transport information about how many bytes are beeing transmitted by the client during a session and so on. The really general idea is to have this schema: 

I used to have lots of strange issues with SIP400 cards and 7609 chassis... Not sure if this one is matching the behaviour but please check it: CSCsb69734 SIP400: Sub-int IP state up but not reachable after SSO & reload Symptom: In rare situations, the 7600-SIP-400 SPA-2X1GE sub-interfaces can be unreachable even when the interface state is up. Ping or even control plane traffic (such as OSPF hellos) do not pass through the sub-interface but traffic passes through the main interface. Conditions: The problem might be encountered when a SSO switchover is done concurrently on one of the routers and line card/SPA reset is done on the directly connected interface on the other router. Workaround: When the interface is manually reset the problem disappears (i.e. shutdown, then no shutdown on the interface). A SPA/line card reset also solves the problem. Further Problem Description: This problem is seen with IP & IPv6 configurations on the subinterface. 

More specific match is always going to be selected, so all the traffic will go to 234. You can't control how other ASNs are going to do their routing. If they decide to announce more specific static via redistribution then all the traffic will use it. However in normal situation ISP is not going to use static routes for subnet which is not part of their address space. 

You can add ip flow ingress/ip flow egress under the interface (Ethernet0 in your case). This will enable NETFLOW caching of the traffic passing through that link. No worries no risk involved. After that you can execute show ip cache-flow and you will see all the packets passing through that interface. Most probably the rest of the devices have more specific routing and default gateway is not used at all. 

In addition to that you will need mls qos trust on the trunk facing the SW, which is doing the classification and mls qos enable on the SW itself 

The new SUP-2T can support up to 4000 VRFs. This design has two main drawbacks which you need to consider: 

1) Issue the flash_init command and the load_helper command switch: flash_init switch: load_helper 2) Issue the dir flash: command in order to view the contents of the Flash file system. After you have verified where the Cisco IOS image file resides, try to boot the image. Issue either the 

Imagine a situation when packet arrives at the first router and it's size is nearly to the MTU of the physical egress port of the router, then it is encapsulated with IPSEC headers. Those additional headers will probably exceed the MTU of the egress port In such situation the packet is going to be fragmented after encryption - post-fragmentation. Of course this forces the remote IPsec peer to perform reassembly before decryption. You can avoid post-fragmentation if you set the MTU in the upstream data path to ensure that fragmentation occurs before encryption (prefragmentation). Prefragmentation is really important from performance perspective because it is moving the reassembly task from the remote IPSEC peer to the end host. 

If you really want to explore the topic for measuring optimizing TCP perfromance I'd recommend to read RFC-6349 

Very strange topology... However in my opinion you have to add route on "Router to configure" for 192.168.10.X network pointing to PC1 ( 192.168.0.9). 

Latency can be extracted from iperf test, but I'd recommend adding SLA probes via some external software like this one 

3) If you issue the boot command and the result is in a successful bootup, either the default switch> prompt or the hostname> prompt displays 4) If you issue the boot command and the command does not result in a successful bootup, either the switch: prompt displays or you are stuck in a continuous reboot again. The only option to recover the switch is an Xmodem file transfer 

When the routers on either end of a BGP session first boot, the session between them is in the Idle state. The BGP session remains idle until a start event is detected. Typically, the start event is the configuration of a new BGP session or the resetting of an existing BGP session. At boot time, the start event is generated by the router as the BGP session is initiated. After it detects a start event, the BGP host sends TCP request packets to its configured BGP neighbors. These packets are directed only to neighboring interfaces that have been explicitly configured as BGP neighbors. Upon receipt of the TCP request packet, the neighboring host generates a TCP response to complete the three-way handshake and establish a TCP connection between the peers. While this handshake is taking place, the BGP state for the connection is Connect. If a TCP timeout occurs while the originating host is waiting for a TCP response packet, the BGP state for the connection is Active. The Active state indicates that the router is actively listening for a TCP response and the TCP retry timer has been initiated. Once a TCP connection has been established between both ends of a BGP session, the BGP session state is OpenSent, indicating that the originating router has generated an open message. The open message is an initial BGP handshake that must occur before any route advertisement can take place. Upon receipt of the open message, the neighboring router generates a keepalive message. Receipt of the keepalive message establishes a point-to-point connection, and the BGP session state transitions to Established. While the originating host waits for the keepalive response packet, the BGP session state is OpenConfirm. Source of the information