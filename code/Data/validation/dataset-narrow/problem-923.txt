Your email composer should allow you to add a header. This is different from the header which should match the user you authenticate as. Alternatively, setting a header to the user you are authenticating as should allow you to use a different header. Either the or address should match the envelope from address. It would be best to leave your Exim configuration alone. You will have the least delivery problems if when you compose the message you either: 

There are servers at both ends which are doing Network Address Translation (NAT). As the address passes though these servers the header address on the data packet gets rewritten to that servers Internet address. The server keeps track of which connections belong to which internal host. Traceroute displays data from inside an ICMP packet indicating whether or not the host was reached in a given number of hops. The NAT routers do not alter this data. As a result you see the address that each host received the packet on. Normally the servername on the far end in this case has been routed using DNAT (Destination NAT) to a host on the private network. It is likely that the address is being passed over a VPN tunnel between two sites. The VPN be encapsulating the source and final addresses inside the packets being sent between hops 3 and 7. The effect is the same, although the mechanism is different. The routers at hops 3 and 7 would know the addresses ranges supported by the remote routers, and route the packets accordingly. Leaving hop 7 the IP destination would be 67.0.0.7 with a public address belonging to hop 3. This is invisible due to the way route tracing works. Depending on the VPN protocol some hops after hop 7 may not be traceable. In some cases you may see an ISP routing over private addresses to a public address. This will appear as one ore more private addresses between two public addresses. If the intermediate routers with public addresses belong to the same organization, it is possible they have routing rules allowing end to end communication without translation. 

/srv has started to be used for things like web servers. However, as you are using apache you can block access to /var/www/www.example.com on the default virtual server. With Apache you can restrict access directory by directory either by ip or password. You can also require both a matching ip and a password if necessary. Unless you are modifying the files from a process on the web server, the directories and files should not be owned by or writable by the apache servers user id. 

A relay is an MTA (Mail Transfer Agent) which will forward email to another server. Of most concern are open relays which accept email from anyone and forward to anyone. These are useful for sending spam, and many systems try to avoid accepting email from them. Smarthosts are a class of relay server which is used to relay email for a certain group of users. ISPs typically provide a relay server which accepts email from their network and relays it to the Internet. They may require authentication. MSAs (Mail Submission Agents) are Smarthosts which usually require authentication. There is a separate Submission port allocated for them to use. An MSA can be useful for mobile users as they allow the user to relay email using trusted mail servers. 

It is also common to us NAT for a VM. In this case the source address (and possibly port) are changed when packets are routed by the VM's host to the external world. Responses have the destination change to the original destination. 

The unused initialization code will be freed as soon as the memory is needed for other purposes. (It will be backed by files from which it is read.) The memory paging mechanisms on Linux are well designed and have been tested for years. It is rare you would want to swap any process out of memory. This would result in heavy paging activity any time the swapped process is scheduled for execution. If you truly need the memory from the other applications, you have too little memory. You can prevent the other programs from executing by sending them a signal with the command. Be careful which programs you stop or you could lock yourself out of the system. If you are experiencing large pauses during startup of your process, consider using to determine where the bottleneck is. You can also use to determine which process are being paged or swapped heavily. Don't be surprised if your process shows up as the problem. I've run servers which were severely starved for memory. To perform startups, it was essential to limit the number of processes starting at any one time. Process start almost instantaneously even if memory is far over-committed. If you really want to force everything possible out of memory you could write a program that allocates the desired amount of memory and continually writes to each page of the allocated memory for a few loops. It will experience all the issues you want to avoid. 

Not sure why you would be doing this. Would do what you want? This can be used to setup a tree on which you use rsync. For production or testing websites, I generally recommend updating from a version which has been exported and archived. The archive is promoted through the release cycle. 

Are you using Maildir storage with IMAP? If so, it should possible to just move the messages into the new folders. It should also be possible to use a mail client to copy between the two IMAP folders. It is important the the messages have a Date header, as this is usually the preferred date. Some clients will prefer the Delivery-date instead. If all else fails, they may used the date the message appeared in the folder. As long the messages have a Date header, then the dates should remain the same. Emailing between the two servers will reinject the messages into the mail stream and result in the Date headers being replaced. EDIT: My experience with Dovecot and Thuderbird indicates that as long as the Date headers exist, the date doesn't change when a file is moved using IMAP. If the Date headers are absent, then the date is set to the date the file shows up in Thunderbird. IMap internal date value is specified in RFC-3501 Internet Message Access Protocol section 2.3.3. Based on my reading of the RFC, I would expect the Delivery-date header to be the significant header. If you are moving files using IMap, Postfix is irrelevant as it is not involved. Postfix will only be involved if the messages are being mailed between servers. 

DNS servers generally don't log a lot of data. For a caching name server there should not be a lot to log. I'll use my bind server which is split brain and serves queries from the Internet. 

In your case a web proxy with authentication should provide the necessary access. Apache can be configured to do this relatively easily. 

Most site files need to readable by the web server. On a read only site, only the logs need to be writeable by the web server. set the owner to someone other than the used by the web server. Set protection 640 on all files except scripts. Set scripts and directories 750. For files or directories that need to be written by the websever you can change the owner to the web server or set the chmod g+2 the relevant files or directories. 

Servers can require significantly more power during start-up. I've seen a data center blow fuses following a power failure when the normal draw was about 30% of the fuse rating. We ended up staggering startup delays on the UPes. At 4000W it is likely you are on a three-phase feed. You will need to do some planing and testing to ensure the load is balanced. 

The backup DNS servers (one or more) will be slaves to your primary DNS server. Changes to the primary DNS server will be picked up by the slaves. This may be done on a periodic basis, or in response from a notification from the primary server. This is one cause of delays in changes to DNS being recognized across the Internet. Your primary and backup nameservers will be listed as the nameservers for your domain. Before DNS notify, slave nameservers would have a prior version of the DNS data for some period of time. (This is the one of purposes of the serial number.) Once all the nameservers have updated to the same version (same serial number) they should all have the same data. Editing a zone file without incrementing the serial number can cause inconsistent data. There is no switching to the backup DNS server(s). DNS requests are distributed across all your nameservers relatively evenly. (This is done by querying servers using a round robin schedule.) If one or more name servers are down, requests will be retried on another nameserver after a timeout. As long as one of your nameservers is up your domain will resolve (slowly at times). You want to have all your nameservers always up. In your case, you may find that it is simpler to use your ISP or domain registrar to host your domain. They will have one or more backup nameservers and will have resources dedicated to keeping them running. 

This can be handled by setting up appropriate routing rules on the server in the middle and the two endpoints. The default method for routing is to use DNS MX and/or A records to locate the mail exchange for a domain. First an MX record is used, and if that is not available, the A record is used. Most MTAs (Mail Transfer Agents) allow manual rules to be configured. Manual rules are often required when acting as a relay server. In this case the DMZ server will act as a relay between the two domains. Configure the mail servers in each of the domains to route to the relay server. Bi-directional access between the DMZ and the internal mail servers will be required. Other than the manual routing, standard mail delivery rules will apply. 

I believe Dovecot uses the Date: header. I've run into this issue when moving messages without a Date header. Some were from an old mail system, but most were from the Sent folder. Relatively few were sent by servers that didn't ensure the Date header was present. You may be able to resolve this by adding the header and forcing it to reindex the folder. You may be able to use the utility to add the Date header. You may need to chain commands and create a new directory for the fixed email. If you have a Maildir format store, you may be able to move the cur subdirectory to a new name like old, and rewrite back to cur. 

Your domain does not need an IP address, and shouldn't have one unless you have a server with a static address. However, this means your web site will only be available using the sub-domain. Some (most?) browsers will handle this for users who don't include the portion of the name. If you do have a server, it can run a lightweight web server which redirects all traffic to the sub-domain. You will also need NS records for your domain, but those should already be configured. 

This issue applies to many types of data stores not just GlusterFS. This is because increased distance increases latency. The recommendation to be on the same subnet is also to reduce latency due to network hops. In order to maintain data synchronization, the various servers must ensure that all servers have the same view of the data. For data reads, the latency effect is usually not an issue. However, serious data corruption can occur if multiple servers write the same block before they are synchronized. When a data block is being updated it is possible to loose changes, if the block being updated was read before a subsequent update on a different server data will likely be lost. Locking mechanisms can be used to reduce the risk of corruption. However, distributed locks take longer to obtain and release as latency increases. In this case, latency it the time to complete a round-trip between servers. There are three contributing factors when communicating between data centers. Mail data stores tend to be relatively read mostly. Normally, it is unlikely that multiple clients attached to different servers would be updating the same file or directory. There may be some contention between incoming email messages and clients reading them, but the latency should not be a significant issue. Maildir format stores should have relatively lower contention that other formats. However, they have relatively high rename and move activity which may cause issues if your nodes become disconnected. 

You can't use a random selector, although you can use a random string as the selector name when you publish it. While you should change your selector periodically, its name is fixed for its lifetime. (Keep the old selector active when adding a new selector.) For each selector you need a signing (private) key and a public key. The public key is published using the selector as a domain name. I described creating and publishing the keys in my my blog post on Implementing DKIM with Exim. It is not necessary to sign your mail, but it is a good idea. Many domains do not sign their content, and many that do fail to correctly publish the selector record. Configure a DMARC policy record to define you policy and abide by it. 

When you are setting up Ubuntu the DNS servers that are being asked for are the upstream nameservers. These should be the IP addresses of the nameservers provided by your ISP. You may want to use Google's nameservers, or those provided by OpenDNS. If you have a home router, you can usually use its IP address as a nameserver. Hosts that use DHCP to get their IP address usually get their DNS nameservers that way. All domains have their own nameservers which host the names for that domain. Unless you understand DNS quite well, it is best to use the nameservers provided by your registrar for this purpose. In your case with Hover, you want to use Hover's DNS servers. Add an A record for your domain with the external IP address of your router. Your router will then handle routing connections to the server using your port forwarding. 

An alternative for email to this server is to use a subdomain (app.example.com). This will need an MX record. In that case I would consider using the same name for the SMTP server. Setting up to recieve email is significantly more difficult than sending. 

The existing authenticated user rules will allow any authenticated user virtual or local. Control which users can authenticate appropriately. The Exim Specification is well written. You should review it, or at least the ACL sections. 

Choose a domain name for your mail server. The MX record should point to the FQDN (Fully Qualified Dommain Name) of the mail server, such as . All domains should use this FQDN in their MX. Use a priority higher than 1 so that you can add servers with both higher and lower priority. Something like: 

Amanda will use incremental backups as long as you have not disabled them and it will have a full backup within the specified backup cycle. Configure amanda to email you the backup reports. The statistics columns of the report indicate full and incremental backups. The Dump summary reports fill backups as 0 in the 'L' column. Incremental backups will have a value of 1 or more depending on which level of backup they are incremental from. You can configure amanda to always do full or incremental backups for a device. This is covered in the documentation. It is best to allow amanda to schedule incremental backups according to its planning. This will result in full backups being scheduled throughout the week, with incremental backups as needed on the other days. I have done a setup where full backups for offsite storage were run on the weekend. This was done with a second configuration configured to always do full backups and that did not record the backups. Not recording the backups allows the daily backups to schedule their incremental appropriately. It is worthwhile to read the documentation, especially on the strategy used to schedule full vs. incremental backups.