It is far from clear how you are attempting to power the Pi from the motor driver. You need to measure the voltage it ACTUALLY delivers. 

I don't know where you got a model B, they were effectively superseded by the B+ more than 2 years ago, and are out of stock in most retailers. They are still a good system but are mainly used by people why have developed products for them. You either need to get matching peripherals for the 26 pin GPIO or a newer Pi. The 26 pins are largely compatible (there are a couple of changes, mainly to I²C) but they are mechanically incompatible with 40 pin peripherals. You may be able to use these with a 26 Pin cable. 

Firstly copying obsolete network settings is a bad idea. What you have will probably work, but only by accident (because disables itself). Even then the settings will be far from robust. The following link shows the correct settings for networking files. How to set up networking/WiFi This link also explains Predictable Network Interface Names (and how to disable this feature). The recommended method is an option under Advanced Options of - this requires an updated version of raspi-config. However I would recommend you adjust to the new technique - this is used in most modern Linux and macOS, and for good reason. (The Pi use differs slightly from most desktop settings, because the Pi has no BIOS.) And if you REALLY must How to set up Static IP Address although many Pi users set Static IP Address there is really no need, although setting up a Access Point is one valid use. The first link explains how to configure to do this. There is no simple way to switch from AP <-> normal networking. If you need to do this you will have to setup 2 separate configuration files, and write a script to switch between them. This will require a reboot. 

PS I still think setting up a static address is almost always the wrong thing to do. If possible set a static reservation in your router (if possible) or use a such as 

The permissions displayed are not on the disk itself, as exFAT does not support ownership etc, but are inherited from the directory in which it is mounted. The permissions displayed indicate that only the owner of the files (root) has write permission. You could fix this by creating a Samba group, and giving this write permission. Rather than using Samba (which is a b... of a protocol) you may want to try installing on the Pi. This would let you access the Pi filesystem from , like a native file. (Of course this won't enable control of file ownership etc, because of the exFAT limitations.) 

AFAIK this is not possible. (I am not an expert on Bluetooth, and am willing to be proved wrong BUT). Simon Long states 

As others have stated, there is no real difference between Raspbian installs which have been upgraded, regardless of where they started. If you want to work out which started as Raspbian Jessie-Lite, then had GUI packages manually added you may want to examine your installation history. I have 5 Pi and 10 SD Cards with different installations. When I want to explore the history I run the following script which displays my history. 

The simple fact is NO ONE can answer this question (due to the lack of published data by Broadcom). If the hub complies with the USB standard the answer is NO. Many hubs do not, and will supply as much as you want (although often with a non compliant voltage drop). The Pi can supply TOTAL 600mA from USB, although this can be increased to 1.2A. 

The simple answer is No! This is a bad idea. On the Pi3B+ there is no isolation (other than polyfuse) between 5V and USB power - earlier models had an ideal diode to isolate USB power if power was supplied to 5V pin. You appear to want to supply power via USB power and 5V pin - this would effectively connect 2 regulated switch-mode supplies together and the effect on feedback circuits is unpredictable - at best case only 1 supply would be used; at worst the power would be unstable and may oscillate. The other answers, which suggest diode isolation, do not seem to answer the question you asked, as they suggest external combination and using a single power input. They would also cause a 0.7V drop, which would result in voltage below the recommended minimum of 4.75V. It is possible to provide backup power, but this requires more sophisticated solutions. Devices exist (e.g. battery backup HATs) to do this. 

The link you quoted states "Maximum total USB peripheral current draw 600mA/1.2A (switchable)". This is the current the Pi could supply to external peripherals, not what the Pi needs. In fact the Pi uses less than 1A, depending on what peripherals you have attached. I run all my Pis with an Apple 5W (1A) charger, although I use a powered hub for external HD (which won't work with the Pi and need more current). If the Samsung claims to supply: 9V 1.67A I wouldn't let it near my Pi (or any 5V USB device). In general is not a good idea to use "chargers" as they often have poorly regulated voltage (which is OK for the purpose), and are designed to charge batteries. 

I may be the only person in the universe to have never used a webcam. I bought a new Raspberry Pi Camera Module and have used to take some pictures. I want to set it up to monitor an area near my home and view video. I thought this would be simple, but my initial searches have led nowhere. and seem to be about recording images (and don't even seem to have pages). The Foundation page on webcams suggests installing then proceeds to explain how to take still images. The page on the Camera Module explains how to install and enable the module. I am looking for a simple set of instructions to view and control images from my local internet. I am sure I could work it out myself, but every second person seems to be running a baby monitor or webcam to view their coffee machine. 

This is not really a Pi question, however I feel obliged to comment. There is nothing wrong with connecting to the power pins on the header, see Raspberry Pi Power Limitations HOWEVER I would not use Dupont connectors. You will be connecting these hundreds of times. It is only a matter of time before you do it wrong. Use of an unpolarised connector is inherently risky. When I need to use an external supply I usually do one of 2 things; 

It depends on which OS you are using and how you have configured networking. Also you haven't posted your current . The default for current Raspbian is (which does an excellent job and is quite robust). The problem is it tries to automatically configure ALL network interfaces. This probably means it is trying to get an IP address for from Windows. One solution to this is to allocate a static IP address (in ) to . It would seem to be simpler (assuming your Windows machine is connected to your router) just to transfer files via your network. Also is likely to be faster and more reliable. 

There is no such thing as a "standard relay", you appear to have a relay module (ideally you should provide a link to the module). One thing that is clear is that you can NOT supply power to any relay or relay module from a GPIO pin (which is limited to 16mA). It is unclear why you you want to "control the relay power". The whole point of a relay is is used to control a large load with a small current. It would be possible to control the power, but this is NOT straightforward, simply using a NPN transistor would most likely prevent the module from working, to use a PNP transistor requires additional circuitry of moderate complexity. 

NOTE On the B+ and Pi2 the "PWR" LED was connected to a GPIO pin as was the APX803 voltage monitor chip. This let the the Pi detect under-voltage OR control the LED. The MOSFET controlling the Pi3 "PWR" LED is directly connected to the APX803 (which is open drain) so will ALWAYS be off if the voltage is low, but if not it should be possible to pull it low (and turn the LED off) with a program. The latest Raspbian (using kernel 4.9) seems to have restored access to which can be used to control the PWR LED on the Pi3. Recent kernels support bit0 indicates under-voltage 

Swap is only used if you run out of memory. The Pi normally uses a swapfile, which if not used has no penalty, but if required is slow. Without swap the OS will terminate low priority processes or crash. The choice is yours. 

Likewise there is NO REASON for new programs to be written in Python2. Whatever you do you NEED to install and run for a specific version of Python. 

The simple answer is No. If you search you will find a couple of posts on this. I tried unsuccessfully for some time. It is possible to your Home, but in general it will not work. There are a couple of reasons for this; 

The Pi GPIO can "source" when high or "sink" when low. This is default setting. The GPIO can safely source or sink 16mA. GPIO are NOT relays, and "open" or "closed" are meaningless concepts. In addition GPIO can have a pull-up or pull-down. This is a high value resistor ~50kΩ - most have pull-up by default see $URL$ . This can be disabled if not wanted e.g. if driving high impedance circuitry, but is only relevant if the GPIO is configured as an input. No amount of fiddling with resistors is going to change the logic state, but I do not see why you would want to do this, just invert logic in your code. It is also unclear from your question what you intend to control with the SSR. Are you aware that these are only suitable for AC loads? 

EDIT 2. The picture you pasted seems to show a separate cable for each. Using power cable seems overkill, and simple twisted pair would be better. 3. You are using internal pullups i.e. 50-150kΩ. Use 1kΩ to reduce impedance. 4. I don't know the detail of Python bounce suppression, but the device only puts out 35mS pulses. I would use a capacitor from each input to GND. This ensures the contact closure will deliver a sharp pulse but bounce (or contact open) will be slowed down. You can calculate the time constant from R*C. 1kΩ * 100nF gives 100μS. I would use larger capacitors. The rats nest of wiring is hardly going to be resistant to interference. A Pi with just unterminated wires will trigger interrupts in a normal environment. You need to use better layout. 

There is a bug in current software/firmware which prevents the on-board WiFi from running on Channel 12. Channel 12 & 13 are not available in all countries. There is a WiFi Country setting in but unfortunately it does not work with the current firmware. Some users have reported success, but this may be related to those using the latest pre-release firmware. EDIT Even after upgrading to 4.4.9 I still had only channels 1-11. Installing enabled 12, 13 

This is not possible. You should use Ext4 if you want reliable fully featured storage when connected to the Pi, but neither OS X or Windows has support for Ext4 (there is 3rd party support). No FAT system has support for the attributes required for backup, and security. You could try NTFS (with loss of support for journalling), but OS X only has read support. I am not sure about Linux support for HFS+, but Windows won't even see these. 

This is not strictly a Pi question, and the simple answer is it depends. The cheap breadboards have quite reliable connectors (if not up to the standard of traditional IC sockets with gold plated contacts). Their performance is strongly dependent on their history - if they have been used for oversized wires the contact will be unreliable, as will contact with small leads, such as used on transistors. There is little mechanical stability; traditional components are OK, but modules e.g. SD Card modules, Temp/Humidity sensors are a potential problem. The major risk is flying leads and interconnections are the weakest links. I often use a hybrid approach. For example I have a hot wire controller (using an Arduino, not Pi) build on a mini breadboard, connected to a traditional circuit built on Veroboard with high current components, power MOSFET, power supply components. This is quite reliable, apart from the interconnection between the two. 

As the Pi can supply limited current (depends on what other peripherals you have connected) it is not a good idea to use an external HD without a powered hub. Many HD require up to 500mA - which is definitely not possible. You may have other problems, but you should eliminate this first. 

You can access the GPIO via the inbuilt memory mapped I/O. As far as I am aware there is no pre installed library. I suggest you use the WiringPi library. This is reasonably documented (although you have to go to the web page for documentation). It is also instructive to examine the source code. All of the functions are in c, but are usable from c++ because of the included 

As you cannot setup without a keyboard/monitor - BECAUSE you need to create a user account, there seems little point. 

A Raspberry Pi image designed for Pi2 will not work with the Pi3, so you need to install a Pi3 image. If you are a beginner Snappy is probably not for you. It is not a conventional OS, any you will not have a normal Ubuntu system. You would be better to start with the official Raspbian image from $URL$ You could use Ubuntu MATE, but this assumes some experience with Linux. 

To remain in spec there should be less than 0.25V drop which corresponds to loop resistance of 0.5Ω. It is possible to measure low resistances, but it is not straightforward. There is the problem of making contact with the small connectors. Then reliably measuring without contact resistance. In practice a test rig which feeds current through the cable and measurement of the voltage drop across the cable is necessary. It is much easier in practice just to measure the voltage at the Pi end. This is not the whole story, as you ideally need to measure the voltage at the supply end. There are confounding factors. The Pi and many modern smartphones are designed to draw more current than the 500mA max. Phone manufacturers can supply higher current chargers, either by non-standard means or by adopting the new USB Charger spec, which permits higher currents, but permits voltage to drop to 3.6V. These are OK for charging smartphones, but NOT for voltage sensitive devices like the Pi. (I suspect the referenced charger is one such). The microUSB connectors are easily damaged. The typical environment in which they are used by young people is conducive to such damage. This leads to poor or unreliable contact, and potential voltage drop. Use of an older USB2 data cable, particularly one not designed for charging can lead to problems. If this is combined with an unsuitable charger the problems compound. 

While the CPU (but not peripherals) will run on reduced voltage, it is not recommended. The best solution is to use a in conjunction with a suitable lithium battery. DO NOT attempt to use a battery salvaged from a phone. Lithium batteries are hazardous devices, which can cause fire if misused. Use a battery designed for use in a model. Another option is to use a Powerbank designed for phone charging. These usually supply 5V, although the regulation may not be as good. The other problem with most Powerbanks is that you can either charge OR discharge, but not simultaneously.