The router needs to be the gateway for the hosts, and the gateway address needs to be in the same network as the hosts. The router should be addressed with the same address that the previous router had, which will be in the same network as the existing hosts. If the router will not accommodate a valid network mask, I have to assume it is a consumer-grade router, and questions about those are off-topic here. It should be replaced with a router which can be correctly configured. As a temporary workaround. You can set a shorter mask than was previously configured, e.g. . Just realize that any hosts added with an address in which the last octet is greater than 126 will not be able to communicate with existing devices, or vice versa. Also, anything which depends on using the broadcast address will not work. Also, if the network mask is shortened, the masks on the hosts could be changed to match. This is all for IPv4. IPv6 doesn't work the same way, and the IPv6 network will be a , which allows for 18,446,744,073,709,551,616 hosts. 

If the switch is a layer-2 switch, you only need to give it an address in one of the VLANs. You could give it an address in each of the VLANs, but that has its flaws. You may want a Management VLAN for the switches, WAPs, etc, and restrict access to that VLAN with ACLs. 

Link aggregation increases the bandwidth for multiple flows. A backup job (single flow) will remain the same at what a single link can do because each flow only uses a single link. Multiple flows use multiple links, and the bandwidth is higher on average across the multiple flows. Really, the only thing you can do is to use a faster network link. You probably want a dedicated 10 Gb, or faster, link between the production and backup server. 

There is a rule in iBGP that an iBGP peer cannot advertise any prefixes learned via iBGP. That has nothing to do with BGP synchronization. That means that your iBGP peers must have a full mesh (via an IGP, or with direct connections between all BGP peers), or you must use a mitigation (route reflectors or confederations). 

BGP can use redistribution, like other routing protocols, or it can use network statements, which simply tells BGP to advertise a route if that exact route exists in the router's routing table. You cannot simply add a network statement and assume BGP will advertise that prefix. Yes, BGP advertisements are dynamic, like other routing protocols. As routes come into or leave the routing table, routes will be advertised or withdrawn, assuming proper redistribution or network statements are configured for the routes. 

I'm not sure why you would think fragmentation would double the time. If a router fragments a packet, it sends both fragments sequentially. The host on the other end will get the fragments, reassemble them, and reply. The increase in time for fragmentation should be fairly linear. It takes time for a router to fragment a packet, and it takes time for the receiving host to reassemble the fragments. Doubling the time would involve sending one fragment, getting a response, sending the next fragment, getting the response, and then reporting the time. That is not how it works. RFC 793, TRANSMISSION CONTROL PROTOCOL, explains how IP fragmentation works. You should also understand that ICMP (ping uses ICMP Echo and ICMP Echo Reply) is often treated differently than regular IP traffic on the Internet. It is usually low priority, and it will often be queued in favor of regular traffic, and it will be more sensitive to the variable congestion that happens. It may even take a different path than regular traffic. The added latency could end up dwarfing, by sever orders of magnitude, the latency induce by fragmentation. This can have the effect of smoothing the curve. The real way to test fragmentation is on a controlled environment to eliminate variables which are out of your control. Start testing with a point-to-point link between two hosts. Then, start to add devices (switches, routers, etc.) between the two devices, in controlled steps. Perform each test multiple times before changing the test environment. Testing on the Internet can give you unpredictable results since you have no control over the Internet. 

An application can send broadcasts to either the network broadcast address (network all ones) or the limited broadcast address (all ones address). It used to be the default for routers to allow routing of the network broadcast address (IP directed broadcast), but that proved to be a huge security problem, so routers default to not allow IP directed broadcast. Some routers can be configured to do this. The limited broadcast, by definition, cannot be routed. RFC 919, BROADCASTING INTERNET DATAGRAMS and RFC 922, BROADCASTING INTERNET DATAGRAMS IN THE PRESENCE OF SUBNETS explain broadcasting in more detail. 

An ethernet bridge bridges two ethernet segments at layer-2. An ethernet switch is an ethernet bridge, it just usually has a lot more interfaces than a simple bridge. Bridges operate at layer-2, so they do not know or care about the layer-3 (IPv4, IPX, IPv6, AppleTalk, etc.) or layer-4 (TCP, UDP, etc.) protocols being carried by the layer-2 protocols being bridged. A bridge will use spanning tree to create a loop-free layer-2 path, and it will maintain a MAC address table in order to be able to know out which interface each MAC address on the LAN is. That lets the bridge send traffic directly to where it needs to go, eliminating the wasteful flooding of frames. Some bridges can use VLANs and trunks. Transparent bridges, e.g. ethernet switches, bridge like-to-like LANs, and they do not modify the frames (except maybe to add a VLAN tag on a trunk link) or the frame payloads. Translating bridges, e.g. Wi-Fi APs, will need to modify the frames in order to translate from one LAN protocol to another LAN protocol, e.g. ethernet to Wi-Fi. 

The first 6 bytes of an ethernet frame are the destination MAC address, the next 6 bytes are the source MAC address. The next two bytes, 13th and 14th bytes, are the payload length (<= 1500) or the EtherType field (>= 1536). An EtherType of indicates the presence of and 802.1Q tag, and the real EtherType field is moved four bytes over. An untagged frame is a native VLAN (the VLAN as configured on the switch interface; some vendors can only use VLAN 1 as the native VLAN). What happens to tagged frames received on non-trunk switch interfaces is undefined. Some switches will simply forward them, and some switches will drop them (possibly as giant frames). 

The WLC should connect to a switch via ethernet. Normally it is configured using a trunk so that you can have multiple VLANs: one for the WLC management address, and one or more for the various SSIDs the LWAPs will use. The LWAPs will connect to switches closest to where they need to be, and they will get their addresses, and the address of the WLC, from DHCP (option 43 will give the LWAPs the IP address of the WLC).