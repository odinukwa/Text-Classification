The next diagram shows each ASA having a separate channel on the switch. This should work on a switch stack. With a stack of two switches, and one switch failing, the EtherChannel of each ASA will fail, but the connections to the switch which stays up should maintain connections between the ASAs: 

What you would do is configure a virtual router for each VLAN. Configure HSRP on The SVIs on your core switches. A host will use the virtual router as the gateway for the VLAN to which it is connected. Between the layer-3 switches and the WAN routers, you use routing, not HSRP. Routing will fail over much, much faster than HSRP in the case of a failure. 

As far as the Router ID in the RFC, it only says that it is an arbitrary 32-bit number. I don't see anything to prevent it from being anything in the 32-bit number range of () to (). Remember that you can put it in as a number or in dotted-decimal notation, but it is not an IPv4 address and does not follow IPv4 rules about the value, despite looking like an IPv4 address when using the dotted-decimal notation. 

The way the ARP cache works is OS-dependent, and there is nothing requiring a host to maintain an ARP cache. The use of gratuitous ARP is not officially documented, but some hosts and OSes use it to do things like resolve address conflicts; Wireshark has a pretty good explanation (with examples): Gratuitous ARP 

You seem to have the general idea. First, there really is no Physical Layer header. The Physical Layer simply takes what the Data-Link Layer gives it, and it encodes the Data-Link frame (encoding) for the interface and places that on the "wire" (signalling), or it performs the opposite when receiving data. When layer-3 sends a packet to layer-2, layer-2 needs to encapsulate that with a layer-2 header. Part of the layer-2 header may include a MAC address for layer-2 protocols that use MAC addresses (not all do, and of those that do, some use 48-bit MAC addresses, and some use 64-bit MAC addresses). In order to put a destination MAC address in the layer-2 frame, the destination layer-3 address must be resolved to a layer-2 address. Layer-2 needs the destination layer-2 MAC address in order to build the layer-2 frame to encapsulate the layer-3 packet. That is where ARP (Address Resolution Protocol) comes in. ARP has to do with data leaving the host, not coming into the host where the headers are stripped. Depending on the network stack implementation, as a layer-2 frame come into a host, the MAC address may get saved in the host's ARP cache as the frame is stripped from the packet. Layer-2 will inspect the layer-2 frame to determine to which layer-3 protocol in the network stack the frame payload (layer-3 packet) should be sent. The Ethertype field is a field in ethernet frame headers. Other layer-2 protocols have other ways of doing this. Remember, ethernet may be the most used layer-2 protocol, but it is not the only layer-2 protocol, and each have their own frame headers. Layer-3 protocols can have the the same type of thing. For instance, IPv4 has the Protocol field, and IPv6 has the Next Header field, to tell layer-3 to which layer-4 protocol the payload of the layer-3 packet should be sent. 

ICMP is actually part of IP. There is no protocol above IP that responds to an ICMP Echo Request. ICMP itself, as part of IP, responds with the ICMP Echo Reply. From RFC 792 INTERNET CONTROL MESSAGE PROTOCOL: 

The document you link, GLBP - Gateway Load Balancing Protocol, also has this as the last paragraph of GLBP Gateway Priority: 

Simply add routes to the networks on the other side of the other router. You did that already for some of your routes, but you need to do it for all of the routes. Static routes don't scale. You should really use a dynamic routing protocol in common with your routers. 

You cannot have networks with overlapping addresses. A router needing to route between the two networks could not determine which network to use. Routing must be deterministic. If you need a host with an address of on VLAN 10, then you could use the network for VLAN 10 instead of the network. Change the mask on VLAN 10 to . 

It is pretty simple to get the information you want. You can use the command to find what you are looking for, but you are going to get a lot more information, too. You simply ignore the unnecessary information. You are not going to get it in the format you want, but you can copy it from your terminal and massage it. This will also show you the currently configured MAC address and the BIA. 

Cisco switches use CDP (default) or LLDP to negotiate a trunk with a phone acting as a switch on an access interface. Since you are using non-Cisco phones, you must either enable LLDP (if your phone supports that), or you will need to configure the switch interface as a trunk. To globally enable LLDP: 

Some servers (and some workstations, but it is less common) are set up to be able to trunk with a switch. That means that the servers can be assigned addresses in multiple VLANs on the same link, and the servers can serve directly on the different networks. In most cases, even with a VLAN capable NIC, servers and workstations are not configured for VLANs, and they will drop tagged frames, but it may be useful for a server to have connections to different VLANs in order to directly handle things like DHCP, NTP, etc. for the different VLANs without needing to be routed. 

The requirement is that each router have its own IP address (that's two), and there needs to be a virtual IP address (that makes three). If you are doing this on the public side, you will need three public addresses from your ISP, and that will require a maximum mask length of since will only give you two usable addresses. I'm not sure what you mean by, "routing these to the switch," since switches don't know anything about IP addresses or routing. 

Why do you think that? it is probably slower by tens of microseconds, and you will probably be unable to see any difference or measure it. Edit (based on the edited question): Your router doesn't know how to get to the route defined on the switch unless you specifically configure it, or you run a routing protocol between the router and the switch. Your route doesn't know where to send the traffic destined for the network, except to drop it or send it to a default route. The the need for the static route on your friend's home-network, consumer-grade router is off-topic here. 

For your first question, you are not advertising the network as you said you are. You need to advertise it, too: For PE1: 

You should never block the OUI () for the layer-2, link-local protocols. That OUI is set aside for the link-layer protocols like LLDP, BPDUs, 802.1X etc. It is a multicast OUI, and bridges (including switches) that follow the IEEE 802.1D (Spanning Tree) standard will never send those frames to another interface. If you are using PVST, then the BPDUs use a different MAC address: . 

Why would the ping travel to R2 S3/0.201 from R1 S3/0.102? The source of the ping is just the source; it doesn't tell the ping which way to go or force the traffic out that interface. It doesn't matter which interface you source from in R1 because the R1 routing table will direct it out the correct interface to get to the IP address. Sourcing the ping from the interface toward R2 doesn't matter since R1 knows it has to go out the interface to R3. 

I don't think you understand what ARP does and the implications of disabling it. The only thing ARP does is to let a host (including your gateway, which is really just another host as far as the LAN is concerned) relate a layer-3 address to the layer-2 address. If you disable your PC's ability to respond to ARP requests, you will essentially isolate your PC. Yes, you could still send ethernet frames out, but you wouldn't receive anything except for broadcasts and unknown unicasts. Much of networking uses request/response which would be disabled. Your gateway couldn't even find you, so something as simple as surfing the Internet would not work. Disabling your PC's response to ARP requests will probably require you create custom software, and you may as well just disconnect the ethernet cable. 

A switch only needs a single management address. That address is like a host connected to a VLAN (most hosts only have one address), and that host needs an address and a default gateway. Why would you think this host needs multiple addresses? We live in a layer-3 world, and you should be able to get to the switch management address from any network which you allow in your router(s) (all by default). Yes, you must go through a router to get to the switch management address if you are starting from a different network, but that doesn't really matter. You can also place ACLs between networks in your router(s) to restrict access between VLANs. This lets you create a management VLAN for your network infrastructure devices, like switches, WAPs, etc., and you can restrict access to this VLAN to certain people. Security should be layered: first restrict any access to the management of the devices, then use AAA to manage the devices. 

You simply cannot compare metrics between different routing protocols. That is the reason for the creation of administrative distance. 

The OSPFv3 router configuration is also different. Instead of using network statements to tell OSPF which interfaces are participating in the OSPF process, you use OSPF commands directly on the interface configurations. For example: 

FYI, Category-7 doesn't actually exist, I think you mean ISO/IEC Class F. ANSI/EIA/TIA define the cable categories, and so far have declined to certify/recognize a Category-7. ISO/IEC define cable classes, and what some people incorrectly call Category-7 is really ISO/IEC Class F. I get suspicious about vendors claiming Category-7 since the specifications and tests for it do not exist. There are far too many cheap cables on the market that do not meet specifications. Also, Category-5 cable has not been recognized since 1999, and there are no specifications or tests for it. From ANSI/TIA/EIA 568, Commercial Building Telecommunications Cabling Standard: 

First, Category 5 cable is no longer a recognized cable per the ANSI/TIA/EIA-568B Commercial Building Telecommunications Standard: 

That is because you are on the same network, . That network goes from to . The network has 4096 addresses, and 4094 of them can be used for hosts. 

It seems that your problem is with Multicast traffic. Switches that default to IGMP snooping have a problem with multicast traffic across multiple switches. Cisco has documents, e.g. Multicast Does Not Work in the Same VLAN in Catalyst Switches, which explain the problem and solutions. The problem is basically that switches with IGMP snooping will listen to IGMP messages in order to learn which switch interfaces are requesting traffic for which IGMP groups. If a switch doesn't have any hosts connected, it will simply drop multicast traffic. The IGMP requests will not span across switch trunks, except in specific scenarios. 

You should really set the IOS version to be the same before adding a switch to the stack. Basically, the switches need to have the same stack protocol version, and only switches with the same IOS version are guaranteed to have that. Switches with the same major version numbers probably have the same stack protocol version, but that is not guaranteed. Having the same IOS version on a switch before adding it to a stack can save you problems. Cisco has a very good document, which contains a full explanation about this: Creation and Management of Catalyst 3750 Switch Stacks 

Yes, it is possible. There will be some loss at each coupling, and you must take into account the loss budget and the total loss in the link. The cabling you need depends on the existing cabling, and you must match the existing cabling. 

To do this properly, you would use a standard cable length, usually two meters. Run one cable at a time from the switch to the patch panel. Run a cable from switch port 1, routing the cable down to the horizontal cable management, out the left end, let the cable naturally drape, then back into the horizontal cable management, and down to patch panel port 1. Repeat for the first half of the switch ports. Then start with the last switch port, do the same thing as above, except drape the cables out the right end of the horizontal cable management. You can use velcro tie wraps to make thing even neater. Using zip ties carries some risk of warping the wire twists inside the cable sheath, as well as being inconvenient should changes be necessary, and they should be avoided. 

For outbound traffic, the bandwidth for each computer is whatever the link speed from the computer to the next device is. For example, your computers could have 1000 Mbps links to the access switches. The access switches to which the computers connect will have links to some type of aggregation, and those links will have a bandwidth associated with them. The aggregate access bandwidth compared to the uplink bandwidth will give you an oversubscription ratio. For example, if you have a switch with twenty-four 1 Gbps access ports, and a 1 Gbps uplink, you have a 24:1 oversubscription ratio. You can also calculate an oversubscription ratio to the router, and to the ISP's router. It is not as simple as dividing the bandwidth of the oversubscribed link between all the computers. For the example of the 24-port switch above, one computer could send 1 Gbps to the aggregation switch if it is the only one sending. If all 24 computers are trying to send 1 Gbps at the same time, a lot of traffic will be dropped. The frames going to the aggregation switch will be sent on a first-come, first-served basis. Switches have very, very small buffers, so the vast majority of the traffic will be dropped. How that affects things depends on what is being sent. For example, UDP will be lost, but TCP will request lost segments to be resent. 

Don't forget that devices on a layer-2 domain, e.g. VLAN, communicate directly without going through a layer-3 device, e.g. router or firewall. A host that is supposed to be restricted from communicating with another host on the same VLAN could simply set a different network address on its interface (very easy since IPv6 allow any number of addresses on the same interface) to bypass a network-based security by having an address on the correct network, also. 

That is an unregistered EtherType, so, it has no standard meaning or type. It appears that someone just made it up to use for a project. Anyone else could use that value for a different project, and it could mean something else. You will need to ask the person who wrote the code. EtherTypes are registered with the IEEE, and you can find the registered ones here. IANA also, maintains an unofficial page of EtherTypes. 

What you are running into isn't a trunking problem. This behavior is what STP does in order to prevent loops. STP will create a loop-free layer-2 by sending BPDUs to determine the possible paths to the root bridge, and it selects one path and blocks the others. If your switch stack is a true stack (appears to be a single switch), you should be able to use a LAG to fool STP into treating the two links as if they were one link. This will also balance traffic flows across the two links, and switch to the remaining link if one fails. See the Reference Manual, page 117: 

I have seen this before on other host types. Putting in default gateway addresses should prevent this behavior. Without a default gateway, the host sends an ARP for the other host's layer-3 address, and it receives a reply because the hosts are on the same layer-2 domain. With a default gateway, the host would ARP for the gateway's layer-3 address, not the other host's layer-3 address, but there is no gateway address for which to ARP. 

Your problem is that, on the HQ1 router, you are attempting to put the same network on multiple routed interfaces. I think you mean these serial interfaces to be for point-to-point links. You should use a network ( or, if you are more traditional, ) for your point-to-point links. You would then have two usable addresses for the links, and one of the two addresses goes on one end of the link, and the other address goes on the other end of the link. Alternatively, you could use any other network size, but you need to use separate networks on the two interfaces in the same router. Routers route between networks; they don't route from one network to the same network. How will the routing table know to which of the two interfaces in the same network it should forward packets for that network?