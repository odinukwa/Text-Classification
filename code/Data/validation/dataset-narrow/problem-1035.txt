To my knowledge only workarounds exist, such as giving the password away via SSID or other means, or having an empty password. That way the communication can still be secure (depending on the configuration). 

After some fiddling around with font packages, the solution for me was installing the following packages: 

I'm making time lapse movies spanning several weeks and want to get rid of the pictures taken during the night (i.e. between 22:45 and 5:00 in this case), how can I do this easily? I've found the following partial solutions: 

I'm now doing it manually, but I'm sure there must be a more elegant solution. Any ideas? Thanks! :) 

which resolves the dependencies automatically. Personally I used Macports to install python2.7 with matplotlib and it seems to works fine on 10.7. Fink is in the process of upgrading their internals to work with the new 10.7 build system. 

I do not know what happened with my chrome, but fonts are horrible on some pages. For example, consider the following page - $URL$ This is how it looks like on my Chrome: 

I have this problem - Skype 7 causes my machine to hang up every other time whenever I finish talking to someone. This did not happen with older versions and searching the Internet reveals that many folks have this problem with Skype 7 (any version) and that the only viable solution is to downgrade. The only problem is that all the downgrade links are either dead or bogus. So, does anyone know of a reliable archive where I could download the full Skype 6 installer (not the web installer, of course)? 

When I first read this I thought it didn't make sense because something cannot 'intrude' in a kernel. However Googling it I found similar posts (which also give the answer), but also list that the message was something like: 

I'm not sure why this helps, so perhaps somebody can add some background as to why this helps. Hopefully this helps someone else. 

A digest of the solution proposed at uninstall failure: "an invalid entry was passed": Step 1: Open the Macports registry with : 

TL;DR: how secure are memorable password generators, given the fact that `memorable' passwords are a subset of total password space? How big is the entropy in memorable passwords compared to random passwords? Whenever I need new passwords I use some tools to generate those, preferable memorable passwords, but I've been wondering how secure this might actually be. Using The xkcd random number generator is probably pretty bad, is probably pretty good, but generating memorable passwords seems a bit more tricky. Whenever a program generates a memorable password, it only uses a subset of the total password space available, and it is not clear to me how big this space is. Of course a long password should help in this case, but if the `memorable' part of the program is too predictable, your passwords are not very good in the end. Some tools I know of: 

I have read the various posts about Chrome being the culprit. Some posts mention WPF applications when ran from within the Visual Studio, others incriminate it to the Sql Server. I run none of these and still get the same result. How do I restore the windows clock resolution back to being 64 times per second? 

My problem is that I want Alice to be able to ping the Printer, but I have no idea how. The actual addresses are: 

Right now, Bob can ping the Printer and hence print on it, but not Alice. I tried to bridge the wifi and Ethernet connections on Bob, but the result was that Bob lost both wifi and ethernet - nothing worked. I will gladly provide any more information as needed. How do I configure so that Alice could ping the Printer? EDIT1 

j√∏rgensen explained the CPU usage higher than 100%. Basically, CPU usage is scaled to be 100% at full use of one core. The IRIX mode for top just changes the way the CPU usage is calculated. The IRIX mode is explained on the man page, which says: 

Update: Thanks for the insight on theoretical password entropy and memorability, but I was also looking for the practical aspect of generating these passwords. How do I choose such a password in practice, and specifically: what is the entropy of pwgen or Mac Password Assistant (MPA)? For example: what if the MPA has a very small database of words and generates passwords predictably? Perhaps this is a bit pedantic on my part, but I was curious if anyone could shed some light on this. Update II: Although this question received a plethora of answers on password generation, none go into the question how secure these are. The question is still open and waiting for an answer. 

I have tried to bridge the Ethernet and Wireless adapters on Bob, but once bridged I cannot ping google from Bob (my connectivity test). Deleting the bridge restores the ping to google from Bob. I want to USE the Printer, but I suppose I need to ping it first. I know for sure that Printer answers pings, because Bob can ping it. I must add that Alice cannot ping the Ethernet address of Bob - 192.168.0.2. I have a feeling that if I get Alice to ping it, then it would also ping the Printer. But with the bridge on Bob not working (I have no idea why) I am kind of lost on how to make it work. 

CPUs are already throttled down in energy saving mode (as noted by dyve), you probably gain more by ensuring excess background tasks are killed. Also, CPU power consumption nowadays is quite low compared to other components, most notably the screen (backlight) and rotational harddisks. See also Laptop Battery Life: How Wireless Affects Power Consumption and Component-wise Energy Breakdown of Laptop, some articles on this topic. 

which means something quite different. The kernel (software) on your router is letting you know that somebody tried to connect ('intrude') to your WAN IP address. This happens all the time, entire botnets are dedicated to trying to connect to random IP addresses at certain ports to try default user/password combinations to see if they can find weak security somewhere. However because the router denies this, there is no problem. Summarizing: the 'intrusions' being detected are harmless, you should worry more about the ones that are not logged ;) 

At the end of the day I did a repair-install of Windows 8 as described here - $URL$ and then Windows Update and then installed .NET 4.5.2 Developer Pack. That did it. 

I am running Windows 8 (64 bits). At some point while I intended to delete all the files under I found myself attempting to delete all the files under - long live the little difference. Of course, I failed to delete most of them, because they were locked by the OS, but I did succeed to delete quite a few. That is a major major bummer for me. The problem is that reinstalling .NET would not help - all the repair/install packages tell me .NET is installed and is perfectly fine. However,some things are definitely broken. For example, running the TFS command line tool spits this: