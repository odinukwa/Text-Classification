My local computer uses Windows 7 Pro and belongs to realm LR, managed by AD servers. I login to my computer while attached to that realm's network. I can view the TGT with MIT Kerberos for Windows ver. 4.0.1. I want to access resources on a foreign realm, FR. There is no Kerberos trust between LR and FR, but they allow TCP traffic between one another. I request a TGT for FR with its KDC (Red Hat IdM / FreeIPA) and successfully enter my password when challenged. Again, I can view the TGT with MIT Kerberos for Windows ver. 4.0.1. I can now access resources in FR over SSH without being asked for a password, despite originating from LR. The problem is when I get the TGT for FR, the TGT for my LR principal disappears. Only the FR TGT is visible in MIT Kerberos. If I lock my computer and then unlock with my password, now the FR TGT is gone, replaced by a new LR TGT. It seems MIT Kerberos for Windows can only store one TGT at a time. Each TGT completely works for its realm for all intents and purposes. How can I configure MIT Kerberos to let me have two TGTs at once, one for each realm? Is it possible to "compartmentalize" with multiple client instances, each pointing to a different KRB5_CONFIG and local keytab? If I cannot, is there an alternative Windows implementation of client-side Kerberos 5 that will, even when there are no inter-realm trusts? P.S. - I don't want a trust. Can't get a trust. UPDATE: I left out some of these details earlier because I thought it might confuse the issue. But based on Brad's answer, it might be warranted. I expect most local software would use the built-in Windows implementation of Kerberos and always use the LR keytab. However, power users like me use heimdal under Cygwin to SSH into FR. I expect anything going through Cygwin DLLs to use heimdal and never see the LR TGT (which it doesn't, at least not by default). I explicitly kinit and move on. The tricky part comes in for non-power users I have to support who don't use Cygwin but do use PuTTY. PuTTY does let you specify both the library path and DLL for which GSSAPI implementation to use. For instance, I'm configuring SSH sessions to use MIT Kerberos DLLs instead of built-in Windows DLLs. I was hopeful there was a DLL out there that either never tried to find the LR TGT (like heimdal) or allowed multiple TGTs from multiple realms. It doesn't have to have a GUI window like MIT Kerberos, but it helps. 

It's deceptively simple, but that's really all it takes. A command in backticks will receive the current message as its standard input. (If is a static file, you need to add locking, but that's a tangential topic.) If this is all your Procmail rules do, you might want to think about whether Procmail is at all required. The delivery part is still useful and robust, so I recommend you keep it for that, but since Procmail is good at doing precisely what you are trying to do with PHP, perhaps you want to think about your approach. If your database doesn't change very frequently, you might want to consider using a script to generate your from the database instead. Then the Procmail rules themselves can be static (ideally not require any external process) but you will need to regenerate them whenever the database is updated. 

The typical flow is rather one of delivery. Your question is tagged procmail so I assume a Procmail solution is acceptable. You should not need any additional MX records or other shenanigans. Sendmail (or any modern MTA; I would recommend Postfix if you are not particularly married to Sendmail for legacy reasons) can run a script on an incoming message quite trivially. When a message is accepted for delivery, the MDA (in your case, Sendmail) looks for any client hooks such as a file. If one is found, the file is parsed, and any pipeline in the file is executed. This is how Procmail is typically invoked on legacy systems (although more recently, a canned recipe to read the user's and invoke Procmail if one is found is part of the standard Sendmail feature set). Instead of Procmail, you could run a script of your own; or you could run the script from your (which is beneficial because Procmail takes care of a number of pesky error scenarios). 

Procmail can be configured in a variety of ways, also depending on how it was invoked. By default, in the absence of any , you would expect delivery in on most platforms where you can install Procmail as a precompiled package. If you compiled it yourself, you configured the precise location and delivery mechanism yourself, though if you didn't touch anything, this is what you should have ended up with. The output from indicates the default delivery destination for the invoking account. 

What are you actually trying to accomplish? You probbably don't want to edit a script which was installed by the system, but you might want to create a wrapper. Assuming you are overriding , move it to (maybe using diversions if you are on a Debian-based distro) and write a new something like 

Does anyone know how to create smaller disk size Windows instances on Amazon EC2? Their default is 30 GB, and I have to pay $0.10/GB/month for EBS storage, which means that for each Windows instance I have to pay additional $3 a month. If I have 100 instances, that's $300 wasted. I'd be pretty happy with 5GB or even smaller Windows instances. Thanks! 

don't panic. put the website on maintenance. reverse the applied sql injection. fix the h0le. put the site back online. 

I just assembled a new Linux file server with several Samsung HD103UJ 1TB hard drives and I am currently optimizing it. The question I can't find an answer to is: is it reasonable to set a spindown timeout (with hdparm -S) for the drives? Can the spindown/spinup be harmful to the disk in the long run? My previous file server did not have this timeout and the hard drives have been operational for 3+ years with no problems (always on) so I am not sure if I need this optimization at all. What are your thoughts on this? Thanks! 

Does anyone know how to script GPO for users in a Windows computer that is not on any Active Directory network? I can't use GPMC because it doesn't work without a domain. I have been searching the net for the last couple of hours and all the solutions that I find are related to GPMC. I'd imagine there are some objects in the GPO that are accessible via WMI? Does anyone know anything about that? I was unable to find any information about that. Here is the situation I am trying to script: I have 10 users on the machine, and I want to restrict what they are able to do on the machine. So I created 10 GPOs for each one of them. Now I want to apply a common policy to all of them. The only way to do it is to go through each of the GPO and do it manually. This is too time consuming, therefore I am seeking for a simpler solution. I was unable to find a way to copy GPO from a user to a user. That would make it much easier, I would create a GPO for 1st user, then copy it over to all the other users, but no luck, couldn't find a way to copy GPOs. The other method I tried was creating a GPO for the whole user group but it turns out you can't apply GPO to a group unless you use GPMC, which I can't cause the computer is not on any domain. So I am thinking about scripting this whole process, but again I can't find any examples of how to access particular GPO objects for particular users and modify properties through WMI. Any suggestions on the issue I am having? Thanks! 

This is a very basic regex error. In order to match or literally, you have to escape them with a backslash. The same applies to any regex metacharacter - , , , etc. Also, to match unconditionally, simply don't put any conditions. I'm guessing you didn't really mean to only allow whitespace after the matches, so I took those out, too. If you wanted to say "anything", that's in regex, but there is no point in having a condition whitch matches anything. 

The script in the backticks will output something like (newline) (newline) -- as many as there are phone numbers; each one is treated as a folder name, and the message is delivered to all of those folders. (I'm sure the could be refactored into a single script. Adding a slash after each folder name is necessary for Procmail to treat the delivery action as a directory delivery. You cannot deliver into multiple mbox folders at the same time.) My original answer follows below the line. 

In so many words, wants a file, not an email message. An email message typically consists of multiple MIME parts (your example shows a with just a single body part, but the concept still holds), which are not files. You need to pass just the encrypted payload, not the MIME container, to , or find a wrapper or option which helps parse the MIME wrapper. Quick googling turned up a simple Perl MIME wrapper which does this: 

Your script could be quite simple; I leave the database details to you, and show a simple Perl script to log each incoming message to a file. 

The second problem is that the asterisk was in double quotes, so the shell was looking for literally, not as a wildcard to expand. The retrieves just the base name of the file, because the loop now iterates over full path names instead of relative paths within . 

The Awk script locates the first MIME boundary, then the first empty line after that, then inserts the snippet, and sets a couple of state variables to prevent further processing. Unfortunately, the script is slightly brittle; it will fail if one of the extracted values contains unpaired double quotes, and process paired double quotes incorrectly. Furthermore, this will only work correctly if the first body part within the multipart is a text part; it will fail similarly to your current case if you have nested multiparts (top-level message multipart/related containing a multipart/alternative structure, for example). It can be extended to cover more cases -- a simple tweak would be to skip up to the first instead --, but at some point, it will make more sense to do the MIME manipulation in a properly MIME-aware tool (a simple Python script, for example).