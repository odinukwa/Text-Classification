But the basic approach of creating custom objects is a very solid notion. Having said that, this seems more applicable when reading data from some web service. If you're really reading this from your bundle, I might be inclined to making my objects compliant, and then save this collection of objects using a and then the app could instantiate the with a single call to . See the Archives and Serializations Programming Guide for more information. Or Core Data is another approach. This approach of parsing the JSON and then reprocessing the array seems cumbersome if dealing with some resource in your bundle. 

If you use , I wouldn't suggest using string constants like that. The typical convention is to use the object that is being mutated (thus make sure it is instantiated up-front, and then you can do ). Note, the provided code is not thread-safe. It has several issues: 

This is really unrelated, but I wouldn't suggest three separate arrays for the , (?), and . I'd personally rather see an array of objects (either custom object or for which each object has its own , , and ). There are other approaches, too, but having three separate arrays doesn't seem very appealing. Also unrelated, but I'm surprised that if you call this method and the key/URL both exist, that you don't update the existing record. Right now, you leave the old values there. 

It looks reasonably well thought out to me, although I am not sure how much it would be used beyond practice. There are a few small things that can be improved. Comments are inline 

The security aspect of things looks fine, but there are some areas for improvement, I have provided inline comments where possible. The whole quiz could be coded as a class, and would be a lot nicer, however I didn't want to go too far from what you started with so you can see what changes I have done. Overall, I have split the code into functions, and tried to make each function do 1 thing only, and renamed variables for readability. This will become more important when you go to maintain the code. The first bit of code is what I used to test all the functions and catches exceptions that occur. You could improve by adding more error checks after each prepare and execute, but I will leave that to you, as they are only really necessary if the database structure doesn't match the sql. 

As a side note, in Java you are not guaranteed the order of the array that is produced to by toArray so the so the 0 index may be different each time you run this. There are ordered sets in Java like TreeSet which can give you better predictability here. Overall this was a nice simple class and I liked it, your methods are nice and short, and so this class is fairly testable. You may consider whether or not it is worth passing the possible values into the constructor so as to avoid hardcoding them if you decide to change the range. Also, in the inform_groups method you are passing two pieces of state to the group, including the cell itself, which begs the question: why not just pass the cell and have a method called getSolvedValue which will return the solved value perhaps then you could get away with implementing a simpler interface? Finally, it looks like the only use for the group is to call cellSolved and what you really have here is a listener/observer pattern. To avoid passing too much responsibility around in the form of a whole CellGroup, consider having the CellGroup implement an interface like CellSolveListener with exactly one method: cellSolved(Cell cell). And your registration method looks like registerSolveListener(CellSolvedListener listener). This documents clearly the contract between the two Objects, makes sure you are only passing around the responsibility you need and as a bonus Objects other than the CellGroup can now listen for changes. 

The dump function, why do you throw an exception if the session doesn't exist, but not anywhere else if the session doesn't exist? I would re-write it like a guard clause rather then having a return halfway through the function. 

The StudentRepository is all about database, and shouldn't know about $request and $response objects, that is the job of the controller. What if you were fetching data to put in an excel file, then you can't use the StudentRepository as it was to fetch that data. 

Database service, take the config out of the service, and store it in a config file. otherwise you need to edit the code when you deploy to a different server. Would a join work better here 

I have been using php for over 10 years and never found a need for a session wrapper, but maybe you find it easier/better. There are a few improvements that could be made with your code If we are checking to see if the session has a key, a simpler test is 

Have you tried using this function before? It does a fair bit of what you are trying to accomplish. $URL$ Failing that, I would try learning regular expressions, as they can make a lot of your strpos more concise. Its a handy skill to have in the toolbox. $URL$ I also find the a,b,c thing incredibly cryptic You could use constants 

Always prefer final variables, hence the set and list being changed to final Don't need to use the 'this' keyword as this is the implied scope. Though you should use it if it you have another variable in scope with the same name, as often is the case with setters. Because I edit Java in an IDE and the syntax colorer highlights fields different from other items I find 'this' to be too noisy. Camel Cased names that have a noun-verb arrangement. Typically java class methods are of the form verbNoun like setValue. Java does have a for-each looping construct so I made use of it in the list traversal in informGroups as it didn't appear that 'i' was used for anything other than list access. The only tricky thing I saw was in the inform_groups method which may have indeterminate behavior. Toda you are assuming that in this method that the list size is exactly one. In fact this is a necessary condition for this behavior of this method to be correct. Unfortunately, you call this method from two different places and will undoubtedly come back to this class one day and make a change that will call inform_groups when the possibles set size is > 1. Therefore I would add an assertion at the beginning of the method to document and verify this important precondition. 

The bulk of your code looks fine, I have made what are (In my opinion) a few usability enhancements, but take it or leave it as you see fit. I don't think you can really make the xml processing any less ugly. Comments are inline 

Then for showing the gallery we could use a data tag instead of class names to identify the links and galleries, then you could easily extend the code to include more galleries, with no extra js 

I haven't read the book you mention, although it looks good so I might buy it and have a read. A few things for me There are echo statements in the code, I am assuming that is for debugging and you are going to remove them. In a couple of places you use die(), and then elsewhere you throw an exception. Personally I would throw exceptions and let it bubble up to somewhere that can handle them properly. Your class is called fileImporter, but it also has a download aspect to it as well. I am wondering if fileDownloader should be separated out. You have a private getter function