It's possible to achieve this but it requires fiddling with partitions and you need the NOOBS installer from the Raspberry Pi foundation. i know it's not good practice to refer to websites only but it is really too complicated to explain here. Relevant links: a hassle free all in one solution a site on how to create a suitable image for NOOBS 

If you don't set the bit in OTP you can't boot from an external drive. The Raspberry is simply hardwired to search for the boot partition on the SD card. You can move the root partition to the external drive as you've already found out. I believe the reboot loop is a different problem. Did you connect the external drive directly to the Raspberry? If yes then you need to connect it through a powered USB hub. The external drive probably draws too much power during powering up thereby depriving the Raspberry itself of power causing it to reboot. 

No, it cannot be done with NOOBS. NOOBS stands for New Out Of Box Software which says everything. Even worse NOOBS now has a special boot option that erases existing data when trying to install something new so don't try NOOBS if you want to keep your existing data. 

The problem turned out to be an apparently troublesome SD card slot. Every time the slot gets too warm the card apparently looses contact and the system stalls. A few months after asking the question I've moved the OS to a hard disk and left only the boot partition on the card. I didn't do this to solve the problem but only to figure out if it was possible to move the OS at all. Since then I've never experienced a problem with this particular board again. 

I'm the owner of 5 Raspberry boards. Four of them work flawless. The fifth board regularly refuses to respond to pings or SSH. Sometimes it comes up after a few minutes waiting. It has no firewall active. Regularly the board goes into a state of the 'blinking green LED' and responds never again without restarting. The blinking green LED problem appears to be related to power issues but the power supply I use does not cause any trouble on any of the other boards. This troublesome board and two of the others, all of them type 2 boards come from Element14 and all of them run Raspbian installed on identical SD cards. I wonder if there are any bad boards or a batch of bad boards around. Any other suggestions about this issue are welcome too. 

I am writing a Python CGI script that I want to run on my laptop's browser. This script will SSH into two Pis, and give the command to take a photo. The server hosting this script is on one of the Pis that I want to SSH into, and that Pi also is acting as an access point for the other Pi and my laptop to connect to (everything is a LAN, not connected to the Internet). I am successfully able to run this script on my laptop's browser to run simple commands like on both Pis and print out the results for both on the browser. But, I ultimately want to be able to give the command to both Pis. When I do this, only the Pi with the server is taking the image, but the other Pi is not. I assume it's because permissions aren't set properly for the server (I tried running the commands as but still no luck). However, if I run the same script on a Python IDLE it works fine. Can somebody help me identify the issue? Here is my script: 

Initially, I was just blindly running the expecting the commands to finish, but it turns out I need to get the exit codes to truly finish the processes the commands are running. The documentations states a couple of ways to do this: 

AMENDMENT: Apparently, if I output anything from the , both pictures are taken and show up in the respective directories. I now suspect this might be a issue with the pssh package I am using. It might be waiting for me output something, but I don't know why? Does anyone know why this might be? 

This is why in my amendment to the code, where I was outputting from stdout, the commands seemed to work properly. 

After thoroughly reading through the documentation for the module, my problem had to do with the exit codes and how they are handled. The documentation about states that: 

I am using Parallel-SSH to try and get concurrent SSH sessions running on multiple Raspberry Pis. However, I am having trouble connecting to any device. It always seems to give me a "network unreachable" error or "no authentication available". I am able to connect to any of said devices using Paramiko, so I don't know why it won't work using Parallel-SSH (since it builds upon Paramiko). I suspect it's because I was setting the missing_host_key_policy as AutoAddPolicy with my Paramiko solution. Does anybody know how I can add this using Parallel-SSH Python package? 

Wireless dongles are a common source of problems. They frequently require more power than the USB port can deliver. The USB port of the RPi is sometimes a bit underpowered which especially at boot time causes the dongle to malfunction. Buy a powered USB hub connect it to the RPi and connect the dongle to this hub and you'll see it will work. 

It basically says it is downloading package 203 of the amount of packages it needs to download. It also gives a percentage of progress. When you've started the update is has shown you the number of packages to download (updates or new) and the number of packages to remove (if any). Eventually it will complete the update procedure unless it has lost the internet connection. Do not interrupt the update procedure unless you have no other choice or you may corrupt your OS. 

I'm searching for a solution for what I consider a simple routing problem but I can't get my head around it. It's about 3 pi's. The first one works as an accesspoint (I call it #1), the second one works as mailserver (#2) and the third one works as an sharing server (#3) for drives and so on. Forwarding between interfaces is enabled on all three Pi's. There are also other devices connected to #1 that do not play an important role in this situation. There's also no bridging involved (on #2 and #3) and also currently no firewall. Currently #2 and #3 are connected wirelessly to #1 and all three pi's have connectivity to my network and to the internet. Sometimes #3 has issues with connectivity especially when it is very busy so I want to connect it to #2 with an ethernet cable. This requires #3 to be in a different subnet. I've set in the routing table of #3 that #2 is the default gateway so #3 sends all packets to #2 and receives its packets from #2. #1 has a route describing that #3 can be reached via #2 and #2 has rules that describe that #3 is to be reached over ethernet and #1 over wireless. So now #2 can ping to #1 and its connected devices and it can ping to #3. If I issue an ping -I eth0 on #3 it indeed appears #3 can ping #1. Unfortunately #3 can't reach the internet. It isn't supposed to anyway but this points out there's already a slight problem. Somehow if I disconnect wireless on #3 (so it remains connected by ethernet only) it can't ping #1 anymore and obvious it still can ping #2 while #2 can ping both #1 and #3. In the previous step it was established that #3 could ping #1 over eth0 so I don't understand what is going on. It seems like eth0 is influenced by bringing down the wireless interface. There are literally hundreds of routing examples on the web but nothing seems to work in this situation. Can please someone enlighten me and please don't mark it a duplicate only (which it very well might be). Edit: As requested a diagram and the output of the routing tables involved.