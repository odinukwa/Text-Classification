The Prep If you are simply planning to do this in future, then you will do steps 1, 2 and possibly 3 with the pi offline and just leave the recovery partition in place until you need it. Installing the OS (Steps 3 and 5) Normally you download an SD card image from the website ($URL$ and just overwrite your entire disk... but that's no good because you must not overwrite your partition table. The downloaded images will have the exact 2 partitions you started with, so you need to copy the OS partition from the image into whichever partition you want to install to. So you can try this: 

The "default" is where it sends everything not otherwise specified. This doesn't usually apply to the broadcasting used by DHCP, as it can specify which device it wants to broadcast on. I'd suggest going round and asking another question. Be specific about which version of raspbian and which USB dongle your using. Others may have already had the same problem. 

All commonly sold wall-warts are switching power supplies these days, so you are not doing anything out of the ordinary. You can power the 3.3V sensors from the 3.3V pin on the GPIO header. Search the documentation for the maximum current you can draw, but a few milliamps are definitely safe. 

I suggest you try contacting them directly, and return it if they don't have ARM drivers. There are lots of fingerprint readers with open-source libraries. 

Maybe you have a defective card. Did you try it other cards? Try dd-ing it back to your machine and comparing the image with what you put on it. If that passes, you can always bring up a linux VM under VirtualBox or VMWare (there are free versions of both for the mac), and try to mount the file systems to see what's on them. As @goldilocks pointed out, these are not hfs filesystems, so the mac can't check them (maybe it can check the vfat, but it can definitely not check ext[234]fs. There may also be a standalone ext[234] fsck for the mac, check brew or whatever package manager you are using. I run the same image on my 3 with no problems at all. 

Firstly: doing this by remote is inadvisable especially if, like me, you happen to be 70+ miles from your remote pi. It's a very long drive if you screw it up. When you do this fir the first time, do it "remotely" while sitting right next to the pi. Secondly: yes, this is possible but I've never done it and although I believe I could achieve it, I'm not going to give step by step instructions. The principle: The SD card for raspbian is already partitioned. 

There's insufficient information here to say what's broken. Something is broken during boot and it's trying to drop into an emergency console to let you fix it. ... then the emergency console is broken because the root account is locked. The messages you have included in your question are due to the to this, not the root cause which tries to drop you into the emergency console in the first place. See here: $URL$ So to fix this the best thing you can do is try to figure out what's breaking. It may help if you first unlock the root account and set a password on it. Also check the lines in the console before your error, to see if there are any other errors reported. 

I'm trying to get a pair of I2S microphones working on a Pi2/Pi3. FWIW, it's a pair of $URL$ Here is some relevant output: 

runs with as its cwd, and almost certainly you are not cd-ing to the directory where the json file lives and/or not accessing it with a fully-qualified path name. 

USB ports on the pi are limited to 400mA total: $URL$ and it's probably a bad idea to try to draw more than 100mA from each. Exceeding that could lead to the dark side :) You also have to watch out for back-feeding the pi from the USB ports if you have a powered USB device. A schottky diode is highly recommended if you cannot disconnect power from your device's usb ports. What I would do is put the hefty power supply on the board, make sure there is no back-feeding through the USB port, and also use that to power the Pi (either sacrifice a Î¼USB cable or just solder +5V and GND to the Pi itself. 

Shrink your main OS partition using and . This is a bad idea with the PI online. But if you want to shoot yourself in your foot then see here: $URL$ add an extra "recovery" EXT4 partition using Install a working OS (Raspbian) on the new partition as a sort of "recovery OS". Reboot into the recovery OS by changing PARTUUID and rebooting the pi. You can get the PARTUUID of your partitions by typing Wipe clean and re-install the main OS partition. Change back and reboot into your new fresh OS. It's best to check before doing this, it may have changed. 

This doesn't sound like your problem. Linux can DHCP even when you have multiple network devices with one setup after another. Either way, to view your routing table open a command line and type: 

The part of this I really can't help you with is skipping the first boot which usually does something different to simply booting the pi 

I would get rid of all this and just use a ULN2001 or ULN2003, whichever you happen to have around. Then you can drive seven solenoids (but watch out for total current!) A convenient, although not as cheap as ordering from Mouse or DigiKey, source of ULN2003 is the various "stepper motor driver" boards sold on ebay or aliexpress. You also get four convenient LEDs :) 

Works for me: On a Pi3 running Raspbian Jessie (it's still on the 4.1 kernel because Adafruit has not bothered to upgrade their PiTFT+ drivers to 4.4). 

To make everything work: Choose some other subnet for wlan0, say, 192.168.4.0/24. The wlan0 stanza in should read something like 

You are using the command incorrectly, which also explains why you are getting those error messages about . Presumably you want to see what is in the root filesystem but nothing mounted under it, so you should say . The * would have missed any directories in / starting with a period.