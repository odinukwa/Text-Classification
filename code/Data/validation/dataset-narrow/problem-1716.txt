This isn't a question, as I have finally figured out how to get this all to work. I've had to break the links because I don't have enough reputation. sigh. Instructions to use Mimo Monitors UM-710 (Display only), UM-720S, UM-720F (Both with full touch control) with Raspberry Pi. Please visit $URL$ or info@mimomonitors.com These instructions only work with Mimo Monitors that have been manufactured since about January 2013. Newer units use a Microchip resistive touch controller. Older units use e2i Technologies controllers. The display will work with the older units, but the touch function will not work properly. Hardware: Mimo Monitors UM-720S mobile slider ($URL$ Powered USB Hub that can supply at least 1A of current (in the example case Dynax Model: U24H41) Raspberry Pi (in the example case, a model B) SD Card 

The rest of the section is to enable “Hold-For Right Click”. If you press in one area and don’t move (use a stylus), you will get the right click menu to run, etc. Calibration procedure borrowed and modified from here ($URL$ news.hopeindustrial.com/2013/using-a-raspberry-pi-with-a-hope-industrial-systems-touch-screen-part-ii-touch-screen-setup/) 

At the end of the file is this section: Section "InputClass" Identifier "Microchip touchscreen catchall" MatchVendor "Microchip_Technology" MatchDevicePath "/dev/input/event*" Driver "evdev" Option "InvertX" "true" Option "Calibration" "110 3973 170 3960" Option "EmulateThirdButton" "1" Option "EmulateThirdButtonTimeout" "750" Option "EmulateThirdButtonMoveThreshold" "30" EndSection The touch screen alignment requires us to set some parameters that tell the driver how to “stretch” the touch screen input across the available screen area. To do this, we have to download a simple utility called evtest. You can use the Debian Advanced Package Tool (Apt) tool to download the utility. 

Program C+++ control applications for RPi remotely from Eclipse running on Ubuntu. In view of all naysayers and technical (x86 /ARM) and administrative ( no update from 3.8 ?) roadblocks it is the only (reasonable) solution , to bypass RPi as development tool. I had high hopes for it. 

After unistalling the current version of Eclipse 3.8 I used sudo apt-get install eclipse. It worked and installed SAME version Eclipse 3.8 Works as expected, still trying for Eclipse Oxygen. 

My boot goes thru color screen, flash screen ... and ends with 4 raspberries in upper left corner of the monitor and bunch of text with last line saying something about "kernel panic..." And that is where the boot stops. I have NO I/O devices connected and tried two SD with same result. No unusual power indicators - red stays on , green flashes and it quits. I am convinced the RPi is dead. 

Where ( header file name ? / config ?) ) do I assign I/O pin as "general I/O "? I can see on Pi 3B schematic GPIOx and in parenthesis specific function , for example I2W. I just need few outputs, but I like to keep them in specific area of the P8 as common bus between several pieces of hardware. I do not need dedicated functions as shown on schematic. 

Your project sounds feasible , but will probably involve some programming. You might want to check out the CompoundPi Python library which has been designed for this specific purpose . $URL$ 

to open the manual page with the given name. Almost all Linux commands have a manpage with the same name. Unsurprisingly 

As of 2017 , Chromium has been modified to use hardware decoding for video on Raspberry Pis. 3D acceleration has to be enabled seperately via raspi-config ("Experimental 3D driver"). 

The KMS driver is meant to someday supersede options 1) and 2) and is IMHO the "proper" way. Currently it doesn't matter much due to lack of stability and missing video acceleration support. 

The linked website provides a source package. The instructions will build the source package. Closer examination of the source package reveals that the building process will try to download a file called idea.c.gz and compile it. This will also work on the Pi, since the code (idea.c) is written in portable C without assembler. 

The MiracleCast project can turn a Raspberry Pi into a Miracast reciever or transmitter. See here for a success story on a Raspberry Pi. $URL$ 

If you are engaging in commercial redistribution of GPLv2-licensed binaries , you must offer/mirror the sources to your customers and third parties yourself. You cannot point everyone at raspbian.org / raspberrypi.org . This is because the GPLv2 was written before the WWW was established as fast and common distribution mechanism. Furthermore , as you correctly stated , you have to include " [..] the scripts used to control compilation and installation of the executable [..] " as long they were part of a GPLv2-licensed project. The easiest way to satisfy those requirements is to use apt-get source on all installed packages , so they reside on the same medium as the binaries. Sources: 

After removing Eclipse from RPi I did fresh install. Command apt-get install eclipse-cdt "cdt" option to enable C/C++ development IDE. Eclipse 3.8 starts without any C++ sample projects, there are no C++ options on the initial screen. Eclipse 3.8 installs as Java IDE, not as C/C++ IDE. Any attempts to do "Available updates" from within Eclipse 3.8 fails because of missing CDT dependencies. 

My task is to use my PC for software development and use Raspberry Pi as a controller of hardware. I have the network working. Now I need to implement samba. Have a stupid , basic , question - who is in charge of this networking? AKA who is samba server and who is client ? PC or Pi ? In my terminology - PC Eclipse work space should reside in Raspberry Pi, probably on shared external USB drive or Desktop - whichever is allowed by Linux security or is simpler and can be executed in Pi. 

I managed to idetify Bluetooth speaker. I have "paired" it, as far as Bluetooth is concerned it is connected , to the Pi 3B and was directed to "audio menu" to actaully select the speaker as audio output. Found under "preferences" item "audio device setting" but there is only one audio resource available , hence I cannot select the Bluetooth speaker box. Running current, and upgraded OS. Please answer the following questions: 

The last option only works on Linux but will enable you to "jump into" an image file , use apt-get , change configuration files etc. 

After four years , Android for any Raspberry Pi model is still in beta state. You can follow the progress of the community porting efforts here. After 2012 , the foundation took the stance that they see little benefit in supporting Android , as they now percieve it as mainly encouraging consumption instead of creation. 

Synaptic is a graphical tool. It should make it easier for you to manage and search packages on Raspbian where plain apt is too confusing. 

The Python picamera library is only for the official Raspberry Pi camera module connected to the CSI bus. If you want to use regular USB Webcams , look at projects supporting V4L2 . Example : $URL$ 

The image effects are built into the closed-source firmware and likely a low priority feature. All camara APIs and libraires interface with this firmware, which finally controls the camera. You can apply any post-processing you want with NumPy or Pillow yourself, though. 

There is the 96Boards initiative , which might be what you are looking for. Sadly Raspbberry Pi does not participate in it. $URL$ : 

P.S. I am not a lawyer , i am not your lawyer. This answer does not constitute legal advice. Please consult a legal professional if in doubt. Laws and applicability vary by jurisdiction. The opinions of the Free Software Foundation expressed herein are solely their own. 

***** Answer 1. It is not. Right click on "Volume control" (!) lets you select the audio device. Volume control != audio MENU selection ****** Answer 2. "audio device setting" menu window /control is ONLY for internal audio hardware , not for Bluetooth 

In Add/ Remove software ,there is a icon / item called “Network” How do I add it using Main Menu editor? I can add it via Add/ Remove software. I understand that for menu item to become visible it has to have application “attached”. I am using simple apt-get update and it works. When I did that the Main Menu Item text showed the comments I added to item as Menu item title. Not “Network “ as expected. And I don't even know how to change the Main Menu icon, minor detail for now. 

BCM2835 datasheet clearly documents register structure and access to the device. I have not found similar document published by Bradcom for BCM2837 , but would assume it allows similar manipulations of internal registers. Not being familiar with actual implementation of "canned" GPIO functions - YES there are numerous function each and every GPIO port can have, not limited to "canned" configuration, can someone point me in the direction of Raspberry load process and actual code implementation of these function(s) ? Since some on this forum have hard time interpreting my QUESTIONS, here is a different verbage for same - where is the "Open source" code for implementing such functions, and I not need "in github" (duh) as an answer. I like to have, if possible to save me time looking, the real source file where such function is executed. But if it is not of common knowledge of some designer here, I'll just keep looking. Bonus question - why do my post DO NOT format the way I wrote them? 

Only the Raspberry Pi Zero , Zero W , Model A and Compute Module can act as USB device. The Raspberry Pi 3 Model B can not act as USB device. This is a hardware limitation which cannot be worked around in software. Here is a guide for the Pi Zero using ConfigFS : $URL$ 

Collabora has improved software for the foundation under contract. They implemented Hardware acceleration inside Webkit (for Ephiphany) and did work on a Wayland desktop called Maynard. It makes sense that they run an extra repository with the improved versions. Sources : 

Working with Raspberry Pi SD cards is painful on Windows. I suggest using a gparted Live CD (based on Linux) to modify RPi partitions. You can boot from such a disk without touching your Windows install at all. This is much safer. 

gedit is a graphical text editor similiar to Windows' notepad.exe. All software in Windows and Linux can be started from the commandline irrespective whether they are commandline applications or not as long the graphical environment is running. gedit is no different. Whether a piece of software is a "command" therefore depends solely if it resides in the PATH or not. Both Linux and Windows work with a PATH variable. Learn more here. Please note that gedit is not preinstalled. Use leafpad instead if you don't want to download new software.