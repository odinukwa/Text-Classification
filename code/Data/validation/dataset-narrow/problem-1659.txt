The problem you're having is with the Boost Libraries. The error is specifying that struct members don't exist, which is usually an indicator that something is using the wrong version. I would suggest making sure you're using the correct version of gcc, and that whatever configuration you've done matches the RPi. 

There have been attempts to port Android to the RPi, but there hasn't been any progress made on any of them in quite some time, and performance has always been horrible. I wouldn't recommend it. 

Note: commented lines start with a character. Uncomment means to remove this character, and to comment the line means to add it. A more in-depth tutorial can be found here, and you get can get more information about the file in general here. 

If you're interested in learning the basics of how the RPi functions and how to do such tasks, the RPi is a great tool. That being said, an RPi cluster has no chance in hell at defeating even a moderately recent i5 processor. Your laptop will probably serve you better than an RPi cluster for heavy computations. 

The Raspberry Pi is designed to be an embeddable device. So long as the environment around the RPi isn't exceptionally warm and humid, the RPi will be fine in an enclosed container. You will never get an air tight seal with a lego case anyway. I mean, you have to leave holes in it for the ports after all. Since LEGO bricks are made of a nonconductive plastic, you don't need to worry about them not touching things on the board. Nothing is hot enough to melt them (unless something is very, very wrong) and plastic is non conductive. Edit: It's been pointed out that there may be some issues if the LEGOs are putting pressure on a chip. I had assumed that it was obvious that strong forces shouldn't be directed to the circuit board, but for clarity I'll add the warning: do not put pressure directly on circuitry. 

It really depends on what you want to display. Your note makes it sound like you aren't looking for something that will involve displaying the desktop, which is good. It certainly doesn't have a refresh rate capable of doing so in a reasonable fashion. I expect it to be slow, even for terminal application use. These kinds of screens excel at sign style displays. If you want to display a picture (that doesn't change quickly), text (like a sign or an ereader), or an application that displays like an alarm clock or status indicator, the PaPiRus should work very well. 

Your sound distortion is coming from your loop. By calling the sleep function, you're telling your program do nothing for half a second, and then come back. If we look at their blocking example, you can see they handle the loop differently: 

No, you cannot. Safari requires an processor to run, and the Raspberry Pi has an processor. For more information on why this is problematic, we have a helpful blog post. 

You haven't created an object for the captured information to go to. Generally speaking, I think it's easier for beginners to learn the file method (as opposed to streams). The code below is an example taken from readthedocs.io, and should help you get started. from time import sleep from picamera import PiCamera 

Part of this can't be answered without knowing what kind of performance you need out of your database. On the Raspberry Pi, you have a couple mainstream options. 

No. Windows 10 IOT isn't the same thing you'll find on a desktop, laptop, nor even a tablet. It does not come with a GUI, and since it's running on an arm7 processor, it will not run standard Windows x86 applications. You can find the RPi's Reicast branch here, but from my quick Googling, it doesn't appear to work particularly well. Apparently, the RPi just isn't powerful enough. 

This would be relatively straightforward with the Raspberry Pi Zero. Since it has a USB OTG port, it could be used as a USB device. Hackaday has some links to interesting tutorials on how such things can be accomplished. 

I haven't used it personally, but I would be slightly way of its use. I have used other unpowered hubs with the RPi before, and it was my experience that the combination of powering the hub itself and the things connected to it often caused power issues. I would highly recommend sticking to a powered hub, especially when you have something power hungry like a wireless radio combined with anything else. 

As Ghanima mentioned, splitting a 1 A power supply between a Raspberry Pi 2, and an external hard drive is unlikely to perform well. Further, the capacity of the drive isn't likely to make much of a difference. You might might have more luck with lower RPM drives, but again, I'd caution against it. You have two options: 

As is the Raspberry Pi doesn't support a Deep Sleep mode as you describe it. Most of these modules can all be disabled, but the savings are minimal and they will all require a restart to toggle on or off. Turning down the brightness will surely help (presuming it's powered from the RPi), but how and if you can do that will depend entirely on the screen you're using. Check its documentation for information on that. As is, the RPi uses remarkably little power. The SOC (CPU, RAM, GPU, etc) is going to be eating the vast majority of your power. If you need your device to last longer on a battery, the best answer is to simply provided it with a bigger battery. 

The Broadcam SOC provided in the RPi only supports USB 2. The CPU itself isn't powerful enough to deal with USB 3. There is a done of overhead for USB in general. And you need a pretty powerful processor to keep up with the speed of USB 3. The RAM built into the RPi is unlikely to be fast enough, and there likely isn't enough of it to gain any benefit from USB 3. The RPi simply couldn't supply the power required to operate multiple USB 3 devices. 

In my experience, the only major corruptions I've had is from power problems. The best solution is to use a UPS. If you need to turn off the device, you should be issuing the command before you unplug it. A standard UPS should run something as small as the RPi for a significant length of time. Long enough that I doubt a signal mechanism would be necessary. If you want something like that though, a popular hat tailor made for the RPi exists. 

It depends on what you mean by "integer". If we're talking about the register size in the processor, then no, the RPi has a 32bit CPU. If we're talking about the size of numbers it can process in Python, then yes it does. Python has big number libraries built in. Because of this, you can store and manipulate as big of a number as you want and have the RAM space for. Your efficiency won't be nearly as good, but it is workable. 

Before transfering your files, compress them into a zip file (or something better if you're familiar) and then unzip them after transfer. This will allow WinSCP to move all the files in one continuous transmittion and will be the fastest method you have available. Not only is there less connection overhead, you won't have multiple processes on the RPi Zero competing for precious disk IO time. 

imply that somethings is wrong the the voltage that's being supplied to the drive. So there's a couple things that may be at work here. Upgrade Woes: The change from Wheezy to Jessie was drastic. So drastic that the foundation recommends not upgrading system in place, but rather doing a complete reinstall from a fresh image. There could be a number of systems that didn't handle the upgrade well, and are causing issues. This might be fixable by going through different settings and doing a guess and check, but a reinstall would probably be easier/faster. It might be worth checking the max output settings in , but again, I'd suggest a clean install. Possible Hardware Issues: Either the drive or the port may have shorted. If it happens on the RPi, but works on the desktop, than the RPi may be damaged. If it doesn't work on the computer either, your drive is damaged. The best way to check the RPi's ports would be to use a multimeter to check the power output of the USB ports. If you don't have one, try a different drive. If it reacts similarly, you're back to the RPi have some kind of issue. 

It's hard to give a decent answer when your question gives little information beyond "seems slow". The RPi actually has a fairly impressive GPU, and I've seen some pretty surprisingly powerful image tracking/recognition projects written with it. SimpleCV vs OpenCV: This one isn't as straightforward as it sounds just looking at the title. You're probably assuming that "simple" mean's it's relatively basic and therefore faster. While a common assumption, it is wrong. Taken from SimpleCV's webpage, 

An externally powered hub should be more than capable of powering both your Pi Zero and whatever peripherals you want to connect with it. The RPi itself only requires ~200 mA of power with a full load. That number will be significantly less under lighter situations. 

If you're willing to use Arch linux, the official repo now supports version . The version in the Raspbian repos is still 9.4 unfortunately. 

Then, use the open dialog to select . You should now be able to make changes and save the file. Simply close leafpad when you're done and you should see a new prompt appear in the terminal window once the leafpad process exits. You can now close the terminal window as well. 

The error clearly states that the problem is that the compiler is missing . You should be able to fix this by installing . The command below should fix it. 

The RPi Foundation didn't give us much of a heads up when the RPi 2 came out, but I think some people were expecting it. As far as the killer specs go, it's rather unlikely. In fact, we've gotten a resounding "no" for USB 3. The RPi isn't meant to be a "killer" device. It's primary purposes are to be inexpensive, and educational. The more features/power you add to the board, the more power it will consume (bad for embeded things), the more it will heat up (bad for embeded things) and the more it will cost (bad for educational things). If you want a high power embeddable board, I suggest you check out some more powerful alternatives like the banana pi, beaglebone black, pandaboard, Intel NUC, etc. 

Get a better power supply. A 2 A power supply should power both the RPi and the drive without issues. Make sure to add to the file. Get an externally powered hub. If you have additional power hungry devices like a wifi or bluetooth module, this is definitely the better way to go. Some hard drives like to suck more power than others when they first start, and the externally powered hub could protect you from issues where the HDD is pulling in large spikes.