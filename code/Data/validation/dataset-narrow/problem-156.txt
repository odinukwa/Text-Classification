All interfaces shown go through a single cable to a trunked port on my switch. From there, ports are assigned VLANs according to what net the device is supposed to be on. The current LAN network is unused, and is waiting to assign IP addresses to VLAN 1 on my switch (which is not used). Since the LAN interface is not used, I would like to disable it, or remove it all together, and have just VLAN traffic between the router and switch. However, whenever I disable or remove the LAN interface in pfSense, everything on the network loses connectivity and I need to restore a recent config in the pfSense console. I can't seem to figure out why this affects the VLAN traffic that is also supposed to be going through the same port. I have not posted my switch config since I have no reason to believe the issue is on the switch side, but I can post it if necessary. Ideally I would like to remove the LAN interface and still have my VLAN networks be able to communicate. Any ideas? 

Contra IPsec VPN: 5. requires dedicated hardware in each participating network, usually embedded in a router or gateway firewall. Pro SSLVPN: 

As a philosophy ARISTA encourages customers and partners to run standard Linux applications on their switches, publishing all necessary APIs etc. As for resources, ARISTA is making very low latency-switches with high port density for 10G/40G/100G, and therefore high CPU power and ample memory is provided. One example of such an integrated application is Splunk for network monitoring/statistics. 

For traffic to pass from the internet to the LAN you need a couple of preliminaries to allow this: 1- create an address object "myLAN" for the addresses used for your LAN hosts, like e.g. "192.168.123.0/24". 2- then create a policy: source interface: internal source address: myLAN destination interface: yourVLAN_IF destination address: ALL check the "NAT" option! You are not using the WAN port but the virtual VLAN interface created on it. The NAT option is essential as the private source addresses of outbound traffic are replaced by the public address of the VLAN interface so that it can be routed back to your FGT. The routing is essential as well: 3- create a default route find the menu option to create a static route (this is firmware version dependent). Create a route '0.0.0.0/0' pointing to interface "yourVLAN_IF", no gateway. The gatewway address has already be set because you checked that option in the interface setup (this is a PPPoE option). You're right in assuming that the FGT has automatically created a route to the VLAN interface, look it up in 'Routing monitor'. 

Since I have upgrade my switch, I have been experiencing issues with port forwarding on my pfSense gateway. I have done some researching on google, but didn't come to any conclusive results. Background: My old network configuration was ISP > pfSense > Dell PowerConnect 2016 Switch > Client. This switch was 10/100 Mb, unmanaged plug and play. My new configuration is ISP > pfSense > Cisco Catalyst 3560G > Client. To my understanding this switch has layer three functionality that I am not using. I do not have any VLANS running other than the default VLAN 1. (As far as I know) I do not have ip routing enabled. In both configurations, pfSense is running pureNAT and I have followed many tutorials on setting up port forwarding assuming I was messing it up somehow (I did reinstall pfSense onto a new HDD). Since these changes have been made, I have been unable to successfully setup SSH, http, as well as other things. I have run a port scan on my external IP and the ports that I am forwarding in pfSense read as open. However, when I attempt to SSH into the machine that the SSH port is being forwarded to, the connection eventually times out. I have tested SSH locally and there are no issues. Just to be sure, I tested this on multiple machines and VMs with the same results. As I am new to managed/layer 3 switches, I am looking for someone to guide in in the right direction to figure out why I am incurring this issue. Switch Config: 

uses a standard protocol (HTTPS) which is very rarely blocked in public spaces (hotels, free Wifi etc.); IPsec needs ESP, AH protocols, or standard UDP on uncommon high ports (500, 4500). for limited, predefined access to remote applications, a user only needs a browser and no additional software client. This requires on the SSLVPN gateway a proxy for each application offered. 

The cited switches do not only have a throughput of 88 Gbps (424D) and 176 Gbps (448D) but also feature 2/4 10GE ports for uplinks. In comparison, the maximum throughput of a FGT-200E is rated at 20 Gbps, 9 Gbps for small packets (64b). In order to use a Fortigate as a backbone switch it would need to have 10GE ports; aggregating ports in a LACP trunk will be not as efficient and will exhaust the available ports (14 on a FGT-200E). The main reason I advise against this deployment pattern is that the main advantage of having a UTM firewall, namely protection via AV, IPS, Application Control etc., will have to be sacrificed for speed. The FGT is meant to manage the Fortiswitches in your LAN; as such it's very convenient (e.g., VLAN handling), powerful and you can even extend the security perimeter to your access ports. Just keep in mind that the whole infrastructure will be as powerful as the weakest part, and that would be the FGT if used as a backbone switch. If you use a Fortiswitch for backbone and manage and monitor all switches from the built-in FGT switch controller, all is fine. 

You seem to be confused about how NAT works. You want to translate your network addresses to something else. NAT is configured and only works on a single router. Your ISP router doesn't need, and shouldn't have, any NAT configuration. NAT is configured on your local router. You will have both the inside and outside interfaces on R1. The interface will be the outside interface, and the and interfaces will be the inside interfaces. You need to translate the and addresses. You also need to be careful with two WAN routers. If you get asymmetric routing (traffic goes out one WAN router, but comes back on the other WAN router), your NAT will break because the two WAN routers do not share a NAT table. 

This is a problem that is discussed at the end of RFC 826, An Ethernet Address Resolution Protocol -- or -- Converting Network Protocol Addresses to 48.bit Ethernet Address for Transmission on Ethernet Hardware in the section title, "Related issue" (see below). Normally, a MAC address in an ARP table will eventually time out, or a host with a new NIC can perform a gratuitous ARP to inform all the other hosts of its new MAC address. 

Yes, one of the ways to set up an IPsec VPN is to create a "dial-up VPN". This is exactly the same as what a (software) VPN client does. The exact configuration steps depend on the version of FortiOS you're using (v4.3, v5.0, v5.2). If v5.2, you could use the VPN assistant which guides you through the steps necessary (phase1, phase2, policy - no routes). But even doing it manually in the CLI is not difficult. Get the "FortiOS Cookbook" from docs.fortinet.com where you find lots of real world example setups. Hopefully you have a good reason to try to do it this way. Cisco VPN usually uses a self-configuration mode for VPN clients (modconfig). FortiOS supports this but probably only by enabling it in the CLI. 

What you are planning to do is called "Destination NAT", and in FortiOS this is done with 'Virtual IPs' (VIPs). 1- create a VIP like this name: dnat_LAN2_to_LAN1 external interface: LAN2 external IP: 192.168.21.10 (for example) mapped IP: 192.168.250.23 (for ex.) port forwarding: not enabled 2- create a policy with source interface: LAN2 source address: LAN2_subnet destination interface: LAN1 destination address: dnat_LAN2_to_LAN1 service, schedule: to your liking NAT: not enabled You can now ping 192.168.250.23 on LAN1 using the IP 192.168.21.10 on LAN2. If you want to map several IPs: - you can create multiple VIPs and put them into a 'VIP group' and use this in a policy, or - you can define a range of 'external' addresses which are then mapped 1:1 to the 'mapped-to' range Note that you do not have to translate the LAN1 source addresses to a LAN2 address to completely 'masquerade' it - the VIP will do that automatically, even for traffic originating from LAN1. 

Switches are transparent devices. Switches, themselves, don't broadcast anything. A switch will flood unknown unicast frames, and broadcast or (possibly) multicast frames will be sent to all switch interfaces, but switches do not originate traffic, nor do they care anything about layer-3 protocols, e.g. IP, so a switch doesn't know about IP addresses, much less broadcast them. Each device on a network has its own addresses, and each knows what the local network is based on its configured network mask. 

MAC addresses are only significant or seen on the layer-2 LAN where the host connects. Not all layer-2 protocols even use MAC addresses, and some use 48-bit MAC addresses, and some use the newer 64-bit MAC addresses. Routers operate at layer-3, so they strip the layer-2 frames off the layer-3 packets so they can build new layer-2 frames for the new interface out which the packets will be forwarded. 

you can create site-to-site VPNs, allowing multiple hosts to access a remote network at the same time in this scenario, hosts don't need any additional software to participate in the VPN, allowing for arbitrary operating systems as long as they are able to network supports client-to-network as well, using a client software encrypted traffic between VPN gateways cannot (at this time) be decrypted by third party, without the receiving end noticing 

This zone only holds records for your private hosts and thus it must be 'authoritative'! Next, the record(s). They are created in the section. Record type 'A' denotes a host entry. It doesn't harm to have an additional 'NS' record with the name of your nameserver, i.e. the Fortigate. Then you set up a DNS for your hosts to use, here on the 'lan' interface: 

HQ firewall: Independent of the firewall vendor, you will need an additional policy to allow traffic from the tunnel end to your WAN port (destination address 'all'). Here, you have to apply source NAT as private addresses like those used on the branch network are not routed over the internet. In a stateful firewall, reply traffic will be automatically allowed to flow from WAN port to the tunnel and eventually to the branch LAN. branch firewall: As you have already stated on the branch router/firewall you need an additional default route pointing to the (private) address of the HQ firewall. The associated policy should allow 'all' as destinations, not only the private address range of the HQ, as it might do at the moment. edit: On the branch firewall, you need an additional (host) route to the public address of the HQ firewall. Otherwise, this address cannot be reached when the tunnel is down. For example, add "1.2.3.4/32" via WAN port. If you already have a default route in place (pointing to WAN port) then either delete it or make sure it has a higher distance than the new default route to the tunnel. 

Unfortunately, in the U.S., there is no one single solution. While all 50 states, and most local jurisdictions, have adopted the NEC (NFPA 70), there are still many local jurisdictions, including those which have adopted the NEC, with varying laws and rules. The answer to your question can only be found by asking the AHJ (Authority Having Jurisdiction), such as the local building inspector or fire marshal. Basically, someone with authority to fine you and shut the building down until local code violations are remediated. There are instances where there are multiple AHJs, which don't completely see eye to eye on what is, or isn't, acceptable. Having said that, it is doubtful, in many jurisdictions, that you can do what you want to do. 

You seem to be confused about logical topology (bus, ring, star). Ethernet has a couple of different topologies, but token ring has only the logical ring topology. Full-duplex ethernet doesn't use CSMA/CD because it has separate send and receive paths between two devices. When you share send and receive paths, then you must use CSMA/CD in order to detect collisions (two devices sending at the same time). With full-duplex, there is no possibility of collisions; the send path on one device is the receive path on the other end, and vice versa. A hub means you must use half-duplex because the possibility of collisions exists, and you must detect the collisions, so you use CSMA/CD. The devices connected to the hub take turns sending (and resending when there are collisions). Each will have the opportunity to get frames on the wire, so, yes, they can ping each other at the same time. For ethernet: Coaxial cable only has a single path, so it must be half-duplex. UTP cable as point-to-point between two devices can use full-duplex because each device has separate send and receive paths, but on a hub, you have multiple devices trying to send on on the same path, and receive on the same path, so you must use half-duplex with CSMA/CD. Fiber will have separate send and receive paths. For token ring: there can be no collisions because only one device possesses the token at a time, and no device can send without possession of the token. For Wi-Fi: all devices share the medium, so there are going to be collisions. Wi-Fi doesn't use CSMA/CD. CSMA/CA was developed for Wi-Fi to try to avoid collisions. 

First off, this behavior is as expected. The Fortigate (as a stateful firewall) will create a session from the information of the first packet arriving. It will determine the route to apply and whether forwarding is permitted or not. After these decisions, subsequent traffic belonging to the same session is forwarded without any further decisions to make. (As a point aside, in Fortinet firewalls established sessions are indeed offloaded from the CPU to a network processing ASIC at that point - which is incapable of looking up routes or policies. The principle holds true even if traffic is not offloaded, though.) Now, when the tunnel goes down, the route across is deleted from the Routing Table and VPN sessions are deleted. The next best route to a private network usually is the default route, so for arriving traffic destined to the network behind the tunnel new sessions are created and routed out the WAN interface (where they are discarded at the next router, hopefully). When the tunnel is coming up again, new sessions are correctly routed and forwarded across the tunnel because their first packet trigger the decisions I mentioned above. Existing sessions are not affected - this would imply that with every change of the routing table, the FGT would have to re-evaluate each session if there was a better route than before. This is impractible at least. Traffic will follow the "wrong" route until the session is timed out. There is an easy fix for this kind of scenario: create static blackhole routes on the FGT for all private, RFC1918 networks you might use behind VPN tunnels, with 192.168.x.x/24, 172.16.x.y/16 and 10.x.y.z/8 being the most popular. You need to set the distance parameters for these blackhole routes to 254 to keep them inactive as long as other, intended routes exist. The trick is that for blackhole routes, the FGT will not create sessions. So when the tunnel is down and the tunnel route discarded, the blackhole route is used - packets will be discarded immediately. Each packet arriving will trigger a session setup and a routing decision and eventually will be forwarded across the tunnel right after it comes up again. In the Fortinet support forums you will find a couple of threads explaining this. This post offers a bulk command file ready to import all RFC1918 blackhole routes: $URL$