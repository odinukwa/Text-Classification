Second is client side. I can't possibly think a way other then to told user to right-click and save to... 

Strange that nobody mentioned ejabberd. I've been using ejabberd under FreeBSD as inter-company messaging system for years. Written in erlang it's adopted for very highloads, don't require JVM (as Openfire do), has integration with LDAP, provides http-bind and http-pool methods for web-based comet/ajax clients and much more. You can install in FreeBSD from ports via Also you can watch screencast: Setting up a Enterprise Instant Messaging server in 180 seconds 

If you have fully backed up system and it has mirror - you can break the mirror, upgrade, test, re-add devices to mirror. It can be risky, but IMHO ability to rollback any mess worth it. Also to minimize risk of breaking some packages dependencies you should add option to your kernel and install port Newer versions of FreeBSD have , so you can create a clone before an update. 

Platform (i386, ia64, powerpc etc) Hardware, especially motherboard BIOS/EFI version GPT/MBR? Filesystem in use (Of cause one can google about "pfsense image", download it and search for ufs/zfs, but it would be easier if you just provided this information) 

Don't assume - check! To debug your problem further you should probably look into directory for list of available kernels and check loader configuration. Also check output. 

May be driver/firmware for you controller is not in initramfs for 10.04. If that is the case - only way for you to get LTS release is to use backported kernel. Try installing ubuntu 10.04.3 via from newer images (e.g., Oneiric) or hack original DVD and place newer kernel/initramfs there. Also as workaround you can install system on disks plugged in onboard SATA controller. 

Since August 2009 flash 10 works with out problems on FreeBSD. You can use either linux-f10-flashplugin10 with f10 linuxulator or linux-f8-flashplugin10 with f8. After port instalation there is some black magic with nspluginwrapper and symlinks 

I suppose applying that patch to your kernel should fix the problem. Also you may try to increase default rcv buffer size in both OS and application ( ) And your second question about - Linux increments that stat inside [3]. That function is usually called when socket goes over it's rcv limits. So yet again you can either increase your / and/or tune your application to make read() calls more frequently (I assume your drops are closely correlated with Java's Stop-The-World GC pauses. So, tune your GC). [0] $URL$ [1] $URL$ [2] $URL$ [3] $URL$ 

Also backtraces in says about , so as @Jim have already mentioned, you should probably check your ram. 

Also there is usually presets in MySQL packages called , , and you can search for them. PS. You should really google for some MySQL tuning examples for you storage engine. 

It's stable, easy to expand, has a lot of documentation and integration features, so I recommend it. 

Also descriptor count can be tuned via in some NICs Regarding your question "idrops vs. drops" you should look sources for 

If crashdumps were enabled you can also see timestamps of files in directory. Also you can see recent panics using command: 

PS. Do you really need all-in-one? May be separating router and switch is acceptable? PPS. added to favorites in case you will find cheap 'n cool hardware. 

Not an answer, but suggestion - replace spawn-fcgi with php-fpm it's more customizable. PS. maybe you have special 50x error page redirect in nginx.conf UPD: today i've ran into similar problem when nginx+php started to serve blank pages. My research showed that it sended blank page whatever php threw an exception. May be it's some kind of php.ini directive to serve blank instead of an error. I should examine logs and etc... wip. UPD2: Look at your php.ini there is 2 parameters in it that you need to change in order to see php errors: 

Do you need varnish at all? 1. nginx can cache results on disk or in memcached 2. nginx has SSI 3. nginx has fair load balancer or ey-balancer 4. Best practice says that HAProxy before nginx is good move. Don't forget about KISS - more components your system has - less stable it becomes. 

Try to decrease halfopen connections limit to minimum (i.e 1 or 2) it'll make p2p almost unusable, but also will cost you slow browsing speed 

Also upgrading BIOS should probably help. PS. Why not ? It's faster and if you have both and in it's definitely the best choice. 

"If you leave this set to a world-readable directory, other users on the server may be able to hijack sessions by getting the list of files in that directory. " 

Issue looks more like a bug than bumping into a limit. Only suggestion is to update to latest stable MySQL version, or even to FreeBSD 7.2 (they higher almost all limits on FreeBSD 7.2 amd64) 

Probably you can install DD-WRT firmware on your router. It has 2 types of QoS: HFSC and HTB DD-wrt QoS $URL$ It also has: 

Is your hash ALLCAPS? Maybe you should use 40 characters... It looks like sha1 hash. May be you should simplify regexp to 

Try PS. should be loaded, installed PPS. Trust me, thermal monitoring is one of the lamest things ipmi can do - explore the power of Serial-over-LAN, System-Event-Log, PEF-traps, remote power control, boot device manipulation and KVM-over-LAN! 

I suggest using HAProxy. It's extremely fast. And you can also evade Single Point of Failure by using two loadbalancers with CARP(*BSD) or UCARP/LVS(Linux) 

Each connection we make requires an ephemeral port, and thus a file descriptor, and by default this is limited to 1024. To avoid the Too many open files problem you’ll need to modify the ulimit for your shell. This can be changed in , but requires a logout/login. For now you can just sudo and modify the current shell (su back to your non-priv’ed user after calling ulimit if you don’t want to run as root): 

Your question is already answered, so just little performance tip: If you have a lot of small files you should increase vfs.ufs.dirhash_maxmem, default 2MB is too small for thousands of files. I have such line in my /etc/sysctl.conf 

and much more. You can access SEL (if it's available on your hardware) via or commands, see: ipmiutil sel - show firmware System Event Log records 

Are those servers have very different ? My guess is that your running and installed kernels are out of sync. After installation of new kernel you should generally reboot the system for changes to take effect. 

In your case your main problem is interrupt distribution across the cores, so fixing it will be your best corse of action. PS. Do not forget that in those kinds of benchmarks kernel and driver/firmware versions play a significant role. PPS. You probably want to install the newest driver from Intel[4]. Do not forget to read README there and examine scripts directory. It has lots of performance-related tips. [0] Intel also has nice docs about scaling network performance $URL$ [1] You can pin your processor to a specific C-state: $URL$ [2] You can analyze that data with: $URL$ [3] You can set affinity with: $URL$ [4] $URL$ 

Yeah, CD/DVD has all sources of FreeBSD and you don't need to download them all from internet. Insert FreeBSD CD, run go to configure -> Distributions -> check Then use instruction from FreeBSD handbook. PS. for minor upgrades I use this script 

Aside from lager address space, absence of broadcast, IPSec and simpler auto-configuration there are some "not so known" advantages of IPv6: 

If you have a boot loader problem it's essential to provide full information about system's internals: 

Look at column. Lack of hardware descriptors can be observed only via driver-specific interface e.g for Intel e1000 cards via: 

Bittorent tracker is pretty easy to setup, I know couple of PHP-based, but they are mostly in Russian (TorrentPier - phpbb2 interface, TBDev). You also can also look at XBTT - written in C++ - it can manage millions of peers on single box, but web interface for it is kinda hard to find. UPD: I've found this project xbtit they offer it for free under BSD license. You can try demo here. I think Direct Connect with simple web interface for exchanging magnet links can be more suitable for you. There are plenty of hubs that you can choose, from windows 1-clicks to *nix-only with lua and python scripting support. Just most popular ones: PtokaX, YnHUB, VerliHub). And of course FTP is still alive! You can easily combine FTP storage with HTTP and easy to install&manage hand made site