NFS uses IP/Hostname based security so that means you should give permission on NFS server to clients. Permissions should be defined at /etc/exports file. Example /etc/exports file: 

I am using 2 different service to get notifications from my Pi. 1) pushingbox.com - A notification service that works with URL Get mechanism. You can send any notification from your Pi with email or growl messages. 2) pushbullet.com - A notification service that supported by Android and iOS. You can send any notification from your Pi to your mobile phone. You can write a script that works within /etc/rc.local startup script and get notifications at boot. 

In amazon EC2 you can create a Wowza instance and test Wowza Server. Your customer/spectator count depends on CPU power of EC2 instance. I worked RTMP Streaming with Wowza for years, it fits your request, but i don't guarantee RPi side. 

This will fix the file system. If you installed your system to your RPiâ€™s SD card, the solution should work, too, but requires a SD card reader, of course. In order to avoid the problem, you should always shutdown your RPi via ssh: 

Then you should find the "document root" (default path for web service files). Because we don't know what web server running, there are some possibilities. I can give 3 different commands to find the document root folder for each web server. Those are lighttpd, apache and nginx. for lighttpd; 

To view video files in your Raspberry disk from your iPhone, you should install DLNA server onto operating system that runs on Raspberry Pi and DLNA client onto your iPhone. I can suggest miniDLNA as server that @goldilocks suggest too. I assume that youre using Raspbian, so i will tell the Raspbian way of installing miniDLNA. 

After editing /etc/exports file you should run 'exportfs -ra' command to re-read exports file by NFS server daemon. Then try to mount; on client 192.168.21.4; 

It looks like your internet connection work through a proxy device that requires authentication. You have to set up proxy credentials for connection. For apt you can set up the authentication just like this : 

First of all 'Raspberry Pi' is not an operating system so you have to tell the name which linux distribution you're using. I'm using BerryBoot to boot my 4 linux distribution which are installed on my USB disk. To find out where the config.txt and to modifying it, you have to mount BerryBoot installed device. It's formatted as FAT32. 

You have to set file_open_mode value in /etc/vsftpd.conf file. Config file may not contain that key=value pair in default. Add as you want. But to enable this function you have to set chmod_enable value as YES From the vsftpd.conf man page: 

To stop having wrong module loaded you have to put your module name at /etc/modprobe.d/ as a conf file. Create a .conf file in /etc/modprobe.d folder with module you want to put in blacklist. 

As you can see linux root partition is 2nd partition, that means it will named /dev/sda2 when you try to boot via qemu-system-arm. 

If you're connecting via SSH to your London server you can route all your client traffic through SSH connection with sshuttle ($URL$ sshuttle will redirect all TCP traffic through an SSH tunnel proxy. I tried and it worked. 

If you see 'mac80211' in depends line, kernel driver is supported for AP mode. Then install 'hostpad' to create Ad-hoc Wifi network. 

You can change listening interface, port, serial number, log level and other parameters in the config file. Then you have to restart minidlna server with that command. 

For monitor/screen information please read this : $URL$ You can find information which screen devices are supported. For example this guy uses 1.8" TFT LCD screen. $URL$ For power supply i suggest USB portable batteries (power bank). I'm using Yoobao YB642 11300 mAh battery with my Rpi. $URL$ 

It's not a problem for root. Because on ext filesystems 'root' user has extra %5 reserved space on filesystem while formatting. If that reserved space filled up you will not create file/dir on filesystem neither. Delete some files on your filesystem to get free space. 

You can use 'su' command instead 'sudo'. Your command should look like below. Assume that your username is 'pi'. 

Chances are high that pulling the plug off your Raspberry Pi (RPi) without shutting it down, will corrupt your file system. Disconnected the SD card from RPi, connect to Linux-PC and ran the following command: 

I found an answer at $URL$ forums. You can read the CPU temp via bash script. Save this script as getTemp.sh in /usr/local/bin folder and give execute permission with chmod +x /usr/local/bin/getTemp.sh command. Then run it, you will get temp values. 

To connect to Ad-hoc you have to install DHCP service to linux machine. You can use dnsmasq as DHCP server. To install dnsmasq 

It's not related to Raspberry Pi. By the way, you need a DNS hosting for this. There are free DNS hosting sites available. My suggestion is freedns.afraid.org. They will give you 4 DNS nameservers and you will have to register those nameservers on your domain registrar. Then create AAA,MX DNS records on freedns.afraid.org for your static IP address. 

There are 2 commands splitted by && marks in your example. && means that second command will run if first command is successful. First command will remove all files in /etc/ssh/ folder which begin with 'ssh_host_'. (* works as wildcard) Second command will re-configure openssh-server program by Debian way. It will create new ssh_host files in /etc/ssh/ folder. Those commands used for creating new fingerprints for ssh server. If your OS pre-installed you may want configure ssh-server because you don't want to trust OS maintainer guys :) Server ssh fingerprints are important for device security. To enable SSH on boot please run 'raspi-config'. In menu you will find 'enable/disable SSH' option. 

How did you do fsck? If you did it while system running (that means /dev/mmcblk0p2 mounted as /) you did it wrong. Linux filesystems should not be check/repair while mounted. If you did check/repair filesystem while mounted maybe apache modules moved to /lost+found folder which is a linux special folder. You can search your file in /lost+found then move to original folder if you can find it. I suggest you backup your SD card, re-image with your system then restore your files. From fsck manual : Note that in general it is not safe to run e2fsck on mounted filesystems. The only exception is if the -n option is specified, and -c, -l, or -L options are not specified. However, even if it is safe to do so, the results printed by e2fsck are not valid if the filesystem is mounted. If e2fsck asks whether or not you should check a filesystem which is mounted, the only correct answer is ''no''. Only experts who really know what they are doing should consider answering this question in any other way. $URL$ 

Then you should create a .htaccess file in your web folder (default /var/www/ for debian systems). Add this line into .htaccess file: 

I am using Logitech Media Server (Squeeze Server) to stream other devices at my home. I installed Logitech Media Server on Raspberry Pi, squeezeplay clients to other devices (iPad, Android phone, laptop which runs ubuntu) i have. If your devices in same network, Squeezeplay automatically looks up the server then connect. You can select which device will play which source (local mp3, radio broadcast, etc.) from media server's web interface. Also you can control media server remotely with ios, android applications. Download and install media server onto RPi. 

Now you can try connect to your wireless AP, than try connect via your mobile web browser. Source link : $URL$ 

Then use a VNC client on your Mac, i prefer 'Chicken of VNC' and connect to Pi IP address. Update: To tune VNC connection for performance you can use those parameters. -noxdamage -ncache 10 -ncache_cr You can find more parameters and definitions of x11vnc at $URL$ Good information about x11vnc : $URL$ 

You can find which options you can pass to append line in QEMU kernel options manual : $URL$ Edit: If you want to pass different root partition you can pass via root=/dev/sdXX. You should display your disk layout with fdisk command if you don't know your image's root partition. Example of a sd card image disk layout: 

And also you have to edit /etc/resolv.conf file to add nameservers for Rpi. Remove all lines in the file and append line below. 

You should buy a GPS module that have serial (UART) interface. Then you can connect the GPS module to Raspberry Pi through GPIO pins. There is a blog about 3DR GPS module at $URL$ 

After install finished you have to configure the minidlna server. Server uses /etc/minidlna.conf file as configuration file. Open /etc/minidlna.conf and change the media_dir value. (Example of my media folders like below.) Comment default value then add your values. (A = audio folder, V = Video folder, P = Picture folder) 

Look at this 'Digital Signage' project. It boots to GUI then opens a HTML5 powered browser. I'm not yet tried but i want to. Maybe you can put your application instead browser to boot full screen. $URL$