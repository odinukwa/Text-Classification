I wanted to know as to how often are the submissions for ECCC cleared? Or do we know when is the next set of uploads going to be made on that site? Unlike arxiv where I know when my paper will go online, on ECCC there seems to be no way to know what is the timeline of my article. Last time I had submitted something on ECCC it took about 3 days for it go online. This time I am wondering as to why its taking longer. (..I had gone by this previous experience of 3 days to plan that I would refer to this online index number as reference for an upcoming talk of mine but now it seems I can't do that because the timeline looks indeterminate..) 

It seems to me that there are a few choices here about how to define this relaxation. (A) Is the relaxation now well defined if $f$ is lifted in anyway to a function $f : \mathbb{R}^n \rightarrow \mathbb{R}$ such that on the Boolean hypercube it matches the original value? Next we have in principle $2$ options about how to define $\mu$, (B1) $\mu$ can be defined as any function from $\mathbb{R}^n \rightarrow \mathbb{R}$ such (a) $ \sum_{x \in \{-1,1\}^n} \mu(x) =1$ and (b) when any function $g$ is taken from the real $SOS_d$ cone we would have $ \sum_{x \in \{-1,1\}^n} \mu(x)g(x) \geq 0$. (B2) Or is it necessary that $\mu$ and $g$ be satisfying the above properties but $\mu$ maps from $ \{-1,1\}^n \rightarrow \mathbb{R}$ and $g$ be a member of the $SOS_d$ cone of polynomials each of which is also a map, $ \{-1,1\}^n \rightarrow \mathbb{R}$? (..the "degree" of a polynomial as in the real $SOS_d$ cone may not match the degree of its representative in the $SOS_d$ cone of functions on the Boolean hypercube and there is no unique way to go the otherway..) 

I would agree with the commenter that this should be referred to as a cardinality constraint or a collection of cardinality constraints. I might also call it a "structural constraint," but I would specifically avoid calling it a "group carnality constraint" as "group" already has a meaning. In general, I would advocate for avoiding referring to a collection as a "group," "set," or "class" unless your object actually satisfies the required axioms. "Collection" is a good, general word that doesn't have a mathematical meaning. If you don't want to use the term "carnality constraint" you can always introduce a term to refer to this specific restriction in your context. This can be helpful because it allows you to highlight the context-sensitive meaning of the constraint in a way that a more general term doesn't. For example, I have a paper with a constraint of this form that I refer to as an "isolation condition" because, when $S$ satisfies it, $S$ is isolated from the structure of the rest of the graph in a relevant way. This gives me a simple and intuitive way to refer to the condition, while simultaneously telling the reader what is important about the condition every time it comes up. 

To be clear that I understand the context, I'm going to first reproduce you situation worded differently. 

This paper opens with an introductory survey on graph grammars and then advances two new applications. It’s dated (1992) but explains the concepts well enough that it seems like the kind of thing you’re interested in. 

The term “tight” has multiple uses, as is mentioned in a comment. However, you seem to be interested in a combinatorial context or on a combinatorial-type problem so I’m going to assume that contexts. Let’s say we are talking about a function, $f(n)$, that bounds $g(n)$. In your case, $g$ is the true number of vertices of the $n^{th}$ graph in your family and $f$ is your bound. 

An extended formulation (EF) of a polytope $P\subseteq \mathbb{R}^d$ is a system of linear constraints $Ex + Fy = g, y\geq 0$ in variables $(x,y)\in \mathbb{R}^{d+r}$ where $E,F$ are real matrices with $d,r$ columns respectively and $g$ is a column vector such that $x\in P$ if and only if there exists $y$ such that the equation above holds. size of the EF is the number of linear constraints. $P_{\mbox{spanning tree}}(G) = conv\{ \chi^{E(T)} \in \mathbb{R}^{E} : T \mbox{ is a spanning tree of }G \}.$ It is known that this polytope has the following formulation. $x(E[U]) \leq |U| -1$ for nonempty $U \subseteq V $, $x(E) = |V|-1 $, $x_e > 0 $ for $ e\in E $ It is also known that the optimal solution of the following LP is 0-1 vector and the EF of spanning tree polytope has the size $O(n^{3}),n $is the size of the vertex set. minmize:$\sum_{e \in E} c_{e}x_{e} $ subject to: $x(E[U]) \leq |U| -1$ for nonempty $U \subseteq V $, $x(E) = |V|-1 $, $x_e > 0 $ for $ e\in E $ Q1 Combining the above facts, does the folowing statement hold ? Statement: There is the foloowing system of $O(n^{3})$ linear constraints $\sum_{e \in E} 1\cdot x_{e}\geq |V|-1$ $Ex + Fy = g, y\geq 0$, and it holds that $x\in \mathbb{R}^{d}$ satisfies the above linear constraints $\iff$ $x\in \{0,1 \}^{d}$ Q2 Is the significance of the notion of EF that the small size linear programming relaxation of 0-1 integer programming which solves some combinatorial problems can compute exact integer solution? Q3 Recently [Fiorini, Massar, Pokutta, Tiwary and De Wolf][1] proved that any extended formulation of any of the three polytopes described above require an exponential number of innequalities. [1]: $URL$ Does this result means that small size LP relaxation of 0-1 integer programming which solves the $NP-complete$ problems can $not$ compute exact integer solution ? 

Notice that $f$ can be tight but still improvable. If you have that $g(n)=n-\epsilon\sin((n-1)/100)$ then $f(n)=n^2$ is a tight bound. It is an upper bound for $g$ and they agree for $n=1$. However, that doesn’t mean it cannot be improved. A better bound might be $f_k(n)=n^{1+k^{-1}}$. This family has the property that $g(n)<f_k(n)<f(n)$ for $n>1$ and $g(1)=f_k(1)+f(1)$. I am generally not a fan of the term “optimal bound” because it’s usually inaccurate. The optimal bound for a sequence of integers is simply that sequence of integers, so if you have an “optimal bound” you almost always have an expression for the underlying process. There are contexts in which the previous paragraphs is wrong, however, and you seem to think that you’ve proven that you bound is the best possible. If that’s the case, there aren’t any caveats to that sentence, and what you’ve proven is indeed a bound rather than an expression for the number of vertices in the graph, then “optimal bound” or “best possible bound” is the terminology that I would recommend using. 

My impression reading this question is that no suitable example of a problem that requires more than just PA (let alone ZF) has been given, and the excellent answer by Timothy Chow explains why it's so hard to find examples. However, there are some examples of TCS extending beyond the realm of arithmetic, so I thought I would give a theorem that requires strictly more than $ZF$. Although it doesn’t require the full axiom of choice, it does require a weaker version. The De Bruijin-Erdos Theorem in graph theory states that the chromatic number of a graph, $G$, is the sup of $\chi(H)$ as $H$ ranges over all finite subgraphs of $G$. Notice that the conclusion is trivially satisfied for finite $G$, so this is an interesting statement about infinite graphs. This theorem has many different proofs, but my favorite is to evoke Tychonov's Theorem. As mentioned in the Wikipedia article I linked to, this theorem really and truly requires more than $ZF$, however it doesn't go as far as requiring the "full axiom of choice." There's a horribly unreadable proof of this on the Wikipedia page, but basically the theorem falls in the Solovay Model due to a clever constructions involving measure theory. 

Integer programing is one of the most narutal optimization tools. As an analogy of DNF or CNF in the Boolean function theory, we can consider the following equation. $x_{1}x_{2}x_{3}+$ $x_{3}x_{4}x_{5}+x_{1}x_{7}x_{9}=8,x_{i}\in \{0,1\}$ This constraint is not a linear one. However, every variables in any monomial has at most degree $1$.Call constraints of this kind $multi$-$lienar$ constraints. We consider the following example as a instance of Multi-linear Integer($0$-$1$) programming, which is a system of multi-linear constraints. $5x_{1}x_{2}x_{3}+2x_{3}x_{4}x_{5}+x_{1}x_{7}x_{9}=8$ $11x_{1}x_{3}+3x_{2}x_{4}x_{6}+23x_{3}x_{7}x_{8}+x_{10}=4$ $x_{2}x_{6}+4x_{3}x_{4}x_{5}+5x_{5}x_{7}x_{9}=4$ $x_{i} \in \{0,1\} $ Where all coefficients of each monomial is integer and polynomial order $n^{O(1)}$($n$ is the number of variables) Solving Multi-linear 0-1 programming is deciding whether there exists an $0$-$1$ assingment which satisfies all of given multilinear constraints. Ofcourse $0-1$ programming is a $NP$-complete problem in one of the 21 problems which R.Karp showed their completeness. More over Exponential Time Hypothesis seems to get rid of our hope to construct better sub-exponential time algorithms. My question is : Q Are there any $slightly$ better exponential algorithm for Multi-linear 0-1 programming such as $2^{n-C\log n}$ time, $2^{n-C\log ^{2} n}$ times, or $2^{n-Cn^{0.001}}$ ?($C$ is a constant) ,and are there text-books or papers contains algorithms for integer programming of this type ? 

Extended Formulation of a polytope $P \subseteq \mathbb{R}$ is a system of linear constraints which satisfies the following condition: $x \in P \iff \exists y\in \mathbb{R}^{d} \mbox{ such that } Ax + By \geq d$ A convex set of $n$-points $x_{1},...,x_{n}$ in $\mathbb{R}^{d}$ is defined as $\mbox{conv}(\{x_{1},...,x_{n}\})=\{y\in \mathbb{R}^{n} |y=c_{1}x_{1}+c_{2}x_{2}+\cdots +c_{n}x_{n}, c_{1}+c_{2}+\cdots +c_{n}=1 \}$ Question: Is the following statement true ? Statement: For every $P\subseteq \{0,1\}^{n}$, If we construct a system of linear constraints $ Ax + By \geq d,x\in \mathbb{R}^{n},y\in \mathbb{R}^{d}$ such that $x \in P \iff \exists y\in \mathbb{R}^{d} \mbox{ such that } Ax + By \geq d$ ,then the system of linear constraints $ Ax + By \geq d,x\in \mathbb{R}^{n},y\in \mathbb{R}^{d}$ is a extended formulation of $\mbox{conv} (P)$ ? I am not sure about expressing a set of boolean strings by linear constraints.