see the additional resources below for more details on these settings. Additional information can be found here and here With etckeeper rolling back a change to the configuration is as simple as a git revert. This also makes testing changes easier because you can create a branch to test your changes. If they fail you delete the branch and checkout the master branch, if you decide to keep them you can merge the changes into the master branch. This will not solve all of the problems when rolling back (as some config is installed elsewhere on the filesystem, and won't fix your current issue), but does keep a record of what was done and when (for all the config data kept in your /etc/ directory. 

change the IP (192.168.1.0) to whatever is appropriate for your network. A more detailed tutorial on UFW can be found here 

you can then compare the output of this with the thumbprint presented by your SSH client. Reference and more details can be found here 

Connect your keyboard and TV to the Pi. Insert your SD card. Power on the TV. Power up the Pi and hold down the SHIFT key, until the green LED stops flickering This will force the Pi into recovery mode). If the screen is still blank try pressing the 1, 2 3, 4 keys in succession (one of these will direct the output to the composite video port. You should now have the noobs menu on the screen. If you haven't already done so choose an OS to install, and reboot. You may need to repeat the above to get back to this menu and continue to the next step. Once you have an OS installed you will need to edit the config file (there is a link on the noobs menu) to select your TV type. Look for this line: 

/xc8 is the hexidecimal equivalent of 200. You just need to convert it back to decimal. Assuming your values are integers, you can convert your hex value to an int like this: 

Whbn the foundation announced the enhanced overclocking support they mentioned running quake 3 was a good test of the improved performance. This forum post has the installation details. 

You likely don't have issues with iptables, unless you installed and configured it as it is not running on a default Raspbian install. Also the default install will normally open and listen on the required ports. However, if you intend on running a mail server you should install and configure a firewall first, as your server will be a prime target for spammers etc. Properly securing a mail server involves considerably more than a firewall though. As for port 25 It may be blocked by your ISP. I would suggest you implement SSL for your ingoing and outgoing mail which means that you will no longer be using port 25. The default configuration file should have automatically opened the port and be listening. However, to answer your question you can see if the port is open and what process is listening with the following command: 

The error is pretty clear that sqlite3 should not be downloaded from pypi (this is where pip3 gets packages from by default). To install from the Raspbian repository do this: 

This will allow you to setup noobs another option would be connect the Pi to your LAN via the Ethernet port, and download and flash Raspbian to the SD card. The Pi can then be accessed using SSH. Note: I am assuming that you have just pulled the plug to reboot your Pi. This may have corrupted the card image and may need reflashing noobs, but without a monitor connected we can't tell. 

This forum post mentions getting the sense hat to work with the Pi Zero and older versions of the Raspbian software, but it looks like this has already been updated and should no longer present a problem. So yes the sense hat will work with the PI Zero and Pi 2. It may need some software updates to work with the Pi Zero. 

Note the lowercase i. Python is case sensitive; Pi and PI do not refer to the same thing. Yes reinstalling will erase any work or settings you have modified. Reflashing (reinstalling Raspbian) the SD card is like reformatting your hard drive. 

I2C is pretty standard using SDA and SCL lines (data and clock respectively). You should be able to connect the matching pins from the PI (including power and ground - Do not connect power to the 5 Volt pin of your Pi use the 3.3 Volt pin to avoid damaging your Pi.) to the LCD and use the existing libraries. Grove in this case is the type of connector on your LCD and you can either get a matching grove connector and solder the wires to your Pi or just use some female to male jumper wires. Alternatively, you can get add on boards for the Pi that allow easy connection of grove devices to the Pi's GPIO pins. 

When under powered the B+ Pi2 and Pi3 will flash the red (power) LED. When properly powered the LED is lit steadily. There is a long raspberrypi.org forum thread on the inner workings of this feature. 

on the command line. Man is short for manual, and prints the manual page (help page) for the Linux command that follows it. 

According to the elinux list of verified webcams the Logitech C525 should work without problem. A comparison of several webcams including the Pi cam and the Logitech C525 can be found here. 

There are a couple of problems with the setup and trigger pulse. First you should set the trigger pin to low for a second or so before sending the trigger pulse, add: 

I have seen this before on the Pi, where packages that are compiled by gyp refuse to compile or install. One method of getting around this problem is to install a precompiled binary. To do this start by making sure that your Pi is up to date by entering the following in the terminal: 

The Pi3 may have a quad core processor running at 1 GHz, but it is unlikely to be as fast as a desktop or server machine. There are several reasons for this: limited RAM 1GB, slower clock speed, slower disk access etc. In short expecting similar performance between the $35 Pi and a desktop x86_64 machine is unrealistic. This is an apples to oranges comparison. If your application is complex enough to require a dedicated architect the Pi may not be an appropriate choice from a performance perspective. The Pi can do many things but competing with a desktop on an equal footing is not one of them. if it were, given, its price point, the Pi would be replacing PC's in large numbers. 

You should be setting both GPIO's connected to each motor input, not the single GPIO per motor you are setting. To drive the first motor you set one GPIO high and the other low, to reverse the direction you reverse the pins setting the opposite pins low and high. Assuming GPIO 16 and 26 are one motor you need to set one high and the other low, like this: 

To enable motion to run as a daemon on startup do the following: Edit /etc/default/motion and change to Next enable motion by entering the following at the command line: 

You have mismatched parenthesis (you are missing the closing parenthesis for the int function). Change this line: 

You could use the command line with your small screen, or Use SSH or VNC to forward command prompt or the GUI (respectively) to another machine. 

all the way to the right (towards the SD card). The first 26 pins on the 26 pin and 40 pin Pi's are the same. You may have a problem getting it to fit because of the extra pins. You have a couple of options in that case. 

Based on the name HASSbian, you are likely on a Debian derivative. You can get the name of the distrubution with the following command line command: 

Note: if both boards fully conform to the hat standard (use an eprom to identify and configure the HAT's hardware) they will not work together, even with this board. If you can not connect both boards to a single Pi, using a second Pi is a good option. But a Pi2 is overkill if all you want to do is switch the power on/off via a relay (a Pi Zero W is more than capable of this and much cheaper). 

The folks at Qucik2Wire agree with your observation regarding security and the need to run any code that accesses the Pi's GPIO pins as root. To address this they have developed a project called gpio-admin which allows non root control of the GPIO pins. 

You can't use the camera underwater without significant effort to protect and waterproof the electronics, but you could use this mount (note this only works with the Pi Zero or Pi Model A) to attach the camera to the outside of the tank. A Pi Zero W and the ZeroView mount would result in a nice single wire setup. If you prefer a more aquarium theme there is also this kit. 

Try this from or from there seems to have been a change in version 4. The documentation for version 4.0.4, which is what I just installed via pip can be found here (including a cut and paste example). You can verify which version is installed using the following command: 

I just tried your circuit and code, and it should work, However, looking closely at the photo and counting holes in the breadbaord I think the problem is that the white wire is actually connected to the last pin of the breakout board. That would be pin 7 not pin 8. You can fix the problem in hardware or in software: To correct the problem from hardware simply move the white wire one pin to the right (the next to last pin on the breakout board). To fix it via software change this line: 

Based on your photo of the AC side wiring [ that is where your problem lies. Please forgive my kindergarten art skills but the AC side wiring should look like this: 

Modmypi makes a case which accepts spacer plates that raise the height of the case. You would need to mount the RFID reader to the cover (hot glue and/or some standoffs would work) but it should fit given the right number of spacer plates. One additional add on for this case is a cover for the SD card which is tamperproof. Another option would be to create your own case, out of acrylic, wood, aluminum or as @goldilocks one of the mods is fond of, food storage containers from the dollar store. These obviously would require a little creativity, hardware and tools. They do however allow for a lot of creativity in the design. There are also plenty of plastic and aluminum general purpose project enclosures, such as this one from adafruit, that would allow minimal tools to cut openings for the cables. The only gotchas would be the range of the RFID reader and the extra distance between reader and card introduced by the case - this should be minimal. Material choice could also, present a problem if using a metal enclosure. Though an acrylic or plastic cover would solve this. You don't mention what model Pi you plan to use, but the Pi3 can run a little hot and in a tight enclosure it may become an issue - heat sinks/fan should take care of this should it become a problem. 

There are several options that very in flexibility, cost, difficulty etc. My preferred method is to use a Pi Cobbler and a PermaProto Board from Adafruit. You could prototype with a breadboard and then transfer the components to the protoboard and solder the connections to make it more permanent (note there are more suppliers for these parts besides Adafruit, also I linked to the full size protobaord but it does come in smaller sizes). You could carefully solder wire to the GPIO pins themselves - though I would not recommend this. You could wirewrap the connections (this is the old school method and requires a special tool. You could create a custom PCB, (either make it yourself or have it manufactured by a company like OSH Park) (when having it made this usually requires a minimum number of boards to be purchased and can be daunting for someone who has not done it before. Depending on the environment you could just leave it on a breadboard with jumper wires. 

I am almost certain that is a JST connector, eBay or a local electronics store should have what you need. A cheaper and easier solution would be to use male to male jumper wires to connect it to a breadboard. 

Raspbian is a known entity, and you will have no trouble finding existing tutorials and sample code for ultrasonic sensors and buttons or almost anything else you could want. This will make completing your project much easier. The same cannot be said for android on the Pi. As evidence of this the official download page for the Pi does not even list Android, and the FAQ page specifically says that it will not run on the Pi (though both of these facts may change with the new Pi model 2).