Be sure to try generating lots of different types of failed login attempts. Try from X (gdm or kdm or xdm), try from the console, try from ssh, try from sudo and try from su. Different subsystems can (and will) be configured different ways. It's not uncommon for ssh to be configured to use an internal login command that cuts around the /var/log/btmp business. Try the command as well. You might look in /var/log/secure to see if your failed login attempts are being stored there. But, I'm afraid I don't know the structure of the Debian log directory. Try on anything in the /var/log directory. It's quite likely that ssh is logging something someplace. 

Port 25 is the standard port SMTP traffic runs on. If you intend for you system to be an email server than those might be legit servers trying to send you or your users email. If you do not intend your system to be an email server, figure out how to get port 25 turned off. Historically email servers would be configured to politely send on email for other servers. Today this is bad, bad, bad. It's called being an open email relay. It would be wise for you to verify that you are not doing this. But, don't go to far and try to block port 25 traffic if you do mean to accept email from the outside world. 

This might not be correct in your case. But, typically the answer to this question for a database application is that the database needs vacuumed, optimized or some such as is appropriate for the database in question. From what I can find it looks like mysql has an command. I'd look into that. 

This might already be what your doing but, here is a thought. If the contents of sample are only to be accessed via FTP then you can move that directory outside the web server's document root and use your 0775 with owner=user and group=nobody plan. The php script will be able to write, user will be able to use FTP and the outside world will not be able to get at sample through the web server. 

Update IN WHAT WAY (preferably using Zentyal setup above) can I setup Server B to get the same email that Server A gets (even by forwards, or whatever TRICK): if this is possible, or can be achieved, and in what way. I have researched and can't find clarity on this matter if this is a STANDARD or you have to achieve it by the TRICK. What I want is whether its possible, if not WHY. ULTIMATELY, the feel should be that when Server A is down, Server B is connected to by both users sending email, and for receiving email into the mail store (Which can be explained if it is one or more, however ONE still leaves the problem of a failure with that mail store), and users connect to it for IMAP and POP3 

Create the script to take the relay mails offline from the "LAN" in the perception of the mailstore (M), so that it falls back to its fall back relay Create a script on dns server (D) {or in etc hosts on M, whatever is better, but essential DNS for M}, that alters mail-relay.ourdomain.com to point to the server mail relay A or B that has internet access with a TTL small enough (say 5 seconds) 

Both these options work for the most part, what I need is why they would not work (any danger of using one of them)? 

Server M, A and B reside in a same network LAN, that means even when the internet connections IA and IB drop, the communication between M & A and M & B won't necessarily drop, so I can't use Postfix's smtp_fallback_relay option for this. Now, I need server M to submit only to the server that will have internet connection at the time of relaying to it. How can we do this best? What we tried My colleague and I shared two alternatives (Not exhaustive): 

Is it in a LAN, or publicly (internet) visible. If in a LAN, you can't connect to that machine when you are at home because the machine is in a different LAN, unless you get a link to the public domain. Is ssh enabled for the user e.g. root (or the one you connecting with) in the ssh config file of the machine you want to connect to (you did not specify the OS on the 'school computer': if its Linux then follow the guide to "refuse remote ssh for root" on google? Lastly, is ssh disabled outside the LAN. 

Nothing requires that ping be possible between two hosts. It might be that somebody between you and google is dropping ICMP packets. If everything else is working I'd not worry much about this. If you are particularly worried check with whoever runs your networking equipment or firewall and see if they are letting ICMP traffic through. Also check to see if you can ping anybody else in the outside world other than google? 

I'd suggest using the expensive raid controller to do the bulk of the raid work. LSI cards and the software they come with works quite nicely. When properly configured, they will send you email when intereting things happen to the array. Like when disks fail. There is nothing wrong with either of the two linux software raid options, but you've gone out and purchased a somewhat fancy raid card. Let it do the work. Configure the disk array to expose one big device to Linux. If you would like to break up the final device into small volumes use lvm for that. One big physical volume, one big volume group and cut the volume group into whatever number of logical volumes you need. 

About serving static files. Yes, you can use a lighter web server to do this. But, before you go to the effort be sure that it will do you any good. Is apache really using resources you need elsewhere? Maybe just configure apache to not start quite so many child processes. Be sure the added complication will pay for itself, because down the road it will almost assuredly confuse somebody when they try to figure out how everything is working. 

You should try the Django work without any restarting of apache. Most sever side environments work fine while doing development work without any need for stopping and starting the web server over and over again. But, yes you can run any number of apace instances as long as you make sure your second server's config file is pointing at different resources. Like: 

My question aims to clarify whether I can get a setup running, where Server A on 1 site receives email as is received at the same time by Server B on site two. The requirement is to have Server B be failed to in case Server A is inaccessible, or down; but at any given moment, users will be using one of the two. The setup I know is that one server can temporarily receive email for the other whilst its done, but then forward, using two or three MX records with differing priorities e.g. MX 10 mail.example.com MX 20 mail.example.com but how do you make it that each and every email is sent to both servers, and one server is used as sending server by users? Take note, this is platform open, meaning I would also allow answers suggesting platforms, but so far these are my platforms 

All these can be factors, you just need to ask yourself question 1 above, or understand the ssh configuration made on that PC to see if its not one of the factors I mentionedfor question 2 and 3. Good Luck. 

for me above, this means FIND A USER, WHERE %n is the same as sAMAccountName. (%n in ldap configurations means username before @ sign in email, %u means full email address, %d means domain). This is searched in the LDAP database, which looks something like this, and so you can replace the part with some other UNIQUE attribute, like , which mean the mail attribute in the LDAP database must match the FULL ENTRY entered by the user on login. More can be understood by intensely looking at this: $URL$ record 54 dn: CN=Gift Rise,CN=Users,DC=example,DC=co,DC=za cn: Gift Rise sn: grise ... sAMAccountName: grise sAMAccountType: 805306368 

I work an 8am-5pm job in a server room partition, separated by closed glass from the actual room where the server racks are mounted, from where the continual buzz sound of running servers, approximately 12 -15 of various sizes (mostly mini computers or small business servers, no main frames), is audible all shift long. Recently, my co workers have been complaining about the static charge i discharge onto them when i greet or exchange pleasantries physically with them, mostly as soon as i leave the room for up to something like 5 minutes. It doesn't always happen when i have touched any of the servers, sometimes its just being in the presence of the room i work in that gets me charged up. Where i sit, the temperature ranges from 18 to 30 degrees Celcius, depending on whether i have my air conditioner on. There are two issues that now make me think of their harm: 1. The buzz sound & 2. The static electricity Can this be cancerous? And are there any ways this can harm me if i continually manage servers in such an environment? What best practices can i take to ensure the safety of both the servers and myself?