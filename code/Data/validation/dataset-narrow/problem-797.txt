I doubt that you have enough work for a full-time admin and it's hard to replace that personal touch you get with your very own sysadmin by hiring a company to do it. This is based on what I could gather from your information, but without knowing exactly what you expect to be done in terms of IT, this is it. (p.s. give your sysadmin a hug on Friday. It's System Administrator Appriciation Day!) 

If you have two drives or have different drive names, switch 'sda' out for you destination drive. This will write random characters to your entire drive making recovery almost impossible. Another option is DBAN (as David also mentioned, kudos) or "Darik's Boot and Nuke" is a open source program, that can be used from a USB drive to write random data over your old data (just like the example above). Screenshot follows (from Wikiepedia) alt text $URL$ 

As the question specifically says that they machines need to be on the same network, then IP forwarding or NAT/PAT isn't going to help. What I think you want is to bridge the two interfaces. Maybe this "Ethernet Bridge + netfilter howto" can help. IBM has also a nice guide how to build wireless access points in Linux 

Packets get sent with the senders MTU originally If any node on the way has a lower MTU it will send an ICMP package back saying that the datagram is too big, asking politely to split the packet up. If ICMP is blocked (by a firewall f.e.) the packet size isn't changed and the data might get dropped. 

I put Java in the same category as Python, Perl, Ruby, PHP, Mono or anything that needs a runtime. I have no problems with installing it as long as it doesn't require me to go find some custom classes, plugins or modules that conflict with the packaged version. That said, being a sysadmin with Java apps tends to be a little time consuming as sysadmins would rather have error straight up, instead of reading through 3 pages of 'in stack...' errors to find an error like "empty string". 

So not only do you feel that not enough bandwidth has been wasted by attacking you with denial of service. But you feel the need to send these packets through all the pipes between you and the FBI's network as well? Think of all the people who are using these connections and do the only right thing. Drop the packages! 

If this is a federation server (no, not Startrek), then you can check for the SRV DNS entries as explained here. 

In my opinion IP addresses, email addresses and other personal information a web site owner acquires should remain between the site owner and the person visiting. If any abuse is occurs, this can be revisited. Personally, I avoid posting on web pages that expose my personal identity to the world (and most importantly, bots). However, using geolocation libraries to publish countries or even cities from IP addresses is in my opinion OK. 

After some extensive reading on the 2.6 kernel swapping and page-caching features I found 'fcoretools'. Which consists of two tools; 

This will send a packet with a specific size to the host and prohibit any fragmentation. If MTU is 1500 the entire way, you will get a response. If it is lower somewhere, you will not. Then simply lower the '-s' variable until you find an acceptable value. As a work around in VPN situations, you can lower your MTU to this value and see if it helps. 

Better questions would be "Is there being done any maintenance work on the current Reiserfs? (v3)" "What happened to Reiser4? It was very promising" I was big fan of Reiserfs and I also tried some pre-alpha of Reiser4 that was quite fast as well as extendable. Would love a filesystem that can store meta information, such as ID3 tags. 

It would help if your question was a little bit more specific, but I'll give it a go. Some will point out that this is not sysadmin related, but I disagree. Setting up development environments for programmers and providing support is a part of the job for many of us. 

More specifically, I am not looking for a 'hack' here. I want file system calls to serve the files from RAM without needing to create a ram-drive and copy the files there manually. Or at least a script that does this for me. Possible applications here are: 

It's not a very specific answer, but the question wasn't very specific so I hope it will point you in the right direction. Most of us "Linux dudes" were Windows users at some point and I believe that your logical thinking and math degree will help you out. Just think 'Matlab' if you're ever stuck in the terminal. 

Pick a distribution and install it. You could try a live-cd, but not many development environments can be run from that. Know what you're going to program for, is it strictly a Linux program? Is it a desktop program? Select your toolkit and libraries. Check out Stack Overflow, the programming related sister-site of this web page. Starting on Linux (from my experience) can be difficult. But remember, while Linux may not have the biggest user share, almost every single user, posts his problems on an open forum. This means, you can Google (search) for pretty much any problem you can think of. In my opinion, it is easier to find help online for Linux, than it is for Windows (depending on your distribution, Ubuntu recommended for beginners). Pick an IDE (Development Environment), I for example like Geany (that comes with Gnome/Ubuntu) but numerous alternatives exist. 

Came across this article on how to get Windows Vista to connect to a Cisco PIX using a native client. Since ASA is mostly just a glorified PIX, these options might also work for you. I also have to agree with the previous posts that the 'vpnc' client that you can install on Linux is just great, as it does not force any network routes or blockage like the official Cisco client does. You decide what your computer routes through the tunnel, as it should be. 

An interesting question, although I may not have the perfect solution for you. You see, pppd needs your peer password to be able to send it over the wire and while writing your password in a little masked box usually feels better than knowingly writing it an clear text file on your system, the results are usually the same. With most programs, the passwords are either stored in clear text or backed behind some sort of key-ring. What I recommend is that you use an encrypted file system for your "sensitive" configuration files and restrict access to the file on your system (with chmod) so that you're the only one able to read it.