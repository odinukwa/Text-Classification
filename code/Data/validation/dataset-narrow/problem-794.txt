If you aren't actually getting disconnected from the target, or if you can immediately reconnect, then it's most likely a temporary issue with the network connectivity. See Microsoft KB article 976072: Event ID 1, event ID 5, event ID 70, or event ID 113 may be logged in the System log on a computer that uses the iSCSI Software Initiator to connect to an iSCSI target device. 

Your local MTA thinks that mail for whatever domain you tried to send to should be sent to the local machine, but there is no user with that username on the local machine. Ensure that the server's hostname is not the same as the domain name you are trying to deliver to, and that sendmail is not configured to deliver mail for that domain locally. 

pg_conftool isn't packaged by CentOS or EPEL. You could always check out the source yourself and use the included .spec file to build your own RPM. 

pmount allows users to mount filesystems without root access or an entry. It is available in the EPEL repository. I don't think it's a complete solution for you, but it may get you at least part of the way there. 

By default yum caches metadata for its repositories (the default time is 90 minutes but can be changed). If you erase the cached metadata, then yum will fetch it again on its next run. 

This would be processed by the system init scripts and set the kernel's hostname at boot. This is no longer the case in CentOS 7, nor any systemd-based system. On such systems, the static hostname is stored in , and set with . While it's possible to simply put the hostname in , running will cause it to take effect immediately, without requiring a reboot. (And, it was never the case that the hostname could be set by changing . This file simply overrides name resolution in case DNS is not available or unwanted.) 

Finally, there's the rare possibility that you caught someone attempting to attack your connection, and the attack was thwarted. 

And of course your applications must also have CAP_SYS_NICE (or be run as root, in which case they already will). 

Sorry, 3D acceleration for Linux guests is not available with this version of VMware. It was only just added with the recent release of Workstation 9. I haven't yet been able to confirm that it's available in vSphere Hypervisor 5.1 (formerly known as ESXi) though I suspect it would be. 

You do not need to specify this variable at all, nor should you be attempting to use it in the other playbook. By default the playbook will run for all hosts that it specifies. So don't do this, and just write a normal playbook. 

Or update the whole system, since it's quite possible you haven't done that in much longer than you should: 

You're overthinking your regex. Since you're already checking whether the underlying file exists before the rewrite rule, you should be able to just match anything. 

You have your dependencies backward. The package requires one of those four named packages to be installed, so you should ensure that one of them (e.g. ) is installed first. Since it could be any of the four, no choice is made for you automatically. 

The wiki is out of date. As specified in the actual documentation, the default for is since nginx 1.3.4. If you omit the parameter, then nginx will only bind to IPv6. The OS settings are never used. 

Get rid of APC, and replace it with one of its alternatives eAccelerator or XCache. It's been the cause of years worth of mysterious crashes similar to this in my production environments, all of which went away as soon as APC was gone. 

just manages the physical link layer. It has nothing to do with addresses. To manage your addresses, use . For instance: 

You should avoid such editors, or turn the smart quotes feature off, if the editor has such an option. Then edit the configuration file to remove the smart quotes and replace them with regular quotes. 

This is, in fact, the response that RFC 7230 specifies. From section 5.4 describing the Host header: 

Ensure that remote administration of the RV-042 is actually disabled. Dispute the finding with Trustwave and cite that you have a compensating control, namely, that all connections to those ports are immediately dropped. 

redis doesn't have a way to reload redis.conf without restarting. You will need to restart redis. This time, take careful note of the example and the warning given in redis.conf: 

Check your SMTP server settings in Outlook, and ensure that you have set the correct port of 587 (not 25!) and that you use the correct username and password. 

After a service stops (or fails to start), systemd waits for a short period of time before attempting to restart it. The amount of wait time is configurable by setting in the unit. 

It depends on the value of the sysctl . If this is set to 0, a listener on the IPv6 INADDR6_ANY address () will listen for both IPv6 and IPv4 connections, unless the application itself also set IPV6_V6ONLY on the socket. If this is set to 1, such a listener will listen only for IPv6 connections. 

OK, so you have two problems here. The first problem is that the hostname you referenced in your doesn't exist in the DNS. A different hostname does exist, though... 

You activate a zone by binding a network interface or source IP address range(s) to it. Any firewall rules in the zone then apply to that network interface or IP address range(s). 

This is working as designed. Preferring IPv6 over IPv4 is the default configuration for most computers. To use IPv4 instead of IPv6, the computer must be specifically set up for this (varies by OS). If you want specific hostnames to be inaccessible via IPv6, then you'll have to remove the wildcard CNAME and use records only for the specific hosts you want to be accessible via IPv6. 

If this is successful, then you are affected by the US embargo. If this also fails, then you are being blocked by the hosting provider or their providers. In both cases, I recommend you purchase VPS services outside the country, if the service you wish to run can be provided from a server outside the country. Finally there's a third possibility: Your VPS server's IP address may have been blacklisted due to previous abuse seen from its address. In this case you will have to figure out where it was blacklisted and have it removed from those lists. This could be difficult. 

Since you're creating a new RAID 10, you can begin using the array immediately. The initial resync will continue in the background. You only need to wait for it to complete if building a RAID 5 array (and it's a good idea for a RAID 6, too). See Initial Array Creation in the Linux RAID Wiki for further details. 

You don't necessarily know what the referring page is. And most likely there isn't one at all! Such attacks generally come from automata, not humans. 

So, we see from your output that is choking on the file . Most likely this file has become corrupted somehow. Try restoring this file from a known good backup, and then running your commands again. If that fails, try removing the file, and then running to regenerate it. 

In BIND 9 the "minimum" value in the SOA record expresses how long an NXDOMAIN response may be cached. This is the last value in the following example: 

Your outside server is reverse proxying to your inside server, not port forwarding. You can get the "real" IP addresses in the inside server's logs by configuring the nginx real IP module on the inside server. 

You also need to make the change @Zoredache gave to fix your reverse DNS (but you wouldn't have discovered that problem until later...) 

To perform a live migration and keep the virtual machine's IP address, both hosts must be on the same subnet. 

This will map the partitions in the image to /dev/mapper/loop0p*. You should then be able to mount these partitions and look at their contents. Remember to mount the filesystems read-only () to prevent further damage. 

Instead of doing a dump and reload, I would temporarily set up replication between the two MySQL servers, where the master is the old server and the slave is the new one. You can then just let that take as long as it needs to take to finish, and when done, you can break replication, unconfigure the new instance as a replication slave, and begin using it in place of the original server. This limits your required downtime to only a few moments at the very end of the process, when you are breaking replication and switching which MySQL server your application uses. 

OK, so you have a number of old IPv4-only devices in your network. Ideally you'd like to be able to continue using them on your IPv6 network, though it seems that you think you can't do so since, well, they're IPv4-only. So now you're looking for other solutions. Of course, you could replace the offending devices, but the boss won't give you that kind of money! Enter NAT64. NAT64 is a router protocol which permits IPv4-only hosts to be accessed from IPv6 hosts. The device implementing NAT64 translates the IPv6 addresses to IPv4 addresses and passes them on to the (hopefully very isolated) IPv4-only network, and translates the other way going back. There are several Linux and BSD software implementations of NAT64. Microsoft Forefront Unified Access Gateway, as well as some recent Cisco and Juniper routers also implement it. So, using NAT64, you can isolate and access your IPv4-only devices from IPv6-only hosts. Currently this is the preferred method of dealing with such old hardware. 

P.S. You do need to specify the IPv6 address for localhost, as it is in use on any modern system, and is preferred over IPv4 by default. 

Red Hat's OpenStack documentation has a bit better explanation of evacuation and the difference between these commands than the upstream documentation. 

Before you do that, you may want to look at the information for that suspicious package to see if you can identify where it might have come from. Having such packages on the system may be an indication of compromise.