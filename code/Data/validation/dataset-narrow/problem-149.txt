I've re-installed pfSense, switched from nanobsd to normal install, but behaviour is the same. If I reload the page enough times it will load successfully eventually: 

MTU has me a bit bewildered, but pinging shows that the limit of 1500 is probably honed all the way out iirc (please correct me if I read that wrong): 

I can't say I see anything differentiating the working packages from the ignored ones. Using the same tcpdump (more or less, adjusted for openvpn NAT) I have been able to verify that the ping packets that don't get any replies never reach the remote end. The ones that do do of course arrive as expected. 

I've also done pfSense factory default reset, but it is still behaving weirdly. EDIT: Tonight internet is behaving weirdly again, even with the slimmed down config from yesterday. For example the first two connections work and the third fail: 

Some weeks ago I installed pfSense on one of these boards, it has been working well, but today weird things started to happen. Webpages did not load properly, but only specific elements fail (date selector here for example did not work). I've been unable to pinpoint exactly what fails, just some pages don't work as they should. Connecting my laptop outside of the firewall makes the weird behaviour disappear. Now after nuke-and-paving most of the pfSense config things seem to work reasonably well, but I still see some issues with the firewall itself. When troubleshooting I started looking at the pfSense web UI, and certain pages load real slowly, most consistent is the update page, which loads slow enough for nginx to time-out most of the time: 

If your T1-Link and devices are just bridges, either they must authenticate to the local switch-port or bridge all traffic so that both switches are dot.x client to each other . Having ethernet-frames with odd first-byte 01:, 03: , ... the are all multicast or broadcast. They may get lost due to the fact that "intelligent" Bridges also want to reduce all the broadcast traffic. Also, Traffic with special desination MAC Adresses are "link-local" and should never be bridged further but go to the local switch'S CPU to be processed. There may be an configuration option to forward everything, this depends on your device. You may also use a pair of (for just T1 ancient) Cisco-Devices (1841 with appropiatio T1 module); configure a private ip subnet on the T1 link, and configure a l2tpv3 xconnect between physical port ( and if that does not work, that cisco device may dot1x authentificate to the switch, at least with username/password ) 

statements in router rip on any of your Routers. Those (still classfull) ip-nets must include the adresses on your links over RIP shall be spoken, does not suffit. It is also save to connect s0/1 to an s0/0 Interface of an other Router. Just names. Finally, do not spend too much time with RIP. Better learn OSPF and BGP. 

I am not a native English speaker and I know what MAC addresses are and how are they used in networks. However what I do not understand is where this words came from independently. What does Media mean in terms of networking and what does media access refer to? Maybe for an English speaker it would be more easy to make this connections but for someone that is not is not that easy. 

I am interested in the terminology of the following words: baseband, broadband and bandwidth applied in tellecomunications. What is the meaning of the words, how were they formed and what do they mean in the context of modern networks? 

For someone who does not speak English as a native language some acronyms can be really confusing and I would like to make sure that I understand how were this acronyms formed and what was the initial thinking behind them. I am not exactly sure what the term Carrier refers to in terms of computer networking. Is the copper considered carrier? What does sensing the carrier mean? 

I can barely put into words the problem I'm having, but I'll give it a go. I have a pfsense router on which I've set up openvpn to act as a client to connect into another network. This has worked flawlessly for months, but is now no longer working. I've made what I believe to be unrelated changes to the firewall and taken to few backups to be able to roll back and verify if they might be the source of the problem. I've tried moving the openvpn connection from udp to tcp with the hope of that fixing if the cause was a flaky connection. No diff. Utilizing the tunnel on the firewall itself seem to work flawlessly. Setting up the same tunnel on my laptop seem to work flawlessly. But when the tunnel is up and (different) units on my lan try to traverse it it does not work properly. The weirdest but most reliable example I have of the problem is pinging a remote unit. It works every second time. If ping works all packages in the same ping-run get proper replies. If I and try again every package fails instead. This can be repeated indefinitely. 

I want to know what is the EtherType field of a BPDU frame in various versions and variants of the Spanning Tree Protocol. 

I know that there are devices that now support agentless SNMP configuration. However I believe that the SNMP agent application has to run somewhere. It has to be some code running somewhere stored on some flash memory or a similar device. 

I am interested to know if the CSMA/CD protocol is still active in modern Networks and if it is active why and what is his role now? 

What are the algorithms that are used by Fabric Connect protocol/protocols to choose the best path to forward a packet? I know that Fabric Connect is used to replace the Spanning Tree Protocol that chose the paths that are to be disabled in specific VLANs to prevent network loops. 

I never worked with bridges because they were no longer used when I first got internet at home, and I have some troubles understanding what exactly was the role of the switches. From my search I concluded that a bridge can be viewed as a simple switch with two ports and it does MAC switching between two SETS of MAC addresses instead of two MAC addresses. Is this way to view a bridge correct? 

. And (my opinion) the switch should not wait for DNS resolution, so i almost allways configure "" (some IOS versions dont like the "-" ) Ok, so you must know the IP-adresses, but logging etc. of events on the device does not depend on external service "DNS" . BTW, hat NAT been enabled on your PFSense box ? 

shows you the device components, part-no. and erial-no. so you may also see controllerÂ´s, Crypto-Modules, SFP's, Power-supplies, etc. shows all interfaces (which may have a protocal attached, for example, IPv4) . This includes interfaces without hardware, like loopback, tunnel, Ethernet.subinterfaces ( gig 0/1.234 ) , and dynamically created (virtual-access, ...) or the stamp of them (virtual-template). Use "show inventory" "show license" "show hardware" "show diag" "show platform" to collect the physical infrastructure. Get "show running" for the Configuration and the allways-be-there interfaces, including non-physical or interface-templates. Dont forget to save the IOS Version and Variety which is running. 

It's just protocol overhead. YOur file is cut into smaler bites, gets tcp header, gets ip header, gets ethernet header ... 

I do not understand what was the purpose behind those two cable standards. Cross-over cable and Straight-through cable What was the initial purpose that they were build for and what was the necessity for them? 

What was the protocol usually used on top of X.25 and ATM or even Frame Relay Networks when those were commonly used? Was it also TCP/IP protocol stack or some other protocol stack? From what I know since the beginning of the Internet (ARPANET, NSFNET) TCP/IP protocol stack was widely used at least on the access layer of the networks (host machines). However I know that X.25 and ATM networks were also widely used but I am not sure at what level did those networks work. Were they also carrying TCP/IP traffic? 

I know that most wireless communication devices have a MAC address. I wonder if the pool from which their MAC addresses are assigned is the same address pool from which physical Ethernet devices also take their MAC addresses from. In my opinion it should not be the same pool because it would be no problem if a Bluetooth Device and a Network Interface Card in a Personal Computer have the same MAC address? It is not possible, in my opinion, to have a collision. Even if a Bluetooth device would somehow be connected to an Ethernet LAN it would be through some sort of network adapter and the network adapter should have a MAC address of its own and that MAC address will be the one that will be used to communicate in the respective LAN. Is this right?