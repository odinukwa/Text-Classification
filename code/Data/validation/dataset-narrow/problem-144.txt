OK, this one may technically be off-topic since I'm actually doing this at home, but I could easily see the exact same scenario arises in a small enterprise type of setup... Using an SRX210 to be a router for a Time Warner Cable connection (using a DOCSIS mini-pim on the SRX, but I don't think that's actually relevant to this). Running 12.1X46-D10.2. Trying to get IPv6 working on the cable setup (confirmed that TWC is providing IPv6 via DHCPv6 in our area). Here's what I've got in relevant config sections (if you want to see any other parts of the config, feel free to ask, but I think I've gotten everything relevant): 

As one of the answers and comments alluded to, apparently you can't send a IA-PD prefix hint with the SRX, and TWC gives a /64 when it doesn't get a hint. The SRX then tries to subdivide the /64 65,536 ways and picks the first resultant network to delegate...which means it was trying to put a /80 on ge-0/0/0, which kinda doesn't help much as SLAAC doesn't work. :/ I went with the work around, to see what /64 I get, then manually configured protocol router-advertisement on the inside interface with the block I was delegated (which should be stable as long as they system's DUID remains the same). Kinda lame, but it's where we are right now. I will continue to keep an eye on this entry to see if anyone has other ideas on making this a better setup. If you have questions on parts of it that I didn't go into enough detail on, please let me know and I'll edit. 

Mike Pennington already said that the answer was generally "no", and that's a good answer as far as it goes. The answer really comes down to definitional questions. The term "switch" is really pretty poorly defined and used in a lot of contexts, so its almost impossible to give an absolute answer. "Layer 3 switching" was originally a (very marketingish) term for a router that forwards packets based on inspection of layer 3 header information using "hardware" such as an ASIC to do the forwarding, rather than using software running on a general purpose CPU. Nowadays, most routers of any significant scale use ASICs (or FPGAs) in the data plane to forward packets. Hardware based routers turn out to be able to do switching at Layer 2 or routing at Layer 3 with essentially no performance differences, so the definition between "switch" and "router" has really become very blurry with modern gear. Whether traffic if forwarded based on layer 2 header information or layer 3 information has become a matter of configuration on modern high end gear rather than hardware. To pick one example, with the right set of blades, you could take every blade out of a Cisco 6500 "Switch" (as they label it on their website) and slide them into a 7600 "Router" (again, as they label it on their website), and the behavior essentially doesn't change at all. That having been said, you can still get gear that only does layer 2 switching and isn't capable of doing layer 3 switching based on the capabilities of the ASICs included in the equipment. You'll also could find examples where a device is released with a certain set of capabilities (say layer 2 switching only), but the hardware is capable of more and the software to control it just hasn't been written, yet. Later releases of the firmware/software for the device can then enable those capabilities that had been physically available, just not turned on by software. So...the answer can really only be, "it depends." Sorry, I know that's typically an unsatisfying answer, but its the best that can really be done without narrowing down the scope a bit. 

The computers (computer C and the DHCP server) will send traffic destined for the 192.168.x.0/24 blocks to the ASA, and apparently the ASA is not hair-pinning that traffic or sending ICMP redirects, which would not be terribly surprising for a firewall (or the computers aren't paying attention to the ICMP redirects). A few options... 1) Put static routes on the DHCP server and computer C (and any other computers on that network) similar to the ones you put in the ASA. 2) Re-IP computer C and the DHCP server into a VLAN4 (or whatever) on the v1910 so that the v1910 is handling all of the internal routing...all of your endpoints can just use default routes, that point toward the v1910, and you would only have to put static routes on the ASA pointing towards the v1910. If you've got enough ports on the v1910 for your needs, you could ditch the unmanaged switch if you do this. (I like Procurves...if you've got enough ports, this or option 2a would be the way to go IMO) 2a) Re-IP the ASA in a similar way to option 2, meaning computer C and the DHCP server can keep their IP addresses. 3) There may be a way to get the ASA to issue ICMP redirects on the 172.16.3.x network so that the computers on that network can learn about the existence of the v1910. Alternatively, maybe there's a way to get the ASA to hair-pin the traffic...I don't know enough about ASA's to be able to answer that. 4) Move the v1910 to another port on the ASA, instead of daisy-chaining it off the unmanaged switch and route the traffic through the ASA as well. That would mean configuring whatever policy would be needed to get the traffic through the ASA appropriately. 

You can certainly run OSPF on GRE interfaces and routers will exchange routes quite happily via the GRE tunnel. A GRE interface should be just like any other interface to OSPF, so normal rules would apply for area assignments just the same as they would apply to other interface types. 

BGP always only advertises the best path onward to its peers. This is true for eBGP, iBGP, route reflection (which is merely a special case of iBGP), and any other way you might use BGP. But, yes, you are correct, if you are sending advertisements to providers A and B, and I have connections and BGP sessions also with providers A and B, then I should see both paths in my BGP tables. I may not see multiple routes created in my routing tables...that's a question of the configuration of my devices and whether I allow multiple routes of equal AS Path lengths to be inserted into the routing table...typically BGP will only install a single route. The BGP tables, though, should show advertisements from both providers. Actually...even if I'm peering with providers B and C, or even C and D, I should still see multiple paths in my BGP tables as long as you are reachable through B, C, and D. All other things being equal, my devices should pick B because that should be the shortest AS PATH, but I would still see the paths with the longer AS PATHs from C and D. Now, perhaps C and D have both decided that the path through A is better than the path through B, then the paths that I would see would have AS PATHs of "A C" and "A D", so it would appear as if you weren't connected to B at all, but if the path through A went away, then the path through B would get propagated onward through C and D. If you can give some specifics...maybe even your blocks that you're advertising if you're willing to share that....others can take a look at what we're seeing and perhaps give some more specific guidance. 

Yes, a network bridge was originally what we would think of today as a 2-port ethernet switch. They were used to provide separate collision domains without otherwise changing the routing on the network. I always thought the use case was a bit limited, but ethernet switching was the newfangled fanciness as I was coming of age in networking, so the network bridge was already looking a bit long in the tooth as a concept. The term "switch" is really the term that is nebulous. Early ethernet switches were frequently referred to as multi-port bridges to help define what it was that they were. Later, when the development of routing traffic in hardware some marketing geniuses (tongue-firmly-in-cheek using "genius" there) decided to create the term Layer 3 switching to differentiate hardware based routing from the traditional software based routing processes. This served to further muddle the definition of the term switch, and now we have marketing geniuses (Ibid) referring to "Layer 7 switches" and other such inanities. As YLearn's answer alludes to, bridges could also bridge between dissimilar media types with greater or lesser amounts of lossage depending on how compatible the media types were...ethernet <-> FDDI was easy, ethernet <-> Token Ring was a bit more challenging to get right. 

I don't guess there's any real reason it can't work just fine. You, of course, have the normal loss of information anytime you redistribute from one protocol into another, but there's an argument to be made that you get that when you use network statements as well, so that's kind of a wash. The main benefit that I see in this is that redistribution would give the setup the ability to react more dynamically to what happens in their network than the more static network statements. The downside would be that that dynamicism (is that a word?) would be harder to keep in control and might end up doing things that you don't want it to do. Of course you can put filters and route-maps and the like to constrain the redistribution...but then that's kinda like putting the network statements in. Not that I would advocate being deceptive in what you're delivering to a customer, but if its fully managed CEs...would they even know the difference? Assuming you're only talking about a handful of /24's like your diagram would suggest, I just don't think it makes all that much difference one way or the other. If you set up the redistribution to only allow the /24s, or set up network statements to advertise /24s...ultimately it ends up pretty much the say, right? What may be the even bigger question that I would have (tongue-in-cheek), is...who uses RIPv2 in this day and age?! 

"show dhcpv6 client statistics" shows DHCPV6_SOLICIT messages being sent, but absolutely nothing else. I know dhcpv6 client support in the SRXen is very new, but does anyone else have any experience troubleshooting this? One hypothesis that I'm trying to check is that it apparently is sending the DHCP request with an IAID (whether for the IA-NA or IA-PD) of 0x00000000. Perhaps TWCs DHCPv6 server doesn't like that value? Anyone have any ideas? 

Color me unsure on this answer... router-ids only really need to be unique within the OSPF space, as you mentioned. Within BGP, my understanding is that they are only used to detect a new peering session being created when one already exists...to which I guess the solution is to tear down the old one. If the peering sessions come in on different transport addresses, then even if the router-ids presented are the same, they will be seen as different sessions because they're coming from different transport addresses (IPv6 addresses in your scenario). So...I guess the answer would be to pick your router-ids for OSPF (v3 presumably) and its probably not the end of the world if your router-id ends up duplicating the router-id that another (third party) peer uses with an external AS peer 

This isn't necessarily a misconfiguration, but likely is. LLDP carries primary vlan id in one of its attributes to help switches identify mismatches like this. We have a number of cases were VLAN ids are only locally significant in our equipment and on completely untagged ports, with lldp enabled, the procurves will log these messages periodically because the ports have different VLAN ids on the two switches. It doesn't matter, though because the vlan id numbers are only locally significant on each switch. I wish I could turn off this message in these situations, but alas, I'm stuck with the noise. In the typical case, where VLAN ids are more than just locally significant, this likely does represent a misconfiguration where traffic could jump from one VLAN to another if the primary VLAN on a port is sent untagged (while other VLANs are tagged).