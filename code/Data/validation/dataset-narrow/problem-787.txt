My Googlefu was failing me today. In the pane of IIS Manager, I needed to uncheck "Reverse rewrite host in response headers". 

In the above case is . I have also attempted using from the set misc module for the second regex. How can I get NGINX to remove the path components in the same format as the client provided them? 

We are using nginx, right now 1.6 to reverse proxy our services to the client. We are also using Server-Sent Events, a layer on top of HTTP that keeps the socket open. Here is a piece of required config. 

Does Active Directory Lightweight Directory Services support account lockout like how the full Active Directory domain services does? 

I've cranked up Failed Request Tracing and thats how I saw steps 5 and 6. What could be causing IIS to rewrite the header before ARR? Are there any other IIS tools I can use to figure this out? 

The client requests $URL$ with a URL such as $URL$ in the request. ARR then forwards the request to $URL$ The server responds with the header set to $URL$ and HTTP 302. I've verified this with Wireshark. IIS somewhere in the pipeline is changing the header to $URL$ This is where the problems begin. ARR sees the originb URL in a PATTERN_MATCH step for the header. ARR reports the originb URL as the header in the GENERAL_RESPONSE_HEADERS step. The client blindly accepts the URL and redirects to the non-existent $URL$ instead of $URL$ 

I'm not sure if this is the ideal solution, but for lack of any better idea, I wrote a short script to monitor this and call cpulimit for me. I've included it below incase it's of use to anyone else. 

$URL$ <- screenshot of bios Am I mis-interpreting the lspcu output? Or is there something else I need to do to enable this? Thanks 

My understanding is that I should be seeing two threads per core instead of just the single thread. I've had a good hunt around and the only suggestions I could find where to make sure I had an smp kernel running (I think this is the default behaviour now, but based on the name above, my kernel has it), or to try and pass to the kernel via grub at boot. (Didn't help, but acpi was already enabled so I wasn't really expecting this to do much) This page here: $URL$ indicates that you should be able to turn it on/off by echoing 0 or 1 into 

This works well for most normal cases for URIs such as . However when I introduce special URL encoded values, things go south. When the URI is , is decoded and is passed to as . This isn't a valid URL. I've tried to work around the limitations of NGINX by using a conditional to match against and , but the results are either double encoded or unencoded. 

Is there a simple script I can use to give a destination folder and the AD group I want to use and it would generate a set of folders with the members of that AD group and delegate the proper permissions to those folders? I have gotten as far as and it returns a list of FQN's. Here is an example of what I am looking for... 

I'd second the option to do RAID 0 (stripe) with a hardware RAID controller. I quoted a video encoding server and the scratch drives are 15k SAS in RAID 0 and it chews through video like nothing else. 

I run a ruby on rails site that processes email - the email is dumped directly into the web app via a POST from postfix. At times I can get a burst of email coming in causing a prolonged surge in CPU usage making my VPS provider understandable unhappy with me. These emails don't need to be processed in a timely manner - they just need to be (eventually) processed. Obviously I can't just nice the process as that only looks at the cpu usage on my VPS and can't take into account the cpu usage on the other VPS's. I have found a utility called cpulimit that will you put hard limits on cpu usage for a particular process. (eg 20%). This seems ideal for this purpose, but I can't work out to integrate with apache/passenger. Passenger starts up a ruby process for each server and restarts them periodically. Each time the pid will change. Cpulimit needs to be given a pid number for it to act on. Anyone got any ideas how I could get passenger to fire off a call this command when it's starting up this particular virtual host? 

What is the best way to resize partitions on a server with a Dynamic Disk? I have 4 volumes in what appears to be 2 partitions. I have ghosted each of these volumes to separate image files. I will need to have the drive letters remain the same when the server OS boots back up. I know I need to use but I do not know how to make this work. Thanks. 

When I close my browser without doing a proper disconnect, Socket 1 is closed while Socket 2 is still open. The Service is seeing that nginx is still connected and still is continuing to push messages on there. Here is the scenario I'm seeing with wireshark. 

I guess something was wrong with and the regex variable or something else. Using the single argument form of works. 

There is an option for expiring passwords in the user "profile" options in Local Users of MMC. Let me find a screen shot. $URL$ 

I just registered a new domain last week. I associated it with my Google Apps account. Apparently, some spam bot is using it with fake account names to send spam and I'm receiving a ton of bounces. What can I do to help against that? I do have an SPF DNS record 

As far as I can tell, this is enabled in the BIOS (or at least Multiprocessor Specification is set to 1.4) 

I have a Centos 7.3 server running a dual socket quad core Intel Xeon CPU E5620 @ 2.40GHz. I would like to use hyperthreading on this server but it seems it has been disabled. The spec sheet for this chip indicates it should support hyperthreading: 

I have a site with a relatively low amount of traffic that's normally served happily by 3 or 4 passenger instances. However, sometimes it is getting hammered by a large number of automated requests that can take up to 15-20 seconds to completed. This results in the global queue backing up and the server becoming unresponsive to ordinary users: 

I've push up the max number of instances to 18 (about as many as can concurrently run on the VPS) which has helped a little, but not much. I've optimized the request as much as I can (down from 30 seconds or so to 15-20 seconds). As the requests that are causing it to back up are automated, there is no need to serve them in a particularly timely manner. Is there any way that I can set aside a number of passenger instances that just serve this particular request?? (based on url path maybe).