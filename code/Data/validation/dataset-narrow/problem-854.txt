Go into IIS manager, and choose the folder you want to add the restriction to Double click "IP Address and Domain Restrictions" Click the "Add Allow Entry" action, and add the entry for 127.0.0.1 Click "Edit Feature Settings" and change the "Access for Unspecified clients" to be denied 

Here is the link to Microsoft's official "whats new in Windows 2008 R2" document: $URL$ I think the biggest change affecting SharePoint would be the upgrade to IIS 7.5, but so far I haven't really seen much of a difference. 

My guess is that you are logging in one of the "Text File" formats. These cannot be used if you want dynamic activity (new processes, etc.) to be captured. Instead, use the "Binary File" format to capture your data. This will allow perfmon to capture any dynamic activity for the counters that you assign. Once you collection is completed, if you wish to open the log in Excel/etc., you can use the program (included with Windows...) to convert the binary file into a text file. The syntax is: 

Here are 2 documents that should be helpful. The first is a general IIS "Suggested Performance Counters to Watch" list that includes baseline ideal values. The second adds some suggested counters for monitoring ASP.Net performance. $URL$ $URL$ 

it should scan ports 1-65535. Here is the nmap documentation that tells what ports are scanned by default: $URL$ 

I don't think it is supported in the way you are talking about. (With a full SharePoint and SQL Server at each office that are all mirrors of each other.) 2010 does have some increased functionality for branch office scenarios over 2007 though. Check out this blog post: $URL$ Which goes into some details - I think especially check out the BranchCache scenario. 

This was taken from here, and I modified it to add the path: $URL$ Here is updated code that adds a comma separated list of host headers and secure host headers to the file output (so it is now: Site ID|Comment|State|Path|LogDir|HostHeaders|SecHostHeaders 

The site collection quotas actually setup a quota for each site in the collection. So if for example you want to limit a site to 100mb and warn at 90mb, that happens on each site in the collection, not for the entire site collection. If what you are looking for though is, within a site collection, to say that Site A's quota is 50mb, Site B's is 100mb, and Site C's is 200mb - then you do indeed need a third-party utility. The only one I know of is not free (and I haven't ever used it), but here is the link: $URL$ 

I know you specifically asked about IIS data - but have you looked at the SharePoint Usage Analysis reports? 

This is a very broad question that I don't think can be answered easily here. Check out the 2010 upgrade/migration site to get your high level questions answered and upgrade approach started, then come back here with specific questions. $URL$ 

You could be running into a local loopback problem. The problem occurs when the website uses Integrated authentication, and has a name that is mapped back to the local loopback address. The fix is to go to the following registry key: 

The difference is that setting it at the "local computer" level sets it for all sites, and it cannot be removed, except for at the global level. Setting it at the "web sites" level will copy the setting into each website (and new sites as they are created) allowing you to selectively remove the global setting on a site-by-site basis if you wish. 

Close all instances of Reporting Services Configuration Manager or SQL Server Management Studio. Open a command prompt. Add the class instance of the Reporting Services WMI provider to the WMI repository. In the command prompt, run the following command: 

Not necessarily - as long as at least 1 other node in the cluster has a weight greater than 0, that node can take on all traffic for the cluster. If all your nodes have a weight of 0, then traffic for your cluster will indeed stop. A weight of 0 essentially stops that node from taking on any traffic, even in the event of other nodes failing. The reason this is possible is because the weight does not equal the actual percentage of traffic that node will take. You can set all your nodes to be a weight of 100 if you wish. The actual calculation that determines how much weight a node will take is: 

The only really weird part here is how you get the path passed in. Typically, the script in invoke-command cannot read your local variables. You setup a param for it (called ) and then put the local variable into the argument list - this allows the mkdir command on the remote servers to use the variable and it sees what was passed in from the CSV file. 

The command will give you a list of data for all backup sets in the file. From there you could select the max and pass that into the param. $URL$ 

Add a new DWORD value named DisableLoopbackCheck and give it a value of 1. After setting the value reboot your server. For further details, check out this KB article: $URL$ 

Assuming you can't find any interns or colleagues to help, the name of what you are looking for is a server lift. Googling for rack mount server lift should point you in the right direction. 

Are you using a login mechanism, or just anonymous auth? If anonymous, go into IIS manager, in the Authentication icon, choose the Anonymous Auth name, then click the Edit button in Actions. Check which user is specified there and make sure it has permissions to the site files/folders. If you have some form of login system, make sure that the user(s) you are logging in as have permissions to the files for the site, and make sure that the ID of the application pool you are running under has at least read access to the files. 

Building on squillman's answer - when connecting over TCP/IP, the named instances use different ports, and are most likely using "dynamic ports" (which is the default for SQLEXPRESS). Take a look at the SQL Server 2005 Network Configuration utility to figure out which port it is listening on and connect to that instead of 1433. 

You are correct - WSS does not need to be installed separately, the MOSS installation will do it for you. 

I think the Microsoft supported solution would be to backup your databases, reinstall SQL Server and then restore your databases to the new installation. If you want to try something that is not supported by MS, and may be downright dangerous, you could try to update the master database through a SQL Query. I don't know that I recommend this, but it might work for you and save some reinstallation headaches. Also, I've never done this before, so can't guarantee it will even work. The steps are: 

This is a client side (Internet Explorer/Windows) problem more than a SharePoint problem. On the client, if you do the following: 

This should get you started - you'll need to wrap the site creation part in a loop over your user list and possibly add some more error checking. I know for sure this works in 2007 but haven't tested it in 2010. All the same stuff exists so it should. One final thing - this is SLOW - creating 1 user on my SP2007 server takes 5-10 seconds. If your mysites farm is beefy enough, you might actually be better off letting the users create their personal sites ad-hoc.