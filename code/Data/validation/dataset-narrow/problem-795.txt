You probably didn't provision a minimal server with Vagrant, so all the packages you needed were already installed. You can locate the package you need with : 

Unfortunately this seems to be undocumented (or I can't find it right now; it looks like Red Hat rearranged their web site yet again). 

The vast majority of things in the RHEL documentation will apply to CentOS without change. The main things that need adjustment are those that have to do with licensing and subscription, such as: 

You're missing a line in your . Start with the standard default .htaccess provided by WordPress, and I think you will find your problems go away. 

Getting an XP box up on my local IPv6 network was... fun. Not. So, in one image, here's the problem: XP's support for IPv6 is minimal at best. I don't believe it's possible to disable stateless autoconfiguration - or even to use anything but. 

You've posted an SELinux denial, wherein is being denied access to read . From looking at the log entry I can see that it has an invalid security context (it should be , not ; did you manually edit this file?). I recommend you fix the security context on (and the rest of the system just to be safe). To fix invalid security contexts, back into the filesystem and then run: 

Generally, you can't share a UNIX domain socket between two different virtual machines. In the particular case of OpenVZ, you can't share a UNIX domain socket between VEs without special kernel patches to break the security. From searching the Internet I see that such patches were written several years ago, but there's no indication of whether they have been kept up to date. If you really want to do this, you should seek help in an OpenVZ support channel. This is not a recommended configuration. 

Until recently (1.4.3) memcached had no support for authentication, so anyone who could connect to memcached could do whatever they wanted. You can set up authentication if you wish, and your version of memcached is recent enough. You also should firewall the port, allowing only specific IP addresses in your network to connect to memcached. This will help regardless of version. 

The dtrace you find on Oracle Linux is not the dtrace which comes with Linux systemtap and that you will find on every other Linux distribution. Rather, it is a port of Solaris dtrace provided by Oracle and only available on Oracle Linux. The two commands are completely different and have different purposes. The standard Linux kernel tracing facility is known as systemtap, and Oracle's dtrace is just a proprietary wrapper over that. You can always use systemtap directly. 

The c-ares-devel package is in the RHEL optional channel. You need to make sure you enable this channel. 

It appears you've made a directory named and put all your key files in it. This is why it's not working. is meant to be a regular file, and you can put all your keys in . 

See the release notes for more, including instructions on upgrading a MySQL database from 5.x to 5.5. 

OK, the previous answers have talked about why it's a bad idea to use fakeraid, why VMware doesn't support it, and to some extent why using a desktop motherboard isn't such a good idea. If you're really set on using this board as the base for a VMware server, this is what you do: 

Stateless address autoconfiguration doesn't provide any way to transmit time zone information, but DHCPv6 does. The DHCPv4 options 100 and 101 correspond to the DHCPv6 options 41 and 42 respectively. All the gory details are in RFC 4833. 

Make sure that you have an up to date package. If you rely on correct time display, then this is a critical package you should keep up to date, as it holds all of the worldwide rules for daylight saving time. Make sure you set the desired timezone in in addition to setting up . Make sure you aren't accidentally using the zone, which does not observe daylight saving time. 

This strongly suggests to me that something has overwritten the start of the virtual disk. One of the tools parted or testdisk ought to be able to fix this, once you get the rest of the system up. 

The second step is required because Fedora uses to bring in user data from the EC2 environment to provision the instance, and needs to be told that the hostname should persist. 

All of the docs you've read are horribly out of date. This is not the expected way to add IP addresses to an interface anymore. Instead, you should use only and specify all of the IP addresses in that file. 

nginx will fetch the file from upstream instead of from cache, and then cache the result. If you are willing and able to use third party nginx modules, you can also use the cache_purge module. It seems rather poorly documented, though. 

Your system doesn't appear to have a valid entitlement. Register the system and assign it an active subscription to gain access to the Red Hat software repositories. P.S. RHEL 6 ships with PHP 5.3. 

A PCI scan failure due to a 500 error? That's a bit strange. Anyway... Set up a default (you should already have one) that serves nothing; any requests made to it should then result in a 404. 

Since you edited your question and changed the requirements a bit, I'm going to recommend you take a look at Open vSwitch instead. 

If you really need Python 2.6 on your old CentOS 5 box, you can use the python26 packages provided by EPEL. 

The problem is, you didn't properly follow the directions. You have a CentOS 6 system, but you are attempting to install Tor packages for Fedora 19. The directions state, in relevant part: 

The package contains , which you can use to dump a DB 1.85 format database. You can send its output to to load it into a current format database. 

You said that: "all the DNS part is done already." In fact, all the DNS part is not done already. We can clearly see: 

You've removed the directive from your configuration, thus anyone in the world can download your entire zone file. Whether this is a problem depends on whether you have a need to keep this information private. 

You are using OpenVZ. In this case you need to open a ticket with the service provider; the community cannot help. 

Puppet does configuration management well, but it is not so great at provisioning. For this you will almost certainly need another tool, such as Foreman. 

OK, here we see that the dependencies are trying to bring in , which depends on , which is the wrong version; I would be expecting , and possibly packages to be pulled in here. This isn't something you can really resolve; the repository you're trying to install from has broken packages. (Unfortunately this poor quality packaging is all too common with Amazon Linux, which is one reason I recommend against using it.) You'll need to contact Amazon, or better yet, use anything but Amazon Linux. 

libvirt is a programming API allowing for developing applications that manage hypervisors. It is completely hypervisor-independent, meaning it can manage Xen, KVM, VMware, Hyper-V, etc., through the same API. So if you want to build a system that is hypervisor-agonstic, or you're running different types of hypervisors, you would want to use libvirt to manage them. This way you use the same code to perform an operation regardless of whether the underlying hypervisor is Xen, Hyper-V, KVM, VMware, or something else. 

I managed to fix this moments after posting the question. It turns out that the entries for the affected MD5 password users had somehow had the field after the hashed password duplicated, causing PAM to be unable to interpret the line. In other words, a bad cut and paste job. I haven't had enough coffee... 

You need to remove the anonymous users, as MySQL's pattern matching will match them first. Run the script or remove them manually. 

This VM is an ex-parrot! Interestingly, the above failed to do anything with instead of . It just printed the same warning about using with . I'm going to say that it appears that if you aren't using that there is some protection from gone amok. You should not rely on this, though. I took a quick look through Ansible's code, and while I found the warning, I did not find anything that would actually suppress running the command. 

Poptop doesn't seem to have any support for IPv6. And its maintainers recommend you don't use it anyway, for security reasons. 

Projects usually include a script that generates the necessary GNU autoconf environment. These files aren't checked into git, so you'll need to run the script to generate them yourself. Unfortunately this particular project includes no such script, so you'll have to do it yourself. These items need to be run to generate and its necessary friends: 

DO NOT run any playbooks you see beyond this point! You'll see why in a moment. Finally, for the coup de gr√¢ce... 

Your Skype rules are blocking traffic originating from the given IP address ranges. So the traffic is coming in on your WAN interface, not your guest bridge br1. That's why doesn't work. To fix this, instead block traffic to those destinations which comes in from the guest bridge. For example: 

(There's also no reason to reconstruct the whole URL yourself when a relative URL will suffice. Nor is there a reason to put this in a special , so don't bother.) 

You need to add the scheme back to the URL yourself. Anything starting with is read from the local filesystem, and if you added that to open_basedir, it would allow reading the entire filesystem, making it just about the same as turning it off. 

nginx is looking at the first defined , but it isn't the one you think it is. If you run you will see the directory listing in the actual order it appears on disk, which is the order in which they will be read. This is quite often not the order you are expecting. Which, of course, is one reason why you can explicitly define a . 

Hostnames can point anywhere. It's unique global IP addresses for each VM that you need. (Make sure you actually have them; they can be very hard to get in some parts of the world.) Each virtual machine will require its own IP address, and if you want to reach them from the Internet, they must be global addresses. The easiest way to do this is to use bridged networking for the VMs. How you set this up depends mostly on outside factors, such as whether you're installing a VM control panel, but this howto will give you the basic steps to set up a bridge on your local machine so you can begin testing and become more familiar with how everything works. 

I'm creating and destroying virtual machines all the time, in order to test various services or applications, and so I'd like to use avahi to connect to them by their names so I don't have to use valuable space in my head for dynamic IP addresses that will likely be gone tomorrow anyway. This doesn't always seem to work. I currently have two CentOS 6.3 virtual machines, both running avahi-daemon, but one of them can't be reached by its name. The problem machine: 

You can use systemd instances for this. For instance, let's say you create all your virtualenvs in the same directory (this will make it easier anyway). Then you can write a unit file like this: 

It's most likely that a user did this manually, or that a script running on the system sent a signal to PID 1 (possibly by mistake, intending some other PID). You may want to look into the two root user sessions that were open at the time of the shutdown. 

For reasons I can't even begin to guess, your server is running an ancient and unsupported version of PHP from a third party repository (art? Never heard of it.) and the system wants to update PHP to the current version provided by Enterprise Linux. Given that PHP 5.2 is past EOL and completely unsupported, you should have gotten rid of it long ago. Your best bet is to update the system to the current release of PHP shipped by EL (or a later version), and then install the additional packages you want. 

(I ripped this second example out of my notes from when I originally converted from Apache to nginx and wanted to have a URL load as Apache would do.) 

You can put two containers in the same network namespace, which means they will share the interface and each container's process can access ports from the other container via localhost. Do this with 

You appear to be using a Samba share to store your web content. If you want SELinux to allow your web server to read files on Samba shares, you need to set the appropriate boolean. For instance: 

I suspect you got a bad disk image from wherever you got it. You can obtain a clean ISO image directly from Microsoft. (Login with the same credentials you signed up for DreamSpark with.) It could also be that something is wrong with your DVD drive. Try verifying the media after you burn your DVD. 

The DNS server you queried cached the old record for an unusually long amount of time. You can see that the cached record has 74271 seconds (about 20 hours 37 minutes) remaining before it expires. After that time, the DNS server will try your server again and get your new record. Interestingly, I noted that the TTL for your new records is 21600 seconds (6 hours). 

Your system is missing the command, which is part of the package. This particular package contains a variety of very commonly used command line tools. You can try reinstalling it with: 

PHP will log a warning if fails. However, you may have logging disabled or going to an unexpected place. Check your and related configuration files to ensure that logging is enabled and to specify where the logs are written. To diagnose this problem without access to logs, try running PHP from the command line. For instance: 

Use the nginx realip module, and then you don't have to worry about the X-Forwarded-For header; you can just act on IP addresses as if the load balancer wasn't there. A sample configuration: 

Place it in a directory (or shared filesystem) under . This is what it's for. The directory is intended for site-specific data served by the system. From the standard: 

Give the host a proper fully qualified domain name. This is one of the many problems that occur when you name a host with the naked domain name. 

BTW, I don't know what you mean by "inherited" a copy of the RHEL documentation. It is all available online for free and under a Creative Commons license.