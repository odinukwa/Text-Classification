Plug the SD card into my machine (in reality my Mac doesn't have an SD slot so I need to use a USB-to-SD adapter, but same principle here) Burn my OS (Raspbian Stretch) to the SD card Post-burn, edit a and a file (as that link explains) that are now on the SD card Take my SD card out of my Mac and plug it into my RPi Power my RPi on Connect my RPi to my Mac via USB ethernet cable (or USB?!?) I should now be able to SSH into my RPi from my Mac terminal 

Rpi 1 Model A here. I would like to use a Raspbian image in my first pi project, and want to configure it to run an executable Java app ( file) at startup. According to this article I might be able to configure this Java app as a startup service, however I wasn't sure if was a possible option for Stretch Lite or not. Is it? If not, what's the recommended startup service/method for Raspbian Stretch/Lite? 

Works "natively" with the RPi and doesn't require resistors or support devices (capacitors, etc.); and Doesn't require too much power, doesn't draw too much current, etc.; and Activates/starts making sounds when I send a signal to it via GPIO output pin 

I'm trying to wire my Raspbery Pi 1 Model A (hereafter RPi) to a simple 6VDC buzzer and here is my best attempt: 

Can Etcher accomplish all this for me? Or do I need to load the Raspbian image into a different tool and customize it (run , manually install my app, etc.) from there? What would that tool pipeline look like? Thanks in advance! 

I have a Raspberry Pi 1 Model A and I believe mine has the "P1" (26-pin) GPIO setup. I'm using a Java library for Raspberry Pi () and just want to confirm that I'm looking at the right pinout in their documentation for my given pi board. I believe anyone who is familiar with my model of pi will be able to tell right away whether I'm looking in the right place or not, regardless of your knowledge of pi4j, Java, etc. 

Connect the RPi to a suitable power source (via Micro USB) Connect the 3.3V pin on the RPi to the power rail on the breadboard Connect the column where the LED (1.2V @ 100mA) will be placed to power through a resistor (47 ohm) Then just connect the column where the LED's 2nd leg is located back to a GPIO pin that is configured to be an output pin 

I'm wondering what type of hardware setup I'd need to make this a reality. Can I SSH into my RPi just via the USB cable? Or do I need to setup wifi on my RPi (is that even an option for the model I have?!) and SSH in wirelessly? I have to assume my model of RPi (even though its old) has some type of networking interface? Otherwise, how would one ever interact with it while its running?! Thanks in advance! 

I have the following on-off-on-off button that I purchased from Adafruit for use with my Raspberry Pi 1 Model A. I'm trying to "bypass" the "on-off-on-off" functionality, and just make it so that its an "on-off" switch/pushbutton. I believe the wiring setup that I'm looking for is: 

Can I wire these components directly to my pi's GPIO pins or should I put any protective elements (resistors, etc.) in between them? Keep in mind that there would be periods of time when all of them would be operating at the same time (the pushbuttons are being pushed, the LED is being lit up and the buzzer is sounding). Or are there other parts with different ratings that I should be using? What types of batteries would work for this project (it's fine if I have to replace the batteries often, they don't have to be heavy duty this is just a toy project). Thanks in advance! 

Just a sanity check (because my opportunity to go out to RadioShack and buy the right type of cable is shrinking quickly), can I just take the white plug (or yellow?) here: 

I inserted an SD card into my laptop (MacBook Pro) I used Etcher to flash Raspbian Stretch Lite to this card On the SD card, post-burn, I then modified the and files exactly the way that gadget tutorial (above) specifies I took the SD card out of my laptop and put it into the SD clot on my RPi I powered my RPi on by taking a USB A-to-MicroB cable, and plugging the "A end" into my laptop, and the "MicroB" end into the Micro USB port on my RPi. I can confirm that I do see the red "" light on the RPI board. I login to my router's UI and confirm that I don't see any wired connections to my router; this is correct as of this point there shouldn't be any. I connect my RPi to my router via Ethernet cable and wait a few mins I refresh my router login screen and I do see my RaspberryPi showing up as a wired connection I open up a terminal on my Mac and try to SSH in, but am getting errors (see below). 

I have a Raspberry Pi 1 Model A and have a simple hobby project I'm tinkering with. I will have two pushbuttons ( and respectively) wired to the GPIO pins, as well as a buzzer and an LED. The idea is to power this on with batteries. When the pi is powered on, Raspbian will start up and a syste service (daemon) that I write will start up. Once this service is running it will power on the LED and keep it turned on until the service shuts down or the pi is powered off (obviously). If both PB1 and PB2 are pushed at the same time, this running service will detect this and will cause the buzzer to sound. If either pushbutton is released the service will detect this and turn the buzzer off. Really simple. (Yes I realize I could accomplish this without the pi but there's more to the story here.) I want to make sure that the hardware I've selected is compatible with my pi (especially the buzzer) and that I'm not gonna fry my pi. The pushbuttons: 

I'd like to find a buzzer that I could wire up exactly like you see above that works with my RPi 1 Model A. I'd like to find that buzzer and order it ASAP! But that CanJam kit doesn't list any specs for the buzzer, and every buzzer I can find online so far is too powerful (requires too much voltage or draws too much current, etc.) for an RPi to handle without all sorts of special wiring + circuitry. I just want to wire it up exactly like above and fire off signals to it from a GPIO output pin! Any ideas on what type of buzzer meets this criteria, and what trust-worthy sites sell it?! Thanks in advance! 

I have an old Raspberry Pi 1 Model A that I am trying to fire up for the first time. I followed the Ethernet Gadget tutorial exactly: 

Can someone confirm/clarify my understanding for me? I want to make sure I don't "fry my pi" by giving it too much voltage and/or current to a specific pin! 

To me this means the RPi is either not starting up correctly, or has a firewall () issue, or that something is wrong with on the pi. Any ideas as to what my next step for troubleshooting is? 

I have the following USB MicroB-to-A cable that I use for charging my phone (Samsung Galaxy S7 Edge): 

I have a Raspberry Pi 1 Model A running an image of Raspbian Stretch Lite. I've noticed that when I power on my pi and allow it to start up, I can't seem to SSH into it from my Mac laptop. First, I have to hook my RPi up to a keyboard and monitor, log into it (with the default user, which is fine for now), and then effectively "bounce" SSH manually: 

I was wondering if anyone in this community has used Etcher to burn OS images to a Raspberry Pi. I have a Rapberry Pi 1 Model A and would like to use Etcher to burn Raspbian Stretch Lite to it with some custom modifications: 

I have a Raspberry Pi 1 Model A and would like to use Etcher to burn a Raspbian image to an SD card, so that I can plug that SD card into my pi and use it to load Raspbian as its OS. I'm not terribly familiar with SD cards: according to their wikipedia page there are SD cards, mini SD, micro SD, SDHC, SDXC, etc... I'm wondering what version my pi needs. To make things a little more complicated, I only have a MacBook Pro laptop, so I'd need to (if this is possible) burn the Raspbian image onto the SD card from my Mac...and it doesn't look like my Mac has any SD slots (I see HDMI, USB and the Mac dongle ports though). Does anybody know if Apple makes any dongles/converters that would allow me to attach my SD card to it? Basically I'm wondering what hardware setup I'll need for my Mac and what type of SD card I'll need to work with my pi model. 

I have a Raspberry Pi 1 Model A here, and a MacBook Pro laptop. I'm trying to follow this Ethernet Gadget tutorial which will allow me to treat my RPi as an ethernet device and SSH into it from my Mac terminal. It's a great tutorial but leaves me a little vague/fuzzy about the whole order of events. Here's my take on the process: 

I have a Raspberry Pi 1 Model A and am trying to control an LED from an app that I will be running on it. The wiring I'm planning on going with is: 

I'm using Raspbian Stretch Lite. Upon flashing it to an SD card and loading the card into my Raspberry Pi 1 Model A, and turning my pi on, I noticed that its waiting for a user to login before the rest of the OS finishes starting. Although I can connect this pi to a keyboard and monitor and log in each and every time I want to turn it on, I'd rather the system just log in as the default user at startup. This is because I'll be using my pi on robotics projects, and would like to just turn the pi on and have it launch some startup services without having to connect it to a keyboard/monitor, login, disconnect the keyboard/monitor, and keep going. So I ask: how do I configure Raspbian to auto-login as the user at startup? 

I have a MacBook Pro and a Raspberry Pi 1 Model A. I'm just trying to power the RPi (I need a power source). I've searched hi and low, and the best/easiest solution seems to be finding a USB A male-to-male data cable and plug it into both my laptop and my RPi. However these cables are extremely rare and none of the stores in my area (RadioShack, Staples, BestBuy, etc.) carry them. I'm trying to find a solution that will work today, so, using standard (easy to find in brick and mortar stores!) cables. I don't really have the time to order something online and wait for it to be shipped to me. So I ask: what is the easiest & quickest way I can provide my RPi with power?! 

I have a Raspberry Pi 1 Model A, as well as a MacBook Pro (running Sierra 10.12.6), and would like to: 

Once I do this, I can then SSH into the RPi (from my Mac) without any problems. I believe this means SSH is not running by default at startup. How can I confirm this is the case, and how can I fix it so that I can have the following dev/test cycle: 

Raspberry Pi 1 Model A here. I am planning on using this pushbutton in a hobby project that is very similar to this CamJam EduKit project. In that CamJam project link, on page 2, I see a simple wiring diagram where it shows how to wire up the pushbutton: 

That other question was asking for what my range of options were for SSHing into my RPi from a Mac. Ethernet Gadget is one of several possible solutions. This question is about the specifics of the Ethernet Gadget solution. This question is not a dupe of the other. It's the same as first asking: what kinds of sandwiches do you sell? And then being told that PBJs are one type of sandwich that I could buy, and then me asking a second question about what kind of jelly is used in the PBJ. Two separate questions. Not dupes. 

Can anyone confirm I have the wiring correct? Or is it the opposite (where the outer two pins go to GPIO instead of GND, and the middle pin goes to GND)? Or is the solution something completely different? Again, the ultimate goal here is to be able to push the button once, and send an input signal to the GPIO pin. Push the button a seconnd time, and the circuit disconnect (we stop sending input signals to the GPIO pin). Push it a 3rd time, and we're right back to the beginning (sending an input signal), etc. 

I'm having enormous difficulty tracking down a piezo/buzzer that I could use for that project, a buzzer that: 

Use a tool like Etcher to burn a Raspbian image to an SD card Then plug the SD card into my pi Connect a monitor and keyboard to my pi Power the pi on Install Raspbian manually Provision the pi manually (run , install my service/executable, etc.) And now I can power the pi on/off like a normally-provisioned *nix machine 

I have a Raspberry Pi 1 Model A and have a simple hobby project I'm tinkering with. I will have two pushbuttons ( and respectively) wired to the GPIO pins, as well as a buzzer and an LED. The idea is to power this on with batteries. When the pi is powered on, Raspbian will start up and a syste service (daemon) that I write will start up. Once this service is running it will power on the LED and keep it turned on until the service shuts down or the pi is powered off (obviously). If both PB1 and PB2 are pushed at the same time, this running service will detect this and will cause the buzzer to sound. If either pushbutton is released the service will detect this and turn the buzzer off. Really simple. (Yes I realize I could accomplish this without the pi but there's more to the story here.) I want to make sure that the hardware I've selected is compatible with my pi (especially the buzzer) and that I'm not gonna fry my pi. The pushbuttons: 

...and plug it into the RCA video port on the monitor? Or do I need some type of fancier video cable setup? 

As you can see I've drawn red arrows between the pinout and my GPIO pins for orientation. So my question: Am I looking at the right pinout, and if so, then based on the arrows that I drew, can someone confirm that my understanding of the pinout on my board is correct? Thanks in advance! 

Can Etcher accomplish all this for me? Or do I need to load the Raspbian image into a different tool and customize it (run , manually install my app, etc.) from there? What would that tool pipeline look like? Thanks in advance!