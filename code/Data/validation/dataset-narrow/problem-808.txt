If I were you, I would look at the SASL logs (if that's what you're using) and see which users are being logged on at the same time. If you don't have SASL logs, you can always look at MySQL/LDAP search logs around that time. Considering he is logging in as null, I would check my database to make sure I don't have malformed entries or something like that. Base64 encoding is the norm for SMTP authentication, so that's normal. There is MD5 digest but that won't help if he has "valid" credentials. A temporary solution would be to block either his IP or the entire IP block. 

I am planning an new network. All the traffic coming out of this network will be fowarded into a VPN in order to exit out onto the Internet on a distant server. This will be done via OpenVPN. There will be only one tunnel. We're looking at a very high speed Internet connection with a downstream speed of 100 Mbit/s and an upstream speed of 5 Mbit/s. What sort of hardware will I need to support such speeds ? Are there any thumb rules for hardware sizing of OpenVPN servers ? Will an atom board be sufficient ? What about an AMD Geode 800Mhz ? Thank you in advance for your help, 

After you have a bridge set up, all you have to do is put the public IPs on your domU's and that's it. 

I don't know where the MIB is stored on a Linux machine but you can add the result of scripts in the default MIB by using the following syntax : 

That is not true at all. It is virtualisable via Binary translation or more commonly referred as Full virtualisation. You emulate every component of a traditionnal computer with a piece of software sitting on top of an OS. 

One more complicated solution is to use a VPN. You will want a low encryption VPN over a UDP transport protocol or else you can expect bad latency. 

Well I don't think there actually is a limited number of clients... Just remember how Wifi works. The speed of the access point is spread across all nodes. If you have 54Mbit/s and 100 clients, each one gets 0.54Mbit/s. It would be fine to have such bandwidth of course but the reality is not so pretty. The speed used for all the nodes on the access point is the speed that the worst node supports. To make this a little clearer, if you have a node that is far away and can only use 1Mbit/s then 1Mbit/s will be the bandwidth spread amongst all the nodes in your network. Now you spread 1Mbit/s over 100 clients and that gets you 1kbit/s, worst then 56k ! 

I have posted one on my wiki but it's in French. You can always use Google Translate to translate it but it works really well. 

The setup Currently, we have an Apache2 webserver acting as load balancer for our web architecture. The backends are Xen virtual machines accessible via IPv6 for the public Internet and via IPv4 for our VPN. The problem is that the Apache 2 loadbalancer doesn't perform as well as we would like it to so we're switching to nginx. The configuration The version of nginx installed is 1.3.10 which was compiled with standard Debian options. We had to go for this version because it was the only one that supports IPv6 backends which is a requirement for these VMs. For the moment, nginx only has one "virtual host" or server block and it is the following. 

Smells like you have a cheaper NAS. It could also be from your network bandwidth... "Standard" consumer NAS are really weak when it comes to heavy IO which is what you are trying to do here. It could also be a cheap switch connecting your PC and your NAS that is not strong enough to handle all the packets correctly. 

I ended up using a "client-config-dir" that allowed me to specify the route behind each client using the "iroute" command. Afterwards, I had the VPN server push a route for all these subnets to all the other clients and it worked fine. 

Now you don't want to do that... If you block port 25 outgoing, you won't be able to send any emails which is usually the goal of a mail server. What you actually should do is put some effort into securing your mail server with some sort of authentification whether based on IP (all of the computers in your local network) or username/password based. 

The only specific configuration I can think of is allowing any IP to connect to your squid proxy. In "Proxy server", you have the "Access control" tab. You can put 0.0.0.0/0 and see if that helps. If it doesn't help, you're going to want to create a specific rule in your firewall to allow access to squid. This should look like allow any to squidIP on tcp squidport on interface WAN. That should do the trick. 

The NAC server is joined to the Samba4 domain and everything works just fine as long as connectivity is maintained. I understand that this proposed solution would only allow authentication of previously authenticated clients but that would already be a great improvement. Is there any way I can get ntlm_auth to authenticate successfully during a period where it is unable to connect to the AD as winbind is able to do ? 

We use a Git repository coupled with Webistrano. Git allows for the developpers to manage their code in a decentralized fashion and with all the advantages of a VCS. Webistrano allows the developpers or appropriate managers to push the code onto a developpement platform then onto the production platform by just clicking into a web interface. It is a tool designed for RoR environments but it will work with a little customization in just about any environment. Another advantage of Webistrano is that it allows for easy rollbacks in case of deployment failures which is a very nice feature. As a sysadmin, I can't live without webistrano any more. It allows me to stop worrying about developpers (or sysadmins !) doing stupid things to production servers during the deploy. It is automated and straight forward. One other big advantage is that developpers don't need a sysadmin to push code in a clean way, they just click along. More info on Webistrano : here. 

You can't do this with PV. You can always do this with HVM and then switch the vanilla kernel with a PV Xen kernel. If you are trying to install Debian, Ubuntu, Fedora, CentOs or Gentoo, you can always use xen-tools which will do all the work for you. I believe you also have virt-install but I don't know which distributions can be installed using that.