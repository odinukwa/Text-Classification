The first IP address in a prefix is usually called the network address. In most setups, the first assignable address is the gateway, though any IP address within a prefix could be configured as gateway. So assuming is in a /24 network, would be the network address and the gateway. 

If I understand your post correctly you're making one fundamental mistake here: more specific routes are always preferred over less specific routes. So the route for 10.10.90.0/24 gateway 10.10.90.1 always is preferred over 10.10.10.1. You didn't mention which type of Cisco and HP equipment and software versions you're using, but on most Cisco's you can view the routing table using the command. 

Indicates that except for 10.10.10.192 these addresses cannot be used. So fix that last statement so the DHCP server actually has some addresses it can assign. 

This won't work the way you describe it. Each connection has its own public IP belonging to your ISPs. You'll need public IP space (typically called PI space - provider indepentent) which you can advertise via BGP to both your ISP's at the same time. The setup you describes doesn't have a shared public address between the two connections and your ISPs won't route eachothers addresses, so what you're describing is a server which is reachable through two networks on two different IP addresses. NAT rules can't solve this for you. 

Make sure there's enough free space to store these logs. In most setups, only the most recent logs are stored locally on devices, and a centralized log system is used for storing logs for longer periods of time. 

You can replace the T1 connections with site-to-site IPSEC VPN connections to the central location. This should not have to affect your current IP scheme. I'm not sure if the 2801's you currently have support IPSEC (may depend on the image you're running) and if they're capable performance wise. Depending on the number of nodes connecting to the central location you may need something heavier on the central location. 

From RFC and tutorials in the internet I understand that the MPLS cloud acts as a switch and switches traffic between end points in a VPLS. And that VPLS ID along with RD is used to reach the VPLs site across mpls cloud. But I 'm trying to understand how the destination ip address is mapped. Any reference? Any one has sample vpls packet captures ? In show vpls table cli commands of vendors like cisco and Juniper the VPLS ID is mapped with a destination ip addresses. How is this mapping formed ? 

How is the originating AREA ID of a type-3 summary lsa is fetched? This is the AREA ID displayed as in "show ip ospf lsdb". The AREA-ID field in OSPF header is the area to which the OSPF packet is destined right?, then how is the originating AREA ID information is retained for type-3 LSAs when flood across areas ? 

Can a single NLRI have more than one AS-Segment in an AS-path? Is AS-segment same as a AS-Number in a AS-path ? 

AFAIK 802.1Q tag is optional in the FRame header. So it may or not be present in the header right? SO how does the Packet processing ASIC or processor identifies or parses to interpret the frame header as vlan tag present or not present ? 

The link-type in router lsa link information would be stub if the interface is passive.(loopbacks are passive by default), which implies that there is no ospf router on that link. If a OSPf link is not passive then OSPF uses link type as transit. Point-to-point and virtual links are explicitly configured and hence the config information can be used to fill in the link-type os router lsa links. Hope this cover all link types. 

Shut down your BGP session with ATT and wait a few minutes for BGP to converge globally, that should do the trick. 

As Ron Maupin already mentioned, anything in those three ranges defined in RFC1918 will be fine, those are assigned for local networks. Personally, I wouldn't pick one of the more obvious ranges like or if you ever plan to offer services like VPN for remote workers. Most of the home routers use those by default for their local networks, so it can be wise to stay clear of ranges to prevent an overlap. I'd pick a range from the network (which seems to be less used in home routers), and not the first , so for example . 

Each of these RIRs is responsible for assignments to ISPs in the region they service. They all have their own rules and procedures for obtaining IP-addresses. 

No, that's incorrect. You're using netmask , so that are two different s. Just because you can summarize them to a doesn't make it a . If you want this to work, you'll need to change the netmask on all devices to , or place a router which is connected to both s and routes packets between them. 

No, it's the other way around. TCP creates a virtual circuit, it is not using one: IP is connectionless. Doing error corection and flow control would be possible in the application using UDP, but what would be the point? If you require those, it would make more sense to use a protocol which already provides it, like TCP. 

You could check the link state on the device to which it's connected. Also, I'd expect at least an ARP entry on the router to which it's connected, and if a switch is used a MAC entry there. In addition to that, if it's connected to a switchport you could create a mirror port and check if the host is sending traffic. On a router you could create an access lists which would count packets coming from the host's source address. 

If I understand what you are asking for then you could do the following: Create 4 different vlans in two different switches trunk them over the one cable that you have available. Architecture would look like: ---4 Ethernet connections - switch(A) with 4 vlans - single Ethernet trunk connection - switch(B) with same 4 vlans - 4 Ethernet connections --- 

Once your local machine has the MAC address of the device your trying to reach it then assembles an ICMP (ping) packet with the destination MAC/IP combination. So your correct that the destination packet is a particular IP but that packet is then wrapped in a MAC frame and sent. Hope that helps. 

Short answer is no. Link speed and duplex negotiation is between a NIC and a port on a network (usually a switch port) not with the network itself. Collisions can only occur once you have established your connection to the network and are attempting to transmit a frame. 

Shortly someone will tell you that questions about home networks are off topic and will give a link to the rules for this forum. However, an Ethernet's link speed is always predicated upon the device it is plugged into at the physical and MAC layers. The IP (network) connection to some other device has no impact on your link speed. So, if your switch is Gigabit and the machines plugged into it have Gigabit interfaces then they should negotiate a Gigabit link speed. As you mentioned your router being FastE will negotiate a FastEthernet connection with the switch. Your wireless devices with always negotiate some link speed within the capabilities of whatever 802.xx protocol you are utilizing. 

Iperf is a great tool for measuring actual TCP or UDP throughput. It is a client server tool so you need access to a machine at both ends of the link to be tested. There is a nice graphical java (jperf) front end that allows you to graph the results. Check out link. 

There are already some useful answers here, but one other reason to insert a default route pointing to the discard interface is to prevent traffic to unreachable destinations (for example traffic for networks which dropped out of the default free zone) from being transported throughout the ISP's network. This can happen if routers within the ISP's network do have a default route pointing to other routers, possibly eachother, which would result into routing loops. 

MEDs will only affect inbound traffic, so that wouldn't help you here. The fact that your ISPs do not support communities doesn't affect your outbound routing either. For outbound routing, you would need some sort of policy routing. You could achieve that by doing source based routing on R1, so traffic coming from S2 would be forced to use another ISP as nexthop. However, you'd lose redundance then. Alternatively, you could put S2 in a seperate routing instance on R1, in which routes from ISPA are not available. That way you'd still have outbound paths to the other ISPs. If this is possible in your setup and how you'd actually implement this is hard to tell without any more details (router brands and types, configurations). UPDATE: That route-map wouldn't work, since your ISPs wouldn't announce your S2 prefix to you, so that access-list will never hit. 

As Ron said, anyone can write a proposal. I have a hard time taking proposals seriously from someone who suggests interconnecting satellites with optical fiber, though. Also, I can't imagine this actual proposal gaining any momentum, especially due to this note: 

There's no guarantee that packets are received in order when using UDP, so yes, you can receive them out of order. Retransmission isn't available in UDP unlike you mentioned, this could be done on application level though. Also, it may very well be possible that routers on the path between two endpoints loadbalance packets over various links, so you can't assume that they use the same path. If you really care about packet ordering, UDP isn't the appropriate protocol. 

Short answer is no. The piece of hardware you are referring to is called a PoE injector. It is designed to sit between your network and a the device needing power to inject power for that one device. Non PoE switches do not have the circuitry to pass this electrical current to all ports. So reversing a PoE injector and attempting what you are surmising would probably result in a dead switch. 

To permit a range of IP addresses you need to apply the proper inverse mask. The concepts are covered in Configuring IP Access Lists. However your range of addresses is dictated by the mask you choose. You cannot pick a range that crosses mask boundaries like you are requesting. So an ACL for a range of 100 addresses could be 0.0.0.127. Example: permit ip 192.168.1.0 0.0.0.127 This permit statement will give you the number of addresses you require but it dictates that the available range is 192.168.1.1 - 192.168.1.127. If you absolutely must use the range of addresses that you laid out you could permit in several smaller masked ranges. For instance - permit ip 192.168.1.128 0.0.0.63 

Until you set a route in your PCs they don't know what to do with the packets. Type "route print" in a command prompt of your windows PC. You will see a route to your local network but no route to anywhere else. Once you set the default route then the machine knows where to send packets. 

It appears to me that the only real questions that you ask is for comments about Fortinet. You probably aren't going to like this but I can see what might have been some motivation for their decision. (Please keep reading I promise I have a point to make.) One of the true shortcomings (my opinion of course) of VRRP has to do with the amount of idle hardware that it employs. That is, if you want redundancy for LAN-A you must install and configure 2 routers - one as a primary router and the other as backup. The backup does very little all day long but monitor the primary router and if the primary never fails the backup might never route a single packet. If you have a need for secondary addresses then you can possibly split the workload (maybe even load balance) across those very two routers. Allow me to attempt to demonstrate: Let's say you have 2 IP subnets (172.22.1.0/24 and 172.22.2.0/24) in use hanging from the same router interface and desrie to employ VRRP for redundancy. You could (add a second router obviously) service the first subnet (172.22.1.0/24) with VRRP instance 1 utilizing router-A as primary and router-B as backup. You could then service the second subnet (172.22.2.0/24) with VRRP instance 2 utilizing router-B as primary and router-A as backup. Thus tasking both routers with full time duties (possibly load balancing) at the same time you are providing redundancy for both subnets. Now you no longer have idle hardware. Having said all of that you are correct that interoperability might be difficult with other manufacturers if/when one of them doesn't employ an entire standard. I desperately hope you find this helpful in some small way. 

Assuming the firewall is a Layer 3 firewall (and not in layer 2 mode like some firewalls are) this won't generate a loop. If it will work, that's a totally different question, that depends on your actual configuration. 

If that doesn't help, please consider adding more information to your question like debugging results and log messages. "Doesn't seem as straight forward" doesn't explain the exact problem you're running into very well. 

Complaints go to the owner of IP addresses, so in this case it will go to the address the person being attacked sees, which is the owner of the NAT gateway. It's up to that owner to handle this further, he's responsible for what his addresses do on the internet. 

Yes, no problem at all, that's what BGP is for. You can do this by announcing the /24 from AS54321 and announcing the remaining /22, /23 and /24 from AS12345, or announce the /24 from AS54321 and the /21 from AS12345. The last option will work since more specific routes are preferred. If you want your prefixes to be globally visible, don't use anything smaller than a /24. Also, you may need to fix proper routing object in routing registries like the RIPE database and announce to your upstreams that you'll be advertising the prefixes, so they can update their filters and will accept the announcement. 

Large networks typically have a configuration management database (CMDB) software which will automatically generate DNS entries based on the networking equipment in that database. Smaller networks will configure DNS by hand. There are no rules on how DNS labels must be named, the scheme mentioned in the presentation is just one which is commonly used, but there are lots of variations on this and also networks which choose a completely different naming scheme. 

Only master generates next sequence number, so in this case will master keep sending empty DD packets with more bit turned off and just increment the sequence numbers until slave turns off the more-bit ? If the understanding in above point-1 is not correct , will the master not hit exchangeDone before slave ? 

I think I got confused by the output on lsdb on ABR. It will display LSDB for both areas , but for a moment I forgot that it is ABR and was wondering how summary lsa for network in neighboring area(area 2) was displayed in area 0 router still displaying it as area 2. Later realized that is it ABR and LSDB being displayed in the show output is combined LSDB of both the areas:- Answer: Area ID of type-3 lsa for a network in one area(say area 1) is not retained when generated for another area(say area 0). output:- topology:- 

Context :- For network monitoring/packet mirrioring techniques like SPAN and RSPAN. Why is it mandatory to have a dedicated vlan for RSPAN ? why can't we mirror the packets received in a port and send it directly to a specific destination, why to forward it as vlan only ? 

In OSPF DBD packets are send as unicast packets even in braodcast network types right ? Question here is, how does the OSPF router know the neighbor's interface address in the LAN ? Only information it has exchanged already is HELLO packets, which has neighbor's Router IDs and the interface address of DR and BDR alone. Also the subnet mask of the LAN. 

OSPF rfc states that during exchange state the slave always generates the ExchangeDone event first. But, consider the scenario where the slave has more LSAs to send than master and master has already sent all its DD packets. Now 2 questions here:-