You need to get a beefier firewall that can handle the traffic. You really don't want your servers unprotected. If you do go down the path of your drawing, you would need to get a larger public address allocation from your provider (good luck with that!) since you don't have a device to NAT your servers. If you need NAT, whatever device you get to NAT may end up with the same problem as your firewall. You should just get a firewall capable of handling your traffic. 

In the first two, the term "port forwarding" really refers to tunneling. Tunneling encapsulates a layer-3 packet inside a new layer-3 packet so that the original can pass as the the encapsulating packet. The original use for the term "port forwarding" came from NAT. NAT can use a port address on the outside IP address of a NAT router to forward traffic to a host on the inside network. This isn't tunneling since it directly translates the destination address to a different address without encapsulating it inside another packet. There is also layer-2 tunneling where layer-2 frames can be encapsulated in other layer-2 frames. Both tunneling and NAT port forwarding happen at layer-3, but NAT port forwarding involves layer-4 because it depends on the transport protocol and the port address for that protocol. Tunneling can involve layer-4, too, but that depends on the tunneling implementation and how it is configured. The OSI layers are theoretical, and real life isn't so neat. Many things blur the lines between layers. 

but that doesn't seem to really be your question. If you are going to configure multiple NTP servers with different authentication keys, it will probably look something like this: NTP Server 1: 

You say want messages. Code 0 seems to be a good target, and it comes from a gateway (router), How do you suppose you can get a router to generate one of those codes? Remember that this is something that a router must be able to know. This is the sort of thing which you should be looking for when figuring out how to generate and capture the messages. The RFCs are good sources to understand the protocol, and once you understand the protocol (apparently the point of this exercise), it becomes easier to figure out how to use it. 

Splitting a 4-pair UTP cable is completely non-standard, especially with PoE. You will never get a split cable to pass the category suite for that cable category (in your case, Category 6). If you want to run gigabit ethernet over the UTP cable, you will need all four pairs to do that. The correct way to do this is to run a minimum of two UTP cables to each faceplate. Your WAP is probably going to be in the ceiling or on a wall, and it should have its own dedicated cable, in its own cable pathway. 

DHCP requests are sent from the hosts to the DHCP server via broadcast, and broadcasts don't normally cross a layer-3 boundary (router). You can either directly connect the DHCP server to each layer-2 domain, or you can use helper addresses. One way to achieve this is to use a trunk link from the switch to the DHCP router (replace interfaces as needed for the link): Switch: 

Because that would leave the option open for using other, non link-local networks that start with as the first word. For example would not be in , so theoretically could be used for something else, and that would be an undesired result. It also leaves the possibility that the current 54 bits could be used for some enhancement of link-local addresses in the future. Basically, they are reserved bits. Often, protocols with reserved bits start using those bits to add functionality, later. For example, IPv6 multicast has scopes and flags, and there were originally two reserved flags, but one of those was used to add functionality to IPv6 multicast. Then, with only one reserved flag bit left, a later RFC expanded the number of flag bits to eight, even though only three flag bits are used. 

is incorrect. The FD is . The cost to the destination is . You would not normally see any duplicate information as you seem to think the command shows. EIGRP Commands: . This value is used in the feasibility condition check. If the reported distance of the router (the metric after the slash) is less than the feasible distance, the feasibility condition is met and that path is a feasible successor. Once the software determines it has a feasible successor, it need not send a query for that destination. 

They are aimed at different network layers. Every layer-2 broadcast must be inspected and processed by every host to see if it should be passed up to layer-3. A layer-3 broadcast received by a host must be inspected and processed to see if it must be passed up to layer-4. I suppose it would be possible to create a layer-2 frame which is a layer-2 unicast frame but contains a layer-3 broadcast address. This would not really be a broadcast since it only goes to a single host based on the layer-2 MAC address. ARP is an example of a layer-2 broadcast which has a layer-3 unicast address. Each host must inspect the layer-2 ARP broadcast to see if it should be passed up to layer-3, but only the host with the layer-3 unicast address will actually pass the layer-2 broadcast up the stack. 

A routing protocol is where the algorithms are used. It really is not in the best interest of the network for a node to determine which path its traffic should take. 

Port fast bypasses the usual STP phases and goes straight into forwarding. This is useful for ports connected to end-devices which use DHCP. It does not stop BPDUs, and there are those who advocate using it on all ports, although Cisco has a different take on it: 

IS-IS can carry routes for different protocols, but it does not tunnel the packets for the protocols themselves. IPv4 and IPv6 are two completely separate protocols. There are solutions for tunneling IPv6 in IPv4, and you would still need to do something like that. It really is no different than using BGP-MP or OSPFv3, both of which can carry routes for both IPv4 and IPv6, but you will need some method to encapsulate IPv6 packets inside IPv4 packets to cross an IPv4-only area. The routers inside the IPv4-only area will have no idea what to do with IPv6 packets entering the area, so they would be dropped. 

This is only something you can decide for yourself. Answers are likely to be opinion-based, so this question may be closed as off-topic for this forum. I will try to give you the facts without the opinion. The main reasons you would get SmartNet are for service, support, and software updates. If there are bugs in your code version that get updated in later releases, or new features are added to new releases, SmarNet allows you to easily download the new code from CCO. You can also call CCO for help with the devices covered by the contract. Cisco will also cover failed devices and replace them for you. The only real reason you wouldn't get it is cost. There are several levels of support, from Next Business Day to 2-hour turnaround, and pricing is based on the support level. 

The address block is not private address space; it is shared address space. This is spelled out in RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address Space (I highlighted the relevant verbiage): 

That is because most protocols used on a network will be in the form of a request/response. Host A is most likely wanting something from Host B when it sends an ARP request to Host B. Unidirectional communication is not unheard of, but it is far more likely going to be bidirectional communication that Host A wants. Host B will probably receive something from Host A if it gets an ARP request from Host A, and Host B will probably need to reply to Host A. If Host B didn't update its ARP table, then if would need to send an ARP request to Host A when it needs to respond to Host A. That causes delays and wastes bandwidth, but Host B can simply update its ARP table with no delays or used bandwidth when Host A makes an ARP request of Host B. 

If you aren't going to use BGP to advertise all your routes for an AS, then why use BGP at all? BGP tables usually are quite large. You have a problem with your default routes because you are setting the next hop to an address which is clearly not the next hop. If you want, for example, the default route (for unknown IPv4 addresses) to go out to AS200, you should put the default route on TTCore4, pointing to AS200, and use the command on TTCore4 in OSPF. The same thing could be done in AS200. This would eliminate using BGP between those ASes in favor of static default routes. Unless you redistribute OSPF into BGP, or you use static routes (specific, aggregate, or default), TTCore4 has no more idea how to reach Berlin than Bizerte does. 

Also, the HWIC modules for the 2811 are pretty limited in the maximum bandwidth on a WIC slot. You may want to look at something like a module for your router. 

Also, with switches, it is a really bad idea to try to load balance the way you have it configured. You want the STP root bridge to match the FHRP primary, otherwise you will get suboptimal traffic flows. If you want, you can have one switch as the STP root FHRP primary for the odd numbered VLANs, and the other switch the same for the even numbered VLANs, or some other such scheme, but all the traffic from a VLAN will go to the STP root, which should be the FHRP primary for that VLAN. 

for your private network. As far as the size of your private network, you can use whatever size fits your needs, and you can use multiple networks if necessary. Using a switch will not work unless it is a layer-3 switch that can do NAT. Most switches cannot NAT, and you will probably need a router to NAT your private addressing to the public Internet. You can use any usable host address in the network for your gateway address; it is simply the network address you assign to the gateway (the host, usually a router, that knows how to forward packets destined to a different network). Your DNS is is handled by your DNS server. Some routers can have a built-in DNS server, you can have a stand-alone DNS server, or you can use one or more of the DNS servers available on the public Internet (recommendations are off-topic here). 

The Netgear DS524 is a hub, not a switch. Collisions are part of life with hubs. Switches separate collision domains per port, while hubs do not. Hubs are layer-1 devices that constitute a single connection for all ports. Switches are layer-2 devices that have separate connections for each port. 

In routing, convergence is the act of the routers updating their routing tables to reflect a topology change, and it is done when all the routing tables have been updated. 

Typically, with a wireless controller, your WAPs will be in a VLAN specifically to manage the WAPs, and it will not be the same as a user data VLAN. The users on the WAPs will get assigned a user data VLAN by the controller, and the WAPs will tunnel the user data via a CAPWAP tunnel to the controller, which will decapsulate the data and place it on the correct data VLAN. A controller could have multiple user data VLANs, each with its own SSID, with which the WAPs work. Each WAP could advertise all or some of the SSIDs, depending on how the controller configures each WAP. The WAPs get their configurations from the controller; they are not configured individually.