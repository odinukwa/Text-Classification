Log outputs should give clue. Update: Since you're saying that it works with NFSv3 not NFSv4, you should do extra things to use NFSv4. Create a directory to share in /export folder. 

I am using a Python script and Dropbox to put pictures which taken by my RPi server to my dropbox account. So when RPi takes picture Dropbox sync it to my computer automatically. Also i am using a Pushbullet service call to inform me about taking a picture. (You need to login pushingbox.com and create a scenario for this.) You need 2 scripts; 1) dropbox_uploader $URL$ First, download then run dropbox_uploader to configure it. It will ask for your dropbox credentials and path for pictures. 2) shot-pushinbox-dropbox.py 

Use Simon Weber's gmusicapi python library to access Google Play Music First install gmusicapi and mplayer 

If your network setup OK for those options, you can set up your SSH Tunnel with putty. (free ssh client) You can find a good information at link below about creating ssh tunnel to your home network. $URL$ Then, setup your Chrome extension, put your Rpi's public IP address and port that you forwarded as SOCKS proxy. You should able to connect through your home network with this setup. 

I am using Moebius[1] on my raspberry pi. It's a Debian derived minimal distro. Because i am using raspberry pi as a headless server i don't need GUI like you. [1] $URL$ 

You can use DAAP protocol to listen music from your Pi while not in your local network. For Pi, you have to install "mt-daapd" daemon to your Pi distro. Then use ssh port forwarding to add security. With ssh forward your port (6689 by default daap) and use any Daap client such as iTunes, MPOD for iPhone etc. I have wrote a blog entry realted to this issue, but sorry it's in Turkish :) $URL$ 

You can try to use Wowza Media Server stream to Web/iOS/set-top-box clients. Your Pi just will encode video from raspicam and send to Wowza Server via RTMP as FLV container. This command will send Pi's camera stream to Wowza with some parameters and it should work without problem. 

Read first I thought I would give a little edit to my initial question just to add what was the big deal in short! What I wrote at first stays untouched below (the line). I was having trouble to discover (by either monitoring or ranging it) my Raspberry Pi set to broadcast just like an iBeacon. I tried to use as many Apps as I could (on an iPhone 4S) and the issue here was that I didn't enable location services!! 

I am now at that point where I activated my dongle (with the hciconfig leadv command) and checked that it is up and running with hciconfig. But when I run an app on my iPhone 4s, to "locate iBeacons", nothing would be shown on my phone. I checked the UUID listened to, it should be correct. Last point I thought about is that if I run a hcitool scan on my RPi, it lists my laptop but not the iPhone, even tho bluetooth is enabled on both devices. I can't tell why, the iPhone should be working just fine since I could pair it to my laptop. If you need more informations (screenshots, exact commands,...), I'll try and provide them. But since I can't think about what might be the issue, I'd rather like to go trough a check list, rather than providing tons of infos not related to my problem. Thank you in advance for your time and help. EDIT : I am adding information about how I am trying to discover my RPi/iBeacon with my iPhone 4S. On the image below, you can see the apps I tried to use and how to configure the ID you are looking for on one : 

On that second picture, you can see how I entered an UUID. Since this particular app (talking about "Locate iBeacons") seems to give the ability to turn a phone into a transmitter, I tried with an iPhone 5 and my iPhone 4S to make one as transmitter and the other one was listening. Same UUID, major, minor and power values : couldn't "detect" the transmitter with any of these apps. I tried to listen to my RPi/iBeacon with these 3 apps, using 2 different UUIDs on each (which means, I did 6 tests, not counting my tries with the iPhone 5 and 4S). I am going to try and sniff some bluetooth trafic in the next days (I know someone having a bluetooth analyzer). But if you think about something else, thank you for sharing! 

After starting service, check your server is running at default port $URL$ You can set up media server from web interface. Then, install client application. You can find packages list at $URL$ Install application, then run squeezeslave, it will find your server. You can find more information about squeezeslave at $URL$ 

The append line adds extra options to the kernel command line in UNIX derivatives. You can add many extra options such as 

Rpi can't get dynamic IP address from your Windows7 laptop, because there are no DHCP server running on Windows 7. You have to set static IP address on Rpi which is in same network with Windows7 laptop. Step by step instructions. 1) Connect your Windows7 laptop to network via wireless ethernet adapter. Note the IP address. (Let's say its 192.168.1.10) 2) Give a static IP address to Windows7 wired ethernet adapter. This IP address should be on different subnet than wireless adapter. (Let's say it should be 10.0.0.10) 3) If you haven't monitor or TV that connected to Rpi, you should connect Rpi to your router temporarily to set static IP address on it. Let's say it should be 10.0.0.20) 

After doing that run /etc/init.d/networking restart command or reboot your Rpi. After setting up unplug Rpi from router than plug it into Windows7 wired ethernet. At this step you can try ping the Rpi from Windows7. If it pings everything is ready. 4) Bridge wired and wireless adapters in Windows7. 5) SSH into Rpi from Windows7 and test if Rpi connects to internet. 

I guess your image is OpenELEC as @Lawrence said that. OpenELEC uses squashfs compressed image filesystem so you can't edit without uncompressing. To uncompress it, convert your sd-card content into image with dd command in another computer which runs linux. 

Use Berryboot[1]. It's a bootloader that can install more than one OS into an USB flash disk. Berryboot has a feature like VNC to boot screen this could be what you want. You can connect through VNC when RPi booting, at this screen you can choose into OS what you want to boot. I'm using Berryboot with 3 OS installed. PiBang[2] as desktop with GUI, Moebious as server, Xbian as media server. At the boot sequence i can choose what OS going to boot. [1] $URL$ [2] $URL$ [3] $URL$ [4] $URL$ 

Basically, we want to mount the USB drive on boot at the right mount point and with the right permissions, and skip mounting if it's taking too long or not physically connected so the pi can boot the machine just in case the USB is disconnected. I like to reference the Ubuntu Community Fstab document, since it's pretty good. The syntax of your file would need to look something like: 

Fstab can be a little tricky, especially with USB drives. We can setup the USB drives in fstab the right way once we get to that part of the problem. The proper way to mount devices in fstab would be by using the UUID of the device that will be mounted because sometimes the device names will change, but not the UUID; and then we can assign the right options. To get the UUID of all devices: 

You will see a different list than me, and VirtualBox wouldn't display my connected USB, but you should see a short description of your connected devices by USB including you drive with "lsusb" and you will hopefully see your connected drive with all its partitions when you run fdisk. BE SURE TO USE fdisk -l SO YOU DON'T CAUSE CORRUPTION. Fdisk is a partitioning tool, so proceed with caution. Now, this can go down several different roads because your external drive may need the partitions created and formatted The unfortunate thing about the howtogeek article you used to setup deluge, made a lot of assumptions about previous articles that should've been read to make sense of the current article, which is never a good idea in writing. The article was somewhat confusing, and very unorganized for the guys at howtogeek usually write. Deluge has a great support page for getting deluge up and running like it should be, which I'll link here. $URL$ This article will create a user and group named "deluge" that will run the deluge daemon and would need permissions for the deluge user on the USB folders. The way deluge works, is all controlled by a config file usually located at: "/home/$USER/.config/deluge/core.conf". If you use the linked article above, the config file would be at "/var/lib/deluge/.config/deluge/core.conf" So our goal is to make sure that we are using the right config file with the right user, so our scripts will work and so we can configure proper permissions. I use systemd to manage my startup scripts, and I use my main user for deluge. My /etc/systemd/system/ service file: