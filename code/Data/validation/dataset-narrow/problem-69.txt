You need to get this information from Cisco. Cisco maintains programming guides for this tool at: $URL$ 

Switches will know the MAC addresses, but not the IP addresses. Switches are layer-2 devices, and the ethernet headers contain MAC addresses. A switch will create and maintain a MAC address table, which relates each MAC address with the port to which the device with that MAC address is connected. IP is a layer-3 protocol, and IP addresses are in the packet headers, which are encapsulated inside the ethernet frame. A switch doesn't strip off the frame to look at the IP headers (router do that). You need to relate the IP address to the MAC address. This is what ARP does. You can ARP with the IP address to discover the MAC address. Then, if your switch models have commands to do this, display the MAC address table of each switch to discover to which port the MAC address is connected. If the switches are all connected together, you may find the MAC address on a port which connects to a different switch, and you would then need to move to the switch on the connection and repeat the process until you find a host port. 

The Internet is simply the collection of ISPs peering with each other. The Internet uses BGP as its routing protocol, and BGP advertises the networks about which an ISP knows to the other ISPs to which it connects. As a business customer with provider-independent addressing, you will probably get your own AS number, and peer with your ISP(s) using BGP. 

It really sounds like you need to implement QoS. Without QoS, your server backup traffic will have the same priority as production traffic, and that can cause production problems. QoS is all about fairness, as you define it, and the need to separate your servers onto different networks really means you should probably redesign the network and implement a good set of QoS policies. Providing enough bandwidth, taking into account things like bandwidth oversubscription ratios, and properly sharing it, you could have a lot of servers on the same network. 

I don't think your commands are actually doing anything since you are not running RBSCP. and are only used with RBSCP - rate based satellite control protocol. Even an interface command only documents a bandwidth for upper-layer protocols. To actually restrict bandwidth on an interface, you need to use traffic shaping/policing. 

That is a layer-2 switch. When using VLANs, you need a layer-3 device (router) to get traffic from one VLAN to another VLAN. Hosts can send frames directly on a VLAN from one host to another host, but for a host to send traffic to a different network, the host must send the traffic to its configured gateway (router). The gateway must be on the same LAN as the host (otherwise, the host would need a gateway to send to its gateway, creating a chicken/egg problem). Switches switch traffic on the same LAN, but routers route traffic between LANs. 

You are trying to run traceroute across the public Internet. Some ISPs will reroute traceroute to keep you from actually discovering their internal networks. Traceroute is a useful tool on your own network, where you can compare the actual results to expected results, but it can be completely misleading on the public Internet, or across any network you do not control. 

The way it works is that if one side is set to Auto, the other side needs to be set to Auto for things to work correctly. If one side is set to fixed speed and duplex, the other side can detect the speed, but will default to the duplex for the speed (10/100 Mb is half, 1 Gb is full, and 10 Gb only has full). The mismatched duplex causes all kinds of problems on the link. Cisco has a document, Troubleshooting Cisco Catalyst Switches to NIC Compatibility Issues, which explains this. The 2950 has been EoL for a long time. That doesn't change the way which it can be configured, so I'm not sure about your last question. Most of the time, Cisco devices will be configured with something like telnet or SSH using the CLI. The console port can also be used for configuration when someone is on-site with the switch. 

You shouldn't have in a router. A router should have routes delivered by OSPF. You are redistributing connected routes, but you have explicit network statement for two of those routes. You should pick one way or the other. Instead of , you should probably use a broad network statement so that your routes aren't external routes: 

Some of these terms are used differently by different people, but below is what is generally accepted. Bandwidth is the number of bits per second that a link can send or receive, including all flows. For example, the bandwidth of a 100 Mbps connections is 100 Mbps, but that doesn't mean it is always sending or receiving 100 Mbps, but that is the maximum possible on that link. Unlike what many people mean by bandwidth, it does not mean data usage. I see people say that they have a bandwidth limitation (every link does), and they have used all their bandwidth for the month. This is an incorrect use of the term. What they mean to say is that they have a data usage limitation, and they have used it up for the month. Throughput is the amount of data during a time period that a flow (process to process) can send or receive. This includes all the host overhead, and contention on the link (multiple flows on a link will each use some percentage of the bandwidth, reducing the throughput of each). Bit rate is closer to bandwidth, but it is often per host, or source to destination devices. You may have a bit rate of 100 Mbps from a host to a switch, but the bit rate from a host to a host is less. This usually includes multiple flows. 

Normally, if you have routing enabled on this switch, you should use a routed link to the other router, not a layer-2 connection. The layer-2 connection complicates things. What you should do is set up the interface to the other router with a command, and place an IP address, like on it, and set up the router interface to the switch with . Your hosts on VLAN 1 need to have their gateway set to , not , so that traffic destined for VLANs 2 and 3 doesn't get sent to the other router. In any case the other router must have routes back to VLANs 2 and 3, so that it knows to send any traffic destined for those networks to the switch. Also, you will need to tell the other router to NAT for those networks, too. 

A router, receiving a packet on an interface will look at the destination address of the packet (as Ron Trunk pointed out, ports have nothing to do with the routing decisions), and it will look in its routing table to see if it knows how to forward the packet toward its destination. If the router doesn't find any sort of match in its routing table, it will discard the packet. If the router finds a match, even if it is only a default route, it will forward the packet out the new interface toward its destination. The interface towards the packet destination can be connected to another router, and the new router will repeat what the first router did. This router lookup and forward goes on until the packet gets to the network where the destination host is. 

Because the logging messages can pop up in the middle of a command you are typing in the terminal or console, you can place the command on the lines to restore the the command where you left off after the message is displayed. 

Storm control options have pretty descriptive names like or . Shutdown will shut the port down, and trap will send an SNMP trap. When you have the drop option, the first number will be the point at which the traffic will be suppressed (dropped), and it will continue to be suppressed until the traffic drops below the second number, at which point it will again flow through the interface. All three options will prevent excessive traffic, either by dropping it or disabling the port. Trap will also send SNMP traps. Depending on how you have SNMP configured, you could get a trap when a port is shut down by the shutdown option. You can flood SNMP with the trap option, so you should configure the storm control trap rate in the SNMP configuration. 

One thing I noticed is that you are not tracking the links to the firewall, and you have no way configured for VRRP to fail over to the other switch if a link goes down. You will fail over if the entire switch fails. You probably want the priority on the primary VRRP switch to be set at , and the backup as , then decrement by if the link to the firewall fails. Configure preempt so that the backup will preempt the primary, and that the primary will resume when the link comes back up. You should also put in a delay so that a bouncing link doesn't cause the primary to jump back and forth. Something like: Core SW1: 

You can purchase the Cisco Networking Academy course and lab books at bookstores. A simple Internet search will turn up many sources for the materials. 

When you see SYN segments originating from five different ports on a host, you could have five different applications trying to open TCP conversations, or you could have one application trying to open five different TCP conversations, or any combination in between. A TCP conversation is unique based on four different things: source IP address, source TCP port number, destination IP address, and destination TCP port number. If all four of those are the same thing, then you have something in a single TCP conversation, but if even one is different, it is part of a different TCP conversation. When you look at those four data in combination, you see SYN for five different TCP conversations. Why the host is creating five different TCP conversations is an application-layer question, which is off-topic here, but one or more applications are trying to open TCP conversations. 

The current Cisco best practices are to only have a VLAN on a single access switch. You can have as many VLANs as you like on an access switch, just don't trunk those VLANs to other access switches. Don't connect access switches to each other, only to a distribution switch. Disable VTP by setting all the switches to , and limit the VLANs allowed across the trunks to the VLANs which are actually used on each switch with the command, along with the and commands to unconditionally trunk. Also use the global and commands so that any switch connections to an access port will the access port. Doing this will eliminate almost all STP problems, and it will limit any that do happen to a single access switch. 

EDIT: I can certainly appreciate all the thorough testing that @YLearn and @Eddie have done. I didn't think to study it in any sort of depth, I was just doing a quick and dirty test to see what happens, and what I have above is the full extent of my testing. I will see if I can do some better tests in a few weeks. I'm willing to concede that there could be something else in the rest of the configurations already in place on the router I tested which affected my test. 

Just remember that OSPF areas are assigned by interface, and OSPF areas, like 7 and 107 that you show, cannot directly exchange routes. The separate VLANs will use separate SVI interfaces, and each interface can be in a different OSPF area. You could have the layer-3 switch be in both areas without any problem. You can also have separate OSPF processes if you want, but that seems unnecessary since you have different area numbers. Separate OSPF processes will allow you to have the same area number without mixing the two separate areas. 

As others have point out, you can tag frames on a trunk with the VLAN, and most end devices don't understand VLAN tags. There are a couple of things that also come into play on a Cisco switch: Using the recommended global and commands only affect access ports. You must specifically use the keyword to affect trunks, too. 

An ALOHA sender needs to re-transmit if determines that a collision has occurred. Either of those situations would indicate to the sender that a collision has occurred so the sender will re-transmit. 

That's not how it works. A MAC address is only significant or even seen in the LAN on where the host with that MAC address is. MAC addresses do not cross a router to get to a different LAN. When a router receives a frame with the source and destination MAC addresses, it strips the frame off the packet, losing the original source and destination MAC addresses. 

You need to understand in which direction you want to collect information. Normally, you only want to collect statistics in a single direction, either input or output, but not both. Collecting information in both directions will double-count your traffic. Many people start out trying to collect both input and output on every interface, but find that doesn't really give them a good picture. For example, if you only have input collection on a router's interfaces, you will be counting all traffic entering the router, and your traffic will only be counted once. If you have both input and output collection on a router, then traffic will be counted as it enters the router and again when it leaves the router, and this can distort your statistics, making it look like your router is routing twice as much traffic. 

A VPN just sets up a logical network interface, and traffic can be, or not, forwarded through it as a network designer sees fit, just as it can through any other router interface. Don't confuse VPN client software, which is really off-topic here. Some host software prevents split tunneling as a security measure. 

What you are looking at is not just a simple cable, but a USB-to-serial adapter with electronics built in to handle the conversion. It isn't an ethernet cable, and it doesn't require Category-5E. Cisco has had serial-to-serial rollover cables forever, using telephone-grade cable. If you have a standard Cisco rollover cable, which comes with just about every Cisco device, all you need is a USB-to-serial adapter, and the software which comes with the adapter. This is just those two things combined. 

You will be misusing the link-local addressing (). Link-local addresses are not allowed in DNS, and any traffic with a link-local source address is not allowed to be routed. Also, link-local addresses must be assigned randomly (you are not allowed to assign a specific one to your interface, and DHCP doesn't do random assignments and allow for conflicts), and special precautions must be taken since address conflicts will happen with random address assignment, and a host must determine if there is a conflict and correct it. See RFC 3927, Dynamic Configuration of IPv4 Link-Local Addresses. 

You can't have one router directly access the file system on a different router, but you could send a file from one router to the other with something like TFTP, and receive it on the other router using the same protocol, and save it to the local file system. Cisco routers support multiple transfer protocols. Something like this: R1 (sending router): 

If the device supports VLANs, it could be used as a router-on-a-stick to route between the VLANs. You would need a switch which also supports VLANs. The connection from the switch to the router would be a trunk carrying all the VLANs supported by the switch. Place the WAN connection on a switch port which is set to the VLAN used for the WAN, and any other ports would be in another VLAN for the LAN. In fact, you could have multiple LAN VLANs for different LAN segments. 

Many Cisco protocols are proprietary simply because Cisco created a protocol to facilitate something where there wasn't an industry standard. For instance, Cisco created HSRP, and, eventually, submitted it for RFC approval. The industry feared extending the influence that Cisco has over networking, and it created a competing protocol, VRRP, which really does the same thing that HSRP does. Cisco didn't change the Spanning Tree Protocol, but they extended it so that each VLAN can have a separate Spanning Tree instance (PVST: per-VLAN spanning tree). The industry created Multiple-instance Spanning Tree, but MSTP doesn't go as far as Cisco's PVST does. As rapid spanning tree became a standard, Cisco extended PVST to use Rapid Spanning Tree on a per VLAN basis (Rapid PVST).