Switches come in different flavours JavaDeveloper. Why do you need a switch? Because you want more than 2 hosts to share a common communication medium. If you have 2 PCs and they are not far away from each other you could connect an ethernet cable between them, assign IP addresses and start communicating. What if you have 15 PCs? Then you want to have a shared medium, a meeting ground where all are available. Let's carry on with the same analogy. You plugged in your switch, did the cabling, employed an IP distribution mechanism and assigned each a 192.168.1.x/24 address. You will see that they can reach other. You can create a shared folder on one and send/receive files from others, you are connected. Now imagine you wanted you and your neighbours' PCs to communicate, he uses a different subnet plus you don't have enough ethernet ports. You now need another mechanism that will route the traffic between you two. You found a router with two interfaces and connected a cable from your switch to one interface and another cable from your neighbours's switch to the oher interface. Why did you plug this cable to switches but not a printer? Because everybody is there and available. If you see the world from the router's point of view, I have 2 networks on each side, one speaks German, other one speaks French. In order to be able to let you 2 communicate it has to speak both languages. That's why on each router interface, you assign an IP address from each subnet to the correct side (yours will be 192.168.1.x/24). He is your virtual gate to your neighbour's house. If your network needs to communicate your neighbours, you have to knock on the virtual door. The address you just assigned at the router interface is your network's gateway to the other network which makes sense right? If you have a PC that only communicates with your printer, you don't need to assign him a gateway address why should you? He always stays at home. When does a switch talk to router? When it needs to contact other adjacent or reachable networks. (as other people wrote down, there are layer 3 switches thatt can be assigned IP addresses from other networks enabling you to meet everybody there but I won't talk about that. I wrote long, please don't get me wrong, there are other people who can make use of this thread) Hope this helps. 

At first glance you might think that, as C could join the network created by A, probably C could also communicate with A (of course in a true ad-hoc network it doesn't matter who initiated it, this is just a fail-safe test). In that case, it means that this network has a multi-hop feature. However, this is not the case. Nodes can only communicate with other nodes within WiFi range, therefore, they don't participate in routing or forwarding data. 1st Issue According to Wikipedia, in a wireless ad-hoc network "each node participates in routing by forwarding data for other nodes". How do we reconcile this definition with the current ad-hoc network of Windows? Technically, is it correct to call a single-hop network by ad-hoc? What features can we expect from the Windows Ad-hoc Network? 2nd Issue What would be the technical challenges to develop a protocol for multi-hop ad-hoc network (if there is any)? Current computers would be too slow to forward data based on routing tables??? 3rd Issue If your computer has an Ethernet connection with the Internet and you setup a wireless ad-hoc network, you may share your internet connection within nodes in the ad-hoc network. However, the other nodes only in the ad-hoc network are not allowed to share such internet connectivity (a popup window appears complaining about a problem with automatic IP address). What are the technical challenges to allow all nodes in an ad-hoc network to share internet connectivity (besides the multi-hop issue aforementioned)? 

Currently trying to convert MLS QoS to MQC QoS, I'm facing a problem. In MLS (3750), and auto QoS we have this configuration for INPUT QUEUES: mls qos srr-queue input bandwidth 90 10 So in input 90% bandwidth for first queue and 10% for second, with VOIP assigned to second queue in my configuration (default MLS Auto QoS). I would like to convert it in MQC QoS, so I defined this policy map: 

Regarding the Cisco Catalyst 4500, or 6500, does the frames switching and the packets switching (with CEF) are performed by the Supervisor Card or by the Line Card ? (Also, does a Line Card has CAM and TCAM ?) Also, if a frame or packet from the Line Card 1, has to travel to the Line Card 2 to the right outbound interface, do the frames and packets could travel directly to the Line Card 2 without passing thought the Supervisor Card ? 

Michael, there are many problems with your post. Your topology is not here so we don't know if there any routes at all to route. To be able to route the traffic to another node, you have to have it first. With one ISP, can you really create a routing difference unles you are talking about a more complicated internal network where you have multiple routers etc? Your ISP meets you at your doorstep and takes your traffic away. You don't have a say then how this traffic will be routed. You can check it by issuing a tracert command. Plus if you are writing a route for one specific public IP address, you should give 255.255.255.255 subnet mask. If you want to change the route for all nodes in your network, it would be enough to write the route to the Layer3 device only i.e. router. You don't have to add static routes to all PCs. If everybody has the same default gateway and the gateway is located just before meeting routing alternatives then you can add the route to this device. But Michael,It is not clear to me what you are trying to achieve and what sort of setup do you have.. So I might have just talked rubbish :) Regards.. 

But i can't pass it in an interface as input policy, I got an error. So, the question is, how convert the mls qos srr-queue input bandwidth 90 10 in MQC ? Thanks. Edit with more configuration: MLS Configuration, the default MLS Auto QoS: 

Is it true to speak about layer 2 control plane (LACP, STP, etc), and layer 3 control plane (OSPF, EIGRP, etc) ? or do we have only a general control plane ? We know Cisco Nexus vPC cluster has a separated control plane, and same data plane. For Nexus vPC, is it true to tell it has a same layer 2 control plane and a separated layer 3 control plane ? 

Currently studying the switching methods, someone could confirm to me the assumptions as follows ? I also would have some questions. 

Generally, we have: SR transceivers with multi-mode fiber and LR with single-mode fiber. Is it possible to use single mode fiber with 10G-SFP-SR transceivers ? And same question for LR: is it possible to use multimode fiber with 10G-SFP-LR transceivers ? 

Recently I was doing some tests in a small wireless ad-hoc network and one interesting feature I've found was: 

Recently I was puzzled by the following articles about Raw-Ethernet frames: RAW ethernet vs. UDP Message Passing Using Raw Ethernet Frames Briefly, both of them discusses that it is possible to establish a point-to-point communication using only the Ethernet layer. In that case, the overhead of the IP and TCP layers would be avoided and the throughput would increase (roughtly 50% according to some benchmarks). I would like to do a similar test but in a wireless environment. However, I have some issues: 1st Issue Is there any hardware constraint (ie: the Wi-Fi card) that might undermine such effort? 2nd Issue Both articles chose the following frame format: Preamble | Delimiter | Mac Headers | Payload | Pad | CRC As far as I know, preamble, delimiter, pad and CRC are added by the Ethernet device to every frame and can not be changed via software. I guess with Wi-Fi devices is similar. Therefore, is there any hardware constraint (ie: the Wi-Fi card) that would undermine removing the Mac Headers? ps: consider that the communication will be on a point-to-point basis, ie., there will be no routers, switches, bridges, ... no internet connectivity.