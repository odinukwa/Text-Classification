Question 3: So I see you are saying that hardware are really not capable of not doing it. Does this apply to all kind of chips? This applies to all kinds of chips that handle IP forwarding. Relevant portions of RFC compliance are required if the silicon vendor wants any hope of selling their chips. 

You're welcome to use any tool you like. However, I'm not sure how simply switching to Netflow helps... NMS systems (regardless of whether they speak SNMP or Netflow) are complicated beasts... 

dot1qTpFdbPort: All MAC Addresses learned The mac-addresses show up as a string of six decimal digits in the indexes to dot1qTpFdbPort. Note that I have a downstream switch connected to this switch on port ... 

Allows any traffic with a source TCP port == protocol-port Example ACLs tend to use fixed ports for the server-side of a client-server connection. Typically, the client connects to a well-known port on a server; when you posted to Stack Exchange, your web-browser (client) connected to the Stack Exchange server on TCP port 80. 

CEF is useful because it permits a router to quickly rewrite the Layer2 information during Layer3 forwarding operations. WAN routers must rewrite Layer2 header information just like LAN switches do... CEF is extremely useful to both types of router. At a high-level CEF performs two functions: 

Wifi APs are configured with an SSID; those SSIDs are known via beacon frames; by default beacon frames are sent every 102.4 milliseconds. The beacon frame format includes an SSID field, and the beacon interval. The radio in your AP is configured for a specific channel. Those beacon frames are transmitted on the AP's channel. 

You need a crossover cable. Most network cards today can detect direct connection and automatically crossover the signals - Allowing the usage of a straight thru cable. But, if your computer is older, it might not work with a straight-thru cable so you will need a crossover cable. Building one is easy : 

Actually, you must take into account that the TCP/IP protocol was not built to run over ethernet exclusively. There are various link-layers that might be used with TCP/IP. Some might provide a local link-only flow control (like between two serial ports using XON/XOFF) or something like that. Thats why the TCP protocol ended up providing a flow control mechanism that works at a much higher level and is generic enough to traverse multiple different types of networking links. 

We can say that a network with 50% packet loss is not stable at all, at least not stable enough to support healthy internet use. If your link is wireless, this is still too high a loss to be acceptable. If you use only ethernet cables then you are far above what is normal for a cabled ethernet to be acceptable. In a short answer : Your network is not stable. What can I infer from what you pasted ? You are using a WiFi network under far from ideal conditions. If youre using cables, you have a malfunctioning switch around (maybe faulty - dried up capacitors in its supply filtering part ?) or your connectors are too rusty. This might be caused by network cards with faulty transformers (the other symptom in this case is that the card connection icon keeps appearing and disappearing on windows - "network cable unplugged" message or something like that). You might have network cable run too long for the ethernet standard, but in that case this is your fault. BTW, you asked about a tool to check this out. Do you know about traceroute/tracert command ? 

However, you'd only have one link to every switch if calculated thusly. If you assume 4 links per switch, it's technically 4*780, or 3120 uplinks. 

This is an example which shows traffic to 4.2.2.2 on tcp/9000 is denied by a configured firewall rule. 

Ultimately the question of security comes down to one unasked question, which is "Who do you trust with your business-critical data?" 

Since iBGP doesn't reset the next-hop when it receives the update from R1, 192.168.1.0/24's next-hop (172.16.1.1) has to be reachable (see Why routers ignore BGP paths for more details). The most basic way to test this is to configure a static on R3: 

Edit: This is how to poll Q-BRIDGE-MIB for mac-addresses from the only non-Cisco I have, a DLink DGS-3200. I'm not using [community@vlan] for non-Cisco switches. You're correct that this indexing only applies to Ciscos. I expect any non-Cisco switch, which supports Q-BRIDGE-MIB to work the same way. Polling sysDescr to document the switch under test 

Yes, is required on both sides of any uplink for end-to-end QoS functionality (which is what you'd want, of course). 

Using the new wireshark feature on Supervisor 7, I can see that the LAPs are ignoring Option 43; instead, the LAPs (for example, 10.1.1.17) are broadcasting CAPWAP packets and never send a unicast request... 

Keep in mind that wireless operates in unlicensed frequency spectrum, so it is a bit like the wild west... Many corporate networks choose to marginalize support for 802.11b/g where possible, due to the rampant use of the 2.4GHz frequency spectrum by consumer devices... today, 5GHz (and thus, 802.11a) tends to have much lower background noise levels, so it is more suitable for business voice and data services... however it also doesn't propagate as well due to the smaller wavelength in 5GHz signals. Use care when you disable 802.11b/g... it might be worth checking for coverage holes, if most of the traffic formerly used 2.4G... 

I too recommend a Wireless survey. This avoids dead spots and other issues. With 2.4Ghz APs, you only have 3 clear channels that do not overlap. 5Ghz isn't so much of a problem. You might be able to get sufficient wireless coverage with 3 APs. Omni-directional antennas transmit like a bagel, Directly above and below aren't the best spot. Maybe two on the lower floor on the ceiling at each end and one on the second floor in the middle. Without a survey it'll be a guess, but we can apply some logic anyway. You can always lay it out and use the freebie Ekahau heat mapper to see what it looks like. I highly recommend isolating your voice traffic from your LAN traffic with a voice VLAN. The SG200 switches are voice aware. A voice aware switch should use QoS to prioritize voice traffic above your other traffic to avoid jitter and lost of frames. Voice traffic uses UDP protocol which isn't reliable (but it's fast). Traffic is dropped if network congestion happens. Some APs can do a Captive Portal mode where they either have a micro webserver or push the client to an external webserver (external from the AP). I advise you use something like this and have an Acceptable Use Policy that they must accept prior to accessing the internet. This limits your liability in the event they do something illegal. Regarding the 2800 AP, it's a thin AP and on Cisco's site you will find a bullet that reads "Cisco Mobility Express and controller based". Cisco Mobility Express can be purchased with some of the more expensive switches (such as a 3650). Look for something like the 300 series. They support Captive Portal as well. Your public network needs to be isolated from your internal traffic so people cannot access your business data. If you use VLAN, it must not have any route to your internal network. I recommend physical isolation so there is no chance of data leakage. Just pull a cable to a router network port (not a switched port but a VLAN or routed port). I also recommend using some kind of guest isolation so public wireless network users are not attempting to penetrate other public users devices. Your wireless LAN can be on the same subnet as your LAN or on a different one. If different, it needs to be routed by your router. If your internal wireless users are going to have full network access, I'd just flatten it out to make it simple. Your Router needs to be able to have virtual sub interfaces for VLAN or have multiple physical interfaces so you can send the guest traffic to the router directly. The Cisco RV215W has "Separate "virtual" networks to limit access to sensitive information" in it's description, so look at a router that has that kind of description. Whatever product you might choose, download and read the manuals to see if they will do what you need. Wireless routers are not really that great. I have a Cisco RV180W at home and I loose a lot. Enough that I want to move it, but that complicates things because I have an AP in the back of the house (for the yard...), a NAS, a wired Blu-ray. Next purchase will be an AP that will be in the living room coat closet...I have it wired already for PoE. Question - what is your phone system? Something hosted? Look at web managed switches and APs such as Meraki - They are pretty cool and if you attend a webinar, you can get a switch and an ap for free. However the cost model is a subscription. If you get a subscription model device, buy with the most years you can get up front as the prices increase over time. It's really a fairly simple network layout. You might need multiple connections to the router for each VLAN if it can't trunk like this: 

You already mentioned that keepalives were not used on your old Cisco load-balancer, so I will focus on what you can do with the F5. There are two problems you need to solve... 

Use ; this command will show up in the running configuration; however, it's not available in older versions of IOS. You can also change the IF-MIB 64-bit counters to update interval with this hidden command: , where the interval is measured in hundredths of seconds; however, this command will not show up in the running configuration. 

Specifically, For router-LSAs, this field is identical to the Link State ID field forbids modification of RouterA's LSA. Detecting Self-originated LSAs The fact that LSA Router-IDs must be unchanged when flooded is reinforced in Section 13.4: Receiving Self-Originated LSAs: 

This forces Cisco IOS to refresh the ARP table within four minutes, if it hasn't happened otherwise for a given ARP entry. The obvious disadvantage is that this doesn't scale well if you have lots of ARP entries... the limits vary by platform. I have used this with a few hundred ARPs per router on Catalyst 4500 / 6500 (the Layer3 SVIs) without any issues. Option 2: Increase the switch CAM Timers This option works best if you have a large number of ARP entries (i.e. thousands, such as an intense VMWare environment could see). 

This actually is not weird, this is how routing works. Routing happens on a per-hop basis; routers have no forward-looking wisdom to predict congestion along subsequent hops of a particular path. Routing protocols don't carry information about load in their metric calculations (except for EIGRP if you play games with the K values, but that could result in path instability when you do that). That said, you can use a different algorithm and force load-balancing in this case, use on R2 (serial2/1 & serial 2/2) as well as R7 (serial 2/0 & 2/1): 

The real answer is simple. Ethernet is a differential line technology. There are two ways to transmit information on a transmission line : Balanced(Analog)/Differential(Digital) or Unbalanced(Analog)/Single ended(Digital) line. A differential transmission line is one where the signal is transmitted at two opossite polarities thru two lines. To represent a bit 1 you might send, lets say, +12V in a conductor and -12V on the other (Fast/Giga Ethernet is more complicated than that). Why this is done so ? Because on a single-ended line, interference induced on the cable cannot be distinguised from a legitimate signal. If you put +12V on a single a conductor and receive, due to attenuation, +2V on the other side, this +2V might not be enough to prevent interference from destroying your signal, and if this does happen you cannot recover (you can, by higher abstraction means, but lets ignore this for a while) your information. If you send the information on two conductors, by transmitting the oposite signals on each one, a interference that causes a, lets say, +5V spike on the line will interfere with BOTH conductors at the same time on the same way. If you send +12V on a conductor and -12V on the other, you might get on the other side +17V and -7V on the other. The voltages are wrong, but if you compare +17V to -7V (=24V) you get the same value as if you compare +12V to -12V (=24V difference). Think of this difference not as a normal subtraction but as a comparision of the linear distance of both points on a line. So, a differential signal line will have higher immunity from noise. But what does this means ? On the ethernet connector of the network adapter, differential signals are paired on a very specific way. If you are dealing with Fast Ethernet, they are present on the pins 0-1 and 3-6. If you simply put the cables color paired side by side, you will produce not a differential line but two sepparate single-ended transmission lines (Part of the signal will go via Pair 2, part via Pair 3). Pin 3 will go thru a pair and Pin 5 will go thru another pair. They wont match. This will cause all sort of effects. First they are not twisted togheter, they have a higher probability of receiving different kinds of interference values. They are not paired, so they will provide a totally different charactheristic impedance than what is expected. As a historical reference, we starter using twisted pair cables to reuse twisted pair cables used for telecom. Twisted pair provided a cheaper way to install ethernet on older buildings that had already telephony equipment. Under such circunstance, you might use the two left-over pairs to transmit two telephone lines. They can - if done correctly - provide one more Fast-Ethernet connection (Yes, you can use a single cable to transmit two ethernet runs). Under a gigabit standard (not all of them, there are various standards for gigabit) all pairs are used so you have no such possibility. TL;DL The standard is set that way because ethernet is a differential transmission line technology and you must match the output/input differential pins on the adapter to the pairs on the cable. Thats why orange/light orange conductors jump over (usually) blue/light blue (or something like that) pair at the center. 

Case 1: Only use Ethernet checksums If we only rely on Ethernet (i.e. OSI Layer 2) checksums, then that error would go un-noticed until something crashes or throws an error, because the Ethernet NIC would simply transmit the (already corrupted) data that it received from the Operating System IP stack. For sake of argument, let's assume the TCP payload is corrupted, but the Ethernet checksum is fine. When the IP stack on the other side receives the Ethernet frame, it unpacks the IP payload and delivers it to the webserver. However, the TCP payload in this packet is corrupted. When the web server crashes from data corruption, the developer has no way to isolate whether this was an IP-level failure or a TCP failure (or perhaps something else farther up the application stack). Case 2: Layered checksums However, if TCP, IP and Ethernet all have checksums, we can isolate the layer where the error occurred, and notify the appropriate Operating System or application component of the error. 

As such, 802.1BR is simply an evolution of the abandoned Qbh standard. According to Rene Raeber who participated in the 802.1Qbh standardization effort, there is no difference between 802.1Qbh and 802.1BR. 

Cisco ASAs in transparent mode wind up using two different vlan IDs to connect a single layer2 vlan service. Connect the two vlans through ; the configuration on each physical interface makes the connection between Vlan51 and Vlan951 in the config above. Assume ASA:Gi0/2 connects to 4507:Gi1/2... Notice what happens to the DMZ interface... the ASA DMZ Vlan is 951, and this connects via a dot1q trunk to the DMZ switch (the Cat4507). I need to connect D1 to switchport 4507:Gi1/1, but I must deliver the Vlan951-955 services to D1 as dot1q Vlan51-55 on 4507:Gi1/1. In other words, the Vlan BVI wrangling I had to do on the ASA messes up the Vlan numbering in my original service definition. 

I agree with @artem_d93 that BGP is the most appropriate solution. With BGP, when one path fails, re-convergence occurs and a new path (over the alternate ISP) is presented to network traffic. This can take several minutes to occur. You really need to ask yourself or management how critical it is that these servers remain available if an ISP or a piece of network equipment fails. If it's not overkill and it's really necessary, one way to go might be to so something like I've done. I have two Cisco 4431 routers for each ISP, each connected directly to the other, sharing a standby (HSRP) address. These connect to a pair of DMZ switches that are port channeled together (not a stack as a stack could fail). Then have two ASA 5515X that are connected so they share state and failover. Then on to two Nexus 5548UP switches at my network core. This is a fully redundant setup so if there is a failure anywhere along the line, we will keep running. Our IPv4 and IPv6 blocks are used for addresses between the ASA 5515x and ISR4431 routers. I also have a dedicated WAN router (that has other one off connections) connected back to my core as well as to the 4431 routers Ask one of your ISPs to allocate you an IPv4 /24 block (the smallest possible). You will pay a monthly fee for this, but then it will be assigned for your needs as long as you stay with the ISP. You will need at least one business class router or routing firewall appliance that can handle BGP. Most of the dedicated routers can as well as some of the firewall appliances. Consumer grade equipment cannot. Once you have a block assigned, you will need to get an ASN from RIPE. This Autonomous System Number will allow you to be a unique node on the internet. Once you have redundant ISPs, you should have two routers that share an IP address (look up HSRP) in a standby/failover config, each router connected to one ISP. With HSRP, if one router fails, traffic will run over the other - the will share one of your assigned public addresses. Between the previously mentioned routers and your private network, you should have a (or a pair) of firewall devices. And perhaps a pair of DMZ switches. With all of this interconnected, you can have a fully redundant internet connection. Or you can have a pair of firewall devices that have all of this self contained. It can get pretty extensive, but if you really need it, it's really a solid way to go. Other options: