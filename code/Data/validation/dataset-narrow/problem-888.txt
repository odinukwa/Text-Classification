Your own redirects were most likely recursively redirecting to the index.php. You need to block the rule for that script, so it isn't run on that page request, e.g.: 

Note the 's' in the group permissions. This makes the writer users use git-writers group as their default group. This will only work properly if the writers are all umask 0002. 

If there are other packages than php* in this list then you can't seamlessly switch to Webtatic PHP 5.4, but will have to investigate alternatives. Webtatic has replacement packages for all base php packages (see the packages listed on the page linked to in 1. for confirmation), so there should be no issues, unless you use other 3rd party repositories that have packages installed dependent on the specific php version installed. For the rest of the installation (still in yum shell), you just remove these packages and install their php54w-* counterparts: 

Alternatively, if .htaccess files are enabled, get them to simply output their php error logs to a location they want, e.g.: /path/to/webroot/.htaccess: 

This should be put above any conflicting RewriteCond/Rule's, so they wont interfere with the redirection. Any .htaccess files in subdirectories will by default remove this rule and not do the redirect. To fix them, you must add either the rule again to them, or set them to inherit from parent .htaccess files, e.g.: 

proxy_redirect will only rewrite redirect headers, not the HTML content needed for this to work. There is no easy way to rewrite the HTML content in Nginx. There is the HttpSubModule, which you can manually add text substitutions, but is lengthly to set up each substitution: $URL$ It is easliest if possible to just update the content at $URL$ to have the redirected path in instead. 

mod_auth_mysql's crypt algorithm uses a different format of hash to Bugzilla's e.g. a crypt SHA-256 password would look like this: 

Without adding an additional external repository, you wont get a later version of git. See this article for getting Git 1.7 via yum: $URL$ 

Have you set up yum priorities? RPMForge has subversion and mod_dav_svn 1.6.13, so they should be listed in installations and updates. Yum priorities will hide them if another higher priority repo has the same package names. If so, you will need to add exclude patterns to your /etc/yum.repos.d/CentOS-Base.repo file, by adding to the [base] section: 

Yum does a check on /etc/yum.repos.d/webtatic.repo to see if it has changed, but this appears to not be happening when this file is installed by the second rpm -Uvh command, and yum clean all does not stop this Webtatic EL6: 

I supply a yum repository with PHP 5.3 in, which fits in with existing PHP setups when upgrading. I can't guarantee that Plesk will be happy with it though unless they've updated it to support PHP 5.3 $URL$ There is also the Zend Server Community Edition, which you may find more suitable, however it doesn't provide packages under the same naming conventions, so you would have to switch between packages. $URL$ 

2 . You need to first see what existing installed packages need replacing, you can do this by using yum shell to combine removing php-common and installing php54w-common in one transaction (so shared dependencies aren't removed) 

You should then only see the packages you've set to be removed and installed in the list, and you can confirm the installation to switch over. Any services currently running with php loaded will need to be restarted, for instance httpd or php-fpm. As for this being 'seamless', any software changes happening while users are able to access the website should have the consequences fully understood. Shared libraries being removed and added when a process hasn't already loaded them could potentially load while the shared library isn't there. It's better to do software upgrades like this offline, and preferably tested on a non-production machine first to verify the process works as expected. 3 . To switch to a hypothetical CentOS base php54 package (CentOS 5 used php53 prefix), you just run the above steps replacing php removal with php54w removal, and php54w installation with php54 installation e.g. 

As the error is intermittent and I checked svn repo file is there(i.e file checked in properly)so I am not sure what is the issue.Any help is really appreciated. 

Problem is when I am trying to install any package its pulling both 32 as well as 64bit RPM,I am aware of the fact that 

So looking at the output your major problem is I/O. Please run the following command during the time of issue and then paste the output to analyse 

Elasticsearch uses Joda timeformat to save date. Hence it's automatically converting my date to datetime. In the date field, since I don't have time, it is automatically adding zero's to it. Since I need to display data via Kibana that why I need this split..I converted format of date and time as varchar(20) as a workaround(bad idea I know) and its working fine now .. 

First of all I apologize for this,I am pretty bad in regular-expression and try to wrote custom pattern(as I am unable to find something in existing grok pattern or may be I am missing something) for parsing svn logs which is in the format of 

Again like Grant suggest vm.swappiness parameter for Database like Oracle,RedHat suggest it to reduce it to as low 10(by default set to 60) and mostly used by algorithm 

This is what I done in my test system and its working fine.Looking at the above output it look like you are using so many version of openssl. Please try to figure which one you are using at the same time remove the one not in use and make sure it will not break the other functionality 

Also just want to add there is one network parameter "tcp_moderate_rcvbuf" which is enabled by default,performs receive buffer auto-tuning.As per kernel-doc 

Anyone knows why I am seeing multiple device for the same LUN?I checked with storage team they only exposed 360000970000196801239533036304532 for this server but why I am seeing these many partition(p1..p7) 

First of all I know this is a complete mess but due to some developer legacy code(hard coded value),I am forced to install 32 bit rpm on 64 bit machine. 

Finally issue is resolved Error: TECH PREVIEW: DIF/DIX support may not be fully supported. I constantly saw this message in dmesg during the time of issue and Keep on ignoring this message On further debugging, I found out Kernel is in tainted state 

The possible cause of this error is system run out of socket memory.Either you need to increase the socket memory(net.ipv4.tcp_mem) or find out the cause of memory consumption 

But still getting "_beats_input_codec_plain_applied, _grokparsefailure" I am not a regular expression expert but any help is really appreciated. 

What I see from network point of view is too many TIME_WAIT=9.76K(I am not sure what is assured means).time_wait is a condition when your system is run out of socket because of many tcp connection are repeatedly open and closed.You can confirm it using netstat -an.You can tune these parameters 

Completely agree with two gentleman,cache will never-ever hurt your performance,in between just want to add I only run this command in our test environment when we are running a buggy code for testing memory leak or in simple word we know what we are doing. Based on my experience I faced similar issue with OpenVZ which is a OS level virtualization.In case of OS level virtualization you are not getting your own kernel instance and you would share the same page.To drop page cache you need access to physical node but as mentioned earlier its not recommended at all. 

Sorry I am newbie to Elasticsearch and I am using elasticsearch-river-jdbc to connect to myql database,everything is working fine except for the fact that everytime it run as per schedule its inserting duplicate record.This is what I am using 

The first thing I will do here is to stop/disable vmtoolsd daemon and if you have a vmware subscription please raise a case with them.Here it look like vmtoolsd daemon is trying to freeze the filesystem. These are the further steps you can provide to vmware team On crash prompt run 1: set 1186 2: bt 3: dis -rl 0xfe/0x280 i.e the place where block_device is passed to freeze_bdev() 4: Also you can verify how long this process is in UNinterruptible state a: task -R last_ran b: runq |grep "CPU number obtained from set command or in whcih CPU this task is last running) c: rq.timestamp_last_tick 

I guess what you have deleted is the equivalent to my . may still point to the socket node. If you delete files then you can get their content via as long as a process keeps them opened. I am not familiar with sockets but you can at least give it a try: You can create a symlink (instead of the deleted socket) which points to the socket descriptor in . Edit 1: It may not be sufficient to set a symlink to a socket because the client process may check the type of file and find a symlik where it expects a socket and thus abort without checking the symlink target. This problem can perhaps be solved with . This program allows a "socket forwarding". I have just tested it (with instead of though; and the original socket was not deleted): 

Something like this has to be put into the initrd boot scripts. Instead of /dev/sda3 you would then mount /dev/mapper/rootfs to /. Then you can make snapshots of the root fs (but have to do all the steps by hand with dmsetup; no black magic though). You just can't merge them back but that should not be a problem. 

Have you experienced that permissions are set to 644/755 or are you just afraid of that? If the former: What have you done? BTW: If such a problem has occurred: It is possible to just replace access rights: 

Beside the rather general approach with there is a nice device mapper target (ioband) which allows precise control over the bandwidth to a (DM) block device. Unfortunately it is not part of the standard kernel. Furthermore you can probably speed up tar by 

Depends on how you understand "some means". You can assign different gateways via DHCP configuration. You could offer an internal web page which the users can use for selecting the gateway. This page would trigger a script that makes the respective changes to the DHCP configuration file. Ask your favorite search engine for [dhcp multiple gateways]. 

On the gateway you must allow forwarding within the LAN net, of course. But then you can use SNAT even locally. That's probably more fun than testing with the connection to the customer. :-) 

Edit 1 Calling this trivial answer a "great solution" makes me feel obliged to take it to a higher level. The basic problem cannot be solved "better" but you can try to get used to always making an argument. And some shell code (replacing rm by a shell function) can help you with this: 

If you want to avoid the situation that you are locked out for a moment (and avoid the risk that the firewall setup fails due to errors) a technical alternative is to avoid the table flush for INPUT. Replace or by 

Check with tcpdump on the LAN interface whether the Debian server routes the VPN traffic to the LAN. If it does then check whether the Debian server is the gateway for the LAN or whether the seperate gateway knows about the VPN address range and routes it to the Debian server. If that works check whether the LAN systems have firewall settings which prevent access from the VPN address range (probably from everywhere except the LAN scope). 

You have probably mounted the Samba share. So it should not matter that the files are remote. fuser / lsof should do. 

You need in order to tell (and more or less all other GNU software) that all following parameters are file names even when beginning with "-". Otherwise (and in your case) the file name is confused with options. Another possibility is 

See iptables -j SNAT --to-source [ipaddr[-ipaddr]] --persistent I don't know though "how static" this is. Maybe the mapping is lost on reboot. If that is a problem then you might configure a static mapping by an explicit rule for each address. IIRC there is a tool (unfortunately I cannot remember the name) which can map source or destination addresses to chains so that you don't need a chain with 254 entries: