Searching on the Internet I see other people reporting this issue and it seems to be an indication of hardware failure on the horizon. Has anyone experienced this error before? It simply means (to the best of my knowledge) that that line card is receiving a high volume of errors, above a certain threshold which causes the system to log a syslog message. Should I be worried about this line card? I do have some graphs I will post here when I get some time over the next day or two showing interface error counters and traffic etc, although I'm not finding much correlation at this point! 

Next we get to global IPv6 addresses. These are routable on the public Internet, and subject to firewall rules, bidirectional communication is possible. That means that anyone (with IPv6) can initiate a connection to this system. Because NAT is not in use, the connection is direct, without any need for port forwarding hackery. But a host or network firewall may still prohibit the connection. But these IPv6 addresses are also RFC 4941 privacy addresses. These addresses are created at configurable intervals, and then the previous privacy address is deprecated. Once an address is deprecated it is no longer used for new outgoing connections. After another configurable interval, the deprecated address is automatically removed from the interface, and no communication is possible at all. Privacy addresses are meant to protect the privacy of the end host, especially as it moves from one network to another. SLAAC addresses configured using modified EUI-64 always have the same last 64 bits, regardless of what network they connect to, so a host (such as a laptop) could be tracked as it moved across networks by correlating these. Privacy addresses eliminate this problem. 

Given enough users, ADSL will feel "throttled". In fact it is not throttled, it's just a slower channel. Given enough speed, cable will never feel throttled. So traffic is not throttled, it's just directed through a channel that cannot handle the speed that you would expect, compared to using cable. Why is this bad You may think that this is not such a bad thing. In my example I'm talking about Facebook and Gmail going through the slow connection. That will not happen. Facebook will pay for speed, just like Google and Microsoft. They have the money. Small firms and sites don't have that money. They will not pay, visitors get annoyed with the slow connection, and stay away. When I google for something like sneakers, I will click several links. Some will take 20-30 seconds to open and before that the page is blank. Many times I close the tab and choose another link. This will get worse. Facebook has its own server farms that serve superfast. I use a cheapass 10 euro a year provider and just one wordpress page can take 30 seconds depending on other traffic on that server. To be honest I still don't see how this is different, and I don't know what the side effects will be. So I can't tell you why this will be more problematic than using (and paying for) a fast or slow server. 

The routers are only showing the routes connected to their local interfaces as your two subnets have overlapping addresses. Router 1 is missing on of the subnets though. This is likely a config mistake; 

With the QinQ scenario above the sevice instance under gi0/1 strips off outer VLAN 100 and inner VLAN 20 then bridges to SVI 20. The 3600 must have recorded the way that traffic came in through the EVC to send it back, where can I see that? 

I can't find any Cisco doc's that say "yes" or "no" definitively on this. Update: The supervisor is a RSP720-3CXl-GE. The line card I was trying to configure is an old WS-X6516A-GBIC. But I thought this wasn't depending on the line card but the IOS. I configured another port on that line card and selected "confirm" and sure enough it shut down and removed the sub-interfaces. I tried to then configure the port as a switchport first and then add sub-interfaces but I couldn't assign an IP address to the sub-interface; 

This is a fun one. It's also a global address, but it's an RFC 7217 stable privacy address. These are not simply random, as with RFC 4941 addresses, but generated using a PRNG fed a secret key combined with host-specific information and the assigned IPv6 prefix. They are still unpredictable, but once created, they remain the same for any given IPv6 prefix. Ordinary privacy addresses have the problem that a host using them has no fixed address at which it can be reached when it is on a given network. So incoming connections are impossible. This wasn't really the point, but more of a side effect (RFC 4941 section 2.4 discusses this in detail.). If you want incoming connections, but still want privacy when the host moves around, then stable privacy addresses come to the rescue. The host will get a different interface identifier when it moves to another network, but when it goes back to its original network, it will get the same interface identifier it had previously. So, on this system, outgoing connections use the RFC 4941 privacy addresses, which are rotated at intervals, while incoming connections use the stable privacy address, which is published in the global DNS. 

The topology diagram below shows multiple CPE devices, each has multiple WAN sub-interface that are dot1q tagged as VLAN 10 and 20 in this example. The PE ME3600 devices has an SVI with an IP address in a /24 range in VLAN 20 and each CPE has a WAN interface encapsualted in VLAN 20 within the same /24. This topology is all configured an working just fine. A CPE can ping .1 and the PE can ping .10 for example. The layer 2 aggregation device adds a QinQ outer tag to each CPE connection so that at the PE device each layer 2 connection can be differenciated between despite trunking the same VLANs to each CPE with their IPs being in a /24. 

There are no subnet directed broadcasts in IPv6 because there are no broadcasts in IPv6 at all. One option is to send the packet directly to the IPv6 address of the host (which you of course will have to know in advance, just like the MAC address) and hope that the switch still remembers which port the host is connected to. This seems quite iffy to me and is probably not going to be reliable in all environments. Long-term the workstations should probably be waking themselves up on a schedule, or not sleeping at all. 

On this network, this host can be reached globally at a stable address which also leaks no information about the host's MAC address. It can also be reached via its unique local address by other hosts in several networks on the site to and from which these addresses are routed. And all of these addresses might be used simultaneously. 

I am setting the BGP MED value on some out bound routing advertisements but I can't find anyway to check the MED on my advertised routes on Cisco IOS XR, to verify my configuration is correct (in this particular case the routes are sent to an eBGP peer, I am not able to see or ask how they are receiving the routes): 

Everything works fine. I have a test PC connected to each end of the pseudowire which can ping each other and the IP assigned to the SVI for VLAN 1 on Switch2. Is it possible to see their MAC addresses on the switches so I can see what MACs are being carried over this pseudowire? To the best of my knowledge this is only achievable when using VFIs on IOS-XR (haven't tested VFI on IOS), is that correct? 

Split traffic based on type of usage So far nothing new, and this is comparable with two different households, one of them with a fast connection. But now you change the setup of the router, and based on the kind of traffic or the kind of websites that are used, you decide to use ADSL or cable. 

Split traffic based on users You have three sons in their teens who game like idiots. They use so much bandwidth that you decide to take a second high speed cable connection. You buy a nice Draytek router that can handle two internet connections into one network, and which can decide which computer connects to what network, based on a set of rules. Now you have the following situation: 

This is were I experience the errors; What do they mean, and how can I correct this? Does it even need correcting (I'd assume so!): 

If my understanding is correct, R1 has generated labels for each FEC and R2 and R3 send R1 their LDP bindings (each MPLS label) for every MPLS FEC they have. Using this information R1 (for example) performs a lookup for traffic towards 10.0.0.6 and PUSHes the outgoing tag 25 before sending the the MPLS tagged packet towards 10.0.12.2 (R2). A few questions arise here for me; 

As has already been mentioned, there are issues with line cards that were manufacture between a certain date period that will fail to boot once they have been on for a certain period of time already and are rebooted/reseated. This is the field notice for the line cards that fail after a power cycle. If you contact TAC a head of time they can check by serial number if you are likely to be affected or not (that way you can have spears on standby). In additional to that, if this is a VSS pair you need to ensure that the IOS image is on both SUPs and that the config register and boot variable are in sync. Sometimes this doesn’t all happen automatically and when you reboot the old SUP is still on the old IOS and complains. Use the command to check that the boot variable is the same on both SUPs. If it isn’t or if the config register isn’t the same a handy trick is to set the config reg to 0x2142 for example (which is the “skip config at boot up” value), save the config, the set the config reg to 0x2102 (which is the “normal” value) and then save the config again. Hopefully this will force a sync between SUPs (you can also check with . 

Here is a unique local address which is also an RFC 7217 stable privacy address. You can see that its interface identifier is different from the interface identifier of the global stable privacy address. 

Here we have unique local addresses, as defined in RFC 4193. These are routable across subnets, and even across wide area networks, but they are not allowed on the public Internet. This makes them usable as private addresses for any network from the smallest home network to the largest global enterprises. A ULA prefix is always a /48 within fd00::/8 (technically fc00::/7 but the other half is meant to be assigned by IANA) and is meant to be constructed by an algorithm given in RFC 4193, but can be done randomly. It must not be assigned from zero or in any other pattern. If a /48 is not large enough, or two companies merge and need to connect their networks, multiple /48s can be used and the appropriate routes created. The 2^40 space of possible subnets is 256 times the number of possible IPv4 addresses, making collisions extremely unlikely if the ULA prefix is generated properly. The three addresses shown above are deprecated RFC 4941 privacy addresses.