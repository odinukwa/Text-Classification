Putting the restriction of not editing the resolv.conf will result in one location always being slower resolving. However, I believe the line you are looking for is 

You may want to consider using Puppet or CFEngine to make changes to the servers. Tools like these allow you make controlled changes to all servers. They help a lot keeping the configuration of multiple servers in sync. 

You need to backslash escape regex characters that you want to match as literals. It looks like you are using your mail is stored in Maildir format. I don't know if you excluded the header or don't have one. This will deliver files to the appropriate mail subdirectories. It includes a log file so you can verify that the messages were correctly processed. 

You need matching DNS entries. It appears both sites may be resolving to the same IP. The first VHOST defined on each IP address will be the default site, and handle any sites that don't resolve. If you want to use IP based domains, you need to match your DNS configuration. Check the results of and/or to see what your DNS configuration is. If you are using IP addresses as you show, I would expect each IP combination to show up as a separate NameVirtualHost entry. Prior to Apache 2.4 there was a NameVirtualHost directive that could be used to specify VirtualHost IP/Port combinations. If you are using Apache 2.2, try adding matching NameVirtualHost directives before the VirtualHost specifications. You may need to remove the existing NameVirtualHost *:80 directive. You can use the access log for debugging. Adding the local address () to the log along with the site and port () will allow you to ensure traffic is flowing on the the correct IP addresses. For a CGI script contains the local IP for the connection. 

This is standard behavior to prevent IP conflicts. It is dicussed in RFC 5227 IPv4 Address Conflict Detection. It also allows routers and neighbors to update their ARP tables so they can communicate with your computer. By asking who has an IP address it is possible to determine if the IP address is in use. This allows the computer to at least log the existence of a conflict if one exists. It is this mechanism that allows a computer to use automatic IP address configuration to work using the 169.254.0.0/16 address block. Computers generate an address in this range, and then use APR to see if it available. If not they try other addresses until they find one available. As the networks are usually small and the address range covers over 65000 addresses, they can find an address quickly. The utility builds a database based on the arp messages which can be used to notify administrators if address are in conflict, or are being moved to new hardware. 

I think you want to set the CHECK_RCPT_IP_DNSBL entry. Something like should work. I believe zen includes the sorbs list now. The domain blocklist is for domains like not IP addresses. 

However, if you only need to do this for few addresses within the domain, you could handle this with an alias for the relevant addresses which expands to two different unique addresses. If you are doing this for all the addresses in a domain you could consider a wildcard alias. Exim will allow you to have a transport which delivers email, but does not do the final delivery. For the addresses that need to be handled by the sendgrind servers, it could deliver to them. Then normal delivery could be used to process delivery to Google apps. I would expect other servers to have similar capability. 

GDM has problems with XDMCP. I had it working before upgrading to Lucid, but it is now broken. I was unable to find a solution. I went with a split implementation using both XDM for XDMCP logins and GDM for my console. My post on Remote Desktops with VNC and RDP details how I made it work. I have been using RDP most of the time as it handles different resolutions more easily. 

The list of potential ways to send mail out is too long to list here. The standard programs are sendmail, exim, postfix, and qmail. There are a number of SMTP relay programs which can be used to send mail. Many languages have library routines that can be used to send mail as well. You can may it difficult by creating iptables rules to prevent access to the SMTP related ports; SMTP (25), SSMTP (465), and Submission (587). Blocking these ports will shutdown normal routes for email transmission. Once you have blocked the direct access to mail servers there are a wide variety of other ways to send mail including WebMail, port forwarding, and remote sessions. These routes are not normally used by any of the programs or languages. However, if someone wants to subvert efforts to block email transmission they may use these techniques. The only surefire way to prevent sending mail out from a linux box is to disconnect it from the network and keep it disconnected. This also applies to other Operating Systems. 

Spoofing sender addresses is a common spoofing technique. As you have control of the domain adding a SPF record with a '-all' final policy should discourage spoofing addresses in the domain. If there are email addresses in the domain then a policy of "v=spf1 mx -all" would be appropriate, otherwise use a policy like "v=spf1 -all". Given that neither of the IP addresses you listed have PTR records, it is likely that the Spam is being sent by a botnet. If your client is getting bounces to his address, then it is likely backscatter. If it is being sent from the client to the client, then the mail server's policies should be adjusted. It is best to require authentication before allowing users on the Internet to send from the mail server's domain(s). I've recently seen a surge in spam originating from long discontinued addresses. These are sent to the expired address to the new address. While I have the log data, the mail server's policy ensures the email is rejected. If the client is not using the address, then it should be possible to disable it in the mail server. For some mail servers this can be done with a flag in the . This should cause servers receiving mail from the address to reject it. This may result in backscatter spam to your client's address., but if the account is disabled it should be dropped in transit. It is too late now, but implementing BATV (Bounce Address Tag Validation) can be used to identify bounces from spoofed email. This should to be implemented on the mail server for a week or two before you can safely bounce email. This needs to be implemented by the mail server administrator hosting your client's email. 

Routing tables for MAC addresses would need almost every single device with a MAC address listed. Routing to the Internet for IP is a single entry 0.0.0.0/0. For networks classes they break down as 10.0.0.0/8 172.16.0.0/16 and 192.168.0.0/24. Many of these can be aggregated like 172.16.0.0/12 and 192.168.0.0/16 further reducing the routing table size. Routes are searched in reverse order in to the number of one bits in their mask. This makes routing to 192.168.100.0/24 work when there is a route for 192.168.0.0/16 and another for 0.0.0.0/0 (default route). EDIT: Originally, the IP range was broken into several classes; A, B, and C being the most significant. The A class made up the first half of the address range, the B range the next quarter, and the C range the next eight of the range. These classes had masks of 8, 16, and 24 bits respectively. Later the strict usage of these masks was dropped and address allocation were done in a variety of sizes. The size of the allocation is always a power of 2 and the lowest and highest address in each allocation are reserved. Each allocation will also have an address for a router. This is often the lowest or highest non-reserved address. The smallest practical allocation is a /30 address. IPv6 uses the same form of allocation with a /64 the smallest allocation that can appear on the Internet. Typically, and ISP will be given much larger allocation, which is all the Internet routers would need to know about. Expected allocations are specified in the RFCs. The ISP would need to know how to route its own subnet, and what addresses to route to which interconnect routers. This is significantly simpler than knowing how to route each mac address.