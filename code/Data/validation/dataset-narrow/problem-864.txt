This isn't really available because it's a terrible idea on modern hard drives (...modern being anything in the last 15 years, or so). It's really important to understand that the addresses used by the OS and file system to find data on disk actually don't directly correspond to literal physical addresses on disk but rather to an allocation table on the drive's controller. The drive itself is constantly performing error checking on the disk and, if necessary, quietly moving around blocks of data in response to bad reads and writes. Your idea of breaking up the disk into pieces to perform error correction is basically broken out the gate because there is no guarantee that the pieces themselves are going to be fully isolated from one another. The other point is that if the drive has gotten to the point where it is actually failing badly enough to return an error code on an attempt to read/write then it's already much worse than you may realize - because, in reality, what you're seeing is an acknowledgement that the drive's firmware can't correct the error any longer. That said, if you're seeing info from SMART diagnostics telling you about incrementing numbers of correctable errors then you've got a preview that things are going south (i.e order the replacement drive). If the OS is getting errors, though? Things are already really, really bad and you should have already replaced it last week. So a few suggestions: 

Eliminate the home router: Confirm that the router configuration isn't doing some kind of blocking (to potentially include app recognition mechanisms looking for non-standard ports, etc). If this is inconclusive then you can try either connecting the user's computer directly to the Internet connection or an alternate (and known-working) firewall. If it's still not working on the direct connection then it makes sense to break out the sniffer. Install Wireshark and capture all traffic while attempting to initiate a connection. Confirm that the packet is as expected, look for the TCP handshake and, more importantly, look for any kind of ICMP unreachable messages coming back (port administratively prohibited, etc). If you're seeing ICMP coming back note whether it's coming from somewhere within the carrier or from the far end (i.e. the corporate edge router or firewall). It also may be helpful to set up another sniffer at the corporate side to confirm whether packets are making it at all. If, for example, you're seeing TCP SYN packets coming in but nothing going back then you'd want to figure out why. If you're seeing SYN come in from the user's side and ACK go back but that ACK doesn't show up at the user's side then that indicates something else may be blocked (..this is unlikely). 

At a high level you'll need several things to get started. 1.) A BGP autonomous system number. You'll need to register for one with your local registry (ARIN / APNIC / RIPE / etc). 2.) A routable subnet - either a sufficiently large allocation from your primary provider (generally at least a /24) or provider-independent space. 3.) For full redundancy you'll need both providers to accept the route. If it's not PI space (likely) then the provider who owns the supernet will likely need to allow you to leak your more specific prefix past their summaries. In practice the above generally requires a substantial amount of knowledge around how Internet routing works as well as the particular routing platform you're using (BGP 'capability' may not sufficiently address what you need, for example). Perhaps more to the point it's going to require a degree of service and cooperation from your upstream neighbors. Keep in mind that the ability to advertise a given route doesn't imply that your carrier's peers will accept that route. It's been common practice for a very long time to not accept prefixes longer than, say, a /24 (occasionally even shorter). All this aside, however, what you've posed isn't a discrete question. You may want to do some research and come back with more specific inquiries. 

The spec for option type 6 has variable length and can support more than two entries. The length field is 8 bits and represents the number of bytes. 256 / 4 = 64 IP's. Clearly this is well beyond the number that the client must recognize, but specifying 3 entries is likely supported by many clients. It certainly won't hurt anything. orst-case the client will ignore the third. Whether it makes sense or not is a function of your own infrastructure and availability. A WAN site might have two redundant servers on site and a third remote, for example. There are a number of mechanisms to improve availability of DNS infrastructure, many of which don't require additional IP's to be configured on the client side (i.e. anycast, load balancers). 

Your internal clients likely cannot reach the external address via NAT. You may want to run a separate DNS server internally to allow clients to resolve the mail server to the internal (actual) IP. Having such a setup may also be helpful for a number of other scenarios. 

If the two subnets (the /28 and /26) are both bridged to the same interface then you need addresses in both networks on the upstream network (i.e. a secondary address on the router for the entire network). Think of the virtual hosts on the bridge as if they were connected to the same switch as the host's NIC. The fact that the host (i.e. bridge0) is in a different IP subnet implies that there needs to be some kind of gateway between the two. Two options - either renumber all of the hosts into the same network or provide some kind of routed interface between the two. 

Depending on the connector in use the maximum number of SATA drives that can be connected (without active electronics) to a SAS port is 4. If you use an external SAS expander and cascade connections then you can support a very large number of drives (255 SAS / 1020 SATA). Add in a SAS switch and the number goes much higher. This is really an academic question, though, as the practical number of drives supported on a channel will be limited to a much smaller number as individual servers will tend to scale horizontally with additional SAS ports or up a more traditional SAN or enterprise NAS with a dedicated storage array. The Wikipedia page on SAS is actually pretty good - $URL$ . I'd suggest starting there. 

1.) Before basically anything else get your IP addressing plan straightened out. It's painful to renumber but it's the necessary step to arrive at a workable infrastructure. Set aside comfortably large, easily summarized supernets for workstations, servers, remote sites (with unique IP's, naturally), management networks, loopbacks, etc. There's a lot of RFC1918 space and the price is right. 2.) It's hard to get a sense of how to lay out L2 in your network based on the diagram above. VLAN's may not be necessary if you've got sufficient numbers of interfaces in your various gateways as well as sufficient numbers of switches. Once you've got a sense of #1 it might make sense to reapproach the L2 question separately. That said, VLAN's aren't an especially complex or novel set of technologies and needn't be that complicated. A certain amount of basic training is in order, but at a minimum the ability to separate a standard switch into several groups of ports (i.e. without trunking) can save a lot of money. 3.) The DMZ hosts should probably be placed onto their own L2/L3 networks, not merged in with workstations. Ideally you'd have your border routers connected to a L3 device (another set of routers? L3 switch?) which, in turn, would connect a network containing your externally facing server interfaces (SMTP host, etc). These hosts would likely connect back to a distinct network or (less optimally) to a common server subnet. If you've laid out your subnets appropriately then the static routes required to direct inbound traffic should be very simple. 3a.) Try to keep the VPN networks separate from other inbound services. This will make things easier as far as security monitoring, troubleshooting, accounting, etc. 4.) Short of consolidating your Internet connections and/or routing a single subnet via several carriers (read: BGP) you'll need the intermediate hop before your border routers to be able to redirect in- and out- bound traffic appropriately (as I suspect you're doing at the moment). This seems like a bigger headache than VLAN's, but I suppose it's all relative.