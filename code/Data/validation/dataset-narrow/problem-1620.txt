Due to IoT running on many other boards other than a Rasbperry Pi, the names of the Serial Devices are currently named as in the drivers for that particulr chipset. Unfortunately.. this means extremely convoluted names. The best way to do it (and also makes it cross device compatible) is to iterate over available serial ports. 

is not the right tool to do the job you have requested. It is a low level, sector by sector copy (and convert) tool, which is great to copy boot sectors, format devices, and all sorts of low level tasks. When you use you are copying sector-by-sector to the image, even if it is not included in the File System Structure. The images provided by the Raspberry Pi foundation, are specially compiled images with install scripts, unzipping binaries and initial setup, after which you have to get updates from the internet anyway - Which is all deliberate but quite a task to get it workin like this. One popular solution to avoid copying empty sectors is to use a File Level copy system - and CloneZilla is standalone, bootable from a CD, similar to but clonezilla supports the Linux (and more) file systems. So, it will only copy files that are in use and create a container from those files only. Reduces the size significantly! 

The remote probably uses the public band of 315mhz,433mhz or possibly 800mhz. These frequencies are popular with allot of commercial wireless devices like, remote controlled garden switches, power meters, door bells, garage doors, etc. 

OpenSSH is designed to be the most secure way to tunnel into your machine. When I say tunnel, I mean connect into the console via an encrypted tunnel, where you can also connect using SFTP over port 22, reroute local ports into you machine to make it look as if you were at the machine while surfing somewhere else in the world, redirect X application but in its simplest form, log into the console as root or another user. It depends what you want to to connect to the raspi? View webpages as if you were inside the LAN? So no port 80 forwarded to the internet? It takes some configuring but look at this tutorial. Basically the client creates a proxy at your local(outside from home) and anything you want to access your remote(the machine at home) goes via the poxy, into the tunnel and get routed on the Pi. At the least you need to open port 22 to the Pi and it would be recommended to use keys but if you use a good password, that is enough too. 

The only way to remove the Windows Logo is to be part of the OEM or Enterprise program that Microsoft offers. They rebuilt the boot screen for you and you can use that. There is no known way of changing it currently, like we used to be able to do with XP and 7 To speed it up make sure you are using a real Class 10 SD card (do some speed tests make sure they meet the specifications) Nothing much after that.. 2 minutes seems excessive. Mine boots in under 30 seconds with normal IoT on the latest Pi 3 

If they really want everything to be written in .NET or Windows API then do it.. but then run it on MONO on a nix OS like Raspbian. 

So looking around really I noticed the protocol used on the Lepton is VoSPI (Video over SPI) Frankly never heard of that before but its plausible because the frame size is 80 x 60, which is not a crazy amount of data with some kind of AGC applied format which is selectable (Did you select the correct one?) I assume you got it hooked up to SPI correctly but one of the problems seems to be the Input Clock rate. Now we know Raspbian is not very great at generating consistent clock rates consistently so you may be experiencing problems with this - The same way may other FLIR'ers are experiencing. So you may need a separate clock device. I suspect they did not include a crystal in the LEPTON to keep the size down and embedded devices usually have access to some kind of constant clock any way. (They recommend 25Mhz) Did you provide that? This software you talk about and the arbitrary values... No clue- Sounds like you just changing values without understanding what they supposed to be doing. They do have an SDK to download, why are you not using that? 

Update November 2014 Please note that you can also get USB HDMI drivers now. Some are 1 USB to 2 HDMI HD display and basic video. Also there is the new DisplayLink but this is best used on USB 3.0, where you can use 1 USB port to disaply 4 monitors up to 5 display links giving you 20 monitors. Support on Linux is unknown to me for these but they might be worth researching. I use a USB3.0 on a USB2 port for an extra monitor just for programming on Windows, works great. 

ANd ajax calls will appear in the console. Red if ERROR 500, click on it to see the page with the error result. 

You should check that you are not cross talking with other routers on the same channel. Use inSSIDer to evaluate what channel you are on and which ones are free to use. This can dramatically increase Wifi performance too! Overclocking FYI - I suggest you do not overclock your Pi. This causes problems with Wifi and LAN. This is one of the first things I also enabled and it really drove me mad with the poor performance of Wifi. 

Controlling The problem with these WS2801 LED is that the Input Output signal level is dependant on the Input voltage. (0.8 * Vcc) So to get it to work directly on the Raspberry Pi GPIO you can only supply 4.1volts maximum, which gives you a 3.2Volt Data level that is safe for the Pi. But some people say even if the LEDs run at 5Volt it still works- it might be a different version of the chip. The spec sheet you can supply from 3.3 to 5.5volts. The WS2801 actually uses a 2 Wire protocol 

Unfortunately there is no low power mode or sleep mode on the Raspberry Pi . When the Pi is idle running Raspbian 

I have installed G++ 4.8 with the C++11 standard. Searching around the internet I found some flags that apparently should decrease compile time considerably. I have ended with this, it compiles fine but not sure if its entirely correct. 

It seems like the watchdog is not receiving heartbeats "stroke" from the python scripts. For some reason they are not starting up with the Pi or there is another permission issue. Since you do not have enough to log in and disable the watchdog you will need to try and start in safe mode. This only works on the latest firmware 

So once that is done put the SD card in the PI and boot it up! gparted is a really great tool for resizing and managing partitions. 

If your app does not hit an exception break point while debugging but you still get an error, its something else that is broken. Maybe your SD card has corrupted files? Try another SD card and a fresh install Autostart app You can this via the WebGui Now 

In the document it says using will not raise errors. Only once you call stop recording. So it may result in half your video not being recorded. Maybe instead of , use the with a small time period (like 5 seconds?) If errors it should raise an error and tell you, instead of pretending to carry on and you only realising long time later. I hope this helps, from a psuedo logical point of view. 

I would not buy anything like that from China. 95% of the time electronic devices direct from China: 

Here is some sample code how to initialise SPI in WinIoT. You first need to enable GPIO, then the SPI. 

You could use HDMI for your main monitor output. For your touch screen you, if it only needs to be simple GUI you could try a Serial LCD and Touch Screen. A more advanced independent one is a µLCD-32PTU by 4D Systems. I bought one of these before the Pi was invented... its really awesome but it costs £80. So buying another Pi would be 3 times cheaper and solve the problem. You could also develop an HDMI switch, if you do not need both displays on at the same time? Switch the HDMI using an external HDMI switch controllable by software. You also get USB HDMI screen adaptors. Maybe you can find one that works on USB2.0 and Linux, that way you could get basic 2D graphics rendered to your small touch screen (using X framebuggers), but these things usually cost very close to a the price of a new Pi any way. 

You have access to the entire source code at the following link $URL$ The Dashboard is called the DefaultApp I have a sneeky feeling that you find your destiny in this file NetworkListControl.xaml.cs by using the line 

Windows Developer Program for IoT has announced that they will support, and supply a FREE version of Windows X on the Raspberry PI 2. Has anybody had any beta versions running on the Pi 2 and is it possible how can I install it on to he Pi2? 

If you want to be able to "automount" any kind of USB device on any port with FAT32/NTFS/EXT it will require a bit more work. You can simplify the location by always mounting any USB device to the same device namespace location by using udev again..(restart required also) 

Now simply, form any other machine navigate to and add the folder you want to share. You will get a secret code there that you need to paste in on your Mac (Yes, I know, you need to install it where you want it) But think ahead a bit, you can then install BTSync to a private vps or any other PC where and supply it with a secret and it will stay in sync, across the internet, lans or even mobiles. 

* Hitachi HD44780 specification from sparkfun The error code is saying you supplied it with a character that is out of its range. It does not know how to translate it. This could be cause by Python? Or the Library you are working in. But somewhere you are not supplying the expected value,even though it looks like you are. Possibly caused by UNICODE instead of UTF-8 issues??? 

125 Kilo Hertz - Close Proximity This is a really great way but these only work up to 15 centimetres. That is only 1/4 of what you need. This Olimex, produced in Europe emulates a keyboard input, which the Pi can do over USB. Its cheap at 5 GBP and works with tags on 125Khz 

With a USB you will get a new Serial port listed under /dev/. Then you can use Python or C# Mono to run and read UART and do things you want. On the Android side you need to create a BlueTooth Socket 

This sub circuit which is connected to the rail has 3 voltage regulators with their own filter capacitors. 

* Reference Pull Down resistor Its only purpose is to keep the PIN low when its in the floating state (not initialised by Pi yet) So the Resistor is connected to PIN and GND. Then your device is connected to PIN as normal. So both Resistor and device are connected to the PIN. But only resistor to GND (So it pulls down the PIN on any stray voltage - And you activate it it will go to 3v3 and the resistor will no longer pull it down but your device will sense the change- This does not affect PWM) This pull down can be on your devices side too) An easy to follow example.(Ignore the part numbers and pretend that is your Pi pin and the thing-a-ma-jig marked as CCR2 is your servo) 

Firstly may I suggest you rather not use apache, its crazy heavy on resources. You can use nginx with PHP. But also I would recommend not to use PHP either, as its, pretty much a relic. I would suggest using Python with Flask . 

Since you have already deployed the app to the Rasbperry Pi Windows IoT via Visual Studio you can simply select and any breakpoints will be hit.