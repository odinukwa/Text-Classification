You asked for the entire class to be instantiated. Looking at the class enumerator on msdn I'm not surprised it failed needing administrator access. You could try querying the specific properties you need and see if you trigger an exception, but most will require admin access. Here's the msdn page for the class you're using: $URL$ 

When using network resource file systems, and UNC paths, you should use the PSProvider in Powershell. Here's a couple examples: 

uses PoSh's job system behind the scenes to perform its function. All of your script's code is completing before the job completes. This is why you're seeing your completion message in an unexpected location. To fix this you need to assign a variable to your call and remove your pipe to . This will give you a handle to the job that's running in the background. You then need to monitor the progress of your job with a loop. Something to the effect of: 

If you select any given ticket and run a on it you can view the list of properties. None of which are mapping back to the Affected User. Thinking perhaps the ticket data is saved with the user object, I ran the following code: 

It's important to note that if is run without usage of either the include or exclude parameters, it will run those tests. While the above listed tests will trigger a failover event, the following tests can impact performance. They are: 

The WMI class uses the MSI provider to collect installed program data. This means you're only going to get data on software/packages installed using MSI. Further, calling this class causes a repair action to be executed on every program it returns. Most of the time this isn't an issue, but it will fill up the event log and can cause issues for some software. You can get more detail on this link: Win32_Product Class Most scripters, coders, etc use one of two things; 1) Registry Query, 2) WMI query of the SCCM class . Obviously the SCCM class requires SCCM to be installed on the host. You can read more about that HERE. So that really only leaves the registry query for most folx. Don't fret though, because all the work was already done for you by TSG. Your pot of gold is "Use PowerShell to Quickly Find Installed Software" While I'd do things slightly differently than in that post, it has all the heavy lifting already written. With a little aptitude and some google searching you can customize as you wish. 

I am trying to set up 301 redirection for all the domains hosted on my Nginx server, and every attempt to get it to work has failed this far. My Nginx configuration is below. File: /etc/nginx/sites-available/all-my-sites 

What am I doing wrong? I really have no clue. (I tried my best, googling and referring to the documentation.) UPDATE: Actually, www.example2.com redirects to example2.com just fine. But www.example1.com doesn't. This is weird, and I still have no clue. 

Also, I just realized that if your application already uses a caching layer, something like Varnish, for example, Varnish in front of Apache serving cached pages and static content, you don't need to do anything! 

Here's the default.vcl, varnish configuration file, that I've built after lots of reading and referring: 

The error says, something's wrong in Line 33 of of , which happens to be this: (not so much of a coincidence, is it?). After seeing it, I immediately compared it with other lines, and then it struck me, an (equal-to sign) is missing! So, this is what it's supposed to be: and that fixed everything! 

Just found out. It's possible to disable PHP processing in a directory (and thereby its subdirectories) by adding something like this in your httpd.conf file: 

Considering that it'd give you a basic idea of how my webserver is set up, I'd like to go ahead and ask the questions: 

I used command to test if PHP-FPM's settings are fine (if not, it'll show me some error/info). So, here's what the output looked like: 

And my httpd.conf file looks like this (i.e. I've essentially disabled .htaccess, and have all the rules in the httpd.conf instead): 

If using .htaccess file, drop one in your static content directory (in my case '/var/www/example.com/public/uploads') with the following entry: 

The Nginx configuration is indeed correct. The problem's with my DNS configuration. I was using wildcard subdomain mapping for and records on example1.com (e.g. ), when it ALREADY has a record for . You can't map a wildcard subdomain when one of the subdomains for that domain already has a DNS record! 

I'm using to download a file from the internet and place it in a network location. The location is similar to which the cmdlet says it can't find and that it doesn't exist. To get to pass successfully you have to add the filesystem provider to the location like this: . The rub is that doesn't like destinations with the filesystem provider declared and errors with "The path is not of a legal form". The problem is further compounded by the inability to use and run the code in a remote shell on the destination server. blocks this usage. What's the solution to using with a network location? 

So what happened? Powershell interpreted our input as a single array containing two strings which were passed to the first (positionally) variable. To get the desired result using parenthesis you'd have to do this: 

When using a or with "Windows Cluster Aware Updating" and "Updating Run Profiles" would calling the cmdlet Stop-CauRun do any of the following: 

Mark, I had a lot of fun tracking this down for you. I can totally see where your line of thought is, but you're asking the wrong question. The question should be "Why can't I establish a 'servermanagerworkflows' session on my machine?" If you look in the and open the module and jump to line 383 there's an entry where Microsoft is intentionally trying to create a local session using the configuration. After the session is instantiated the magic happens in the following Try/Catch/Finally blocks. If you ran in a PS prompt on it's own, I'm betting you'd get the same error. To reinforce this, run and I'll bet you don't see as part of the list. So, next step is to get you the session config you need. Run cmdlet and agree to the prompts. If successful run again and see if the workflows are listed. If they are, you should be good to go, or at least generate a new set of errors. Cheers! 

I'm using an SCCM 2012 application deployment to install software. The specific install type is scripted installer as SCCM kept failing for exe validation errors. The script is powershell and successfully installs the software even when executed by SCCM. The problem is that SCCM only sees the return of 0 from the completion from the script. I've tried , , , and just a line item with the code for a soft reboot. None of them seem to be read by SCCM as the app execution log captures a return of 0. How do you output return codes from powershell so that SCCM can interpret them?