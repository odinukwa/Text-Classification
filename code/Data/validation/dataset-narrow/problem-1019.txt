The plugin works only for playback devices. To be able to have a device that uses for playback and does something else for capturing, you have to use the asym plugin to define different plugins for playback/capture. 

Second, to simulate key strokes, you need . If you do not yet have it installed, run . You can use to type text, or to simulate special keys: 

There is only a single control device for each card, so it is no plugin that allow to change what controls are shown. You have to manually select the playback/capture device in alsamixer. 

Your hardware does not support capturing its output; once the data has gone into the actual playback device, it's gone. You need to use some software that duplicates the audio data before it is written to the hardware. I'd suggest using PulseAudio; there you can simply select one of its outputs as capture source: 

Does netgear's r8000 router's 3 separate bands use 3 separate ssid's, or do the two 5ghz bands work as one? Also if it was used as a repeater, is it possible to use the 3 different bands totally separate for each other? Like if you had a 2.4GHz band and two 5GHz bands from different routers could you repeat those all with seperate ssid's from this one router? Assuming there all on the same network of course. This 3 band concept is new to me but was looking into a new router. 

I figured I would post what ended up fixing this in my scenario. In DD-WRT under setup/networking, I turned on IGMP snooping for bridge 0. I then had to add this startup command: insmod ebtables insmod ebtable_filter insmod ebt_pkttype ebtables -A FORWARD -o "eth1" --pkttype-type multicast -j DROP ebtables -A OUTPUT -o "eth1" --pkttype-type multicast -j DROP After finally figuring out that it took both of these steps, things seem to be working fine again. 

I'm interested in this too. It must be something specific to the Sony printer drivers, since most printers (inkjets, etc) will not have a count of pages remaining. Probably the best bet is to query the printer for information, and print out the list of values it returns and look for the number somewhere. I doubt there's going to be good documentation on this one. 

Also, you can press Alt+Spacebar to get the program's context menu (similar to clicking on the icon in the upper-right of the window. Then pressing left & right will go through the entire program's menus, but (depending on the program) can also go to the individual worksheet's context menu. If you get there you can then go down to "resize", which will give you the 4-arrows resize icon for the worksheet itself (not the main program window). Then press the down key, and the right key (which will let you resize the lower-right corner). Then use the mouse to resize the worksheet. Then press enter (or click the left button) to finish resizing. This helps with windows are larger than the screen and you're unable to resize them. Finally, go back to the original author, and swap their incredibly huge high-res screen with a more sane one. You'll never have this problem again :) 

The USB specification defines three synchronization modes for isochronous endpoints: synchronous, asynchronous, and adaptive. Nobody uses synchronous. For playback endpoints, adapative means that the device runs at exactly the speed at which the PC decides to sends data; asynchronous means that the device tells the PC how fast it should send data (this is done through a second endpoint in the other direction). An asynchronous device typically has three isochronous endpoints: one asynchronous output endpoint for playback samples, one input endpoint for playback frequency feedback data, and one asynchronous input endpoint for capture samples. It might also have interrupt and bulk endpoints for mixer control, MIDI, and vendor-specific stuff. The USB audio driver prefers an adaptive endpoint over an asynchronous endpoint, if possible. (But I don't know of any current device that actually has different endpoint types for the same output; the C-Media CM66xx chips certainly don't.) So if you want to run multiple devices at the same speed, you cannot affect anything with software configuration; you must use devices that you know support adaptive mode. 

I manage our shops network, and twice in the last year a single device has completely killed our network. When this happens you can't even access the router until you find/unplug the device and restart the router. The first time ended up being a netgear access point that wasn't unplugged before the wireless started on the repeater (making a network loop). The second time was when our network phones were updating firmware via our phone server and the phone server froze somehow causing one of the phones to be stuck in a download phase and another bricked. Somehow this brought our whole network down until I found and unplugged those phones affected. My question is, is it normal for a network to be this easy to break, or is it sooner something with my network? Could you connect into any network and bring it down with a single device from the inside, or are there further measures that can be taken to prevent devices from easily crashing the router? My network is an r7000 router running DDWRT, 12+ windows 7/8 computers, XBlue phone server with network phones, ip cameras, printers, 2 ubuntu bridges connecting other computers/cameras, phones, etc using IPV4 

For to work, the actual sound driver must be loaded (check index 0 in ), and the module must be loaded. 

The devices are just for compatibility with the legacy OSS interface; the actual ALSA devices are in . To show incoming MIDI messages, run with the port name shown by . To show the raw MIDI bytes, run with the port name shown by . 

The Xonar DG(X) has three different output configurations, which can be selected with the "Analog Output" mixer control. You have to change it if you are not using headphones at the front panel connector. 

DOS programs expect to access the hardware directly. Emulating such direct hardware accesses would require some kind of virtualization (DOSBox or a VM), or that the actual hardware has built-in support for emulation (modern chipsets typically can do this to allow to redirect PS/2 keyboard/mouse accesses to USB, but not for anything else). 

If the computer will be stored a long time: If it's small enough, I'd put it in an airtight container with a desiccant (you could get one of those ones intended for closet dehumidification. A laptop w/o battery in a ziplock with a "do not eat this" packet would be fine. A PC in an air-tight plastic storage box with a "dry closet" pack would be fine too. Batteries are bad - they go bad, leak, etc. Ziplock those separately. For PC's, there's a battery on the motherboard for CMOS/etc. You could remove that and bag it separately. There's a small chance that it'll leak and corrode the motherboard. However, if the computer will be stored unused for periods, but also used occasionally, then I'd just clean out the dust once in a while, make sure it's not in a moist place (since it will rust quickly), and keep an eye on any batteries. For laptops, remove the batteries unless you're actively using the computer. Half charged is best. The battery will eventually die anyway, but this will give it the best chances.