As long as you did not burn any bridges, you should probably be able to get your old job back. There is nothing a family likes better than the return of the prodigal son. As far as the new company is concerned, it is a legitimate reason to leave if you discover you do not like a place having arrived there. 

What you are proposing is called "honesty testing". Many companies, especially banks, do it routinely, but are very secretive about it for obvious reasons. There are written honesty tests you can buy. Honesty tests are impossible to fool unless the person actually knows the design of the test or has specialized experience in the psychological testing field. With a written test, however, it will be obvious you are testing for honesty to any intelligent person. You can also use plain human judgement to detect honesty levels. A dishonest person will take shortcuts in everything they do and vice versa. A dishonest person will exaggerate their accomplishments and hide negative facts. Analyze the resume to determine the extent to which it is faked up. A dishonest person will often be very calculating and disengenuous. One approach is to try to find some embarassing weakness in their background and probe them about it. If they become uncomfortable or evasive or phony, it is an indication of dishonesty. Another approach is to put them under pressure and if they begin to smile, try to make jokes or otherwise disarm you, it is an indication of a dishonest mind. Often honesty can be determined just from appearance. A dishonest person is more likely to wear jewelry, makeup, have elaborate hairdoes and use disguise elements, like sunglasses and scarves. A simple test for honesty is to arrange for the candidate to be in a place where they are not observed and leave a piece of trash on the floor with a trash can some distance away. If the candidate puts the trash in the trash can, they are honest. This test can be modulated. Smaller pieces of trash farther away from the can are a stronger test. You can even eliminate the can entirely. Somebody who picks up a small piece of trash and puts it in their pocket to throw it away later will be scrupulously honest, a very high bar. A similar test is to leave a picture akilter or something knocked over. If the person corrects the problem when left alone, it is an indication of honesty. The reason tests like these work is because an honest person is taught to think of others and be considerate, but a dishonest person will think only of themselves and act in a selfish way. 

Absolutely I would include it. If you look at your 'Edit Profile' page, there is a section called 'Add A Section'. Under this, I would put them under the 'Honors and Awards' section if there are specific awards you obtained. There is also an 'Interests' section where you could put something about your love of music. 

What you've written looks good to me. If there are legal/personally identifiable information (SSN, DOB, etc.) issues, you should definitely check with you company's lawyer if there is one, or consult someone if there's not. I would put this in big, bold letters, at the top of the email's body, so it can't be missed. As for your questions: 

Edit: Let me be clear: There are some vague details here. There is probably more going on in this situation, and obviously the story from OP is only from their point of view, so we cannot know the manager's point of view. I have a problem with how this and other things was handled by the manager because of the following statements. 

Do not give notice unless it is unambiguously clear that the notice will be respected. If you have any reason to even suspect your employer would fire you for giving notice, then do not give notice. Simply leave on your last day. You can only claim unemployment if you were "laid off", in other words let go for budgetary reasons, which is not the case here. Also, applying for and receiving unemployment is humiliating and time-consuming. Since you have a job lined up, you would probably not qualify for unemployment anyway, but in any event it would probably not be worth it just to try to collect two weeks worth of unemployment. 

First of all, they advertised the position, so as the offeror the onus is on them to state the FULL TERMS OF EMPLOYMENT which includes the amount to be paid. Asking candidates for numbers is a dick move along the lines of rug merchant haggling. Never give a number when a job advertiser solicits it from you. It's a different story if you approach the company asking for an unadvertised position, but if they advertise the position, then they should state the salary that comes with that position. If someone verbally asks you how much you want, say "You advertised the position, what does the position pay?" If they come back with "It differs depending on the candidate's experience." Then you say, "Ok, for someone with my experience, what does the job pay?" If they pressure you, say "Look, you advertised the position. If you want to hire me, I suggest you offer me the most amount of money you are willing to pay for someone of my skills, and put it in writing." Of course, you could always turn the tables on them and give them some of their own medicine. To do this, put down a low figure on their form. Then later when they give you some pathetic offer in writing, just reject it because it was way too low. 

Apparently the developer in question (let's call her 'Sally') made a mistake. Was it something that was quietly added to the codebase and actively hidden from testers, management, etc., or was it a 'fix' that simply didn't get mentioned? Who knows, and it doesn't really matter, because it's not the OP's business to decide or act on that, other than possibly notifying the manager if she suspects it's the former. My original answer below is to illustrate that the answer to 

Not something that any manager should so, regardless of what justification they could have. Does it happen? Sure, but that doesn't mean it's the right thing. This should happen behind closed doors, and it's part of the manager's job to stay calm and professional about it. 

It's pretty clear to me that your manager is most certainly gathering evidence and working toward getting rid of the other person. Explaining that "we have to let her own mistakes" is not-so-subtle language for "if you continue to help her, I'll never be able to argue that she can't perform her job and get rid of her". Any manager worth their salt would expect the team to give extra help to the 'weak link' if you will, bringing them up to the level of the other team members. The best thing in these cases is almost always communication. I would first talk with HR and ask how they recommend handling the situation. They are already aware of the problem that exists between your manager and the other person, and should be able to tell you if what your manager told you to do is acceptable or not. You should be able to work out with a representative from that department how you can meet with them privately, maybe even on your own time, if you're concerned about how your manager would take knowing about the meeting. Developers frequently make changes that more senior staff are not aware of: it's only an issue when those changes don't go well. I would guess that your manager probably had a similar, painful conversation with their boss, and simply let the 'sh*t roll downhill' if you will. Part of your job as a developer is fixing bugs when you find them, and I doubt that your manager wants to be aware of every small change you make: they've likely got a lot more to worry about. Bugs happen; if they didn't, there would be a lot less need for developers. IMHO, your manager handled this poorly and now has a grudge against your co-worker. Even if you did continue to help your co-worker, it can be difficult or impossible to change someone's mind about another person who they feel has slighted them, as your boss seems to feel after having management talk to them about their 'outburst'. Once you talk to HR you'll know how this is going to play out. Either they will counsel him to tell the rest of your team to disregard his earlier instructions, or they will counsel you to do what your manager said. Either way, as long as you can talk to them confidentially, your manager won't have anything to hold against you. 

Remarking on someone's work habits is strictly the prerogative of their direct supervisor, whoever their hiring manager is. It would be out of place for you to talk to them directly about it. If the person's supervisor found out you had done such a thing, they would not be happy about it. If you are unhappy about it, complain to YOUR boss, then it will go up the chain and back down again until it reaches the other person's supervisor. That is the proper channel. Be aware that some people, especially those with families, consider their work and family hours to be strictly segregated and if they decide "I go home to be with my family at 5pm," then that is what they do. Trying to infringe on this time boundary can have serious organizational consequences. 

Your first try should be simply to ignore the request. If they insist, point out to them that you are still working for company XYZ and you do not want to alert them that you might be leaving, so you can't ask them for references. Normally companies do not ask for references from recruits that are actively employed somewhere else for that exact reason. 

Despite whatever happened with 'Sally', the OP should not be expected to lie to a coworker (even a slight lie as 'tell her you're busy') at the instruction from a manager. This does not address disciplinary action that should / should not be implemented against Sally due to her own actions. It's entirely plausible that she was totally at fault and should be fired, suspended, demoted, or whatever for violating company policy/protocol; hard to tell from where I'm sitting. Regardless, I don't believe the reaction from management was appropriate. end of edit 

There's no 'standard' format, as warnings can be of different severity from company to company, and depending on the report's content. I've seen companies put a disclaimer at the footer of all emails (auto-generated and otherwise) stating that there could be legal repercussions for distributing to anyone outside the company. I've also, myself, added a CYA of the sort you're using on things I've done. Assess the reason that you feel you need the warning, and that should guide you to the appropriate wording. A potential pitfall: Managers/executives may not like this, if you haven't discussed it with them. You may find yourself being asked why you don't have faith in the reports you've created, or asked to nail down a specific accuracy %. 

Your boss repeatedly ordered and/or guilt-tripped you out of taking vacation time which you were fully entitled to take. You made a regular habit of putting in lots of overtime (I'm assuming without receiving any extra compensation for it? If so, make that unpaid overtime), but that still wasn't enough to stop your boss from holding your vacation days hostage. Or enough to stop him from berating you when you told him you were leaving (or at other times during your employment). Your boss/employer shortchanged you on all of those vacation days that they bullied you out of using, when you left the company. Note that depending upon your locale, this may actually be completely illegal. Your boss made vague promises of equity or other compensation in order to keep you on a wage that you both knew was too low. For 10 years your boss was "too busy" to actually flesh out or make good on those vague promises (but still had plenty of time to talk you out of taking vacations, berate you about deadlines/for not putting in enough overtime, and so on). Let's be clear, this didn't happen because you were too young, or because you didn't fix terms in advance, or because he was just too busy. It happened because he had no intention whatsoever of ever making good on those vague promises. 

The problem is that there is an entire field called "Information Technology" or "IT" which is centered around networking. In most companies the development staff and the IT staff are completely separate. When you said you were specializing in "networking", the interviewer naturally assumed you wanted to go into IT and had been taking IT courses, not programming courses, so he lost interest. 

Companies can be big places. One group or division may have completely different practices than another. I would not worry too much about what other people in the company are doing. Usually each programmer works on their own stuff. In 25 years of programming I have never had somebody mess with my code at any significant level. When people take over other peoples code I find they always rewrite it completely. As far as debugging other people's code, that is inevitable. The more junior and less productive you are, the more cleanup and junk work you will get. If you are highly productive, you will spend very little time doing secondhand coding. There is nothing more annoying than a junior 3000-lines-a-year programmer complaining about the style of the base code. Once, a company I was at hired a contractor of weak abilities who was assigned to work on some components which were a tiny fraction of my output and complained about my "spaghetti" code. Of course, Mr. Beautiful Code did not actually write much beautiful code and consequently he was fired after a few weeks. Personally, I never have a problem with other people's code. I don't care how bad it is, or what language it is, or what its style is. I am a master programmer so I can handle it and it doesn't bother me at all. Once I wanted to play tennis with somebody and they refused, saying, "Sorry, I don't play with bad tennis players because it throws off my game." That's the mark of a total amateur. If you think playing with a novice will "throw off your game", you have a long way to go to master class. If you want to know what good code looks like, check out Google Code Jam. The submissions from the top guys there completely blow me away. I am a very good programmer, but seeing that stuff, it is like watching a grandmaster play chess, just amazing. Forget the OO nonsense your professors spout, they are worthless; let the Code Jam guys be your models, because they are gods. You will learn WAY more reading their code than some dumb design handbook. 

I wouldn't stand; it probably would seem intimidating, or at least odd. I've been that manager stopping by and would not expect someone to stand. Definitely offering them a chair if they're sticking around is a good thing to do. One other thing I feel I should point out, since you mention a 'beginner' and 'entry level job': make sure to give your boss (or anyone, really) your full attention if they stop by. This is a no brainer for some people but I've known plenty of others who will continue to work, look at their phone, or whatever during a conversation (and I catch myself doing it now and then). When someone stops by, push your chair away from your desk and turn to face them. Focus on the conversation until it's concluded. 

Make sure they know how this manager is 'managing' the team. Ask them how you should deal with the situation. 

Graphically. Are you using anything to keep track of all the various tasks that you are performing? Something like Jira, or Trello, or anything similar? If not, it sounds like you really should be. Trello is free, or $10 and a couple hours of your time will get you a 'starter' instance of Jira running on your own host. Either should be sufficient. Or if you want a retro solution, post-it notes and a whiteboard will also work. In any case, I'd suggest that before you start doing any work for anyone, you log a descriptive item in your tracking system. Mark items as being 'in progress' when you start working on them, and 'completed' when you finish. In short order you should end up with a backlog of "things I have to do", a running tally of "things I'm currently doing", and a list of "things I've done". You may also want to log time/hours against things as you complete them, so that you can get an indication of "this is how many things I can do in a day". When you have something like that, it's very easy to show people your massive backlog of work, the 6 things you're trying to resolve right now, and the dozens of things that you've done that they may not even be aware of. Even if they're not IT savvy, they'll get the point that you're overworked and working hard. Present your worklog to your manager, and explain the situation and point out that it's just not physically possible to complete all the work that's allocated to you in realtime. See what sort of solutions you can work out, such as maybe hiring a second 'IT Guy' for the organization.