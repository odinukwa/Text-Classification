You can also use File -> Export -> Export OVF template and then import it. Last time I tried it, i think this does preserve the vmdk format. Not so sure now as it has been quite some time. 

either will work no issue there is an option to have the task run even when the user is not logged in. whether user is logged in or not. you need to check that. 

It is better that you fix the vm datetime. It is quite a complicated issue actually if by vm you mean vmware. $URL$ if it is some other vm system, i think the issue would be similar. turning off consistency check etc. is not advisable because they are there for a reason. a system with time being inconsistent will affect integrity in many other ways. 

logrotate itself has no such option. You can add a cron script that find the oldest log to remove whenever the free space falls below your criteria. You can do some other validation as well. However, getting disk too full all the time is not a good idea because the system will not be able to create large temporary files and could cause application failures. 

If you cannot even ping the localhost, then try to ping lo addresss 127.0.0.1 to see if that works. If not your lo interface is not up and you need to fix that. Dhcp working? Does that mean your virtual nic is getting all the network information? What does ifconfig command return by the way. 

In linux you just install rinetd for your distro and configure the parameters, and you are done. Windows has a port as well: $URL$ Yes, iptables can do that as well but I have always used rinetd as it is more straightforward. 

the original files should be one without .rpmnew so for instance, you should have a /etc/ssh/sshd_config diff /etc/ssh/sshd_config /etc/ssh/sshd_config.rpmnew will show you the diff. rpm does this to prevent overriding your settings. if you are looking for the previously installed rpm, you need to find that rpm, and then extract it with rpm2cpio and then cpio to unpack the files. then you should be able to find the default configuration files in the unpacked files. 

while it is possible, it is quite risky. you should back up the data before rebooting. it is easy to forget something and the system might drop to a maintenance mode. so i would not recommend it unless you have have out of band access to your server. take a look at this: $URL$ 

there is no command to do auto paste, but you can recall any command into an editor to edit it before executing. this may achieve what you are looking for, but upon exiting the command will execute so if you want to abort, you should clear your edit buffer before exiting your editor. fc -e vi 372 372 

if either of the PVs gets corrupted, your LV will also, but that is not a likely occurrence when you have raid 1, because it would take both disks to go bad. i am not sure these days we have disks that small, or are you using logical disks? in any case, it is quite a robust setup otherwise. everything has risks and you can really only compare with an alternative configuration to say more. 

openid usually runs at the web application level so is os-independent. since most web apps such as php, python, ruby all run on windows, you should be run one, though i have not done so. $URL$ 

it may not be reading your config, or your config is broken otherwise. use ssh -v to see which data config it is loading from, and paste your output here. the config entry you listed seems to be correct, at least for the current version of ssh. also, make that the first entry to avoid something else clobbering it. what is your distro and ssh version, by the way, so that others with the same can help you more. 

if you do no write to your vm disk, yes, the snapshot takes 0 amount of disk, but as soon as you start writing, lvm snapshot space will start to fill, and it is full, your snapshot will die. that is why lvcreate -s still requires you to allocate some disk space. if all your vms are going to be readonly actually you can just use a cd or dvd. however, you do save the base image size, as each snapshot will only take the incremental amount of space. so if your vms are all mostly read with little write, you still gain. as to performance you just have to test to see if it would work for you. 

Check your resource allocation to see if there are swapping and/or ballooning. Also, do you have an equivalent physical server or nonesxi vm to run the same software stack to compare with? It may not be esxi and could just be how your application configuration is causing the excessive memory needs. 

Try 2 more things. 1. Lower the innodb buffer pool size. 2. Edit mysql initial script and add --innodb option. I wonder also if your package is buggy. Could you try a different minor version? Also, I assume your mysql server got upgraded as well? Maybe that version is broken? Precise is not final yet. 

no, multiple vlans can be in the same vswitch and have worked without any problem. but your management interface though should in a separate vswitch, or actually if you could afford it, with a separate group of nics. 

Puppet is not really designed for deployment because when there is a large number of files involved you could run into issues. You can look into capistrano for app deployment. $URL$ 

I would suggest that you use a network server with a filesystem designed to handle what you need. The first thing that comes to mind would be something that supports zfs (freenas and nexenta, though the free version of the latter has some limitations) or if you can afford it you can buy something like netapp. I am less familiar with UFS available on freebsd etc., but heard that would work too. 

If you separate os and data, and if os is on lvm, you can use lvm snapshot to backup os and rsync for data. That is how i did it a long time ago. 

you can use iptables to redirect port/ip. examples are given here: $URL$ or you can install rinetd, which i think is easier, in my opinion. i usually use rinetd. 

sometimes the service is called mysql instead of mysqld. maybe you can try that. do an ls of /etc/init.d to show what is actually there. 

it looks like but actually not an IDE cable. it is described in detail here: $URL$ I still have one if you really need it :-) thanks to Chris McKeown for pointing out my mistake.