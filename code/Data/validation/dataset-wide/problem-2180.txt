So, my boss and I have had a rocky relationship from the start. While he recognizes my ability to get what he needs done, he likes to micromanage my progress, which I do not respond well to. It's a small business, and new legislation has created an emerging market for him to corner, and corner it he has. He's counting on me to help him with the production in this, and I have spent the last month streamlining it, getting which was originally a 10 hour build down to 2 hours per unit. After three months of this sour relationship, I started actively job searching again. Three months into search (six months into my current job) I am scheduled for an interview with a company that would put my college-earned-skills to much better use (I could have done my current job fresh out of highschool with the same results). I'm not trying to count my chicks or anything, but if this new job does pan out, I have to take it. Aside from the possibility of a boss with whom I may have a better relationship, it's much more in line with my expertise and from the tone of the job listing I may start out at nearly double my current salary, the company also offers insurance and benefits that my current employer doesn't, and probably can't. This is an office of three people (me, the boss, and a programmer). If I leave, it will basically kill their workflow. I'm not going to be as brash as to say I can't be replaced, but it would take my boss/coworker valuable time to get someone else trained and settled into my position; this could potentially cost the company hundreds of thousands of dollars. I just would not feel right about doing that. TL;DR My boss has a big project in the works, I may be leaving my company, I want to offer my help with this project. I figured I'd offer to come in, week days or after hours, help with the actual assembly/configuration of the product, and possibly train my replacement to perform the task in the streamlined fashion I've developed. When/How is the most professional way to offer this? Should I bring up the subject of compensation for my time? 

I work in a cubicle floor, and it's well known that due to ventilation quirks there are areas that are hot and areas that are cold. While most people in the cold areas just wear their jackets through the day, a few move from "winter cubicles" to "summer cubicles". If you work in an environment where you can maybe move a few aisles down I'd suggest it to your manager. 

If you really want to try to enact change, suggest Slack to your supervisor, and if he doesn't escalate it, don't push it. Leave the excel thing alone for now -- Communication can be routed through other channels, but task tracking is mission critical. Additionally, they probably have lots of processes and procedures in place for how to use excel, and I'm certain less than half of those could be easily adapted to Trello. If they find excel no longer works for them at some point, you can suggest it. Alternatively, if you become a person of authority in the company, then you can also suggest it. Edit: It might help you to read a question I asked and at least the accepted answer to it. A word of warning, I didn't take O. Jones' answer to heart at the job I was at when I asked that question. While I can't say my eagerness to implement change was the only problem with that job, it certainly didn't foster a healthy relationship between me and the owner. Now I have a nice ugly "do not contact" on my resume because of Feelings about how I left the place. 

My boss and I don't get along. I've decided for my own welfare, it's time to move on. He only employs me grudgingly because of the time and cost of finding a replacement. He will not give a good reference, both because he doesn't like me, and he'll take it as a personal insult that I'm looking for employment elsewhere. If he gets wind that I'm considering searching for a new job, I will be booted out the door. Of course, I'd like to display that I have been working and doing at least a decent job at my work, and need a reference. I feel my best bet for a good reference is to ask my direct supervisor, who has an excellent relationship with the boss. My supervisor is aware of the issues between the boss and I, and sympathizes with me somewhat. I can't speak on what sort of reference he would actually give me, but it's bound to be leagues and leagues above what the big boss would. Knowing if my boss caught wind of my desire to move on, I'd get a boot to the backside, is it wise to ask my supervisor for a reference while at the same time asking him to keep it from the boss? Would it be wiser to instead simply not list either of them and rely on my interview to sell myself? 

So, as a Coder, I'll take my knowledge from my job and apply it to my hobby, and take experience from my hobby and apply it to my job. On occasion, this can lead to very similar code appearing in hobby projects and in work solutions. I'm not copying market-level logic (I work for a tax software distributor, and am coding a music sorting library), we're talking low level code, stuff like sorting algorithms and database connectors. I've occasionally come across issues where I use the same design pattern in my work environment that I've used in my hobby coding. I'd like to throw it up on github, but at the same time, it may have already made it into my companies repo. Knowing that, how can I keep my profession and my hobby seperate? How can I show off my hobby work while still providing solutions for my employer? 

I have found a better opportunity, and I suspect the possibility that my boss may request I do not return for various reasons. This leads me to be tempted to get my desk all packed up and ready to go. On the other hand, such premature packing will tip at least my coworkers off to the fact that I will be gone in the near future, and I would rather be the person to deliver this news myself. Is there a standard protocol for this? Being rushed to clean out my desk under the watchful eye of my boss would be the icing on the already awkward having-my-two-weeks-declined cake. At the same time, I feel that having my boss learn I'm leaving from someone other than me would burn bridges pretty fast. TL:DR - Should a desk cleaning occur before or after two weeks notice in the US? 

Flying Hotel Bookings Public Transport (There is no public transport infrastructure to speak of in my small city) 

My employer is moving in a new direction for which I seem to have been picked to be the (de facto) consultant for everyone else in the building. I have no official title or position that indicates that shift in responsibility, I'm still a level 1 grunt, I just have a different background that makes me more familiar with this new direction. My position of subject matter expert is a de facto position not recognized in any way by the company, it is just a matter of convenience for my coworkers to be able to ask me instead of taking the time to ask someone in our offshore office, who are officially recognized as being the people to consult for this new system (we have to wait at least a full day for a response). I don't mind helping wherever I can, but the problem is that I also have my own workload and am lagging behind on it due to the amount of queries I receive concerning the new initiative. I understand that as a whole, it would be better for one person to be blocked if it means that 25+ other people are not, but at the same time, I don't want to seem like I'm making excuses to my management when I say "I had to help team members x,y,z and w with the new product" as an explanation to why my own work is done. I've come to the conclusion that I'm going to have to start turning away (at least some of) the requests of this nature in order to get my own work done, but I don't know how to do that without making people upset and getting a reputation of being unhelpful. 

So, I was hired early this year. I got about 4-5 months of training on the product I'm QA'ing for, then I was moved out of manual QA into automation of tests in our application. At the moment, I'm coding UI Tests for older well maintained straight forward regression tests. Because my workload, coding UI tests, is so different from the people around me, there is very little collaboration that needs to occur. Unfortunately, this has left me feeling a bit socially isolated; Most days I come in, get my coffee, read the new developments with our product, and then get to work coding UI Tests until I leave. When I'm bored, or feeling like I need a break, I don't have the "I need to discuss the product" excuse for social interaction, and it probably wouldn't be prudent to go up to a working coworker and say "I'm bored and need a break" as a conversation starter. The company culture has no issues with employees spending a few 30 minute periods just chatting per week; they believe it to be good for productivity. My problem is, I have nothing to really get started with with my coworkers, so I don't spend much time out of the cubicle. What are some good ways to integrate oneself into the culture when your work-load is so isolated? 

Something worth noting here (I was told a very similar thing when I was in a similar situation) is that the company was running fine before you started interning. They will continue to do so until the leadership decides there needs to be a change. Additionally, in a company of 50+ people, it's unlikely none of them have heard of Slack or Trello. They may have considered it, but decided the transition would be too much work. There is a cost associated with bringing new technologies into the fold, and it's more than just the cost of the license. You or I might pick up Slack pretty easily, but it took the current IT admin at least 8 weeks to teach 87 year old Wanda in accounting how to send a message in Skype, do you really think he wants to do that again? What about productivity lost due to people making mistakes with the new software? 

I would be way more concerned that he tried to get you to do his school work than not knowing the IT field. The thing about managers (at least good ones who know how to manage people) is that they only need topical knowledge, and respect you for the knowledge you have in the area and take your advice. As far as his knowledge of the product area goes, I don't see any issue. To reiterate though, asking someone else to do personal work is a major red flag in my book; if you have ANY proof of this beyond an unrecorded conversation, I'd look into raising this with whomever may be making the final decision. As to applying yourself, my previous point is also still valid. Management comes with a completely different skill requirement and different demands than any position that it is manageing. While in depth knowledge of the area you're managing is a plus (which it sounds like you have), it is not the core skill set of a good manager. Your job requirements and day to day activities would drastically change. To this end, you need to ask yourself "Do I even want to manage people?" before you think about taking the position. 

It sounds like your experiencing general anxiety in the workplace about being the new guy and not being up to par with (I assume) seasoned coders. This is pretty normal, and can be generalized to any workplace. As far as not being on the same level as your more senior coworkers, to boil it down quite simply, you're not; the problem comes when you don't recognize and fail to do something about that. First and foremost, take some time to review the technologies you're unfamiliar with; while it may be irksome it won't hurt to take some time out of work to do that. SO can be a great place to answer any specific questions you have, and by answering specific questions, you will get a more general understanding. It also sounds like you're afraid to ask you coworkers questions for fear of being considered foolish. If the logic is too hard to follow, don't be afraid to ask about it. I'm not saying you should be asking about each for-loop or function, but it'd be good to ask if you're not sure how something's being accomplished; your coworkers will find out you don't know one way or another (and will prefer being asked directly instead of having to debug a bug you may have inadvertently introduced)