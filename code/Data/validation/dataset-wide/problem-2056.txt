You have to look at this in the abstract. If you feel the employee was truly negligent in handling company resources, then you can discipline them on that basis. It doesn't matter what they were handling or the value. You would have to prove a very high level of negligence, in the US at least, to get the employee to actually pay for the loss. Leaving the money next to the other money would sound perfectly reasonable to most people. 

Paid for effort is best, for everyone, when the actual effort is unknown or difficult to predict. With this model, you are not at risk of being shorted and the customer can accurately, and continuously evaluate the ROI of the effort. Paid for results is best when the effort is predicable, not estimateable but predictable. The prediction should be made on past, repeatable performance. Examples: 

It depends greatly on the policies of you employer. However, personal commercial project are clearly inappropriate. There are all sorts of legal issues around this that neither you or your employer want to deal with. So, don't do it. However, personal projects that are 'community' projects or could otherwise benefit your employer are grey area that you can legitimately ask your manager about. Many software companies actually encourage this. For example, if your company users SuperMegaCRMPro, Gold Edition and your personal side project is to convert it's weird error messages into a human readable format, that would benefit your employer and the entire SMCP community. To comment on the ownership issue, yes, the company can claim ownership and full rights to the software but, there are also practical issues as well. Basically, Worldwide Widgets Incorporated has no hope of monetizing SuperMegaCRMPro Error Converter so, well, they just won't even try. There are lots of such tools out there. 

Because it makes the readers go to sleep after the 567th repetition of I. And because it saves space which is helpful when you have 30 years experience and only 2 pages to put it on. And since it is a CV, the reader will assume it was you and no-one else who did the task. 

It is difficult to feel that you are being ignored deliberately. The behavior of the third party people in the meeting was beyond rude. However, given that they do not work for your company, and if they are clients, you need them happy to do business, this is not something you can easily correct. The only person who can start to make a dent in this sort of thing is the senior manager who was present. It was unlikely he realized that this was going on. People tend to pay less attention to what is happening to other people than to what they are trying to accomplish in a meeting. I would suggest that, since you generally have a decent working relationship with this person, that you talk to him. Tell him their behavior made you uncomfortable and that you felt that he inadvertently made it worse by his lack of support. Ask him to redirect technical questions to you, ask him to publicly give you credit for things you and your team did (that he did not when you were sitting right there in the room was definitely unacceptable behavior). He doesn't have to specifically call them out for their behavior, just redirect their attention to you when you are presenting technical information or when they ask him a question that you should be answering and make it clear that he values and trusts your professional expertise. The fact that he did not, devalued you to these people even more. You have a job to do in these meetings and you need to do it even when the other people are less than attentive. But you need the support of your own colleagues to do so when it gets that bad. A lot of the time women are too passive about asking for the support that they need to have to be perceived as effective and competent. They are often too passive about speaking up in the meeting even when it is fully appropriate to do so. It feels a little too much like not being nice and we are socialized to be nice. If you talk to him and his behavior doesn't change, then there are two things you can do. First, learn to release your annoyance and anger by recognizing that he is just a jerk and it has nothing to do with you. Next, learn to deal with office politics more effectively because you need to be able to shut down a snake who is grabbing credit for your work if it turns out that is what he is. And grab the credit yourself. For instance, in the case to you and your team being complimented, but not getting the credit from him, the next sentence out of your mouth should have been something like, "My team will be so pleased to hear your compliments. I will be sure to pass them on to them how much you appreciate their good work." Make sure to put the sentence emphasis on the word, my. 

This question can only be answered by the appropriate departments within your company, Legal, HR, etc. In the interim, you only practical option may be to assign tasks that are not on any critical path and have very flexible delivery dates. The 'nice to have' features that can be shipped whenever they're done. 

My opinion, you're overthinking this. Breaks in monotony are work time just as much as typing in the editor. It's part of the creative process. So, chatting with teammates, getting a snack, checking SO while waiting for a build to complete just come with the territory. The situation is the same for ancillary distractions such as random phone calls and such. No one stops the clock for two minutes to answer a call from their mother. Over time, you'll develop a professional sense of what a work-break (billable) vs. a break in work (not billable). Yes, this is different then task based work, such as answering phones or data entry. Also keep in mind that tracking such trivial 'breaks' can take as much time as the breaks themselves. Finally, this is an impossible thing to judge. Some very productive people don't appear to do much work while some other work hard for relative average output. Lunch is a grey area. If you billing as an FTE, then the daily rate may include that but generally, you don't bill the hour you take for lunch just as you would bill any time taken for doing random errands during the day. 

I try to make it less generic, of course, but that's the general format I use. Basically, I'm outlining their next steps and putting the information they need for those steps right in front of them so they can follow up without a second thought. It's a similar idea, except you are empowering them to take the action you want from them instead of taking control directly - which can feel pushy or manipulative. Influence and empowerment is almost always better than control or manipulation in the long run. If you don't hear from them in a couple of days, a quick "wanted to be sure you had received my application" email is an entirely appropriate follow-up, even without telling them that you will be following up first. If you do end up needing to write a follow-up note, you absolutely should slip in a line like "I really think my (skills and talents that are relevant to the job) would be great for (the company), and want to make sure my application didn't get lost or submitted incorrectly." You can also throw in something about why you want to work at that company - mention some company values or exciting projects to show that you've done your research and are really interested in them specifically. However, I've found that I've never had to do this. These days, the interview process is usually semi-automated so that applications don't slip through the cracks as much. 

It depends on exactly what you're selling. Most contractors sell their time so any time you work for the client is paid for. Non delivery related time is generally not billed, such as sales or negotiations. If you contract includes expenses, all reasonable expenses are billed as well. 

For organizations that subscribe to the 'Process Model', yes, and 99% of the time, the documentation has 0 ROI due to the exact circumstances you describe. This is just bureaucracy. Keep in mind though that there may be some regulatory benefit to such schemes and that should be well known to everyone. 

It depends greatly on who is taking the most initiative in the deal or who want's the deal the most. For example, if Contoso needs a new widget supplier and they think Fabrikam makes the best widgets in the world and really wants them, Contoso will pay to send their personnel to Fabrikam to inspect the factory and negotiate a deal. But, if Fabrikam is trying to sell Contoso their amazing widgets and get them to switch suppliers, then Fabrikam will invite at their (Fabrikam's) expense Contoso personnel to inspect the factory and discuss a deal. In other words, whoever has the most initiative usually pays. 

One other thing to be aware of in interviewing women in technology is that many male interviewers expect programmers to do a lot of programming on personal projects outside of work. Women rarely have the time to do so because they spend their nonwork hours in childcare and household tasks to a far greater extent than men do. After you work an 8-10 hour day and then go home and spend another 5-6 hours on domestic tasks, you don't have the energy to work on an open source or personal programming project even if that is something you would like to do. So please evaluate them (and men too for that matter) on what they accomplish at work and what work skills they have and not on some arbitrary geek credit from doing personal stuff. 

It doesn't matter whether you think your performance has suffered, what matters is your manager's perception of your work. What you need to do is get with him and make out a plan of what specific items need to improve. However, I will discuss some common problems of remote workers. Having worked with a lot of remote workers through the years, the most likely problems are lack of communication or lack of availability when he wants to contact you. When you work remote, you don't have the luxury of being unavailable for long stretches of time while you work on a problem. If he wants an answer from you in the office and he sees you really heads down, he may wait or he may interrupt if it is critical. When you are remote, he never sees you heads down working, so when he doesn't hear back from you immediately, he assumes you are slacking off. This is especially true if your IM shows your status as away. If you are at your desk working heads down on something, you need to make sure your status is busy not away, for instance. If you want 3-4 hours of uninterrupted time to work on ABC, then you need to tell your boss that is what you are doing and that you will respond to any emails or IMs when you take a break. Then be diligent about doing so. Sometimes team members in the office also get upset and complain to the boss if they are delayed because you are ignoring them. Communication to all members of a team on more than daily basis is critical to success when working remotely. In the office, someone can just stand in your cube until your respond to an urgent need. It is harder when the person is remote to get them to see your request. When you work from home, you need to be scrupulous about making sure that others see you as working and be scrupulous about being available during the regular working hours. You need to respond to emails and IMs much more quickly than when you are in the office. Seriously, if there is no contact with you for days, nobody knows what you are doing. We had to pull one person in from working remotely because the client complained that they never got any statuses from her. You don't want to give the impression that you have gone into a big black sinkhole when you work remotely. It is as important to manage your reputation as it is do do the technical work. It is even more important when you are remote and no one can see you working. You need to attend meetings by phone or Global Meet or Skype or whatever your office uses. You need to contribute to meetings or they will forget your were there. You need to make sure to let people know your accomplishments. Right now as a remote worker, you are invisible. You have to become visible for people to perceive that you are performing well. 

Unfortunately, what you describe is not at all uncommon. If a "Knowledge Transfer" covers 30% of the job, that's pretty awesome. The most important thing to do is identify other people in the area/department who are also versed in whatever you're doing. 

You can omit anything you want from your resume but be prepared to explain any gaps and make sure the application requirements don't specifically require all employment be listed. From there... Put it this way, if you include the nuclear work and they... -Reject you. Accept you're not a good fit. -Accept you. They are accepting your previous work and you don't have to hide anything. If you omit the nuclear work and they... -Reject you. You'll wonder if they would have been willing to over look the specific nuclear aspect. -Accept you. You'll potentially have a secret this is either exploitable or may cause distrust if ever learned. 

You can address the "unprofessional" comment by essentially conspiring with your manager to have them close the door. Meaning, you manager can swing by a couple of times for whatever reason, then on the way out ask "open or closed?". The three of you say "closed". Manager, hearing the clear majority says "no problem, thanks for the...whatever..." then closes the door. 

I personally prefer to thank them, reiterate my contact info, and indicate the response I hope for in the last paragraph, e.g.: 

I am a developer with 7 years of experience. I switched technology stacks recently, from mostly .NET to mostly Open Source, and am also picking up Git and JIRA. I can assure you that they really are challenging to learn, especially when you have a new job and are learning lots of other things. At Microsoft and many other companies, the new employee experience in software is referred to as "drinking from the firehose" - because there is just too much to learn, and you absolutely will be overwhelmed. Keep at it. Be empathetic about how you are disrupting people's normal workflows, apologize and try to use the least disruptive way to ask questions that time will permit (email or IM if you can, or visit people in person around lunchtime, when they get in, or when they leave so you don't disrupt them when they're in the middle of their workflow) - but don't stop asking questions and disrupting them. It's part of your job to learn, and you can't do that if you don't get help. Really. Feeling like you aren't up to the job is normal for software developers. Many new devs experience something called "impostor syndrome" - the feeling that you are less competent than others and need to hide your incompetence. If you feel that way - fight it. You are competent (probably), you are just also new. This is normal. It's just a feeling. Months 3 and 4 on a new software job tend to be the hardest, especially in terms of self-esteem, according to the charts Microsoft showed us during their new employee on-boarding process about five years ago. This is because of the frustration of feeling like you should be contributing while still being in the process of ramping up. Give it at least 6 months, and I'd recommend giving it a full year before you assume it's the job and move on to a new job. If you aren't happy after two years, you should definitely move on - that's more than long enough (at least in the software industry). I'd recommend giving your career at least 3 or 4 jobs before you switch careers. There are a lot of great tips here in the highly rated responses. I just wanted to give some perspective to go along with that advice. I am going to give one tip that I don't see here: Record your experiences, especially the parts that are painful. What information did you want that was hard to find? What training did you need, and what worked for you? What learning resources are you discovering? You can pass this information on to your manager and other new hires, build out the team's documentation, and maybe even offer the information to help HR improve their on-boarding process. Turn this painful experience into a career opportunity. This isn't necessary, but will probably earn you some big kudos if done gently. This is an opportunity you will have every time you start a new job - so watch for it in the future as well. 

Unless there are significant legal (DUI, criminal investigation, insurance fraud) or regulatory issues surrounding the test, no one will be watching you ;) Being alone in the contribution room (bathroom) is usually enough for a regular employment drug screening. If you've given a sample to you doctor, it's pretty much the same thing. 

Yes, chat tends to be must less formal then even email. I used to try to be correct, but, really, it's just not worth time. 

For organizations that use the 'Expert Model' documenting the state is more important than the process because process is secondary to the result. Unfortunately, this is a cultural shift very few organizations can accomplish. 

Bluntly, yes. But, neither of you are at fault. In the case you describe, you work style and the professor's management style simply do not blend well and this is not at all uncommon. The long term problem is that it's highly unlikely either of you will change. 

Why do you think you're not held accountable? Don't interpret the professor's lack of engagement for a lack of expectation. In fact, hands off managers often have much, much higher expectations than micro-managers. 

Let him guide the conversation in the direction he wants. I have had CEOs who only wanted to talk personal stuff at lunch and others who couldn't leave business alone for ten seconds. What you need to do is prep both ways and be ready to do either. What you need to be careful of is that you make a friend and not a political enemy because he has much more organizational power than you do. This is a great opportunity to impress a person who has control over your salary, your benefits, and your continued employment at that company. On the personal side, try to stay away from religion or politics or anything that he might find controversial. It is safer to talk about how much fun you had at Comic Con than how much you hate Donald Trump and find out afterwards that he just contributed $10,000 to Trump's campaign. On the business side, be ready to talk about things that are going well and project successes you have been a part of. If he wants to talk about how your group contributes to the business, you need to sound knowledgeable about both your professional specialty and the overall business of the company. This is your chance to become very visible and it can help you greatly or harm you. Perhaps be ready to talk about some things you think could be improvements (ones your boss would approve of, whatever you say in this situation is going straight to him after if the CEO asks you what ideas for improvement you have). If you have an idea that could open a new market for the business, that is a great thing. Same goes if he asks specifically for anything that is not working well, pick something your boss would love to get fixed and not something he has been opposing. You might consult your boss about things he might want brought up if the opportunity presents itself. Tell him you want to make a good impression for the whole department and ask his advice about what to say if the CEO wants to talk business. Your boss might be thrilled to have the chance to have someone informally bring up something he hasn't been able to get past the gatekeepers below the CEO. Try not to bad mouth anyone. No matter how much you think the VP of HR is an incompetent jerk who has figuratively raped multiple employees, it won't go well for you if you actually say that. Especially if the person in question is a C-level employee who was probably doing his or her best to implement the policies the CEO wanted. If he does ask you to suggest something that the company can make better, be prepared to make a business case for your suggestion. Tell him why it is important and what the company bottom line will get out of it or what serious problem that it will solve. It helps here if you are aware of other things going on in the company. For instance if you know that they just had trouble in an audit or certification process due to an issue, a suggestion for how to fix that is perfect. Do not suggest anything that costs money but has no apparent benefit outside the Programming department (yes we would all love to have three monitors and brand new equipment and a chance to play foozeball during the work day, unless you can make a case for how that will improve things for the external or the internal customers of your services, then now is not the time to suggest it. Even if he doesn't buy off on the change suggested, the fact that you presented it in business terms not usually associated with development staff is going to impress him.