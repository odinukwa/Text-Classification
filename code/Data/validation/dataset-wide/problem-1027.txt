Sometimes certain SQL Server maintenance plan tasks can be problematic, like Shrink Database, Rebuild Index, Update Statistics, etc. I'd like to search for the use of one or more of these tasks on an instance of SQL server, for further review of whether they are necessary. Is there a way to query for maintenance plans that perform one or more specific tasks? (Not limited to the tasks that I mentioned.) 

This can in fact be done. There are probably a few ways to do it, and here is a fairly straightforward example. For this solution, you will use a combination of: 

SQL Server 2008R2 PowerShell 2.1 I am trying to create a SQL Agent job that dynamically backs up all non-corrupted SSAS databases on an instance without the use of SSIS. In my SQL Agent job, when I create a CmdExec step and point to a PowerShell script file (.ps1) like this: 

Try enabling the DTC on the sq202 box, since that is the server initiating the distributed transaction. You will also need to have Enable Promotion of Distributed Transactions for RPC option set to True as well for the sq009 linked server located on the sq202 box; when this option is TRUE, calling a remote stored procedure starts a distributed transaction and enlists the transaction with MS DTC. Helpful information on T-SQL Distributed Transactions and the requirements: $URL$ Linked Server Options: $URL$ 

I have a 2 node failover cluster that I'm trying to patch. The initial patch level of the nodes was SQL Server 2016 SP1-CU1 (OS: Windows Server 2016 Standard) and I'm trying to upgrade to SQL Server 2016 SP1-CU3. I started by patching the inactive node (Node 2) and I was able to install CU3 without any issues. After performing a failover to Node 2 and determining that the patch was successful, I tried patching the newly inactive node (Node 1). The installer fails a few seconds after hitting "Update". Here are the Summary results: 

Run the following query in the context of the database in question in order to get the Change Tracking table names used on the database. (Query via Kendra Little on BrentOzar.com) 

The operator utilizes the operator. The specifications for the IN operator (screenshot below) indicate that both the (in this case, on the left of the ) and each (on the right side of the ) must be the same data type. Thanks to the transitive property of equality, each expression must be of the same data type as well. 

Create a new Analysis Services connection Using the Property Expressions Editor, set the ConnectionString property as follows: 

How can I determine when change tracking was enabled on a table in a SQL database? Assume that this table has a regular cleanup routine, which means that looking at the oldest record in the change tracking table won't provide the right answer. 

Why can't I reference the module from an embedded script, but doing so in a ps1 file works just fine? 

The ClusterName in the registry is okay and product discovery runs successfully. Not seeing any errors in Event Viewer. Here is the stack dump from Detail.txt 

I do not receive any values; if I run this same script against Node 2 and any other node in all of my other failover clusters, no matter if it's active or inactive, I'm able to pull back the 3 resource groups (Available Storage, Cluster Group, and SQL Server (MSSQLSERVER)). I've done basic research to see if the WMI repository is corrupt, but nothing is pointing me in that direction. Any ideas? Thanks! 

You'll need to use a more recent driver since the excel file was created in Excel 2016. Install the following driver on the machine running the SQL Server Database Engine: Microsoft Access Database Engine 2016 Redistributable (64-bit) $URL$ After the driver is installed, open up SSMS and navigate to: Linked Servers -> Providers -> right-click Microsoft.ACE.OLEDB.16.0: Enable "Allow In-Process" From here, you can use the Microsoft.ACE.OLEDB.16.0 in your OPENROWSET command. I prefer to setup linked servers to these files, as follows: 

Add a step for each SSAS instance that will be backed up. Each step should be configured to execute the SSIS package. For each step, click the Set values tab and set the value of to the instance name for the step. 

Connection Managers Use a real connection in design time so that the metadata plays nice. Creating the connection managers now isn't required, but it makes it easier for later. For each task in the process, you will have the appropriate connection manager available in the drop-down without the need to create any on-the-fly. ADO.NET 

Create a new OLEDB connection manager that uses the Microsoft OLE DB Provider for Analysis Service Using the Property Expressions Editor, set the ConnectionString property as follows: 

Create the Foreach Container Here, you will create a Foreach based on the Catalogs schema rowset. This will get us the for each database in the instance and the will be put into its corresponding variable. 

What sticks out to me here is the failure of grabbing the resource group "Available Storage" using WMI; so I thought I would play around with writing some powershell to collect resource groups using get-wmiobject to see if I could track down any possible errors there. When I run the following snippet 

Having generalized security across all servers / applications would be a bad approach. With your suggestion, once you let John Doe from Customer Service have read access the Customer database (which he needs in order to accomplish his job), you effectively give him read access to job applicants in an HR database. The HR database would contain Personally Identifiable Information (PII). Since John Doe is not apart of HR, he shouldn't have the permissions to access this data. Allowing him to read out of the HR database would cause compliance issues and could result in major fines when those auditors bust through the door! John Doe would also be able to read salaries out of the Payroll database, and ohh boy, once that info goes public you're bound to have some tension in the office; employees will question why the new guy is being paid more than them, etc. Now that I've beat that horse, here is an article I ran across recently discussing how to setup AD groups with specific levels of access to specific databases. This goes into a little bit more detail than you may need, such as creating scripts to create the AD groups, but should be a helpful start. $URL$ 

Edit the precedence constraint between the Execute Script Task and the File System Task This precedence constraint will handle a missing DatabaseId. The DatabaseId would be missing if a connection to the SSAS server could not be established in the vbscript, or if the database is corrupted. You do not want to back up a corrupted database. It will bring the backup to a halt. 

However, when executed with the embedded script, the job errors out quickly with the following response: 

Create a new ADO.NET connection manager that uses the Microsoft OLE DB Provider for Analysis Service Using the Property Expressions Editor, set the ConnectionString property as follows: 

the job executes successfully (or at least gets far enough to only encounter logic or other syntax issues). This approach won't work for a final solution, because there is a requirement to keep the PowerShell script internal to SQL. So I have a different CmdExec step that embeds the PowerShell script like so: