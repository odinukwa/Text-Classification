I'd be willing to bet that if you refer all possible priority changes to your boss that 2/3 of them will go away immediately. These people are playing you. If they thought the items would genuinely be of a higher priority than your exisiting work, then they would more likely go directly to your boss, not you. If you don't have a boss (nothing worse to work in than a matrix organization), then you tell the PM whose work would move down the priority list that the request has been made to do this "urgent" work and let him fight it out with the other PM and don't do any work on the urgent task until they both come back to you with an agreement that it is more urgent that the task you are assigned to. Next, do not work those hours. You are killing yourself for stuff that is most likely not urgent at all. They will get the bonus for early completion and you will get the hospital bill. It is critical to your health and your productivity to stop working longer than 8 hour days. $URL$ As @justincave said, learn to identify genuinely urgent items (hint, they almost always have to do with problems in production not development projects) and be willing to take responsibility to switch to fix those. But when you do, make sure that everyone involved knows you are working on an urgent production problem. This especially includes the PM of the project you put on hold. One reason PMs get pushy and panicky is that we don't always keep them as well-informed when things change as we should. 

Usually when you are trapped in all day meetings, the easiest thing to do is to just ask, "Can we take a lunch break now?" If you have a medical condition that means you can't miss meals, then you could bring that up as well particularly if they seems disinclined to give you a break. If you have a medical condition, then by all means, plan ahead and bring something with you to the meeting. However, you need to time the questions for most effectiveness. If the Directors are only there for an hour or so, then wait until they are gone. It could be that the normal lunch time is the only time they are available and that is why they are showing up then. I also try to wait until there is a lull in the discussion or right as we finish one topic and get ready to start the next. When you do it as you change subjects, you can say something like, "I think we might all be able to cover XYZ better (or more effectively or faster even) if we break for lunch first." I have often found that everyone wants to take the lunch break, but no one wants to be the person who brings up the subject. 

Code review is the first step. Once you have pointed out the problems, and this is critical, require him to fix them and the code cannot be pushed to production until you accept it as fixed. If he has production rights, remove them immediately (Devs should never have rights to production, but it happens in some places.) Accept that you will miss a few deadlines at first (plan the delay quietly into your schedule in fact, so that he thinks he is missing the deadline, and the customer is not aware of it.). Part of failing code review is when standards are not adhered to and part of it is when the code is not maintainable or difficult to understand or just buggy. Be sure to let the deadline pass even if it is just for standards adherence. You get what you expect and if you don't expect people to adhere to a standard, they will not. Give him verbal guidance when he is trying to fix, but do not write a single line of code. It has to be painful to do things incorrectly. It is the only way he will learn. If he doesn't appear to be able to take what he learned in one situation to the next, have him keep a spreadsheet of how he solved various problems and when he asks for help to fix something, have him refer to that spreadsheet as a first step. I did this with one person a couple of years ago and performance improved dramatically once there was a record of how things were solved and she was forced to keep it up and use it. If this still doesn't help, then you need to take formal steps to l;let him know he has to improve or he is going to be let go. If you get to this point, talk to HR about what the process is in your company for performance improvement plans and/or firing for poor performance. 

Priorities need to be set by your boss. Talk to him about them. Yes that might mean the other customer waits longer, it is not your call. Another benefit of having your boss explicitly set your priorities is that they then can't blame you when both tasks are not done. If you haven't asked for guidance on which to do first, many bosses will assume you are going to get both done. 

First adjust your hours so that you have at least some overlap with the main office's normal hours. Now you can call people and attend meetings (some agile development processes include daily meetings and most places have at least a weekly team meeting). Ask your boss to schedule things like that for the hours when you are available. Talk to people on the phone or IM daily. Remote workers who don't stay in contact are the ones that people think are slacking off. My boss and I are in two different timezones. But we still manage to talk several times a day and IM more often than that. We have workers on some projects who live half the world away, but the hours they work and those we work are scheduled to coincide for at least an hour daily. That's when we talk to them. If you can get it set up, video calls are even better. We usually seem to find to easier to deal with remote people who we have met, so try to get a couple of days in the main office. It will make a differnce in your relationships. Smalltalk is a key element of building good relationships. So when you cal in for a discussion about the project, also spend 5 minutes or so asking about the other person,. Things like did you have a good weekend? Did you enjoy the game last night (if you know he or she is a sports person)? How are you kids doing? Ask about the vacation he just took. My boss and I talk about her cats and my dogs. Remember big events in people's lives. Congratulate them on marriages, birthdays, graduations etc. If you hear of someone in the office who you work with having a death in the family, send a condolence card. 

Grace under pressure, hmm that's a toughie. Well I have a couple of suggestions, look into Sports Psychology and how they use visualization to help world class athletes deal with performance pressures. You could consider going to a psychologist who uses hypnosis as well to learn how to better deal with the interview situation if you feel that it would be easier to learn those techniques from a person rather than a book. You can practice interviewing with a friend and video tape it. Then watch to see what you want to change and redo it etc (note this is painful and will want to make you run away and hide the first few times, this is normal - push through it). Spend a whole day at this. This gives you the chance to get some successes under your belt too once you have worked out how to respond. Have him ask you some of the questions you have faltered on and have him make up some hard questions that will be a surprise. Once you can handle anything he can throw at you, you may have more confidence in the real interviews. Especially practice revcovering after you have flubbed something. Breathe deeply when you get flustered and take a minute to think before responding. Also when you mess up a question that you know you know the answer to, consider saying, "I'm sorry, I'm kind of nervous, let me try that again." Or "Wait, that didn't come out the right. What I meant to say was..." 

This is the time to go in depth into any existing databases you might be planning to use for the project. Really get to understand the stucture and, more importantly, the meaning of the data. It also might be the time to go through code for other related projects not only to get a feel for how they design and code but also to start building a memory bank of what stuff means. If you have users at your work location that you can talk to, now is the time to really start to understand the needs of the business and how they will eventually relate to what your project does. Talk to them and spend some time observing how they work. If your project is in some way a replacement for another project, look at what that project does and what underlying assumptions you can find. Look for documentation of earlier projects and requirements documents for the upcoming one. Find out what problems you are trying to solve with the new project and why they are important to the users. If you have competitors in the same business, check out what you can of what they are doing. What features are they selling? Think about what can make your project stand out over them. Do some thinking about testing and how you can effectively design tests or if you can support QA in creating test cases for them. If they have them already, they read over them. Work on building relationships in the organization. Find out who is the expert on anything you might need. Find out who you go to for differnt kinds of problems. Make friends. Find out what people do and how they approach their work. Get out of the dev world and see what others in the company do especially if you are not in a dev only environment. If you provide apps or software for people outside your organization, spend some time learning what those types of users want. Read their professional journals or go to the websites where they hang out and listen to what they are complaining about or wishing they had. Start to understand their perspective. 

I think first you need to adjust your attitude. It is not diva drama to want to know the status of projects you have been given which are important to their ability to do their jobs. You are clearly a roadblock right now and they have a right to want to get it cleared. So first you need to adjust your workflow so that statuses are given in a timely manner. You need a way for them to check status without bothering you as often and you need a way to set priorities and you need to tell people when their priority has been lowered and what the new expected date is. They bug you because you are not communicating well. Communication is a large part of your job, as important, if not more important, than the design work. Telling people you are working on something when you clearly are not is part of what make them angry. Tell them the truth - "There are six projects ahead of yours and I expect I will be able to start it on Wednesday of next week." A daily email to all with a list of the projects and the status and expected completion is something you should probably do first thing every day. Real estate agents by the nature of their work are not in the office at all times, so it is natural that they need to check with you when they get a few minutes in the office before going out to show houses. Resenting the interruptions is simply counterproductive. It is the nature of the business you are supporting. If you start giving them better information and have something that they can look at to see what projects are being worked in what order and the expected start and end dates of their projects, they will bother you less. But they will never stop bothering you altogether as you are holding them up and they need to get the things you are doing for them. They are your clients and you need to start treating them as such. 

In your career, I think you should do both. You will learn different things from them. I would tend to think a junior person should go for the large company first for several reasons: 

Present yourself honestly - don't add buzzwords for skills you don't actually have. They will expect you to have them and will ask questions about them in the interview. Lying or exaggerating in a resume is something that will harm your chances a great deal once you land the interview. Then apply for jobs you think you can do (and are at least close to the qualifications of - don't apply for senior positions when you are at entry level) and would be interested in. Some of them will find you underqualfied and some of them will find you overqualified and some will be just right. But the thing is, you can't know in advance which will be which. So apply and realize that you won't get every job you apply for and you won't get interviewed for every job you apply for and that's OK. Honestly the ones that don't want to hire you are the ones where you are likely to be unhappy. It takes time and a lot of effort to land that first job. I expect in this particular case, they felt that someone attending a prestigious school would not be a good fit. Not everyone wants or needs someone from MIT or Harvard.