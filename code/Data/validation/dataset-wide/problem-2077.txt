Schedule a meeting the next day with your boss, Bob and possibility his boss. Frame it as requirements gathering. Answer Bob with "Great idea. Lets get a meeting tomorrow so we can discuss in more detail. I really can't give an answer at this instant". Then schedule the meeting as Bob won't. This also leaves a paper trail that you're responding to Bob. 

kamiaga - many companies are very shortsighted. Your cost is (probably) greater than the less experienced person they are bringing in. They have made their decision. It would be very unusual if you could stay on until after your contract is up in order complete a project. As your contract is expired you would risk doing without pay. The best you can do is to leave good documentation for the next employee. Talk with your supervisor about a transition plan for the next employee (helpful if they start before you roll-off). 

Are you the only one doing the interview? If that's the case then you should reconsider and add technical expertise to the interview team. In cases like this you would have current developers evaluate the technical portion of any interviews. You would handle the non-technical aspects of interviews. The oft-overused term 'soft skills'. I would not be comfortable being the sole interviewer for a requirement that requires technical skills unless I have a knowledge of those technical skills. 

Getting code examples off the net is something we do every day. There is no issue with this at all. That being said, what would you do if (as part of your job duties) you had to troubleshoot existing code that was written by somebody else? This is part of being a professional - we have to look at code and try to understand what is doing in order to support those who pay our salaries (internal/external customers). 

Rogix, As one who has been in this situation there is nothing good that can come from this. Either the boss knows and doesn't give a d**m or (s)he is clueless and will take anything like this as undercutting their position ("what, are you trying to take my job"). Something that has gone on for this long will not change without a change in the supervisor. I know you said you don't want to leave but that would be the only way (for you) to change the toxic situation. It's admirable you're concerned with your direct reports as this is what a good manager does. In this case you're powerless to affect any real change. 

Yes. Apply. The most they can do is say no. If your soft skills are good this can make up a lack of experience in a certain technology. Many time I've found the job requirements are written by human resources and do not correspond to reality. There was a company in my town who was hiring .NET developers back in 2002-2003. They were looking for 5+ years of experience with .NET when the framework had only been available for less than a year at the time. I was able to ask the hiring manager about this and the response was "HR insists on 5 years because of the salary for the position". I got the job because of other skills and were able to gain the C# skills. 

How is testing done without specific requirements? What are you producing and is it correct? I don't see how this can be done without requirements. As others have stated - you write some specific requirements based on your understand and (this is important) get signoff on what you're producing before real coding starts. 

This would be a great time to help set up procedures for how business processes should be done. For a marketing team setting up a facebook add or google analytics should be part of their job (a business process). Start with your management. State that you'd like to help the other team with the processes they are having issues with. Then involve the other team. Maybe walk through the processes and document. Produce something that they can use as a reference. Get screen shots and instructions for each step. As a geek I understand the urge to send them to a link. For most non-technical users this is a pointless exercise. Many are scared by techy stuff like this (and frankly, most online documentation is poorly written). Giving them clear instructions on how they can accomplish a task helps the business and would also free you up for the fun stuff. As a developer I need to remember that if the marketing & sales staff do not do their job successfully then the business will not be successful and I won't have a job. 

That's not how hiring works from an employers point of view. They are looking for a certain combination of skills and experience to do a particular job. I can understand where you're coming from as this has been an issue in IT since the "bad old days". When I first started in IT back in the early 90's with my freshly minted degree in programming (in COBOL, ugh) companies were extremely hesitant to developers with no practical, real world experience in development. So I took a job in operations working in a data center. This got some experience in the 'other' things needed and allowed me to move into development several years later. Now I'm on an R&D team doing some really fun stuff with some of the newer technologies. 

You need to work with your supervisor to set expectations. Sit down with your manager and have a discussion. Say you're ready for some stretch goals. Set expectations based on your experience (or lack) in a specific technology. This is something that will happen to all of us at many points in our careers. Technologies change. We have to be willing learn different technologies. Two years into my development career (early 90's) I was doing COBOL. I was thrown onto a state-of-the-art system written in (gasp) VB6. I knew nothing of VB6 (I was a Mainframe developer who didn't do these new-fangled desktop systems). I straight up told my manager that there will be a learning curve and I will make mistakes. If he was willing to live with this then I was on board with the change. 

You've done everything you could do. You've produced documentation and a transition plan. If you are the only person who knows your projects than that is a problem for your current company. It's their failure to plan for a key employee to leave. Ask yourself - if I was hit by a bus what would the company do? The response (for the company) should be the same - use the documentation you've produced. Enjoy the increase in salary. When I got laid-off in 2016 with 12Â½ months of severance my wife had plans for the money as soon as I got another job (as there were now two paychecks for a while). 

Industry 'standards' are more like industry 'suggestions'. They can (and will) change over time. I've been doing this a long time. Stop what you're doing right now. An example: At one-time Hungarian notation (blnOK, strName, etc.) were the industry 'standard'. Now the 'standard' says to not use the data-type as part of the variable (OK, Name, etc) or to use camel case. So, if there is code written 18 years ago (we've got some) that was using the old standard it now needs to have it's naming convention refactored because of some arbitrary 'standard'? Let me ask you a question - when in the development process are you refactoring? Before or after testing? If it's after then every place I've ever worked would require a regression test of the system. This could result in you being fired if something has already passed QA and then you make a code-change that needs to be retested. 

I've been in this situation. This is a problem with teams distributed across time-zones. Remote or in-office really does not matter. In my case it was a meeting that was scheduled for 5:00 PM Pacific time by a project manager on the west coast . As I'm in the Midwest that was 7:00 PM my time. The meeting organizer picked this time as "it is when you were all available". As several of us were in the office at 7:00 AM central time it was pointed out that we could do at that time. She realized that the meeting would have to be sometime in the middle of the day for everyone. Right after that a directive came that any meetings spanning more 1 time zone had to be between 9:00 AM & 3:00 PM Eastern time. I guess our passive-aggressive "solution" worked. 

Your 'other reasons' are valid for you. However, they are not to the senior management that asked for you to be on this project. Some companies call these types of things 'stretch' goals. The entire point of this is you are moved to something a little beyond your current skills. Management believes you can do this based on your past performance. For this you should take this as a validation you are doing a good job. Embrace the project. This can greatly enhance your career and your position in your company. D-Raz will have a reputation of someone who can "get things done".