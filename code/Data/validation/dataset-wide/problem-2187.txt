In exchange for these risks, what will you gain? As you know, someone is who not actively preparing for job interviews may mis-answer a technical question even though they are technically excellent. I think you run the very real risk of discounting some great places to work because you don't like the answer you get, and of not getting offers from some great places to work because you're perceived as arrogant, and you gain little or nothing. Disclaimer: It has been nearly 30 years (1984) since I was interviewed for a job, and that one I didn't realize was a job interview until he offered me a job at the end of it. Apparently when someone in HR that you worked with as a student asks you if you'd like to work at the company after you graduate, that's not just chit chat. I've been the one interviewing candidates since 1989, so that's the perspective I bring to this answer. I do get interviewed for contracts all the time. I tend to ask questions like "is it ok that I don't know anything about XYZ? That isn't one of the things you need from me is it?" Apparently this makes me unusual. I get the gigs, though, so it works for me, and I don't have to pretend to know stuff I don't. 

Wait, and listen. It might be ok to spend 20 hours teaching B how to do something that currently takes you 10 hours, because you're the only person who can do it and the team needs people to learn it. Or it might not be ok to even spend 2 hours. Once you have your answer, the next question is 

To start with, be sure to distinguish "seeing that much of [coworker] makes me feel uncomfortable" from "I don't think [coworker] is representing our firm well" - the first is your business, the second is not. How about a sort of flowchart? Consider what will happen if the employee really truly objectively is dressing inappropriately for work (a bathing suit and bare feet perhaps?) or you really truly are setting a culturally inappropriate bar for "work appropriate" that no longer exists (in my first job both bare legs and open toed shoes were banned for women - pantyhose all year round thankyou) because it matters who is right and who is wrong. If you go to HR straight away: 

As an employer, I rarely value any kind of software language education as highly as software language experience. If you know C# because you were taught it, that's not as valuable as you knowing C# because you were paid to use it all day. Don't get me wrong, it's still better than not knowing it at all, but learning isn't doing, right? However, I value commitment to learning and improvement tremendously. Recently I helped a client interview for a senior dev, among other help I was providing to their team. When I first showed up I offered the team lead a handful of Pluralsight free-month cards (disclaimer: which I have because I record courses for them), and he wasn't super enthusiastic, having never heard of Pluralsight. Then he noticed that all the best candidates, when asked about how they kept up to date with new tech, replied that they bought their own Pluralsight subscriptions. After the third one he said "I think I need to check into this Pluralsight thing!" If you list your verified completions, an interviewer will know this about you even before the interview, and I think that has value. Not so much because it proves your skills in C# or Java or jQuery or whatever, but because it proves that you will keep yourself trained no matter what else is happening around you. ps: if you think it would be cool to claim to have a subscription you don't have, be careful you don't find yourself sitting across the desk from someone you clearly have never heard of who in fact recorded the courses you said you liked. Just sayin'. 

You should always acknowledge and report deadlines that have been missed or (better) that you now know will be missed. This applies whether you are the one who caused the delay or not. You can start by telling the person who has caused it: 

That's what really matters, anyway: not "would you ever consider leaving?" but "what is it about this job that might lead some people to leave?" If your boss wants to start that conversation with you, go for it. 

Estimating how long something will take is a different skill from doing it. Some people do a thing for years but never really notice how long it takes. Some are constantly surprised and delayed by things that others expected and allowed for. Some people put a schedule together in a way that allows working on one task while another is blocked; others don't. These are skills you should have been learning right along with the concepts and software you're using. Unfortunately, not many people explicitly teach these things; they just expect them of you. So what you should do right now is make a written plan. Use some sort of ranges or colour coding to distinguish things where you're confident how long they will take from things that have uncertainty. If all goes perfectly, when will it be done? At what points will you gain more information (eg you get the API working with the other components) and be more confident about the finish date? If you establish that it will take 4-40 weeks, it most certainly will not be done in 2 weeks. If it will take 7-20 working days, it might be done in 2 weeks, but probably not. If it will take 3-9 working days, then it probably will be done in 2 weeks. Taking this approach doesn't just help you answer your boss about whether it will be done. It helps the two of you tackle questions like 

My Canadian firm has both short term and long term disability coverage which provides some or all of a person's salary while they are unable to work. We also have a policy that when you are ill, we'll cover your full salary until the short term disability starts. This is a very expensive position for us (I think it's ten days, so that's 4% of someone's annual salary with no revenue coming from them) but has served us very well in terms of employee retention: not just the person who is getting the salary but everyone else as well thinks well of us for doing it. Some firms might not cover the waiting period for the short term disability. Some might not even have the coverage. Some might go further than us and "top up" the long term disability (I believe our coverage switches from short term to long term at 60 days) to your full salary instead of the percentage our coverage provides. (If you're not going to work for weeks at a time you're spending less on coffee, lunches, transit etc goes the theory.) The law doesn't require any of this. We're free to pay you only for the time you work. But most white-collar jobs go beyond that. You should really have asked before you took the job, but at least ask now. You may need to do some juggling and planning to make sure your rent or mortgage gets paid.