For people who already have demonstrated proficiency by either of those, then either pick a harder problem, or describe them your problem domain and current issues and jointly define some problem with them - this also gives them insight into the job. (Or you could just ask them the standard question and let them breeze through it or whiteboard describe how to do it, but that's wasting both of your time and not challenging them - Joel and others advise don't.) 

Find and propose a place which serves decent meat and vegetarian options, and beer. (Turkish, Greek, Indian, Pakistani, Vietnamese, Chinese, Buddhist, etc. should all be good choices.) Suggest well in advance "let's go this place next time", and remind them you're vegetarian and can't get a decent main course. If they disagree, ask them to come up with a proposal that includes you. In a department I used to work in, we had a tradition of rotating which group member got to pick a couple of suggested places for the next group dinner, then we voted on that shortlist. See if you can make that the tradition. If you can't get any buy-in, it's your call whether to refuse to go to the greasy beer place in future, and tell them "I'd love to join you but I dislike the restaurant and I'd appreciate if you factored my vegetarian choice in". Last fallback option is to tell the place you're a strict vegetarian, and ask can you bring in a (pre-ordered) vegetarian dish from another restaurant, which you order in advance and pick up on your way. Make up some medical/religious reason if you need to, legally the restaurant will be unable to refuse. And/or contact them in writing to ask them to improve their vegetarian options. As to the uneven division of the bill, I don't see that aspect is the primary issue, but you can always do separate bills. (I'm surprised the company isn't paying anyway, for a monthly team dinner). That aspect seems minor. PS I don't understand the truculent or take-it-or-leave-it attitudes from other posters. Your group has a social event, they have traditions, these are all good signs of a group that works well together and gets along well, which is rare. The question is presumably how a newcomer can engage with and shape that to accomodate them, not start throwing out ultimata. 

Some time back I read a great article: "Don't Self-Reject". It's written as advice to SF/F authors who are deciding whether to submit their work to a publisher, but the basic message is relevant to almost anybody looking for a job: you shouldn't be rejecting your own work before the editor (recruiter) even gets a chance to assess it. Summarising the ideas in that article, and translating to the workplace: 

As an interviewer, I would not be enthusiastic about a candidate whose attitude was "don't care what you do, I just want to know what technology you have". For one thing, anybody with an ounce of self-interest should be interested in some of the non-technical aspects of the job. Stuff like: 

Several questions rolled into one: Yes you should set a coding challenge, but no, do not set it as homework, for many reasons, some of which are to prevent cheating, copying, plagiarism, getting help. But also because it robs you of two valuable parts: you get to see how their thought process works when under stress, and also (it's a two-way street) they get to see how you approach code development. For example, do you set a slightly ambiguous problem statement and expect them to make simplifying assumptions, or to down tools until you supply a definitive clarification? (the "right" approach depends entirely on your domain e.g. programming life-support systems is different to web code). 

From your description it sounds like you were assertive, and not over-assertive, in how you handled this issue. Unless there was some other aspect of the interview that gave rise to that assessment, it might be that you just got unlucky in getting a bad interviewer. That happens sometimes, and sadly there's not much to do about it. It's important to learn from experience, but sometimes it's just as important not to over-learn. Sometimes the error isn't on your side, in which case you shouldn't change your approach to cater to one person's foibles. The tough part is figuring out which ones should be learning experiences and which ones shouldn't, but then that's what this sort of post is for - getting feedback from others. 

Depends on the culture, default towards no. By "shouldn't be mentioned" I presume you mean after you join. Observe the culture, observe what is considered ok, and who tells you what you can do (boss/management/IT/HR/handbook/etc), which of those depts bosses which around. As mentioned by others, Steam is different because it raises IT, IT security and legal issues about installation and frequent updates. So I'd default towards no, and don't ask, unless the culture seems permissive or other people already do similar. "Whether I should even bring the subject up altogether when you trying to explore your company's protocol" is really just something you have to observe and call. 

Possibly something along the lines of "You may well be right, but can we please check that?" (assuming it's something that's easily googled) would've worked here, but it's impossible to know for sure. This one, also, sounds like it's more on the interviewer than on you. A while back my wife applied for two positions at a government agency, slightly different levels in the same area. Both had the same question about understanding of the agency's purpose and values, and she gave the same (written) answer for both. The feedback from the lower-level position said she hadn't shown enough understanding on the "purpose and values" question; the feedback from the higher-level position said she didn't have enough experience, but mentioned that she'd given a good answer for "purpose and values". So her answer was good enough for the higher-level role, but not the lower-level one. Just goes to show how much of the process comes down to luck of the draw. 

It's probably a bad idea, politically and practically, to skip the collective beating. You don't want to alienate your coworkers. Everyone knows what the score is and that you're not implicated. The coworkers might even appreciate that you share the collective beating with them. You don't want to come across to your boss like you're superior. In the practical sense, you should own your emotional response, and your productivity, so you might as well learn how to either zone out or surreptitiously get productive work or reading done. Think about what you'll have for lunch. Think about what color paint to buy for your walls. Try to name all the countries in Africa in reverse order. Try to figure out what pressures the managers are under and how to please them. Or who to throw under the bus when the going gets tough. Having said that, I have had several coworkers who frequently seemed to schedule doctor/dentist appts/home deliveries/teacher conferences/etc. on 'convenient' occasions. So figure out what the most culturally appropriate response is. 

Obviously each person has their own priorities, but if a candidate isn't thinking about anything along those lines, I would have concerns about their judgement and maturity. For another: if you don't take an interest in what it is we do, and how we do it, there's a high risk that you will end up building solutions that don't meet our needs. I've seen this happen, with a scary-smart technical whiz who didn't understand that our IT policies were very different to the places where she'd worked before; she put a lot of effort into building a software tool that didn't meet our security rules. As an interviewer, I'll do my best to avoid wasting a candidate's time. But if I notice that a candidate is getting impatient after just a few minutes of talk, that doesn't bode well for how they're going to cope on the job. If it's only five minutes, your best option is to be patient, nod and smile, and think of some questions that the recruiter can answer. You may waste a few minutes listening to their canned spiel, but it's better than wasting hours having to put in another job application because you alienated the interviewer for this one. 

Honestly that's a badge of being a good engineer, if somewhat unrealistic about their productivity. (Read about "Engineer-not-Manager") 

EDIT: this answer as written when OP's original version implied they were an individual contributor, before the crucial detail that they are a manager managing a team of 10, which completely changes the question. Moreover this makes the boss a level-2 manager, which is a different situation. 

Your fears are misplaced. Encourage them to ask questions and/or document assumptions. Tell them it's ok and encouraged to use Google/ StackOverflow/ whatever. Another good practice sometimes used (esp. on Craigslist or mailing-list/web-based job ads) is to email/post candidates a very simple problem, the solution to which they have to attach to an application. This is to weed out timewasters and people with no interest or experience; but again can be used to give them a flavor of what sort of code they'll have to write. 

In my opinion, the error you've described is very minor. But even if it weren't - let the recruiters make that call. It's not your girlfriend's job to look for reasons to disqualify herself. Now, if the error had been something likely to mislead recruiters (like, say, overstating her role in a previous job) then she would have an ethical obligation to correct it. This could be done at the time of interview: "Hi, before we get started, I just wanted to correct an error on my application..." But it doesn't sound like this error falls into that category. The recruiters presumably already know the name of the office they're recruiting for. They will notice the error, if it matters enough to notice.