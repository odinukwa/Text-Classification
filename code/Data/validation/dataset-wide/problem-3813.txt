It is known, that the set $E_{opt}$ resembling the opitmal tour of a symmetric TSP, is invariant under the addition of so called vertex weights $w(v_i)$, i.e. to adding or subtracting the same constant value $w(v_i)$ to the weight $w(e_{ij})$ of each edge $e_{ij}$ It is also easy to see, that adding a sufficiently large constant $c$ to $every$ edgeweight generates an instance, whose Cayley-Menger determinant is positiv, indicating that the so modified instance corresponds to a simplex in a euclidean space of sufficiently high dimension. 

Another topic is to generalize geometric shapes to symmetric TSP-instances, e.g. how to define subtours with the "shape" of an euclidean circle or, to generalize the shape of planar quadrilaterals to subgraphs induced by 4 vertices (e.g. can the longest diagonal of a convex quadrilateral be part of the optimal tour?) Questions: 

In the context of this question, the essential supremum (resp. vrai max is defined as here and it is further assumed, that $$0\ <\ f(x_0) = \lim_{\epsilon\to 0}vrai \max \left(f\left(x\in U_\epsilon(x_0)\right)\right)\ <\ +\infty\ \forall x_0\in\bar\Omega$$ I am looking for expressions for (single) elements of $\arg \max(f(x))$, e.g. the one that yields the lexical maximum of $(f(x),x)$. 

Has the following problem already been investigated from the Computational Geometry point of view and what are the results regarding worst case complexity? 

The benefit of essential arguments is that one has a positive chance of finding arguments in the vincinity, whose function value comes arbitrarily close the value of the essential supremum. The formula may only be the tip of an iceberg of further investigations, especially in view of pathological functions and their approximation via sequences of well behaved functions. What may also be possible, is to disqualify conjecture, that are related to the location of zeros, as axioms. Besides that, it would also be a nice application of the GÃ¢teau derivative 

let $\gamma(s) = \left(x(s),y(s)\right), s\in[0,1]; \gamma'(s) = 1$ be a length-parameterized curve in the plane, with finite and strictly positive curvature. 

I recently noticed that certain theorems (e.g. Tutte's 1-factor theorem or, Edmond's Blossom algorithm) are attributed celebrated. A quick search on the internet yields further examples: 

This should be seen as a comment, but it is too long for a comment: One aspect, that has not been addressed in the answers, is the influence of the container geometry. In the experiment, a cylindrical container has been subjected to two different kinds of motions: a coaxial rotation with alternating directions and tapping to the side of side of the cylinder, which can also be interpreted as a horizontal motion that keeps the axis upright. Assume for a moment, that the experiment were carried out without the influence of gravity and the cubes at least a distance of $\epsilon$ apart. then, 

the last example is special in that an NP-hard problem and an efficiently solvable problem are apparently invariant under the same kind of edge-weight modifications. I would like to know, if those kinds of invariants have already been investigated in the spirit of an "Erlangen Program". $$ $$ Addendum David's example of a shortest-path preserving transformation makes clear, that the algorithm that is used to calculate the shortest path may also play a role in the definition of invariance. There seem to be "strongly" invariant transformations that preserve the solution subgraph under every algorithm that determines that same subgraph in the unmodified graph and, also "weekly" invariant transformations that depend on the underlying algorithm. That observation may also indicate, that a classification of algorithms based on the solution-set preserving transformations they support is also an interesting aspect of characterising the invariants of graph transformations. 

(end of edit) My idea was to try to find the series-expansion of a bivariate function $f(x,y)$ with the following properties: 

Are there any orthonormal bases for strictly convex functions $f: \mathbb{R}^n\ni x \mapsto \mathbb{R},\ x\ne y\implies f\left(\alpha x+\left(1-\alpha\right)y\right) \lt \alpha f(x)+(1-\alpha)f(y) \wedge \alpha\in(0,1)$? The subset of $\mathbb{R}^n$ on which $f$ is defined can be restricted in any appropriate way e.g. unit cube, unit sphere, etc. edit: what I want to do, is to assign elements $p\in\mathbb{R}^n$ to the vertices of a complete, finite metric graph $G(V,E)$ in a way that the $\left(p_i,\sum_{V\setminus i}w(e_{ij})\right)\in\mathbb{R}^{n+1}$ are in convex configuration, and to determine a convex function $f:\mathbb{R}^n\ni x\mapsto \mathbb{R}$ with $f(p_i)=\sum_{V\setminus i}w(e_{ij})\ \forall i,j\quad \wedge\quad \sum\|p_j-p_i\|=1\quad \wedge\quad \min_{i\ne j}{\|p_j-p_i\|}=max\quad$ for some fixed $2\le n\le |V|$; those conditions do not yet rule out ambiguity w.r.t. isometric transformation of the points, but that can be easily fixed. 

I could however not find online information about how Tutte reduced the minimum weight d-factor problem to the matching problem. 

Real numbers: Kroneckers "God created the integers, everything else is man made" is a prototypical continuation of the way the Pythagoreans wished the world to be, namely that everything can be measured in integers or their ratios. 

Are there counter examples to the conjecture, that in a complete, finite and symmetric weighted graph $G\left(V,E,\omega\right),\ E=\lbrace \lbrace i,j\rbrace\subset V\times V\rbrace,\ \omega:E\ni e\mapsto\mathbb{R_0^+}$ the edges constituting to the solution of $$min\frac{\sum_{i,j} \alpha_{ij}\omega(e_{ij})}{\sum_{i,j} \alpha_{ij}}$$ $$\sum_{i\ne u}\alpha_{iu}=0,\quad \sum_{i\ne u}\alpha_{ui}=1 $$ $$\sum_{j\ne v}\alpha_{jv}=1,\quad \sum_{j\ne v}\alpha_{vj}=0 $$ $$\sum_{i\notin\lbrace j,k,u,v\rbrace}\alpha_{ik}\ -\sum_{j\notin\lbrace i,k,u,v\rbrace}\alpha_{kj}=\ 0$$ $$\alpha_{ij}\in\lbrace 0,1\rbrace$$ i.e. to the path connecting $u$ to $v$ with minimal average edge-weight are elements of the set of edges constituting to the MST? 

I recently faced the problem of calculating the parameters of an ellipse through 4 points in the euclidean plane; while that problem isn't challenging from a theoretical point of view, it is however a nuisance that the problem is non-linear, whereas two additional points and solving for a general conic section would make it linear. Now my idea was to look for a general conic through the 4 points and to somehow account for the two missing points. The standard way of doing that would be to calculate a parameterized solution of the undertermined system of linear equations and then trying to adjust the parameters to obtain an ellipse, that is optimal in some way. A different idea, that came to my mind, was to generate the two additional points by duplicating two of the points and then to add some small jitter to the coordinates of those copies. It is this idea, that leads to the following 

Examples of such sets $X$ can be generated knowing that $\|\lt u,v\gt\|_2 = \|u\|_2\|v\|_2\cos(u,v)$ and thus that if $\|v\|_2 = \frac{1}{\cos(u,v)}$, we have $\|\lt u,v\gt\|_2=\|u\|_2$. if $u\in\mathbb{R}^1$ and $v=\left(\sqrt{s^2+t^2}\frac{1}{\sqrt{1+\frac{t}{s}}},\sqrt{s^2+t^2}\frac{\frac{t}{s}}{\sqrt{1+\frac{t}{s}}}\right)\in\mathbb{R}^2,s,t\in\mathbb{R}$, then $X:=\{v\}$ is a concrete example. Edit: for $u\in\mathbb{R}^1$ and $v\in\mathbb{R}^2$ we have $\|v\|_2=\sqrt{x^2+y^2}$ and $cos(0,v)=\cos(\arctan(\frac{y}{x}))=\frac{abs(x)}{\sqrt{x^2+y^2}}$; from $\|v\|_2=\frac{1}{\cos(0,v)}$ we get $\sqrt{x^2+y^2}=\frac{abs(x)}{\sqrt{x^2+y^2}}$ and finally, $y=\sqrt{abs(x)-x^2}$ 

This question is motivated by my impression, that finding better heuristics for the TSP problem (or any other $NP$-complete problem) is "only" of practical interest, but doesn't provide any progress towards a decision of the $P=NP$ question. The reason for my impression is that all heuristics I'm aware of, do not have the same "invariants" that optimal tours have, most prominently the invariance of the solution set of edges if the problem instance is subjected to the addition of vertex weights. The Christofides heuristic for example had the best theoretical upper length-bounds for the tours it generates for at least two decades and still is better than the best tour expansion heuristics, IMHO there is nothing that can be concluded from that difference in performance, that would help to understand, why $NP$ problems are so hard. 

if the line integrals happen to be integers, then combining the "Pythagorean directions" with cell-corners as anchor points guarantees, that the tile weights are also integers, which may increase numeric precision. 

Addendum In the abstract of this article it is stated, that the problem of detecting negative cost cycles in undirected graphs (UNCCD problem) is "significantly harder than the corresponding problem in directed graphs" and the complexities of different algorithms are given, ranging from $O(n^{2.75}\log n)$ to $O(n^6)$ 

Background of my reference request is an observation that I made, while I was still in school: there are two ways to calculate $x*999$: either do it directly, by applying the multiplication algorithm that is taught in school or, calculate it as $x*1000-x*1$ of which the second way is much easier. But, I had no clue about the rules behind such a simplification. Later, having studied computer science and math, and having learned of binary digits, things got clearer and I realized that the objective would be to express the multiplicator as a difference of non-negative integers with a minimal number of 1-bits in the binary representation. Despite the fact that such a representation could speed up multiplication via repeated addition plus one subtraction or, exponentiation via repeated squaring plus one division, I could not find any mentioning of that representation or how to obtain an optimal such representation. I would therefore appreciate any pointers to information about the construction and properties of the representation of natural numbers as a difference with minimal Hamming weight. My currently best algorithm to determine a such difference-representation with a small Hamming weight is to first fill "fissions", i.e. replace 0-bits that are next to two 1-bits on the left and on the right, so $...11011...$ becomes $...11111...$ and then replace each bit of an uninterrupted sequences of at least three 1-bits by 0-bits and, each 0-bit that is immediately to the left of such a sequence, by 1-bit so that $...011...10...$ would become $...100...00...$ With that operations, 27 would first become 31 due to fixing the fission and finally 32; the difference-representation is then 32-5 with a Hamming weight of 3 instead of 4. An interesting phenomen is, that there are bit-patterns like $0010011011$, for which the difference encoding reduces the Hamming weight also for the bit-complement and, there are others, like $0110011$, for which no improvement is possible, even for the bit-complement. This raises the question about the statistical properties of the quotient of the Hamming weights of difference encoding and of standard encoding of numbers. EDIT: In order to give some impression of the amount of operations that can be saved, I applied the method to the first 200 binary digits of some wellknown constants; the percentages relate to the number of 1-bits: $60\% \approx 67/111$ Khinchin constant $66\% \approx 71/108$ Chapernowne constant $66\% \approx 72/109$ ln(2) $68\% \approx 75/111$ Conway constant $68\% \approx 75/110$ sqrt(2) $69\% \approx 69/100$ Euler-Mascheroni constant $70\% \approx 65/093$ ApÃ©ry constant $73\% \approx 74/101$ Plastic Number $73\% \approx 77/105$ $e$ $73\% \approx 77/105$ Golden ratio $79\% \approx 70/089$ Feigenbaum constant $83\% \approx 68/082$ $\pi$ Below, the binary digits of the respective constants are listed; boldface runs of digits incur a saving of additions that equal to #bits-(2 + #0-bits): Khinchin constant 10.1010 111101111 00 111 00100001000 1111 000 11011 01000011010 11101111 0010 111111011111 00 11111 000 111 0010100011001100 11111111 00 111 00001100 111 0010010 111 000000010000 1111 00110000110000010100 11101110111111 010010011 Chapernowne constant 0.000 111111 0011010 110111 0100 1101111 01010001000 1111111 01000000 111 000001101010011000 111110111 000010 110111 01000000 111111111111 01001010100000 111 0100101010 11011011 001101010 11011011 00000010100 111011 000100011001 ln(2) 0.101100010 111 001000010 1111111011111 01000 111 00 111101111 001101010 1111 00100 1111 000 111011 00 111 0011000000000 111111 0010 1111011 01010 1111 01000000 1111 001101000011001001100 111 00101001100010 11011 00010 11011 000101 Conway constant 1.0100 110110110111 00 1111 01011010100100 11111011 00010010000010101010 11111 00010101001010101010 1111 00 111 010101100010101100 111011111 00 111110110110111 000100 1110111 00000 111 0001001010 111 00 111 0100100101000 1111 sqrt(2) 1.011010100000100 1111 0011001100 1111111 00 11101111 00110010010000100010110010 11111011 000100 11011 00 110111 01010100101010 11111 0100 11111 000 111 010 1101111011 0000010 111 0101000100100 1110111 010100001001100 111011 01 Euler-Mascheroni constant 0.100100 1111 00010001100 111111 000 11011111011011 000011000 1111 01001001101000 11011111 000 1111111 0000001000000010101001011001011010101101010000 111 00 111011 00110000 111 010 1111011 0010 111 001100000000011001000011 ApÃ©ry constant 1.001100 1110111 010000000000100 1111 0000000001100010000100 111 00000 110111 00010 111 0001010 111 000101100 1111 00110100100000 1111111 000 11011 00011000000010 11011111011011 00010 111 01001001001101000000010 1110111 01001 Plastic number 1.010100110010000010 110111 0100 111011 001010010001001010 11011 010110000010 1111 000100010010 11111 00010000010100011000010011001101000 111 00 11011111111 00000010 111 0010 1111 000 111 00 11111 010 111011 01010110000110011 $e$ 10.10 110111111 00001010100010110001010001010 111011 01001010100110101010 1111110111 00010101100010000000100 111 00 1111 0100 1111 00 1111 000 111011 00010 111 00 111 000101100000 1111 00 111 00010110100 11011 0100101011010101 Golden ratio 1.100 1111 000 11011101111 00 110111 0010 1111111 010010100 11111 000001010 11111 00 111 00 111 001100000001100000010 111 00 1110110111 00100000110100000100001000001000100 111011010111111 00 111 01000100 111 00100101000 111111 Feigenbaum constant 100.1010101101010000110010 111111 000110000 111 0010010 111 01000 111 01000 111 0000000100 111011 01010001011010 111 000100110010000 111111011 010000000100010000110000000 1111 0001011000000010011000100 111 00101010101001 $\pi$ 11.0010010000 111111011 0101010001000100001011010001100001000110100110001001100011001100010100010 111 0000000 110111 00000 111 001101000100101001000000100100 111 0000010001000101001100 11111 0011000 111 01000000001