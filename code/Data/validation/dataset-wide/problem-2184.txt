Confirm your verbal resignation in writing now. If your employer disputes the validity or existence you don't really have much of a leg to stand on, but they might not bother. This problem gets harder every day you leave it. You and your employer can always mutually retract it. 

No Sharing the "answer" to a company's programming test isn't very considerate. They're probably still using it. It you wanted to come work with me you'd have to write a program to solve a certain problem. I would then be irritated if you shared the problem and your solutions in a Googleable place, because it dilutes the value of that test from 'can code' to 'can Google'. You can ask and you probably would get away with posting it without asking. But is it that hard to write something of your own you can be proud of? 

Doing things in secret at work is a quick way to get lots of free time while you explore new employment opportunities. In other words, it's a quick way to get fired. Most software developers spend some amount of time outside of work learning new skills and playing around with new technology. It's great if your employer happens to give you time to do that on the clock but many don't. Yes, that means that you'll have to spend some of your free time learning. But that's not particularly uncommon among people in a range of professions. 

In general, it would be much better to look for a new position while still employed at your current job. It sounds like it would be relatively easy for you in that case to explain that you believe that you've gone as far as you can at your current company, citing a long string of successes, and that you're looking for opportunities to take the next step in your career in your next position. That would allow you to talk about your current position and company in positive terms and to interview from a position of relative strength since you're still employed. If you resign, it becomes much more difficult for you to talk positively about your current employer in interviews and forces you to talk about the conflict at least in broad terms. That puts the interviewer in a tough position. It's common enough for people, even qualified ones, to get passed over for a promotion. It's common enough for people to look for new positions when they believe there is little room for advancement in their current company. It's not common for people to resign when they're passed over for a single promotion and that strongly implies some sort of underlying personality conflict or political maneuvering. That puts the interviewer in a position of trying to figure out whether you're the innocent victim or whether you played politics and lost with no real way of making that determination. Sometimes they'll take the chance that you're just an innocent victim, particularly if the rest of your resume blows them away, but you don't gain anything by making yourself a riskier choice. 

Calm down. There's no need to bomb the recruitment agency. You encountered a bad recruiter, just don't field their calls. Having said that, as a recent graduate your CV probably does suck and you would do well to respond to critics in an adult manner (not like this). Incidently, the reason they want .doc CVs is so they can edit it. I would stick with pdfs. 

You're not that far down the C# path. The most important thing you can do for your job prospects and your skills is to get a job developing. I do think C# is a better career choice than php. But, contrary to popular belief, programming skills are mostly language agnostic. Once you have your php skills on order, go back and practice C# in your own time, then look for a C# gig. I find it interesting that you've been revising C# knowledge? Perhaps this is why you think none of it transfers to PHP. Focus on core skills, practice and write your own projects instead. Personal point: I worked in Javascript for a year before getting a C# job and I absolutely count it as a valuable part of my Software Development experience. 

If we assume that you're working for Evil Corp with demonically aggressive lawyers then, of course, you're taking a risk. You're violating the letter of your contract. And an aggressive lawyer can certainly argue about whether your performance is affected, whether the markets are different, whether you're competing with some subsidiary of the corporation, whether your project incorporates intellectual property owned by the company, etc. Now, how likely is it that in the world of realistic assumptions that the company is actually going to send "demonically aggressive" lawyers after you? If your projects are really as separate from the company's as you state, it's unlikely. It's more likely that the most you'd risk is getting fired (which obviously isn't nothing) but even that isn't particularly likely. Asking permission is the safe option. Worst case, you're denied permission and told that the company would let you go if you moved forward. Then you'd at least go into it with open eyes. 

It's not a completely horrible question. I can imagine it drawing out the candidate's beliefs about process improvement, prioritization, deadlines etc. I would use it as an opportunity about how I think work should be prioritized (Asking the hypothetical boss whether they communicated that this was the most important thing to them). Also, I'd talk about my beliefs about continuous improvement (Adding this situation to my hypothetical retrospective board so we could make sure it doesn't happen again). I'd also use this as opportunity to discover what they would do about an unreachable deadline. The thing is, these are my talking points, rather than a direct answer to the question. They're personal to me. Rather than just providing a witty answer, I've moved the conversation to the things I want to discuss. The things that advertise me, and things I want to discover about my prospective employer. You've asked this questions because you see interviews as a series of questions you have to pass. They're not, or at least they shouldn't be. In the end, they'll hire the person who communicates that they're the best candidate, not the person with the snappiest answers. Write down the things you'd like to communicate in your next interview. Then look up some common interview question and practice "hijaking" the conversation. 

Wait for the final decision for Job A and then decide how to proceed. Apply for Job B and inform all people involved of this step - in particular inform my point of contact for Job A that the new application is not to be interpreted as a lack of interest in Job A. Apply for Job B without mentioning anything. 

I have applied for Job A at some large company, that has a lot of job offers in the region and field that I am interested in. I have already been to the first interview and made it to the second round of interviews. It is scheduled in about three weeks. If they offer me the job, I will probably take it. However, as I will soon graduate, I want to continue my job hunt and, as this company has a lot of interesting jobs, I would prefer their Job B over a lot of others in different companies. As this company is large, the HR persons handling Job A and Job B are different, the departments are different, and the offices are at different places (though not too far from each other). I can think of the following alternatives on how to proceed: 

Proceed as usual. Giving early notice is a bad idea for a host of reasons already covered on this site. In your particular case: it's unclear whether your offer is solid offer yet. What would do if it fell through and you had to remain at the place you've essentially already resigned from? No. Terrible idea. Your notice should be enough to handle any subsequent handover, that's what it's for. Perhaps you could encourage your colleague to document things (or document things yourself) rather than just teach you, to make it easier for the next guy to pick up. 

1 phone interview, 1 face to face interview. Hiring the right person is a thing you don't want to mess up, for obvious reasons. So it can be tempting to think that the thing you need is more time. "you'd probably already know whether you want to hire the candidate after the first interview, but a second one can be nice" - I will stop you there. You're right, after reading a cv, doing a phone interview you probably will end up knowing in the first five minutes of the interview. More time would be "nice", meaning it has low marginal value. Your time is valuable. You should have someone from the team interviewing. This person has actual work to do, and it's unhelpful for them to stretch out the time they have to spend away from it. Incidentally, if you don't have this problem because no one from the team is at the interview (just HR say), cancel that interview, you are wasting everyone's time. The candidates' time is valuable. To hire good people you must respect their time. People have to take time off work to do interviews. Unless you want to actively filter out competent professionals with a host of opportunities to choose from (presumably in favor of the desperate and inferior) you cannot ask them to take multiple days. This means no "evaluation days", you are not Google (I mean, unless you are google). This means no "nice" (aka low margin value) second interviews. Moral of the story: Get good at interviewing so you can distil that first interview into something really useful. Respect both your employees' and your future employees' time. Also, as a general point, you don't need to actively try to catch up with the bureaucratic inefficiencies of large corporations. 

What have you tried already? From your description, you've got a very busy programmer that is finding ~32 hours a week worth of work for you to do but you're "fudging" the number of hours that you're reporting so that you're reporting ~40 hours a week worth of work. Are you absolutely certain that the other programmer knows that you're underutilized? Are you explicitly telling the other programmer when you're out of work? Are you telling her far enough in advance of when you're out of work that she can figure out the next bit of work for you? Are you certain that she's not getting mixed signals from the fact that you're reporting 40 hours a week of work? If she's finding 32 hours of work every week for you to do, it seems unlikely that she's actively trying to sabotage you or is actively trying to protect her turf. It seems more likely that she thinks that she's giving you a full week's worth of work or that it takes her a certain amount of time to figure out the next thing for you to work on and she's getting caught out when you finish a task unexpectedly. Have you had an explicit discussion with her where you explain that you're only getting 32 hours a week worth of work? Have you asked her for help in ensuring that you've got a full week of work? If so, what were the results of that meeting? If not, that's probably the first step. If you had that meeting and you've done everything that she asked in order to ensure that you have a steady amount of work, then you need to have a meeting with both her and your manager where you explain the problem. Again, this needs to be explicit, you need to be sure that no one is confused by the hours that you've been reporting. If you are convinced that your manager won't do anything to help, bring solutions in addition to problems. Are there problems that you see that you could be solving for the company in your downtime? Is there training that you could be doing to improve yourself (even if it is simply reading something)? Could you be sitting in on some meetings? Could you be sitting with her watching her code to get a better understanding of the system? Figure out what outcome you want and ask for that. If you've got a truly incompetent manager, the option that will involve the least work for him is simply to agree with whatever solution you propose.