You would ideally title yourself as a software developer or software engineer. In your case, you have experience with back-end languages and frameworks which, in some companies put you squarely in programming the back-end of websites, far removed from the design. Other places would have you using a lot of HTML, CSS, PHP and some frameworks, bridging the contexts of design and function. The degree of specialization often depends on the company size. Website/graphic design is concerned with the presentation and organization of information in the medium. In a perfect world, having an expertise in graphic design would carry over well into website design, but website design comes with its own idiosyncrasies and rules for good practices. So those designers have to understand the technical requirements and limitations for design for an online medium. 

The last two weeks have fallen really short of these expectations. If I don't have work, I don't have hours to report, so I do not get paid. This makes me feel like I've been put on furlough, but doesn't that usually apply to paid employees and not contractors? 

With my experience, I am terrible at reading people, to see if they are open to casual talk for a while, or if they don't want their work to be interrupted, so I don't know when to start chatting with them. Also, my own life isn't very interesting to talk about, as I don't go out on a typical weekend. I don't want to start talking "just because". I am good at staying focused on my own work all time, but usually when I talk I tend to catch people at a bad time (they are quickly interrupted by some work-related order). And at work there are conversations that can be over 15 minutes long. This is not a problem for me in non-work related situations, such as a friendly outing or a party, because I know people want to talk. But at work I either risk being labeled a shut-in or a guy who slacks off too much. How do I balance it? How do I know when to start/finish a chat, and make it sound natural without being forced or contrived? 

If they ask again, say it again. This can be surprisingly difficult, so practice. (Note that this applies to more situations than just the one you're in.) Now, if they ask a question that pertains to the business, such as: 

Give huge bonuses for cooperation that leads to good outcomes, and fire people who sabotage their coworkers. Huge bonuses. Like absolutely enormous. You know, like the bonuses that CEOs routinely grant themselves at the expense of the company. 

Don't pay for health care during that week. If you get injured, pay for it out of pocket. If the expense is catastrophic then you can sign up for COBRA retroactively up to sixty days after your last day and your coverage extends backwards in time to the day you left your job. It's expensive but it is cheaper than catastrophic care. Do not take my word for it; I am not an expert on COBRA. Today would be a great day to research COBRA and learn for yourself how the program works. You're fine. Go enjoy your vacation, and try to not break any limbs. 

You expected fairness and loyalty and thoughtfulness from a corporation. That's a great mistake to learn from, particularly since this mistake cost you nothing. Don't make that mistake again. 

I've recently started to look for a new job in my web development career, applying to several places. Not wanting to be very picky, I applied to a lot of jobs where the required set of responsibilities fits my experience, without putting much consideration as to what their primary product or service is. I only took some consideration the age of the company and how reputable they are in their industry. IT jobs are common in almost every organization. Some do business making X and others are non-profits contributing Y and Z. Naturally some industries interest me more than others, and others not so much. As an example there is a web developer job available for a fashion magazine publisher. The job fits the description of what I am looking for, which is web software development with a possible opportunity to learn new languages. The industry that the company participates in, however is not really a great fit with my interests. So I may show passion in the work that I do, but not so much the end product (if they offer me a complimentary magazine I take it simply as a good gesture). Is it fair to the employer to apply for work if you cannot see yourself fitting in with what they are producing, or would it be a waste of my time and theirs? To me, it seems like a more intimate relationship with corporate interests is needed, since it's not like taking a fast food cook job. Because of that I feel like the passion and interest in the end product could mean the difference between being able to move up to a significant role in the company and just going through the motions. 

First off, if this subject interests you, I have a number of articles in my blog queue coming up in the next couple of weeks about how I deal with technical interview questions as an interviewer. To address your specific question: this is not a problem I ask, but suppose it were. Why would I do so? To find out: 

and hand it to your manager. Notice that Company A was not mentioned. If anyone asks any nosy questions about your personal life such as where you intend to work next, then the answer is: 

The specific algorithm is totally unimportant. It's a jumping-off point for the real task of the interview, which is determining if the candidate can reason about code using the tools in their toolbox. I have never once had to solve the tower of hanoi problem in my job. I have many, many times had to rewrite a recursive algorithm into an iterative algorithm with an explicit stack in a stack-constrained environment. A candidate who cannot do so is unlikely to succeed on my team. So, the answer to your question is: solve the problem in good faith. If the problem is really a "fizzbuzz" -- just a test to see if you can write code at all -- then you will pass it quickly and the interviewer will move on. But I would use a simple, standard problem as an opportunity to probe the candidate's skills more deeply. 

One of the more common expectations from working in a smaller company is being able to do more, and manage a wider variety of skills. They usually cannot afford the level of specialization that larger companies have. The advantage of smaller companies is that you can be a bigger fish in the pond, giving you potentially more control and direction of working on projects. It can be quite easy to have a management position there even if you haven't had that experience in previous jobs. As a personal example, I was offered a Project Manager role only 3 months in, on my first job after finishing college. (because I was still wet behind the ears, I only declined it to focus on building my technical skills) If you are interested in leadership positions, working at these companies would be a good way to get the experience. That has its downside, in that you might reach a plateau of experience or seniority too soon. Smaller companies tend to involve more horizontal movement than vertical movement in job titles. Overall, though, working in smaller companies will make you a more well-rounded professional. 

I have an unusual problem in finding work. I have been in many interviews (over 10 in the past year), but none of them produced any job offers. However, the employers I've interviewed with are impressed by my resume and ability to solve the problems given to show that I would be productive. This leads me to find an observation for most jobs that I apply to (mainly a hard-skills technical job). Everyone needs soft skills to survive the interview process. But for those more inclined for technical work, once the job is held, these soft skills are suddenly not as important or used with the same sense of urgency, or at least they're not the same type of communication skills. They feel underused in the job compared to the interview. As an example, I do not know how to translate my ability to communicate well with co-workers on a long project into the ability to convincing interviewers and play the salesman for saying why I should get the job. Speaking to an interviewer to me feels a lot different and more difficult than speaking to a team member to discuss project goals. I consider then different kinds of communication skills. I probably don't know how make them work at an interview, so here is where I want improvement on. 

That was the wrong response. Whoever says a number first is at a disadvantage. Make them say the number first if they want you. The correct response is "I'm sure your offer will be both fair and competitive, and I look forward to reading your offer letter." 

That was the correct response. An even better response would have been "I look forward to receiving your offer letter; please email it to blah@blah.com and I'll give it my prompt attention. Have a nice day, goodbye." 

The function of severance is to trade your statement that you will not sue for a lump of cash. Are you willing to sue them? Remember, the point of the PIP is to document why firing you is the right thing to do. 

That's easy; as others have said, put your coworkers who are known to be fit through the process; if the process consistently rejects them, then there's something wrong with the process. But that's not the problem you have. This is a question-and-answer site, and you've asked the wrong question. The problem you actually have is a significant fraction of candidates are plainly unfit, and this is wasting time, effort and money that could be better spent elsewhere. You have a pipeline problem, not a coding question problem. Something in your candidate pipeline is producing a large fraction of plainly unfit candidates. As is well known, a great many programming job applicants have no ability whatsoever to write even simple programs: $URL$ Ask around and see if other interviewers are having similar problems. If they are, then push back on management and recruiting to see if they can figure out what is incentivizing recruiting to keep sending you unqualified candidates. 

I have signed a contract a month ago to start getting consistent work from a company. The boss promised me an average of 25 hours a week (but that wasn't explicitly written), but for the past two weeks there have been no reasons for me to come into the office, as there was, to my surprise, no work being offered to me. Even my boss hasn't shown any concern at me not showing up. Project managers typically come to the employees for more things to do, but they are paid on salary. Here are some relevant statements from the contract: 

I've read a few job descriptions and replies from interested parties about their places of work, that they have a "regular" workday with the hours of 8 to 5. I am normally used to working 9 to 5 and that is considered full-time as well to many of my colleagues and management. In the US, the Fair Labor Standards Act does not set a legal number of hours that divides full-time/part-time work and it is left to the employer. So in what cases would companies see 8-5 as being more acceptable than 9-5 to be "regular" (in their words) full-time? These jobs in question are both for filling the same role, (software engineer) and are in the same geographic area. They usually haven't indicated if it is to keep up with a regional office from a different time zone. Is the number of hours required to work as full-time largely an indicator of the company's local culture? 

Well, were I the hiring manager I would interpret your statements as "instead of me paying for training to improve my own skills, tell you what, you guys pay me to take up the time of your employees who will mentor me, and in exchange I'll abandon you for my better-paying freelance work after I've learned what I can from you". Maybe that's not what you intended to communicate, but that's what I'd hear. I've had interview candidates who told me straight up that they intended to use the position as a stepping stone to work outside my division or my company; I "no hired" those people. They might be great technical candidates, but if I'm just going to have to find their replacement in six months or a year, it's better to pass on them. 

Beyond simple honesty, you tailor your answer the same way you tailor every answer in an interview: by considering the motives of the person doing the interviewing. Presumably they have a business problem and they believe that going to the enormous expense of interviewing and then hiring you, they might have a chance to solve that problem at a reasonable cost. (This is assuming that the interviewer is acting in good faith; see my comment above for thoughts on that.) If you want to make yourself seem attractive, make it clear that your motives are aligned with the business problem that you are solving. (This of course requires that you understand what business problem you are possibly solving in the first place; use the interview as an opportunity to clarify that if it's unclear.) For example, if the position is sales at a car dealership, "I want to make a lot of money" is a perfectly acceptable answer. It shows that your goals and the goals of the business are totally in line. Commission-based sales generates profit for the dealership at the same time as it generates commissions for the seller. It's a terrible answer if you're applying for a job teaching math to high-school students. (Unfortunately.)