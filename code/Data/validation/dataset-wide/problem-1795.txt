@Hubert's solution should prevent email from being delivered. You could also configure the email server to redirect to the new domain and send a fake bounce message indicating the new domain. This approach is discussed in the Exim documentation. You may also want to setup an SPF record indicating the site as not sending e-mail would be an additional indication that the domain is not involved in e-mail exchange. I like the concept of being able to specify the domain as non-email with a null MX. It would help determine if incoming mail is arriving from a bogus domain, or is being sent to a bogus domain. SPF does a good job of this but the null MX would fill in some edge cases. I also validate incoming servers using SPF and refuse email the SPF record exists, but the server is not allowed to send email from the originating IP address. This is outside the design, but fits the requirements as the mail servers need to be able to send and receive administrative email. 

If you have a separate ethX interface on the system with the connection to the physical network, create a second bridge on that interface. You can then configure the physical address on that virtual bridge. The static address can be configured on the virtual machine. This makes keeping a stable address space simpler. 

No. This is not an appropriate task for VNC. As Aaron stated you should use an appropriate tool for this. rsync and scp are commonly used and easy to schedule. If your are synchronizing configuration you should look at tools like puppy or cfengine. 

My reading of the man page indicates the verifier will use DNS to lookup the public key. Add a new selector for your new key to DNS. Do not reuse your existing selector for the new key. If you don't need ongoing verifiability, you can schedule deletion of the current selector at a future date (at least a week or so after the switch). Don't start using the new key until it is published and the verifier tool reports you have correctly setup the DNS records. Unfortunately, a high percentage of the DKIM email I receive is missing the support DNS data. See my article on Implementing DKIM with Exim for detail on selector management. 

The header is usually the same as the addresses of at least one of the recipients. Header addresses are like the contents of a letter. A letter can be addressed to anyone or noone, but it has no impact on who the mail is actually delivered to. The letter is placed in an envelope and the envelope is addressed to someone. Delivery depends on what is on the outside of the envelope, not the contents of the envelope. Email delivery works like a letter. The headers and contents of the message are treated like a letter, and are ignored when it comes to delivery. The delivery mechanism relies on a separate set of addresses known as the envelope addresses. Delivery will be attempted to any destination addresses specified on the envelope. For most software, the addresses specified as or will be the recipients will be written to the headers. Additional address will be added to the envelope, but not written to the headers. Programs which generate email may not follow this behaviour. Spambots (programs sending Spam) often have a fixed message which is sent out to a long list of recipients. This is one type of software which will generate the kind of email you received. There are legitimate cases which lead to the behavior you are seeing: 

If you are hosting two subdomains of the same domain, you have no problem if you get a multidomain or wildcard certificate. Otherwise the domain not listed on the certificate will give a warning that the name doesn't match. When configuring the domains, you would use the same certificate for both domains. Some clients and servers support negotiating the domain name before presenting the certificate. This allow two different certificates to be used. 

This is expected behavior when you have unmatched speed and are running mismatched speeds. If you are able to saturate the 1GB link, the other end will have read only 100 packets by the time you have sent the 1000 packets. It is unlikely your router will buffer the remaining 900 packets. UDP is an unreliable protocol. Unlike TCP it does not come with a built-in reliable delivery. It may help to run a similar test with TCP connections. Running it in both directions may help to determine if the issue is unidirectional. Running on the processes may tell give an idea if one of the processes is running slower then the other. before and after the running the test will allow you to calculate how much data arrived, and see if any error were generated. may tell you if one of the hosts is in half-duplex mode. Half-duplex connections are prone to issues such as you are seeing. If there are cabling or other issues, the connection may fall back to 10 Mbit half-duplex in one or both directions. If the switch is managed, then should check the configuration and error counters on the relevant ports. If the two systems have different Ethernet hardware, that may be the issue. Some hardware just can't handle a saturated link. 

Tools like are designed to bring a configuration to a correct state. Tools like are designed to track versions of files. Both of these tasks have been referred to as configuration management, which can lead to confusion. In the following, I will use version control to refer to tools like , and Declarative configuration management to refer to tools like . I will assume you don't need to track which version of the components are installed by the configuration management tools. This can be important when reproducing bugs. Configuration management tools can track the versions, and may use a version control tool to store the inventory. Declarative configuration management allows you to specify the desired configuration and how to get there. Once you have defined the desired configuration, and started the tool, it will take the specified actions to install and configure the desired components. It is recommended that you use a version control tool to maintain this configuration. EDIT: When running automated configuration, it is important to run the package manager in a mode that does not prompt for configuration values. (Ubuntu/Debian can use a pre-seed file to override default configuration values.) If the package manager updates files in , you will need to evaluate the changes and may need to adjust the declarative configuration. (Ubuntu/Debian will track the replacement by adding an extension like or to the filename.) I scan for changes after upgrading the O/S version, which often generates a number of configuration file changes. There are a variety of methods that can be used to update the configuration files in . Three that I have used are: - using the platform's configuration tool to update the files (Ubuntu/Debian has a pre-configuration mechanism for this); - using the declarative configuration management tool to edit the configuration files; and - copying the configuration file from a central repository. Each system will have a small number of configuration files which are host specific. These will include files related to host naming, static network configuration, and others. If you update a file by editing it, it will be possible to add local change which don't get corrected by the declarative configuration management tools. Version control tools track the contents of files as they change. Normally, they require a manual commit action, so it is possible for the managed files to get significantly out of sync with the controlled versions. Discipline is required to track changes. The approach I use to ensure atomic changes is to use a version control tool to supply the configuration for my declarative configuration management tool. - I edit the configuration in my own working directory. Once changes are complete, I verify the changes and commit them. - The master server begins its process by updating its configuration. (Larger installation could have two or more branches and master servers allowing changes to be pushed out to a small set of servers for testing.) - The clients pull their configuration changes from the master server. - The declarative configuration management tool compares the running configuration to their configuration and apply any required changes.