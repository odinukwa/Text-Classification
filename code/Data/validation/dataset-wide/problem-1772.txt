It looks like someone one may be trying to brute force your password. Try doing a base64 decode of the value(s) after . These should allow you to determine if they are using valid credentials. It is likely they are starting the TLS connection in order to get access to the AUTH command which is usually not available on unencrypted connections. It would be appropriate to blacklist the source IP at the firewall for a period of time. There are tools like which can monitor your logs and take action automatically. If you don't need external (Internet) access to the mail server, you may want to disable StartTLS and/or AUTH. I only enable AUTH on the Submission port (587), although I don't know how to configure that in Postfix. 

Notes: Backslash notation can be used to wrap lines as above. Substitution characters are documented in the man page. 

Although I would recommend not sending from domains so you could define DKIM_DOMAIN as follows. You could use domain rewriting to remove the portion of the domain, although I would try to avoid getting it there in the first place. 

You can also use this file to tune the Java configuration. If system variable is defined in the environment used to launch Tomcat, its value will be added to the command line. If you use a Java system property you retrieve with a call to . This would be coded like: 

The default ssh module does not seem to work. It will fail if your key is password protected. From the forums, this module has had ongoing issues. Some seem to tie to issues with libssh2 suport in PHP5. It seems to be broken again in PHP 7. SSH SFTP Updater Support does work for me. I have installed Version 0.7.1 | By TerraFrost 

The above SPF records state that only the MX will send email for the domain , and no mail should have the domain . For domains that won't originate email remove the mx from the TXT and SPF records. See $URL$ or my article on SPF for more detail. Remember that domain data is cached. When moving static sites, leave the site up on the old host until traffic stops arriving. Moving sites with dynamic content is more difficult. 

The RFCs generally recommend a limit of 100 recipient addresses per message. The mail server may expand this list if a recipient is a list known to the server. This applies to the envelope recipients, not the recipients listed on the header. For a mailing lists, it is bad practice to list the recipients unless the message is being sent to a single user, and that is the only recipient listed. Mail servers may list multiple recipients in the same domain when sending a message. Some or all of these may be rejected by the receiving server. Setting up a list on your mail server will allow you to sent to and address the list address, and have that expanded by the client. Your client lists should not be accessible from the internet. 

Don't use .local as your domain as it will conflict with Zeroconf/Bonjour. If you have a Linux server in the mix, I would look at . You can configure it to do DHCP, in which case I would disable DHCP on the router. 

To answer your question, Yes, it can if they have configured their domain securely. I find automated e-mail systems tend to be poorly configured. Spend the time getting it right if you do go this way. If you do, get your server listed in their SPF record. It is not necessary for your server to use one of their domains. You just don't want to look like you are forging their identity. Setup your server correctly, and you shouldn't have a problem. One technique that is used in cases like this is to send from a domain you control like "client.example.com". You just have to be careful not to look like you are phishing. You can use "Reply-to:" to have replies go to the client. 

You could let them browse www.example.com as example.com. Alternatively, you can use the base tag in your page headers to redirect subsequent queries to www.example.com. 

Check your error log to see if anything is logged there. I have found the solution there in a few cases where I got directives wrong. 

The normal fair share approach work well for most work loads, and it is not common to tune priorities for performance. Tuning process priorities can have undesirable side-effects. There are cases, such as batch processes, where applications are specifically niced. You will need root privileges to give the JVM higher than normal priority. This might be acceptable if the process is I/O bound. If the process is CPU bound, you may find it kills performance on ALL other processes. This will include the process you used to up the priority. It is common to batch processes, so they don't use resources which might be used by interactive processes. The CPU speed monitors can be be set to ignore such processes when determining if CPU speed should be increased. If batch processes are niced, this is typically done in the script running the process. Modern kernels also allow you to set IO priorities for processes. Check . If your JVM is IO bound this might be appropriate. I do run my processs extremely niced. This is because I only want to use CPU cycles which would otherwise be unused for these processes. They typically uses over 90% of the available cycles. 

I would expect NUT to use to signal the UPS to shutdown. This should cause the UPS to restart once power is restored, and do a brief shutdown if the power is restored before the shutdown completes. I would expect the and to be the tunables for the UPS shutdown restart cycle. should allow time for the server to complete the shutdown cycle, and may need to be increased. should be the time it takes for power to stabilize after the power has returned. It also allows some time for the batteries to recharge before load is applied. Normally, you would not want to run the batteries down to low before shutting down. You want to have enough battery to go through another cycle or two in case the power drops again.