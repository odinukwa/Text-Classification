Personally I believe you have a person who is in a role he is not suited to fill. Once you take a lead position, coding is your secondary responsibility and it should take up no more than 50%- 70% of your time (personally I go with 50 but he is a module lead not an overall lead, so maybe 70% is more appropriate). I would sit down with him and ask him how much time he thinks he should spend on management tasks vice coding and then tell him your actual expectation of the split between the two and then ask him if he would rather be a developer than a lead if the two estimates are way out of whack and he is not willing to change to your estimate. Having a lead who devalues time spent managing means you don't have a lead. 

The work you prefer not to do is still your work if it has been assigned. You need to stop thinking of it as not your work. The job is to get the projects done that the company has not to play in your preferred tool/language only. You don't get to pick and choose what you want to do especially if you have available hours. They are paying you for full-time and they expect full-time production from you. If you are faster than others to complete tasks, then yes you complete more work but there still should be no expectation that they will allow you to sit idle while other people are busy and there are tasks undone that you are capable of doing. This is not unfair. If you are being paid for full-time, then expect to be kept busy during the normal work hours. It doesn't matter if you don't like the tasks as long as you are capable of doing them. Clearly if you are a developer for a hospital chain, you can't take over doctor's duties because you are not qualified and you would be justified in refusing those tasks., Just as clearly, you have no leg to stand on in refusing tasks that can be done in your preferred language or another language that you are expected routinely to know as part of your duties (such as many devs need to understand SQL even if it is not their main language). The gray area comes in when the tasks are for tools and technologies you do not know but could learn relatively easily. In this case, you might be able to refuse the task if you can show the risk associated with having someone less skilled do the work and the added amount of time it would take to do the work. Even if you make the case, management can still decide based on ongoing needs if they prefer to take the risk. For instance suppose you were a web developer for a medical device company. If they see the need is coming up for less web development work and far more embedded systems work, they may choose to take the risk to train you in the new specialty because it makes you more valuable to them and their expected future needs. Or they may choose to hire someone with that skill set and let you go as your workload goes down. This is often the scenario when a legacy system is being replaced. So to address what to do. First accept other work graciously when it is given. No manager wants to deal with a prima donna who is too good to do the work they actually need to get done. Next, when you complete tasks, suggest other tasks in your preferred area before they assign you to the ones you would prefer not to have. By having a plan for what you should work on next, they aren't going to throw the next available task to you unless it is a higher priority. But in this business, priorities take precedence over preference and you need to accept that. Next, sit down with your manager and express to him your preferences and where you want to develop your career. He can't guess what you would prefer to do, so you need to make sure that your preferences are known. A reasonable manager will try to accommodate preferences as far as he or she can, but in the long run, the work available is the work available whether it is your preferred task or not. It is good to make it clear that you are not refusing the tasks and you will do them willingly, just that you are asking he consider your preferences when possible. Next you need to show your coworkers and particularly your boss how much value you add to the product and that what you do is not less skilled than what they do. So make sure that when you accomplish something, you discuss the complexity in team meetings. Also develop and offer training sessions on the tools you use which will show them the difference between what you do and what they do very nicely. Occasionally share articles about the types of things you do as general interest items. If you have a wiki, document some of the complexities of what you do. In other words, do the tasks it takes to get credit for the difficulty of what you do and how you do it. Doing the work is not enough, you need to be political in showing the value of your work. Once you do that, then you will find it easier to get pay raises, promotions and better assignments. 

Consider that they will likely not hire the new person no matter how much notice you give because they don't want to pay (or have the budget) the salary twice. I have never seen anyone who gave a longer than normal notice actually have a replacement on board before they left. If you need a month to get everything ready for your replacement, go for it, but don't assume you will have someone there in time to actually train them unless they are using a current emplyee in your place. 

You came in at entry level because you are entry level. Having a clearance doesn't change that. Your friend may have lied to you as to what he came in at or he may have some experience that makes him seem more than entry level or they may feel he has better technical skills or maybe he just wouldn't accept the offer until they upped it (or he had another offer on the table at a similar level). Who knows. It is irrelevant. There is almost always someone who is higher than you who you may not feel is as good as you are. In every large company, in pretty much every medium company and even in many small companies. That is because some people are better negotiators, some people have skills you don't know about, some people have better political skills and many people overestimate their own skill level. You need to simply accept that and not let it bother you. Instead concentrate on what you can do to get promotions and better or more interesting projects. What you need to do before asking for a promotion is have some accomplishments to prove your value to the business. What you can do right now is ask your boss what he feels you need to do in order to be promoted to the next level. Then go out and do those things and do them well. Then you ask for the promotion. 

Your boss made a severe error. He should never have told you any amount except the approved raise amount. If you dispute the raise and say you were promised 20%, there is a strong possibility that you will get no raise and your boss will get fired for making promises that he was not authorized to make. Almost certainly, you will not get more than the current offer. However, the good news is your boss is an ally for you. That means he may try to help you find a way to get more money since he believes you deserve it. Consider if there is a promotion or title change that you can make. A new position often means a salary raise. You might have to wait a few months so that the current raise is no longer a factor in management's decision though. As far as what people in another geographic location make? That is irrelevant. Companies generally try to pay market rates for the geographic location of the employee. 6% is a good raise, be happy with it. The 20% figure was smoke, it was never a real possibility. 

Let's start with the obvious workplace issues that nothing to do software development. You have stated he is your boss. He has every right to determine how he wants to manage design. It is not your call unless he decides it is your call. It is counterproductive to get upset about that. It is risky for your career at that particular place to get mad about him doing something that is a part of his ordinary responsibilities. There are projects where this type of overarching design is common especially if the project is using Waterfall methodologies instead of Agile. It is common when there is a strong regulatory or legal aspect to the software or where the cost for bugs is very high such as in the Space program or for medical devices. In those worlds it is very critical that the design be done in advance and approved and that there be no deviation from the design without approval. Whether your project falls into one of these categories is almost irrelevant though. The person in charge wants to use that technique and you have an obligation to follow his direction in this and to not resist it. It is what you are being paid for. What you can do in this situation is do as you are asked to do. You can have professional discussions of alternative methods, but do not ever go behind his back and do things against the way he has designed the system even if you don't agree with his design. There are considerations you may not be aware of and to do so is insubordination and grounds for dismissal. If you professionally discuss alternative way to do things and he decides against your suggestion, then take it professionally and do not continue to argue. The decision in this project is his and he is the one who will have top pay the price if he was wrong. In no case should you argue. It is entirely to possible to have cordial professional discussions of technical alternatives. This is a skill you need to have to be successful anyway, so this gives you a chance to practice. It is best to discuss alternatives at the start when things are first brought up not later after other parts of teh project are depending on things being done in a certain way. The more you support his decisions, the more likely he will listen to you when it is critical. Do not argue minor points. You have apparently worked at this company a long time, so work on this project and look for a project run by someone else to volunteer to for. Or search out a new job is you can't deal with a perfectly reasonable management requirement. But don;t ruin what reputation you have at this company by becoming known as the angry person who is not a team player. Stick it out and move to a different project. Use the opportunity to learn things about architecture that he can teach you and things like how to manage subordinates which are sometimes learned best by working for someone whose style is not your preferred one. In your career, you will have to work with many different types of people with many different styles of management. You will work with people you don't personally like. You need to learn how to work with different styles and personality types and how to effectively present your ideas when you don't have free reign to do what you want. This is therefore an excellent opportunity for you to grow your soft skills.