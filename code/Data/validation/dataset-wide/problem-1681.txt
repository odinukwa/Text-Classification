Ask your tunnel broker for a /56 or /48 allocation, at least another /64. You will then be able to generate a /64 in this block for the far end of the link. If you have multiple tunnels you will need a separate /64 for each tunnel. I would expect the FED1 addresses to always be on the TUN devices only. (Site local addresses are deprecated and should not be used.) You will likely have to specify routing for ::0/0 on the Ubuntu side. Use the 2001: or an FED1:x: address for the Ubuntu eth0 interfaces. RADV should pick up the address automatically, but I program it in. My configuration uses my /48 allocation for LAN devices, and the /64 for DMZ addresses. This makes firewall configuration easier as they are in non-overlapping ranges. Your ping results are what I would expect. You will need to specify a link to FED1::1 on Ubuntu. Changing the Centos eth0 address to FED1:1::1 and specifying the addresses as /32s or /64s should help. You only need to know the link addresses on the tunnel ends. The eth0 interfaces should have your 2001: (public addresses). It the eth0 on Centos is your upstream link it will likely have a Point to Point IPv6 address for the local end of the upstream link. This should be handled by your 6to4 tunnel setup which should also add the default route to the Internet. EDIT: Suggested configuration Centos (Server/Network) 

Try shorewall which provides a reasonable firewall out of the box. Enable access from net for the services you want. There are example rule sets for one, two, and three interfaces. The documentation is good and it is actively maintained. I expect you will want to limit which addresses can access MySQL which is easily done. You can also secure SSH with port knocking where the port is closed unless you have probed the another port recently. 

PRO: Having two servers increases your redundancy, and may allow you to balance your load. If the two servers are acting as MDAs, then you need either shared storage, or a method to balance users data across the two servers. CON: You should have different configurations for the two servers, at a miniumum different mail domains. If you have separate servers acting as MDAs, the configuration differences can be relatively minor. Running two active MX servers adds additional issues in addition to the issues of running a mail server. Until you have mastered running a single mail server, it may be better to stick with one. Once you have mastered running one server, you should be able to decide which way to split the load for your organization. 

I had thought there was a utility to trace the route a specific packet would take, but wasn't able to find it last time I looked. A little looking through the Shorewall show command output got me my answer. 

Try configuring your server to use the option. Use your mail server as the smarthost. If the name resolves to an Internet address, you may need to connect by IP address, add a host entry or configure hairpin NAT to your mail server. 

The Wordpress admin users can not modify any files that cannot be modified by the web server that is running it. A secure site will lock down all PHP files so that they can not be modified by the web serve. It appears you have done this. You probably should have set the group to (directory may be wrong for your installation): 

Redirecting to your new server can be done by individual aliases, a redirect router (see chapter 22 section 3), or a rewrite rule (see chapter 31 Address rewiting) such as: 

Yesterdays log is /var/log/syslog.1. They are rotated daily about 6 in the morning. Previous days logs are syslog.2.gz... Use zless or zgrep to look at the compressed logs. Data is likely in /var/log/messages as well. This is rotated weekly, and has four weeks of old logs. 

It would be much easier to match listening ports against known services. Anything else would be suspect. With few exceptions, services run on well-known ports. Others, can usually be assigned fixed ports. In any given organization, the number of active services (ports) is usually much fewer than that which would be found in the services file. It should be possible to generate a list of services that are used in the organization. There are many ports that are used by both malware and legitmate software. A fair number of the lesser known ports I use show up as malware ports when I research them. Scanning servers for listening ports (both externally and internally) and matching against expected services could be more effective. 

Routers tend to give timeouts and echo response handling lower priority than packet forwarding. This allows the switch to operate more efficiently as forwarding is much simpler to process than generating a new ICMP responce. As a result busier switches will take longer to generate the response. Some switches may have ICMP generation disabled which makes diagnosing network issues with them diffficult. Other may occasionally get busy enough that they fail to respond. If you use a tool which displays the IP address of the routers along the way, you will usually see the switches which are slower are core switches in major cities. My preference is with running every 15 to 60 seconds. 

Routing tables for MAC addresses would need almost every single device with a MAC address listed. Routing to the Internet for IP is a single entry 0.0.0.0/0. For networks classes they break down as 10.0.0.0/8 172.16.0.0/16 and 192.168.0.0/24. Many of these can be aggregated like 172.16.0.0/12 and 192.168.0.0/16 further reducing the routing table size. Routes are searched in reverse order in to the number of one bits in their mask. This makes routing to 192.168.100.0/24 work when there is a route for 192.168.0.0/16 and another for 0.0.0.0/0 (default route). EDIT: Originally, the IP range was broken into several classes; A, B, and C being the most significant. The A class made up the first half of the address range, the B range the next quarter, and the C range the next eight of the range. These classes had masks of 8, 16, and 24 bits respectively. Later the strict usage of these masks was dropped and address allocation were done in a variety of sizes. The size of the allocation is always a power of 2 and the lowest and highest address in each allocation are reserved. Each allocation will also have an address for a router. This is often the lowest or highest non-reserved address. The smallest practical allocation is a /30 address. IPv6 uses the same form of allocation with a /64 the smallest allocation that can appear on the Internet. Typically, and ISP will be given much larger allocation, which is all the Internet routers would need to know about. Expected allocations are specified in the RFCs. The ISP would need to know how to route its own subnet, and what addresses to route to which interconnect routers. This is significantly simpler than knowing how to route each mac address. 

It is also common to us NAT for a VM. In this case the source address (and possibly port) are changed when packets are routed by the VM's host to the external world. Responses have the destination change to the original destination. 

Another approach would be to use a server to redirect the domains to their subdomains. This could be the same as one or more of the hosts above. 

I would add backups. You've really gone all out on the network security front. Using only a subset of those tools would likely be adequate. Disable any and all network services you don't need. If you have network service that are only accessed on the server, have them listen on the loopback interface only. 

.htaccess is parsed every time it applies. This adds a small but unnecessary load on the server. The conf file is only parsed when the server is loaded or reload. Use of .htaccess depends on access being enabled in the conf file. Using .htaccess gives the administrator less control over security as any user who can write the content directory can override the security settings for that directory. (There are configuration options which limit this capability.) On many systems, the web server itself can write content directories increasing the potential damage if the server is compromised. Use to replace reboots of the webserver. You can configure access to SSL keys by the web server if you run any HTTPS services. 

On most of the networks I work with the router address is the first routable address (1, 129, and 193) in the subnet. This is by tradition, and not a requirement. Another option is to use the highest routeable address (126, 190, and 254) for the router. The lowest address in the each subnet (0, 128, and 192) is the network address and is not assigned. The highest address in each subnet (127, 191, and 255) is the broadcast address and should be received by all computers in the subnet. To allow for these three addresses, the smallest subnet has four addresses, allowing for one computer in the subnet. I see a few problems with the diagram: