I'd likely argue the possibility of lessons to be learned is above zero, the probability of having the open discussion to get the other perspectives isn't that high that I'd try everything to get there. If I ran into the manager in social situations again, I might be tempted to try to have a private chat to get some more details a couple of times but after that I'd let it go. I also would be tempted to think that the acting manager may not have that much more insight into this than you do as it could be that he was just following orders from someone higher in the company. 

If you only need a couple of characters, I'd be more tempted to abbreviate the years to 00 and 12 instead of 2000 and 2012 to free up a few characters and prevent the dilemma on the company name. Something to consider is what is the point of the resume. My understanding is that it is used to get an interview to further discuss the position and how well one fits into that role. Abbreviations may work as long as they aren't getting into areas near offensive language, e.g. French Connection in the UK has an acronym that would be near an English swear word, at least to my mind. If there are questions about where you worked this is something to be discussed in the interview unless you believe the company is the kiss of death in terms of anyone wanting someone that worked there. 

I'd probably suggest something a bit more diplomatic as well as having more details as some may see this as a, "Don't bother me with trivial details, puny non-technical person," attitude. While the general idea is great, I'd mention which sites do you use for looking up the API as well as probably walking through an example where I got to know something fairly deep in the technology stack that shows that I'm not afraid to get my hands dirty. The question is acceptable and in a way is a test. Will you give a way to handle these that makes the person go, "Ah, so you will take control here and change how I try to run this," or will you try to answer the question asked and blindly follow orders? Would you seek to clarify the question or the intention behind the question? I've had similar hours spent answering technical questions though there is something to being honest about not knowing something right now though you can look up the answer somewhere. I would think these questions are likely to be most common for intermediate developers, those with at least a year of experience but less than a decade for a general ballpark, where there is some expertise to be demonstrated yet not a great mastery of development in general that would be reserved for the more senior people. 

My suggestion would be to stop doing any new work and consider where you are right now. What are the pieces that are done, what is in progress, etc. Get clear on what you really do have and what is still in development as well as list what are the challenges going forward and what commitments would you like to see to move this project forward in a productive and useful way. The key here is to communicate what you have and what you need in order to do a proper job on this. I'd be careful about just dumping what you have now to them without them understanding what they would be getting. Thus, there may be some documentation and presentations to ensure a good hand-off if you want to go down this road though I'd suggest inquiring if they want this. There is a chance that they may not want an incomplete website and that is what you may have right now. If you want to be a martyr, keep soldiering onward but I'd question the upside of it personally. 

While I can admire the desire to be the best, be careful how you measure this and what does this look like. For some, it is all about money and thus other perks may not count as much though for others this may be more important as things like time off could be seen as more valuable in a sense. Others may see it being about specific skills though this does mean knowing which skills count. Do people skills count as much as technical skills? Does it matter how much of this is a popularity contest or is it just the work being done? Spending more time in the office could work or it could backfire. I'd suggest asking your manager how he perceives the time you do spend in the office. Is it good or would it be better to be around a bit more? This is a bit of a fishing expedition since there could be rules around how many hours one can work and whether or not you'd be getting into unpaid overtime if you spent too much time in the office. Some places may see it as acceptable though if your performance is already good this may not make you great just because you put in long hours though some places may reward this kind of behavior. If you do go down this road, consider how hard it may be to reverse this trend if you want more time for family, hobbies or something else. Asking for more responsibilities may be useful in trying to step up though I'd rephrase this as, "What do you want me to do to become an intermediate developer?" or whatever language you want to use for that next step in the career path. Know what are the criteria for the next promotion here and focus there. Visibility can cut both ways. If you try to push new projects that fail, you could be seen as a troublemaker. Alternatively, if you are always seen as someone with something new for people to try without researching it thoroughly that could also backfire upon you. Sometimes it can be good to be on a big project though if it doesn't deliver a good result, that can be interesting to see how it is taken. I'd say it means interacting deeper with your manager. What great business value are you delivering all the time. I know I wouldn't want to tell my boss every little thing I do as it would drive him nuts. "I turned on my PC," "I'm opening Visual Studio," "I'm opening Windows Explorer to update the code," "I'm updating the code," I'm compiling," would be a lot of things to say over and over that don't really add value just noise. Consider how when you do talk to your manager, you have some tangible result, get some feedback and move onto the next work item. How well do you know the big picture of what the company does? How well do you know what kind of value you could add in doing various tasks? What kinds of ideas could you present to help the team do better? These are where I'd look and see what is happening. There are probably more than a few areas where things could be done better though I would suggest looking at that performance review to see what areas did you come up as less than great and see if you could work on those areas first. 

Another approach you could take here is to consider what strengths do you have, what kinds of positions use those strengths regularly, and how are you making the most of your own life. If you know your core values, then the key becomes how well are these reflected in your work, the organization you work, the place you hold, etc. What kind of career progression do you have for the next few years? In a way, your career is always at a crossroads as you have choices to make for how you want to develop, what roles do you want to explore, and what kind of difference do you want to make in the world. SMART criteria can also be useful in being clear on goals as this is about making them Specific, Measurable, Achievable, Relevant/Realistic, Time-bound. These aspects can help narrow down where you are trying to go. Are you wanting to be a CIO/CTO? Are you wanting to be a director in an IT department? Just think about where you want to be in the company hierarchy at the end of the day. 

This is where I'd be tempted to point to projects where there were lessons learned that they got applied to future projects. For example, X years ago while implementing a new CRM system, we discovered communication gaps in getting from sales the current processes used. Another answer here could be some new process that was created while you worked somewhere to handle things better than how they were done before. The key here is to point out how were things done, what brought the change and how did the change work in the end. 

While I'd think you'd have the capability to form the words, I'd question if you'd have the diplomatic skills to ask this in a proper manner. Thus, I'd think you can do it but it may well be suicide if it isn't done carefully. How well do you know what went into the decisions of what technologies to use, what hardware is used, how well does it scale and other stuff that may put you into a rather uncomfortable position? 

In some places I've worked, there would be a crisis everyday as there would always be fired to be put out. While you may think these shouldn't be common, in some places it is very common. There can also be social cliques in some workplaces where while this may seem like high school, it is how some people handle social situations. 

Are you representing your employer at these events? Is your employer paying for you to attend these events? If yes to either of these, then I would suggest asking their approval to put their name down on a card that you'd pay to get X copies made as I'd see the company having some say in this. On the other side, if you are doing this for your own personal growth, then I'd suggest making cards that don't list your current employer that are a way for people to connect with you and build your network. 

I'd be aware of what frame of reference are you using to decide whether or not you like the job. If there is isn't that something to like? Do you not want to be getting to the job you want? Be aware that whatever answer you give would open the door to follow-up questions where supervisors and managers may well take note in things said in the heat of the moment. While you may not enjoy the job, would you rather not have it and be stuck somewhere else? If you say that you don't like the job and someone asks, "What don't you like?" are you prepared to plead the fifth and see how that goes over? I'd be inclined to give an answer that isn't that black and white as if you give the blanket yes, then you could get asked, "What is your favorite part?" that may cause you to rethink what you said. 

Based on the comment, I would have a few suggestions: "How to Win Friends and Influence People" by Dale Carnegie would note these suggestions as a starting point: 

What would you rather do that can be done to test someone's communication skills? Having laptops with all the software a developer could use would be quite unrealistic and so the idea is to have something that is rather simple which should be doable to see how well do you communicate on some points, what do you assume on other points. For example, did you ask if you could have typos in the code? Did you tell them you'd likely have IntelliSense or other checking mechanisms to ensure the code would compile? In a way, the whiteboard test has more than a few potholes that are designed to see whether or not you'd hit them and if so what do you do about it. At least this would be my understanding after doing probably about 70 of them in the past 17 years. 

The question is could you take a resume in Tex and convert it to Word or PDF easily? If so, then it may be worth sticking to Tex if you prefer it for editing text. A lot of recruiters and HR people would prefer Word or PDF when it comes to resumes. After all, who is going to read your resume, assuming a human does read it after all?