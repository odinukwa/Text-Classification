They know that they want you, so that will taint all of the remaining interviews with an attitude of "this is just a formality that we have to do, even though we've already made up our minds". The director is (apparently) in your corner, so if someone were to suggest that they like someone else who interviews after you, he will probably swing them back to you. Interviewing sucks. 

This tells me that you were given the chance to prove yourself and you failed to do so. After giving you several tasks that you proved you couldn't handle, I understand why they are hesitant to give you more. I don't think this post would exist if you exceeded their expectations with the tasks you were given, because they would have given you more tasks and they would increasingly get harder. I think that if you really want to be a programmer, you might want to find a place that will mentor you more. It sounds like to me that you need it and the place that you currently work at isn't set up for that sort of mentoring. Either that or find someone in your current organization that is willing to mentor you, if that's possible. 

As a general rule, focus on positives in interviews. It's one thing to say "I was lucky to take a number of courses on Technology X at College A"-- that's making a purely positive statement. It conveys the information that you care about (your exposure to X) without having to set up a scenario where something else has to explicitly suffer in comparison. When you set up a comparison where accepting that A is good requires someone to accept that B is bad at something invites someone to make a counterargument that B isn't bad so A must not be good which is an emotional, not a logical response. Similarly, if you're comparing two technologies, answers that focus on positives generally come off better. Saying "I'd use Java for that functionality because the lack of direct memory access helps us avoid buffer overflow vulnerabilities" is generally better than saying "I'd avoid C because of the potential for buffer overflow errors when we use pointers". Both statements may be saying basically be saying the same thing. But the latter invites people to defend whatever it is you're putting down. An interviewer that likes C, for example, might point out that you could use smart pointers in C which is true but invites more of an argument that pits you against the interviewer rather than being a pleasant discussion of benefits. 

Meetings are a sometimes boring, but pretty vital business device. Its important that everyone knows what direction the company/department/group is taking and what everyone else is doing/feeling/thinking so that they can do their jobs better. Going to meetings allows you to sync your efforts to the efforts of others and make sure you are always on the right track. What would happen if one of these meetings fundamentally changed what you were doing/coding and your boss didn't tell you right away? I know that I hate it when I spend hours coding stuff that ends up being wasted work. If you spend 30 minutes in the morning finding out all the details about something and leave with a clear understanding of your mission instead of blinding coding away, thinking that you're right; I think it could potentially save you some wasted time and/or work. I, for one, hate when I am left out of or miss meetings. And yes, you are isolating yourself by not going to these meetings. As a head-down coder myself, I can tell you that there are still some people in my small office that really don't know that I even work here even though I've been here almost a year, or when they see me I'm sure they wonder - "what in the heck does he do here?" Its good to interact with your co-workers. Also, I think that an hour a day of meetings still leaves 7-ish hours of coding... plenty of time to get some code written. 

It very much depends on the company. For most IT positions, no one is likely to care about driving history as long as nothing rises to the level of a misdemeanor. Driving infractions would be much more important if you were applying for a position where you were regularly driving a company car out to a client site (say, a Geek Squad-type operation). Credit history is a lot more variable. If you have anything to do with money-- you're working at a bank, for example, or you're working on the business's accounting systems-- most companies will want to ensure that your credit report shows that you're not struggling financially and thus potentially vulnerable to cooking the books. Similar issues come up when you're working with credit card information or customer personal information that could be sold on the black market. Some companies will use a credit report as a proxy for how responsible you are-- that tends to be a relatively recent thing and relatively uncommon-- but those sorts of companies are a lot more likely to raise issues if you've failed to make payments in the past.