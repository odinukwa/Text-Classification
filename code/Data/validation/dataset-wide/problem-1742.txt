PRO: I assume that you intend to use the main mail-server as your MDA. Having only one MDA makes life simpler. CON: The backup-MX is likely to be used as target by spammers. If it can't fully validate incoming messages when the main mail-server is down, you may need to silently drop messages arriving there or generate back-scatter email. 

Run through the Securing Debian Howto. Install all patches and keep patched. I install unattended-upgrades and enable security related updates. I usually install Shorewall as a firewall with an appropriate example configuration as a starting point. Then I limit access to the Internet to expected traffic. 

A relay is an MTA (Mail Transfer Agent) which will forward email to another server. Of most concern are open relays which accept email from anyone and forward to anyone. These are useful for sending spam, and many systems try to avoid accepting email from them. Smarthosts are a class of relay server which is used to relay email for a certain group of users. ISPs typically provide a relay server which accepts email from their network and relays it to the Internet. They may require authentication. MSAs (Mail Submission Agents) are Smarthosts which usually require authentication. There is a separate Submission port allocated for them to use. An MSA can be useful for mobile users as they allow the user to relay email using trusted mail servers. 

There should be no issues becoming a small mail provider. You seem to be doing the right things. Many large providers don't get things right, and hopefully get most of their mail delivered. If mail is being sent to the SPAM folder, it is likely you have missed something. There should be a record of why you have delivery issues: 

This kind of graphical analysis is usually done with tools that are designed to do so. I use , but there are several other tools that do similar tasks. They gather the data into a data store from which graphs can be readily generated. However, there are tools that can extract the data into formats that can be graphed. I would use , , or to extract the data to be graphed in tabular format starting with a timestamp. This data can then be converted to graphical format. is one tool that can be used to do the conversion either interactively or to image files. 

Your server should receive incoming messages. Proplem appears to be on his end. Check your postfix logs. Checked outbound as well. PTR record for your mail server is broken; it does not point to mail.klickerverbot.at. Error reported is incorrect, but behaviour is reasonable spam rejection behaviour. Try using your suppliers mail server as a smarthost to send email. Depending on your email software you may be able to do this for specified domains, instead of all domains. 

Steps 1 through 3 are commonly automated in a build process. Normally, the output of this process will go through a test cycle. I package the output so that it can be deployed to an integration test environment. Only if the integration tests pass should steps 4 and 5 occur. Your step 5 implies a deployment outage. For something like apache, this can be handled by shutdown and restart during log rotation. A crontab script can handle this. If you can handle rolling changes over a period of an hour or so just include the restart in the deployment step 4. Puppet or cfengine are appropriate tools for step 4. This can be triggered by updating the repository when the integration tests pass. 

Try connecting on IPv6 which should visible from the outside without requiring port forwarding. IPv4 will likely require port forwarding to be configured on your router. It you are intending on sending mail to servers you don't control, you should get a static IP address. ISPs frequently block port 25 traffic on dynamic IPs to prevent spambots from working. Try configuring your server to listen on port 587 (Submission). This is less likely to be blocked, but may need to be forwarded on the router. Seriously consider using a relay server for outgoing email. Your ISP likely has one you can use. 

Check /var/log/mail.log to see if you were sending a lot of mail. Disabling the daemon will not necessarily mean you will stop getting mail. It will disable mail sent by connecting to your SMTP port. It will also disable retries for mail which couldn't be delivered immediately. You should be able to setup sendmail to only run the periodic queue processes, without running the daemon. Not running the daemon will also prevent incoming mail from other servers. If you were accidentally running an open relay, it will be shut down. 

You should be able to find the source by checking the MAC addresses embeded in the data "44 a8 12 41 1d 2b 13 8b 9c ab 34 89 10 00". 44:a8:12:41:1d:2b should be your interface's MAC address. 13:8b:9c:ab:34:89 should be the remote device's MAC address. Try checking your cache to see if you have any other addresses for those MAC addresses. should be the command to use. To check your devices MAC addresses use or . 

In the simplest case, the mail server at would receive The mail server should accept mail to and for it's domain (or any other), but need not accept any other addresses for that domain. In a simple setup, it is acceptable to receive mail at either domain. It is up to the mail administrator to configure how to handle delivery to the various domains the mail server accepts email for. It is common for an email domain's belong to an entirely different domain, possibly with a different TLD (top level domain). That server may well accept email for many domains all of which may have different valid user ids. The administrator will need to configure the server accordingly. 

You can use sfdisk to backup the partition table, then copy th boot sector (first block). Then restore the partition table with sfdisk. If you are using a DOS MBR, then the mbr program will write the MBR code onto the USB for you. 

You can then use CNAME records to point the server to the appropriate server. I split the hosts as per your addresses. 

There are some addresses you should exempt such as postmaster, abuse, hostmaster, and any other administrative addresses. I would recommend you pick a domain or two that will be used for email rather than wildcarding the domain. 

I am using a number of techniques which reduce spam to acceptable levels. Delay accepting connections from incorrectly configured servers. A majority of the Spam I receive is from Spambots running on malware infected system. Almost all of these do not pass rDNS validation. Delaying for 30 seconds or so before each response causes most Spambots to give up before they have delivered their message. Applying this only to servers which fail rDNS avoids penalizing properly configured servers. Some incorrectly configured legitimate bulk or automated senders get penalized, but do deliver with minimal delay. Configuring SPF for all your domains protects your domains. Most sub-domains should not be used to send email. The main exception is MX domains which must be able to send mail on their own. A number of legitimate senders delegate bulk and automated mail to servers that are not permitted by their policy. Deferring rather than rejecting based on SPF allow them to fix their SPF configuration, or you to whitelist them. Requiring a FQDN (Fully Qualified Domain Name) in the HELO/EHLO command. Spam often uses an unqualified hostname, address literals, ip addresses, or invalid TLD (Top Level Domain). Unfortunately some legitimate senders use invalid TLDs so it may be more appropriate to defer in this case. This can require monitoring and whitelisting to enable the mail through. DKIM helps with non-repudiation, but is otherwise not highly useful. My experience is that Spam is not likely to be signed. Ham is more likely to be signed so it has some value in Spam scoring. A number of legitimate senders don't publish their public keys, or otherwise improperly configure their system. Greylisting is helpful for servers which show some signs of misconfiguration. Servers that are properly configured will get through eventually, so I tend to exclude them from greylisting. It is useful to greylist freemailers as they do tend to be used occasionally for Spam. The delay gives some of the Spam filter inputs time to catch the Spammer. It also tends to deflect Spambots as they usually don't retry. Blacklists and Whitelists can help as well.