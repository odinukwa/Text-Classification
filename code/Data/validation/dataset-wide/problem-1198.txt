how is this that my records of 2010 are not on partition 1? can I find out exactly on which partition a record is? how do I add another partition, let's say next year (2018) I will add the partition for 2017, without having to rebuild the clustered index? last but not least, let's say in a few year time down the line, I will not be interested anymore in the rows of 2010. how can I get rid of all that partition? here below is how this database is created, basically my goal was to put each partition on a different file. 

Besides what @James raised on the comments regarding the SSAS settings of commit timeout and force commit timeout, It was the change that I did on SQL Server that make it work at the end. 

But still when I try to login to that SQL Server instance, using windows authentication, it says I don't have a login? Where to look at in order to troubleshoot this? 

After that it was easy to add a filtered index because there is no more the thing. execution plan using the newly created index: 

I am trying to create the index above, because I am NOT interested in any situation where sintOrderStatusId IN (9-14) Of course I can create a view or indexed view, but I was trying to avoid that. just adding more info: sintOrderStatusId is a smallint NOT NULL and the possible values range from 1 to 30. the 9 to 14 are to be avoided, therefore the filtered index. 

This may not be a comprehensive solution, because there are bits missing on the question too, however, it will surely give you some ideas as possible ways to improve big delete operations. 

When right-cliking on the server-properties-security-Add- then adding my AD group it says I don't have the permissions to the server object as you can see on the picture below. I had previously added that AD group as an administrator to that box. 

just adding my 2 cents. today I removed some articles from a publication for a unrelated reason. then when I added them back I created a mess because I had not checked whether the subscriber ALREADY EXISTED, before I created them. so I am posting here the script I have used: -- to verify whether the subscriber already exists 

while in the process of creating a publication in one of my servers I continuously get the following error message 

it tells me my alwayson is not healthy. speaking with another DBAs in my team I came to know that this is so because we have removed the alwayson AG but we left it so we can add it back easily So right clicking on it, I get to the errors\warnings shown on the pictures below: 

I need to create functions in the master database, and I am developing a template for that, I want first to check if the function already exists, if not create a dummy function. then grant all the relevant permissions to this dummy function. the third step is to alter the function to the proper code. the code that I am using: 

but when I run the following script, to see how many rows I have in each year (because I partitioned per year) I get the following results: 

for replicating an specific set of data, you can create a view and replicate it. here you can see what data you can publish there is a small detail though: 

I am currently doing a merge on the following table between my () and the same table on a different database called (). 

from sp_addarticle (Transact-SQL) I get an example as how to add an article to a publication. this adds the table to the publication 

I think I have nailed it, what I did is very simple A call to the procedure sp_adddistpublisher was missing. 

Without considering the indexes, Is there a way to re-write this query and get the same result quicker? 

The SSIS intallation is working as a charm, the only problem was that we wanted to connect to SSIS 2014 from SSMS 2012. At the end we agreed to upgrade the developers machines to sql server 2014 developer edition, and migrated the packages to sql 2014, and now everything is working fine. I will leave the question here as a reference, for the community and for myself, because at the end I had so many problems, and they all have been solved. 

I have a script to generate the create table script. You can see it on my answer to this question. However, now I need to script my partition functions and partition schemes On this question here, see the answer has examples on how to add a partition to a table and how to remove a partition from a table, and I would like to have a look at the scripts at any stage. I have found this link: how to find partition function text applied to a table how to generate the scripts for create partition function and partition schema? I was working on a script to generate the as you can see below, but it only works for my own partition function because it tricky to get over the fact that sys.partition_range_values has a sql_variant data type as value. when I used a case I got the following error: 

I am currently dealing with a bunch of servers and they have different Database Mail Configurations. I can see the Database Mail configuration for each of those servers. I use the following script: 

I have an user called mycompany\aives that is not listed in the list of administrators in the SSAS, not belong to any of the AD (active directory) groups listed there, however, he can connect to the cubes in this server (called SASBI01). if you see , however, the second picture, mycompany\aives is listed as one of the administrators on the box (SASBI01) Where does it say that the administrators on the box can (or not) connect to the cubes? How can I find out (preferably via script), a list of users that can connect to the cubes and their permissions?