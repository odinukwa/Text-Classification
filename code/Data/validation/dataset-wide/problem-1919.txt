It is disrepectful to pitch your product to potential buyers in a t-shirt. Wear a suit. This really is non-negotiable until you are rich and famous. If you want to do sales you need to realize that you will lose more than you win. So accept that you lost and move on, but analyze the issue to get better. First, what were the last couple of questions they asked before deciding to say no? It is likely that one of these was the deal breaker (not that there might not have been concerns about you or the product before this). When you get a no, you can politely ask why. If you don't feel comfortable doing sales, there are classes on how to sell. Take one. I would guess that you came across as not very well versed in what you were pitching. It is unusual to ask a sales person his or her educational background, so they must have felt you didn't know what you were doing. If you have a less than stellar background (and being a college dropout is quite frankly not all that impressive), then you have to appear more professional than the average person. So again, we are, in part, back to the suit. Yes, a suit is required in these situations and really they aren't that horrible. It also may mean your speaking skills need an overhaul. Next you need to review your product and the presentation of your product. From what you have written I would guess you are in a start-up software company of some kind. It is critical when a company is young and only has one product to make it a product that the market wants, not what the programmers want. So really go out and look at what you have created from the perspective of the potential customers. What business problem does it solve (if it is marketed to businesses)? If it is a home product, what problem does it solve in that arena? Who are the competitors and what do they have as features in their products? What are the competitors prices? If you don't have a detailed market analysis, you have no business trying to sell. Many start-ups fail becasue they create a great product that no one needed or wanted. You must be MORE business-oriented in a start-up to succeed than in a regular copmany, not less. Once you have your market analysis, then refocus your pitch to make the points the market wants not what you think is cool about the product. If you see that the product is missing key features that the competition has, then fix that. If you see that the competition isn't as good, but is considerably cheaper, you may need to revisit your own pricing model and/or you may need to focus your pitch away from price and into value-added. I would probably set up a way to record the questions potential buyers asked, so that as you pitch to multiple people you can analyze what they wwere looking for. Also analyze the reasons why they said no which you should have asked for at the time they said no. If you get 6 customers in a row, for instance, who said no because your product is too expensive, guess what, it is too expensive! If they are saying no because it doesn't have feature XYZ, then you know what feature to priortize. If they feel you can't offer enough support after the sales, then that is what you need to look at. UPI can't better at this without information, so ask for it. Sometimes when they say no, it is because they didn't understand something. If they say it is because you don't have feature XYZ and you do, then you need to immediatley show them that feaure and how it can help solve their problem. If they think it is insadquate to their problem, ask what they think it is missing. No one in sales is ever successful who gives up on a potential sale at the first no. 

It is nice to believe that everyone wants to be managed less and have more freedom in their work. Or that everyone wants challenges to grow their skills to a new level. It however is a false and dangerous assumption. There are particular personality types that prefer to receive more direction and if this person has that type of personality, what you have done to him is nothing less than cruel. He has no idea what to do or where to go next. He just knows he is clearly failing to meet expectations. He is drowning and you threw him into the pool when he didn't know how to swim. Then when the first meeting came up and it was clear he was lost, you let him continue to drown. You owe him an apology. The way you handle this now is to step back and talk to the employee. Talk about how he likes to work and what level of management he prefers. Talk to him about the type of growth in the organization he would like to have and what he needs to be able to do to get there. If he wants to grow, then give him smaller tasks that will allow him to learn to make some of his own choices. If he is content where he is and his performance on his ordinary duties is acceptable, then learn to manage him in the most effective way for him. It may be that this particular task should not have been assigned to him. (It strikes me a way too complex a task to be given to someone who prefers more directions.) I don't know what his normal job is, so I can't say if it should be a stretch or not. If it would not normally be the kind of task assigned to him, ask him if he wants you to give it to someone else. (In doing so make it clear to him that this was your failure not his, he never should have been assigned to something so far out of his skill set.) If it is the kind of task he should have been getting all along, perhaps he is the wrong person for this particular job and you can find him one that he is better suited for in your organization. There is nothing inherently wrong with micromanaging a person who wants to be micromanaged. It is the best way to get the most from that person. Yes it is harder than just giving some vague directions and letting them go, but nobody said management was easy. You need to manage people in the way that will get thier best possible performance not in the way that you find easiest. Not everyone is looking to move up or to have their skills stretched. Perhaps he liked his job as it was and was doing a decent job at it. It also might be a good idea for you to do some reading about personality types and how they operate at work and what works best for what type. 

First, yes he probably can assign that work. Getting domain knowledge is a critical skill for any senior developer. So this is what I trained to do to get such info when I designed process improvements back when no processes were computerized. First, observe the work and take notes. Put all the questions you have aside until you have observed for awhile. Get copies of all forms or paperwork they have. Keep a clean copy and then write questions on another copy. Try to follow the process through. When one person finishes a piece of paper, follow that paper to the next person. Look for who has to approve or sign off. Look for who needs to fill out which fields. Some of your questions should revolve around what happens in the edge cases (such as when an approval is not given). Look for the laws/regulations (don't forget state laws and regulations if in the US) on the subject in a google search and read them and take notes. Try to compare what the law says with what is really happening. In the US search for GAAP (generally accepted accounting principles). these documents will greatly help with the financial end. Ask questions about problems in the current system. These are the things you want to show them, your project will fix as well as being as easy to use as the current system or easier. Put it all together on a flow chart. Talk to their management once you have an idea what is currently happening. They may cooperate more if they see you are not going to bug them for everything. Remind those who don't cooperate that they will have to live with what you build, the time to get what they need is before you build it. Always start with the lower level people who actually do the job you are automating. They know things the boss does not. Part of what you are running into may be resistance to change. Do some reading on that and how to handle it. People who have not automated their systems by now are going to be VERY resistant to change.