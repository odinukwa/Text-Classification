Virtualmin does not prevent you from running things outside of the suexec docroot. It is one of many options for running PHP applications. Select the virtual server where you'd like to run applications outside of the suexec docroot, and click Server Configuration->Website Options. There you can choose whether to run scripts as the server owner (which enables or disables suexec), among other things. If you want that to be the default for all virtual servers created in the future, you can edit your Server Templates under Apache website. But I would recommend you only do this for the one virtual server that needs to be able to run stuff outside of /home. And, are you sure you don't want to just install your applications into /home? It allows them to be backed up as part of the normal Virtualmin backup process, in addition to the security benefits of suexec. 

This is a mostly client-side question, unfortunately, as there isn't a standard server-side solution to storing address books (though IMAP folders can effectively store arbitrary data, so if everybody agreed on an addressbook format, we could all stick them in IMAP folders). Thunderbird can be configured to share an address book via a variety of methods, including IMAP (using an add-on called synkolab), LDAP (using a variety of sync tools), and shared folders using DAV, FTP, etc. None are particularly standardized, and none are particularly easy to use across multiple mail clients. Usermin currently doesn't support much in the way of shared address books that can easily be used with other clients, though it's been requested a bit over the years. If there were a standard/popular way to store address books in an LDAP directory or in an IMAP folder, I suspect Jamie could be convinced to support it (synkolab might point the way for that, I'm reading up on it now). Usermin does have a system-wide shared address book feature for all Usermin users (which works with the user's individual address book, as well). Getting that out to other mail clients would be tricky. But, in short: The solution you're looking for is not simple. It requires all of the mail clients to agree on how to share their address book. As far as I know, very few of them agree. Thunderbird probably has the widest support for shared address books, however, so that is probably where I'd start. Here's some documentation on the subject: $URL$ Disclosure: I work on Virtualmin, Webmin, and Usermin. 

You're going to have to be more specific. That is not an issue we've heard about (and we'd probably hear about it pretty quick). Which options? Where are you configuring the thing that you don't think is saving? What makes you believe it isn't saving? Anyway, I kinda suspect that the problems are all related to just not knowing how all the pieces fit together and what is doing what. Here's a quick description of the three projects you've mentioned: Webmin - General purpose web-based systems management UI for Linux and UNIX systems. It is like a GUI version of ssh; it is intended for systems management tasks, and is not usually an end-user tool, though there can be some overlap of tasks that are useful to delegate (and Webmin has fine-grained access controls in a lot of modules to make that possible). A Webmin user can have privileges beyond what the user has at the command line, up to and including root-level privileges. Usermin - Webmail and more. It is not an administrative tool at all, and runs as the user that is logged in, and only with their privileges. A Usermin user cannot be granted more access than they have on the command line, because it drops privileges and literally runs as that user. It does not run inside of Webmin, and is a wholly separate program that runs on a different port and uses different/separate user accounts. Virtualmin - A web hosting control panel (runs inside of Webmin, and uses ACLs and other features of Webmin, and a Virtualmin user is a special type of Webmin user). It does things like automate the creation of Apache VirtualHosts, databases, mailboxes, BIND name records, configuration of spam/AV scanning, etc. It's a handful of Webmin modules, and a bit of extra configuration on the system, designed to make web hosting with many accounts and many websites easier. Virtualmin users have some administrative privileges via Webmin ACLs, but they are not "root" level users. Disclaimer: I work on Webmin, Virtualmin, and Usermin. 

This is kind of an old question, but I know a lot about the subject (I'm one of the developers on both Webmin and Virtualmin), so I thought I'd chime in: Webmin uses about 10-12MB of memory on a 32 bit system, and about 50% more than that on a 64 bit system (this cost is paid for all software, but particularly for software written in dynamic languages like Perl, Python, PHP, and Ruby). CPU usage for one user is negligible and can be pretty much ignored. If you enable resource data collection (which I think currently only happens if the Webmin server is being managed by Cloudmin), it'll have a cronjob that eats a bit of memory and CPU every few minutes, but should also be pretty minimal. Virtualmin is another story, and answering the question is more complex. In its default configuration, on a system with more than 512MB of RAM, Virtualmin will use about 100MB (more on a 64 bit system), as it will cache a number of libraries and data structures for performance. Because Virtualmin abstracts dozens of services (Apache, BIND, Postfix, MySQL, monitoring, resource usage, stats, users, groups, applications, etc.) into a single "virtual server" and strays from Webmin's model of only ever editing one configuration file at a time, generating a lot of its pages is much more resource intensive...thus the caching. This is configurable, and there is complete documentation on tuning Virtualmin for low memory systems in the Virtualmin.com documentation, including turning off caching and making Virtualmin take the same ~10MB as Webmin. In recent versions of Webmin, the performance difference is actually quite small if the system is not used by more than one user. But, it's hard to accurately gauge memory or resource usage in a system running many services. Shared libraries may mean that memory usage of a specific application could be much lower than it appears. Anyway, we run Drupal for Virtualmin.com, and obviously we also run Webmin, Virtualmin, and Cloudmin on the same system. I worry about performance quite a lot these days, as our system is under pretty significant load most weekdays, but Webmin is never where I look for tuning opportunities. There's always something more pressing and more demanding of resources when I dig down to see what is slowing us down. So, I'd advise you to not try to guess at what might be hindering performance, and instead look at the usage data, and find the actual resource users and try to alleviate those issues. (Virtualmin can actually help there, though I don't think Virtualmin GPL has the resource monitoring and charting yet). Hope this helps. If you you do have problems with Webmin or Virtualmin, we're always happy to help. But I doubt your Drupal performance issues have anything to do with Webmin or Virtualmin. 

The mail relaying module documentation that Doruk has mentioned is not at all relevant to this particular issue. You do not need that module for normal mail service, or to get rid of this error. You should not refer to that particular page at all for installation and initial configuration advice. I don't have any servers with Sendmail handy, so I can't tell you specifically how to correct this sendmail error. The name server error is super easy to fix, though: edit /etc/resolv.conf and add 127.0.0.1 as a nameserver. I am wondering, however, why you've opted to install Virtualmin manually, if you're a newbie? It is incredibly challenging and time-consuming to setup a full-featured virtual hosting system (which is what Virtualmin manages). We provide an install script that does all of that configuration for you automatically on our download page at $URL$ It sets up all of the components you need, and they will all Just Work when the installation has completed. You're currently nowhere close to getting a fully functional Virtualmin system, even after you've fixed these two little errors; you'll have a couple dozen other configuration changes to make even once these are fixed, and most of them are far more complex than these two. I strongly suggest you not try to manually configure a virtual hosting system from scratch if you aren't an experienced system administrator. We have some documentation about a manual installation of Virtualmin, but it's not complete, and it expects a pretty high level of knowledge (because we expect non-technical users to use the install script we've provided).