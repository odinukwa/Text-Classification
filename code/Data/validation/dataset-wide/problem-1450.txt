The first parameter is the array itself, the second parameter is the key that you want to group by, and the 3rd (optional) parameter is a boolean that tells the function if you want to preserve the group key in the sub arrays. Examples Let's use this dataset for examples: 

This will encrypt the string, whereas every character will become 6 characters. The 1st 2 of each character are keys that are required to decrypt the letter, and the 4th character is the actual character being encrypted except masked by a random digit (Basically the letter is converted to its ASCII number and a random number between 0-9 is added/subtracted from the letter). The 1st key (labeled prefix) lets the decrypt function know if the random number needs to be added or subtracted, the random number is passed as the 2nd character in the encryption, and characters 3, 5 and 6 are random noise characters. Note: The prefix is generated depending on the ASCII number of the character that is being encrypted. If this ASCII number is below 44, the random number is always added to the character being encrypted, else it is always subtracted. The prefix itself is a character in a certain range, if the ASCII number is below 44, a random character between ASCII and is generated, any of these characters tell the decrypt function to subtract the random number from the encrypted character, else ASCII between and will always add the number. For example, the string "Never roll your own encryption functions." may encrypt to: 

Gives more meaning to the class name. The preorder traversal is called like . But wait, already has the root node in it, so it would be much more readable if we could do . So modify the signature to: 

And now, you can call it as . But wait, if it is breadth_first_search, shouldn't you be searching for something? Well no, your question states to do a breadth first traversal, so you should rename your method to: 

Spaces: You need a space between your arguments, as recommended by PEP-0008. So do instead of . This goes for the and as well Using root as the argument name is misleading - its better to call it as node, which has the default value of . This is cleaner, since in the DFS, you would traverse all the nodes of the tree. 

How can I do the following with less nested loops. How can I output the Table names above their corresponding tables without having to loop. Functions for returning the DB Info: 

I think this will help your work flow and make the code easier to read, not just for you but for anyone else that might need to work with it. 

The following code attempts to deal with authenticating the user / allowing use of the various admin pages / functions if successfully logged in, what am i missing? Config.php 

Never select * in a login function I would only check for the password here then run a function if they logged in to return the users credentials 

Coming to the code in the original post, I've added a few suggestions on the naming conventions that could help make it more readable: 

You pre-check and print the value of the left and right child, and that of root as well. It would be better if these statements could be reduced: 

Same should be done for and as well. Comments and indentation: Your comments are currently not indented right. Instead of having 

You assign the node at the end, and pop the current node just before that. Better to do this in the beginning of the loop, and iterate over the existence of elements within the list. This way, your code gets much concise and clean: 

First off it looks like your trying to encrypt / decrypt a password with that code.. $URL$ There are great functions available for encryption / decryption HERE Anyway, this is how i do it: 

I am using this script to get the admin pages via this query string once the admin is logged in. Just needing a review, opinions Function: 

Ok, so the main problem with your code is that it is vulnerable to you can fix that by using prepared statements - $URL$ If you want to remove the you can look into - $URL$ and have the URL generate as I took the Code straight from PHP.net to use in this example index.php 

If you look at the current code complexity, it is in space complexity (since all substrings need to be saved). Also, it is in time complexity, where is time to generate each substring for original string of length , and is time complexity to sort each substring of length and save it as a key to be checked against later on. In the worst case, will approach , so your time complexity would be for the overall solution. However, instead of sorting the keys, if you could just look up the keys for each substring, and compare against their values in other substrings, you would be good to go. So consider solution below, which basically stores the count of each character within a substring in a Counter dictionary, and compares the Counters. Creation of counter as well as comparision of it is an operation. So that, the overall time complexity becomes O(n**3) in worst case. Also note, your original output in the problem statement needs to be corrected: is a pair of anagrams that the output in the question is missing. 

The flat array you want to group (array) The key you want to group by (string/int) Option to preserve the group key in the output of each sub array (Boolean) Option to preserve sub arrays. If only 1 key exists in each sub array, the function will store just the single value for each row instead of an array (Boolean) 

So you can pass any array as the first parameter that you want randomized, then the 2nd parameter determines how the data is returned, then the 3rd parameter tells the function how many times to shuffle the array. I've written this because I think it will be useful for people on StackOverflow, I see a lot of questions trying to figure out how to get a random value from an array. The parameter tells the function to either only return a single array element if false, or return the whole array (with keys in-tact) if true. As you can see in my code, I have to check for the 2nd parameter twice to do actions before and after the actual array shuffle. I wanted to see if anyone had any advice or knows of any ways I can improve my code. I've been posting a lot of my code here lately, and I really enjoy how much I'm able to learn from answers. Thanks in advance! 

This is the full code to grab the username from a using Check for a and echo appropriately or use simons example above 

I have been using this function locally to encrypt strings for example a username. If the user successfully logged in, place the encrypted username into a , decrypt the username in the admin section and use for various things. Is it a strong method and are there any security concerns with the way I'm using it? Cipher Function: 

After a lot of back and forth on various sites, reading articles, watching videos etc i still can not figure out the best way to secure my admin section. The is regenerated every page reload / action to make session hijacking / fixation more difficult. Let me know in the comments if you need any more details. My Goal: 

This code is pretty much the most efficient it can be, so I will add some pointers on the coding style and convention. 

But this gets called as , since root is already present, we can use a default value here. Also, the list can be initialized with an element, so we save the call: 

You maintain a list called as , however the nodes added in it are ones which are yet to be visited. Call it instead. One should use the variable name to keep track of nodes that are visited already. 

PEP-0008: your method names should follow style, and there should be a space between arguments. So change your method singature to: