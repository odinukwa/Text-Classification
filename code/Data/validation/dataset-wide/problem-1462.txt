I would separate calculations of shoe sizes and distances into separate classes. It is called SRP Name your variables properly is just a random letter not a name for a variable. For methods with a lot of arguments you can use some wraping object 

EDIT Also do not put on your DAO classes but on Services. Service method describes unit of work which should be done whole or rollbacked. Consider this simple code 

First of all name your variables properly. Name of the variable should describe what it is, but is just a random letter not a name for variable. Consider using logger instead of printing to sout. Stream closing should go to the finally block not in try. You are nesting a lot of loops and ifs. Try to separate it into methods soo you and up with 

And don't mix classes from primefeaces and dao as suggested in axels comment. When creating this wrapper convert this view classes to some custom backend classes. in some object. I have class. It is much readible and convenient to use. Instead of use CollectionUtils.isEmpty I recommend you to extract nested ifs and loops to methods. Maybe when you extract them you will find some place where you can remove duplication. 

I have changed the type of the parameter to , thus it will handle the floating point represenation of a number. The condition of the first was extended, such that it will not push back in to the buffer a decimal point. The second computes the decimal part of the number, storing the number of places that the decimal point should pe moved in the variable . If there is no decimal part, will have the value - thus, nothing will change if I devide by when is . 

The loop will run until reaches the value , at each iteration the current charachter that points to is copied in . After the loop stops, the is copied in and a pointer to the result is returned. The exercise can be found at page 121 in K&R second edition. 

There is a dependency between my second implementation of and . I, also, have some problems with the naming of the variable . What would be a more suggestive name for its purpose? The exercise can be found at page 121 in K&R second edition. 

Your method is very long. This is code smell - if method is long it maybe do a lot of thinks, but method should do one thing. I suggest you to split method into smaller peaces which defines smaller units of work and are reusable and easy to read. If you put piece of code into method you give name to the code which work as a hint to he programmer what code enclosed in method does. Also use full name of variables, not some abbreviation like . You write them once (if you are using ide) but read it multiple times so you invest the effor into the writing the proper name. I did not checked your logic. Your logic should be captured in unit test - if there is no unit test i would hesitate to refactor some code. If there is no unit test dont write them now if you dont have business requirements, but you ca try Characterization testing to capture current behavior of the method. Because without any test you cannot be sure if you did not broke something when rewriting the method. 

There are 2 loops in my function, first loop will run until is equal to . At each iteration the value of is incremented - thus, it will point to the next element; The second loop will copy the elements of the string at the and of . The incrementation is done in the test part - even though after the loop stops and will point to other objects.This technique couldn't be applied in the first loop because when the loop stops will point to an irrelevant value. The exercise can be found at page 121 in K&R second edition. 

The loop will run until reaches the value , or when the charachters that and points to are not equal. At each iteration I check if the and are equal, if they are, I increment and . If they are not equal, I return their difference. After the loop stops, the value is returned. Here is my implementation of : 

Before the I check if the charachter after the + or - is a number. If it is, the function will store the representation of that number in *pn. If it is not, it will push back that characther back on the input - such that, everytime the getint is called it will read that charachter and push it back. Here is my solution: 

What about having generic abstract dao class which will contain these methods? You will most likely have to create some concrete dao classes anyway to have specific methods. We are using this approach in our projects (behind JPA facade) 

When second dao fails to delete and you have transactional daos not service, the first entity is lost. And you method should not return boolean, but let bubble the exception up into the service layer and let service handle the exception. 

In Option #2 you cannot be sure that user of your class will pass new Object as a parameter. If you really want to create a clone of parameter you should create on yourself or implement some method on MyReferenceType 

It is a bad idea for a constructor to contain non-trivial code. Constructors should assign values to fields or another simple actions. If you need complex initialization, you should use factory object or factory method 

Classes in model layers should be aware only of interface of underlying layers (DAOs or something similar). If it contains than you are telling your business model what view you are using. Send text from textfield directly in you service (model) methods. Or better send them some DTO wrapper object. You misused and . belongs to the controller or view layer and belongs to the model layer and check the business requirements. Also you duplicate the name of the cities. When you want to add new city you have to change the model and the view. Put them in one place (maybe something like CityRepository accessed by the Model layer classes) and get the cities from there. So to recap Model is businees view. It should contain validation and perform your business task (in your case some traint icket processing) and should be aware only about data model. View should be aware only of controller and provide interface to interact with and methods how to get the data from the user Controller Drives the flow - it gets the data from view, wrap it in some business objects (like TrainTicket, User, etc...) and pass it to the model, takes output from the model and present it through the view. 

This version of is a secure one. The first checks if there is enough space in the buffer to store the contents of . The loop wil run until reaches the value . At each iteration the value that points to is copied in to . After the loop stops, is returned a pointer to the result. Here is my implementation of : 

There are 2 loops that will run until and will point to the end of the string that they are representing. You will notice the presence of the variable , at the end of the second while loop this variable will have the value , where represent the number of charachters in the string . By using the variable I know when to stop the third loop. When is less than that means that every charachter in the string was compared with the coresponding one in . At each iteration of the loop I check if the current charachter that points to is equal to the coresponding charachter in . Here is my second version: