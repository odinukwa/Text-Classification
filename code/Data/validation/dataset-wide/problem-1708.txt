In my company we have high employee turnover, and hence our helpdesk receives about a dozen requests per week for new Active Directory accounts. Currently, we receive these requests simply via e-mail or voice-mail, and rarely do we have all of the information necessary to create the account. I would like to find a web application that can be used by a manager or supervisor to formalize the requests they make for AD accounts for new employees under their command. Ideally, the application would prompt for all of necessary information, and allow the helpdesk to review the requests and approve or deny each one. If approved, the application would take care of creating the account and send an e-mail to the manager. I have found several application on the Internet that handle self-service account management (i.e., password resets or update contact info), which is also nice to have, but nothing that streamlines the new account request and creation part. Can anyone make suggestions on such an application? Thanks. 

I agree with TomTom regarding the memory requirements. 24GB will be insufficient to host 10 virtual machines unless they happen to be very limited in functionality. We just purchased a Hyper-V server and loaded it wtih 96GB of RAM in anticipation of running 10 to 15 virtual machines. As for the CPUs, real cores are always better than virtual cores, but the 1.8GHz Xeons are on the rather slow side making it a tough call. If you can manage to get a pair of 2.4 to 2.6GHz Xeons, that would make the choice much easier. 

My Samsung laptop has Windows 8.1-Update. It had an infection that was cleaned. Current date is 05/16/2017 but last windows update was 2 years ago back in 2015. Windows updates were not working after it was cleaned of malware. It would hang, no progress in , and yet taking up 100% of one core. One consequence of being 2 years out of date, that might be relevant, was that GWX (Get Windows 10) was still running on this laptop, even tho that offer expired over 1 year ago. The other notable thing with this laptop was that I replaced the motherboard twice. The first time, it was crashing multiple times a day. The second motherboard worked fine. So those crashes may have had an effect here. After trying almost everything, this is what worked: Windows aka "Disk Cleanup" aka "Clean up disk space by deleting unnecessary files". I selected: 

I had to run those more than once. Each of those steps fixed corruption. Until they passed with no corruption found. Still, Windows Update would not work. Still hung. Going deeper I tried this fix, "Option 2" from sevenforums $URL$ : 

So I do think turning off CEIP is part of the fight against the Windows 10 push. But it's not the only reason I ask this question. EDIT 2: This technet sounds promising Managing Group Policy from the command line but alas you can only view and apply en masse. 

The Problem Recently we are receiving bounce emails because users of our java web application tried to send out emails to non-existing email addresses. Lets have a look on such a case in the (anonymised) log file: 

The Setup We are running exim version 4.72 on Debian Squeeze 6 (Squeeze) (LTS). Exim is used for outgoing emails only - it does not handle emails from other servers/domains - it only handles (outgoing) message from a local running java (web) application. For anonymization, lets assume the domain we use for our company email addresses, as well for the domain our java web application is running on, is called example.com. The Background We have a web application written in a java framework which allows it's users to send out emails. The address of these emails belongs to our domain: support@example.com. Technically these emails are created and get send from the java web application (we use the JavaMail API) locally to exim, which then eventually sends them out to their destination address. Incoming emails to our domain are handled by Google Apps/Gmail (We also set up SPF records, etc.) This setup is working fine without any problems so far. For completion, here is our (anonymised) : 

What we want to achieve We now want to show (or notify - whatever) each java web application user within the java web application that an email which he/she wanted to send actually failed to sent. (Remember: The bounce email are currently sent back to support@example.com - not to the web application users email address - so these users have no clue their emails did not get send) The basic (and simple) idea we now have: Make exim write the of each failed message (which in the above case is 484648301.663.1401636847496.JavaMail.webapp@node1) into a local running PostgreSQL database as soon as possible we know the message delivery failed (or: as soon as possible the corresponding bounce message was generated and/or sent). If this is possible, we could easily read these "failing" s from the database within our java web application, and - voil√†! - we can show users that their messages have been bounced. Simple idea, isn't it? Just for a better understanding: The mentioned (unique) s already get generated for each message within the java web application before the JavaMail API sends the message to exim - so we can be sure our java web application knows each for each message (and of course also knows which user sent out a specific message). Possible Solutions? I did some research on how this could be solved and this is with what I came up with by now (Please correct my if I am wrong - these are just my thoughts right now): Approach 1: Pipe the failed message and it's to a bash script. Such a bash script could then easily store the in the local PostgreSQL database. Is this possible and how could this be achieved? The problem I see is that as soon a message failed, no other exim router gets executed - which means I can not write a router which handles a failed message - the failed message would never reach the router. Or am I wrong? Approach 2: Another possibility I was thinking about is to not have a look at the original message which failed, but the newly generated bounce message. As far as I understand this newly bounce message is also going through all routers until one accepts it. So maybe we could write a router which checks if a message is a bounce message and then pipe it to the bash script? But how do I know that if a message is a bounce message? Does it have a special header or something else significant? (Remember: As we only use exim for outgoing emails we can be sure this would always be a bounce message "generated" by our java web application users). Approach 3: Similiar to approach 2, but instead of writing a router we could make use of the system filter, which looks after a bounce message and then executes a command / pipe... Approach 4: Would it be possible to configure or even to not be an email address but a pipe to shell script (which of course received the id and/or whole failed message)? Two more things: It seems exim can also talk directly to databases (I read this somewhere) - but I have no idea how I could make use of this for my described problem. Plus: However this is solved, I do not want to modify any configuration files which gets overriden when exim gets updated via (I do not want to re-configure exim after each update). You help is needed How would you solve this problem (saving the failed message s into the database)? Please correct me If I was wrong somewhere - I am not that deep into the exim configuration. Also, as you can see, the solutions I think about are more theoretical - it would be nice I someone could show me real world configurations and where to put this configs to make them work. Thank you very very much for any help! 

This is an issue in Windows 7 (and to a lesser extent in Windows 8*) because CEIP is part of the Get Windows 10 (GWX) forced strongly suggested upgrade. So I want to turn it off on all the PCs I support. I know I can do it GUI : But I'd like to do it in the command line, even in a .bat file. This Microsoft technet description of CEIP lists several ways to turn it off (GUI, Group policy, Answer File). Maybe an Answer File would work--I've never used one. I suppose I could also just modify the registry directly (these were discovered with regshot): 

But I like to avoid direct registry modifications if I can, and I don't know if the Update Time matters or what format that is in. EDIT: Thanks for the responses which were all about preventing systems from upgrading to Windows 10. I want to know how to turn off CEIP from the command line not just because of Windows 10. I just want to know, if it's possible. I DO want to turn off CEIP just because I don't like it, don't believe it gives me enough benefits in exchange for the information I'm sending to Microsoft, and the CPU and bandwidth it uses. To elaborate on the Windows 10 connection, there are several Windows Updates to CEIP that are diagnostic tracking/telemetry updates to evaluate and/or prepare a system for Windows 10. For those interested, here are the Windows 10-related KB updates I have identified (via research on the internet) that are involved with Windows 10. You'll notice most are upgrades to CEIP.