Edit: the original poster asks how to track incidents. More information is needed such, Oracle version, what kind of incidents, how often do you want to receive notifications. 

This bat script must be located in the same folder as the dump file which should be on a folder off your main drive for convenience sake. 

You should look up the CASE construct. Adrian's article is quite helpful. The Oracle documentation is here. With the kind of query you want to do I can't help but think there are some omissions in the database schema.. Surely you can add some constraints on obj_C and obj_D so that null is not allowed? This would simplify things. 

Yes, you need a script but it doesn't have to be 1000 lines. --make a table or global temporary table to put the results in 

My opinion is that unless there are performance or other application defects that are only seen on the production stack then access should not be granted on production. A view of the v$ views you mention on development should be fine. Security procedures vary wildly from company to company and factors that are external to Oracle security are more often than not the deciding factors. In short, only give access when you are satisfied that there is a real documented need that is supported by management. In answer to the OP's question of what can you do with v$session I didn't know this till I looked for it but here is an example of what you can do with v$session. That's the thing about security, it's not what you can imagine people can do with information that is dangerous. It's what you don't know about. To a point, less access to interesting system information is more security. 

The first name is the table name and the second name is the column name. You can use '%' as a wild card if you don't know the exact name you are looking for. 

In ASE, a cluster is multiple physical Database Servers working as a single logical Database Server. There is no separate designation if a Database Server (single or cluster) is running multiple databases, since that is the expected operation. Database is the collection of related objects (Tables, views, triggers, users, etc). Schemas: In ASE a user can own objects, and set permissions on those objects independently, which satisfies some of the same use cases for schemas BUT a user can not be dropped from the database if they own any objects. So for practical purposes, most sites don't use user level objects. The lowest granularity storage object in ASE is a (other databases call this a ) the size of which is set when the server is installed, but can be 2k, 4k, 8k or 16k. This means that the database allocates pages in chunks equivalent to the page size setting. Referential integrity can cross database (schema) boundaries. I highly recommend checking out sypron.nl. Rob Verschoor is an SAP VP & Engineer and his site is packed with good information, tips, tricks and scripts. His quick reference books are also VERY good, and I would recommend them to anyone needing to work with ASE, Replication Server or IQ. 

You did not specify open source or No-SQL or the platform where the database would be installed so your choices are not limited. Most databases will do what you want. I grant that #8 would require some customization so changes by a group can be rolled back. As an example: Oracle 1) key value: storage can be done in a table 2) mostly read only usage does not enforce any choice of database. 3) if latency is important spend some money on solid state drives and good hardware combined with good table design for your application 4) use discs for values: what is driving this? Is there a defined end user requirement that needs this or is this a requirement looking a problem? 5) all databases can do linked or individual transactions 6) Oracle has the flashback query to allow you query the state of your database at a point in time. This can also be accomplished by detailed transaction logging or even restoring from a backup at the specified point in time. 7) all changes attributed to a user. This is implicit in connecting to a database that has detailed transaction logging. If your application is pooling connections and allowing anonymous edits this is not a good practice. 8) rolling back all changes by a group of users: this is harder to do. It can be done by forcing all insert, update, delete transactions to be done through stored procedures which log everything 9) why does it matter whether transaction logs are kept in RAM? You need them, let the database decide where to keep them. 10) I can't think of a commercial database that does not allow online backups. 11) accessible from a JVM. This is possible from Oracle any many other products. I think there is context missing from your question that would explain your use-case better. What did I miss? 

Your DB files are SQLAnywhere files, so first you will need to get SQLAnywhere. Sybase has some documentation on upgrading databases from earlier versions here. 

You should probably create a .sql script that can run and return the value for multiple commands. A script can be easily created using the following format: 

If you execute this from and using the flag to supress headers, and flag to redirect output to a file, it will build a script that can then be executed directly. 

SAP/Sybase ASE uses a slightly different conceptual model than PostgreSQL, Oracle & SQLServer, which all have the concept of a schema. 

The transaction log can be dumped indedpendantly of the database using the BACKUP LOG command: Backing Up the Transaction Log (full and bulk-logged recovery models) 

Now login to each database, and run the sp_checkreswords command to make sure none of your DDL is using words reserved for the system. If reserved words are found, you will need to alter the code, and remove/change the reserved words. Use the ddlgen utility to export your full database structure (Tables, indexes, stored procedures, defaults, user defined datatypes, etc.) At this time, you may want to review the code generated by ddlgen, to make sure it makes sense in your new environment. You may want to make changes to device locations, device names and device sizes. For example, ASE versions prior to 12.5 had a device size max of 2 Gb, so if your database was 10 Gb, you were forced to have 5 devices. ASE 15 will allow device sizes of up to 1 Tb (on a server with a 2k page size), so you would only need one device to store the entire database. You may also want to seperate the index and trigger creation scripts from the rest of the DDL, to allow you to run those independantly. This comes in handy when you import data into the new server. Once you are satisfied with the scripts, you can run them against the new server, and it will create all of your database structure on the new server. At this point it's a matter of transitioning the database, using the bcp utility, you will need to export your data on a Table by Table basis. Depending on the size of your databases, and the number of tables in each database, this can take a while. I would recommend trying the -n (native) version of bcp instead of the -c (character) if it's possible. To import the data into your new database, you will also want to use the bcp utility, but you will likely want to make sure that your databases do not have triggers or indexes as this will enable the 'unlogged' version of bcp to run, allowing it to run faster and not fill the transaction log as it runs. If you can not run the unlogged bcp then you will want to make sure you have the appropriate database options ('truncate log on checkpoint', 'abort tran on log full') and set the batch size for your import to a reasonable value. At this point, you can create in indexes and triggers (if they haven't been created up to this point), and start testing the server. I would also recommend reviewing Sybase's Migration Guide, as it will likely go more in depth, and cover things I may have forgotten/skipped over. A lot of the details will depend on the migration environement, so planning and preparation are key. 

The source database is an off the shelf product that I have limited ability to change. It stores strings as NCLOB which are truncated with DBMS_LOB.SUBSTR and presented in a view as NVARCHAR2(2000). The destination database stores the same strings as VARCHAR2(4000). When I execute a statement like 

I am trying to duplicate the business logic embodied an intranet C# web application in the database so that other databases can access it and work under the same rules. This "rule" seems difficult to implement without using hacks. 

I had the same issue with a migration from 9i to 11g. I decided that I did not want to take a chance that Oracle's character set conversion would do something I did not expect. Managers don't care about character sets, they just want to know that the data was migrated without any problems. I kept the WE8MSWIN1252 character set and there were no problems. However, if you had to have a UTF8 character set, and did not want to take any chances this is how I would do it. Requirements: a virtual machine in a test environment, to make the install and testing painless 

It seems that the 5GB limit is per server, so you would not be able to have multiple 5GB databases. As for migration, it should be just a matter of shutting down the Express Edition, and using the Developer Edition binaries to start your existing data server. It may be as easy as copying then RUN_[servername] file from the old directory to the new one, if all of your system and user databases exist outside of the installation directory. The link above is worth checking out, as it details the restrictions of the different versions. It's also a great resource for ASE knowledge, as Rob Verschoor is one of the most knowledgable Sybase/SAP database guys around. 

It's typically good practice to seperate your OS installation from your database installation to isolate OS disk issues from database disk issues. The primary reason for this is to reduce the change that a problem with the OS could prevent recovery of the database, or vice versa. If your database fills up the free disk space, it can crash both the database and the OS. This also allows you to have different recovery options available for the different pieces. We typically run RAID 1 (Mirroring) on our OS disks, and RAID 5 (or some other type of parity + striping) on our Database disks. Since the OS disk has fewer writes, we can take the performance hit of mirroring, to reduce recovery time in a crash situation. But on the Database side we want to maximize the performance of reads/writes at the expense of recovery time in a crash situation. 

This query runs on 11.1.0.7 Enterprise and provides similar results to the the OEM Grid performance page which requires the diagnostics package. There is a certain irony to running this script through SQL Server reporting services which is beyond the scope of this question. 

1) When to be sure that your database design is perfect? Your design is never perfect because the business logic and amount of data is always changing. Perfect is difficult to define I've seen systems that were great on deployment but had poor performance after a few years of data were added. The regrettable trend to treat a database like a black box by some application developers means some databases are deployed with critical tables lacking primary keys or indexes. Perfect to the CIO because they got the application delivered on time and on budget could be a pain in the butt to the developer/ DBA who has to deal with the problems. Here are some of indicators I would look for which indicate your design is ready to go a) Extensive use of primary keys, unique keys, foreign keys, indexes, more so on the larger tables ( I only mention this because I've seen commercial products which lack this) b) Application logic is duplicated as far as is practical in the database with the use of constraints and default values. You cannot capture everything but just knowing that there will always be a value for an entry provides peace of mind. c) Test, test, test: test from the user perspective on data entry, test from the manager perspective who wants an overview, test from the analyst perspective who wants to see trends If you find yourself joining 9 large tables which require full table scans in order to find out what work is assigned to a user then maybe you need to reexamine things. Not everything can be simple but excessive complexity to answer user needs is a hint of trouble to come. d) do some daydreaming on how the database could and could not be extended. If I need to add a new property to a unit of work how hard is it? Can it be done without table changes? If you are asked to add a new type of work how hard is it. (Work could be a product, a transaction, a case) e) people and organizations provide hours of work for me. How easy is it to create, edit, de-duplicate and report on them? f) how many user languages are you supporting? What character sets will be required. If, for example, you intend to support English and Spanish, what happens if the design must be extended to cover French and Italian? 2) Is returning to the data base design to change some issues (like adding new column, delete a column or change data type or add new table or ....) considered as a bad practice or is it normal? I would say it is normal for an application where the business logic changes frequently or the end user requirements are being added to. 

Databases will typically issue a checkpoint prior to dumping the data to ensure all commits are written to storage. The checkpoint can cause the database to truncate the transaction log, depending on database settings. According to Microsoft, the following conditions will automatically trigger log truncation: 

Sybase ASE will not allow you to directly delete rows from multiple tables using a wild card, but it's pretty simple to create a script to find the table names, and loop through them. You can find the tables names by querying within the database. To find all the tables with the prefix you would do: 

Without an ORDER BY clause, the order the values are returned in will be unreliable, as they can be influenced by indexes and the data pages the individual rows are stored on. If you require the data to be in a particular order, use the ORDER BY clause. 

In the above query is the flag for User defined tables. Also because is a single character wild card in T-SQL, we have to escape it to find the literal . T-SQL allows almost any character to act as the escape, but it must be defined after the clause. Finally is the multi-character wild card, the T-SQL equivalent to in *nix and DOS. It would also be possible to use the above query to build a sql script. We start by telling the server not to print out the number of rows affected by the query using . This allows us to create a script that will run error-free, without needing additional editing. 

and....press connect. This is the easiest way. More involved is adding the name of the database to the TNSNames in your oracle client. Another good check is to log onto the server where the database is and start a DOS command line window. Enter . This will give you the database name and port and if the listener is ready to receive connections. 

The best way to install XE and other products is to install XE first, then any other Oracle version afterwards. I think you can fix this by 

Why go to all this extra work? This solution breaks your project into two issues, the upgrade and the character set. Upgrading databases is not to be considered lightly. Many times it is not the upgrade that is the problem but peripheral problems like interactions with applications or other databases. Custom PL/SQL code should have no problems but you never know. If there is a problem people will be looking to you to explain how you were diligent and careful not how you saved a day or two. 

Sybase ASE does not support a direct upgrade from version 11.5 to version 15, so you will have to export your database from the ASE 11.5, and import it to ASE 15. From the $SYBASE/$SYBASE_ASE/scripts/ directory in your ASE 15 installation, run the installupgrade file into your ASE 11.5 installation, to install some utility stored procedures to assist with the migration. 

Sybase ASE retrieves port numbers for the listeners from the file. On *nix systems, this is typically in the Sybase Home directory ($SYBASE/interfaces) On Windows systems it's called and can be found in %SYBASE%, which is likely to be c:\sybase (I think..been a while since I've run on Windows). I believe you can launch the GUI interfaces editor through Sybase Central, if you are using that to manage your ASE databases. and are the two utilities that can be used to edit the interfaces file. You can also manually edit the interfaces file using a text editor such as but be sure to pay attention to the format of the entries and permissions, so as not to accidentally muck it up.