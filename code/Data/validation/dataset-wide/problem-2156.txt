Delegate wisely, not casually. Delegation is a way to get more work done. It's a good thing. The trick is how to do it. If I may paraphrase your attitude, you don't want to delegate because you are worried they wont do a good enough job. I paraphrase it that way because it points out that the focus is on the product delivered at the end of the day. Who is asking for that product? If its your boss, then the issue is that you aren't comfortable with the risk of accepting responsibility, delegating it, and then being responsible when the work isn't done to an acceptable quality. What I'd try to do is break the task up such that you can give them pieces. If they do it, great, you're ahead of the game. If they don't, then you were planning on covering for them anyway, so it didn't hurt you. Don't delegate anything you don't think you couldn't manage to fix afterwards. Over time, you may find that the other people have skills that you would like to leverage. Its hard to tell until you engage them! 

As a rule, we are the worst person for determining whether our code is clear. The code came from our head, so it's no surprise that it makes sense in our head. However, code also has to make sense to other people as well. Sometimes two styles can look equally clear to us, while one is far more clear to others. Early in your career, I recommend slavishly following code standards provided by your boss (aka. the one who signs your paychecks). They are the ones paying for the code, so they get to say what it looks like. As your skill matures, you will have the opportunity to see more coding styles, and develop a more robust model of what makes code "clear" not only to yourself, but to others. Then you will have a bit more freedom to challenge the status quo. There is also value in conformance. The hardest style of code to read is code which is written in multiple competing styles. If you get used to one style, you can start to read into the mind of the developers by how they leverage that style. It's harder to do that if each developer has their own coding style. 

I treat such code bases as though I am an anthropology professor out in the field. Remember that, even buried under millions of lines of code, there's a human element to the puzzle. Each fragment of the code made sense to one developer at some point in time. Making sense of how a few dozen developers thinks can often be easier than trying to make sense of a few thousand functions. Once you start to understand how the previous developers were thinking, you'll learn the paths of least resistance for the code. Then the daunting feeling will start to disappear. 

There is a corporate climate answer here, so you have to handle this within your own corporate climate. A very important thing in a producer/consumer relationship is to be able to manage expectations. Consider this situation: 

Unfortunately for sites like these, the best answers are rarely cookie cutter solutions. There are many factors in this situation. Some important ones you mentioned, particularly the past behaviors of this boss. Others may be harder to put down in words. It's easy to divide the options up in to three categories. The first category has one option, "talk to HR." The second category has a host of options where you try to work your differences out directly with the boss. The third category contains a collection of options where you resolve your problems on your own. It is not going to be immediately obvious as to which category is best for your situation, but there's enough distinction between them that we can at least talk about the effects. "Talk to HR" seems like the natural solution for any workplace harassment, and for good reason. Their job is to handle human relations issues. In theory they're good at it, and for your company, that might actually be your best option. However, you need to understand how your particular HR department works, especially when it comes to harassment. Many I have worked with are best viewed as a loaded gun: you can pull the trigger on them, and they will resolve the issue you want to see resolved, but you lose control of the situation. HR does have the company's interests in mind, and may find a solution you deem less ideal because it protects the company's stock price. Or they may be the pie-in-the-sky ideal HR department that prides themselves on finding good solutions for every issue. You may not even be able to put down in words how they react, but you should be able to internalize it and act on it. Again, treat them as a loaded gun. If you need a solution solved, at all costs, they will solve it. The price may be your relationship with your boss. Needless to say, nobody has ever appreciated having HR called down upon them like a gaggle of flying monkeys. Your boss will have negative feelings about this occurrence. HR may tie her hands to make sure she can't do anything in retribution, or they may not. Working it out with the boss is the middle ground, and that naturally makes it a soupy mess. Any good middle ground solution includes trying to make both parties happy, and that involves details you may not even know right now. For all you know, she has a known disorder and is grappling to deal with it. Or perhaps she's just an insensitive clod. It won't be easy to determine which. You'll have to work with her on it. However, if you feel that her personality dominates yours (which, from your wording, may be a concern of yours), you may find the "middle ground" is too close to "whatever she thinks is right," which would make this a bad category of solutions. I, personally, consider it the ideal solution -- why not solve a problem between two people with a solution that exists between two people? However, only an idealist would presume that makes it the only solution worth considering. If you're not comfortable with this as a solution, guess what... this is in your court. She slapped you on the butt, and the irrevocable consequence of this is that she has ceded you the right to go down whatever path you see fit. (If anything, this would be the most important message I'd give to you: her action has consequences, but you have a great deal of control as to what those consequences are. She has given you power over her through her mistaken gesture.) The final class of solutions are to solve it yourself. These are often considered the "pansy" solutions, so if you're worried about being bullied they may be hard to implement. However, they are real valid solutions that recognize the crux of the issue: you may not care as much about your boss' predilection for flagellating coworkers, what you may really care about is that it doesn't happen to you again. I worded that last sentence carefully, because its suggesting how you might think. If you're thinking in terms of retribution, justice, or merely "making the workplace a better place for others," you have the full right to think differently... it just suggests this class of solutions isn't for you. However, if you just want to solve your own problems, there are many things you can do yourself. To blatantly steal from Teego1967's answer, one option is to get transferred away. That can solve your problem, if your problem is merely not wanting it to happen again. And there is a perk. Again, stealing blatantly from Teego1967's wise words: upper management likes to see people solve problems for themselves, making you look more attractive in the long run. (Since I'm stealing from Teego1967, I should probably steal their link too... but no. Go read their answer! And upvote it!) In all, the choice is really how much of your life you want to control. If you just want control of your own life, the personal solutions may be best. If you want control of the workplace environment, working with your boss may be best. If you want to just make sure she doesn't do it again, ever, pulling the trigger on HR and dealing with the aftermath may be the best. My recommendation is simple: do whatever solves the problems you believe need to be solved for the future. Don't worry about the past directly. It's just the past. Only worry about the past for what effect it may have on the future, or predictions it may have for the future. Look forward, not backwards. Addendum: As I wrote this, the first paragraph was intended to be a natural catch-all tautology. I tried to say "take all the options you have, and permit me to draw some lines to help make decisions easier." As I wrote, it did occur to me that there is a fourth category which I instinctively omitted because I generally do not recommend it to anyone. However, if I'm going to claim that the first paragraph is valid, I need to at least include the fourth option: manipulation. Her actions are irrevocable, which means you can use them as leverage to manipulate her to your advantage, much as the Sith from Star Wars. You may be able to get workplace perks, such as rapid promotions by leveraging any fear she might have of repercussions for her mistake. Would I recommend it to anyone? No. There's a reason why I invoke a deep dark fictional group of bad guys in my description of it. But, in the name of completeness, I decided to at least include it. 

This answer is going to be a bit of a hair splitting exercise. You should encourage the interviewer to ascertain the character of the candidate. You should not encourage the interviewer to verify non-essential knowledge from their resume. The two are different not in what is verified, but how and why the verification is taking place. That makes all the difference. If you are simply testing to see if they padded their resume, that is nothing more than that: a challenge to their character. In a perfect world, you will only have perfect candidates who are not offended at a "innocent" jab at their character. In the real world, you may offend a potential employee. However, if the interviewer has reason to test the credibility of the candidate, then they should feel free to use whatever tools they find best for the task. Maybe the candidate is a little shaky on something he was supposed to know. Questioning a non-essential aspect of his resume may help show whether this is just a person who got nervous at an interview, or someone who is inflating themselves on paper. I would definitely make sure the interviewer knows such questions are fair game, not from a "test their character" perspective, but because you have a unique chance to get closer to the candidate than you would otherwise get. The interviewer and candidate share a common field that is external to the work. This could be incredibly useful for an interviewer to help see the person they are interviewing, not just the skillset for hire. This case builds the best of both worlds. Not only do they get to build a bond, but they will get to verify the knowledge of the candidate as a side effect. There doesn't have to be a sense of putting the candidate on trial, just a honest candid discussion between two people about a common interest. If the candidate is authentic, you may actually have an opportunity to make them more interested. If they are not authentic, then you didn't want them as an employee anyway, and the interview can turn from friendly conversation to test quite rapidly. 

This is a natural consequence of the value of a reviewed-document being ill defined. Consider, what is the difference between a specification and a reviewed specification? In the case of a specification which would pass review, the content is the same, so the difference is clearly not in the content of the specification. The difference must be that the blessing of the review board has meaning to people. This is very reasonable in business: a blessing from a review board indicates that the use of the information is more justified. However, there is a limit to this, which you may have reached. If the value of the stamp of approval from the review board becomes too great, they are forced to be extremely nitpicky. What they provide to the process is their name, declaring "yea verily, this specification is good." If a company refuses to use any document until it passes the review board, it is very easy to get into degenerate situations where the review board loses sight of their purpose. They get in trouble if they bless something that wasn't right, so if they do not fully understand how the blessed specification will be used, they will naturally rip it to shreds to make sure that nothing bad will ever come back to bite them. This causes an issue for specifications that do not need this level of rigor. If your specification does indeed need to be blessed at the highest level because the business is going to make key decisions off that information, then that rigor may be desired. In that case, the decision should be important enough that the members of the review board should be able to work with the developer in an offline setting to ensure the specification will pass when it is reviewed. This is a common trick in business: never bring anything to the table unless you have already ensured it will pass. If your business does not actually need this level of rigor, but it doesn't have a way to implement it, then the business has a major issue that is not the fault of either the developer or the reviewers. The business simply does not have a way to create actionable information at a pace fast enough to keep up with business. The business needs to change. You may be able to create a lower level review board which permits people to use the specification in a limited form, and only call upon the final review board when everyone is comfortable with the document (again, never bring it to the meeting unless you know it will pass the test). The ways to do this are many, but the first step would be to identify if the specification actually warrants the level of exacting attention it is getting. The correct way to respond to the situation is strongly dependent on how commensurate the process is for the task.