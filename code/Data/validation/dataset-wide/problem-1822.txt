The netfilter code only reassembles fragments for you prior to packet filtering if your firewall rules use connection tracking (i.e. the firewall rule is stateful and uses or the deprecated ) or NAT. Otherwise all the fragments are processed separately and you get issues like this one. This makes resolving the issue easy and obvious (in retrospect, anyway). Just add connection tracking to the firewall rules in question. 

IIS uses the HTTP Host: header to determine which web site to serve, just as with any other request. 

Despite its name has absolutely nothing to do with FTP. It does not speak the same protocol. It is an ssh client which transfers files over an ssh connection, not an FTP client. SFTP cannot be used to connect to FTP servers. 

Just enable the vmmemctl (balloon) driver in your guests. It should be included as part of your VMware Tools installation. This lets VMware reclaim memory that a guest isn't using. 

The ability to change the inital window size was backported beginning with RHEL 5.8 and RHEL 6.3. So, first, upgrade your system, and then you specify the cwnd in your . For instance: 

If you take a look at the unit, you will see that it has a command to attempt to verify the Tor configuration before starting the service. 

ssh to the remote system and shut down as many services as possible. Basically everything but the ssh server itself. From your local system, capture a copy of the running disk image back to your local system: 

We can see in your configuration that it is set to , thus php-fpm recycles the process after it has processed 100 requests. 

You've told the kernel to swap as aggressively as possible, even when it's not strictly necessary to do so. On an embedded device (which usually won't have swap at all) this is completely insane. This should be set to 0 (probably best) or 1. Second: 

The problem is not . The problem is that you haven't told nginx where the files are. This is done with the directive, which should be placed within the block. 

SELinux is denying you access to the file, since you moved instead of copied it from somewhere else on the filesystem into its final location. Thus it kept its original security context, which didn't allow Apache to access it. To resolve the issue, relabel the file (and probably all the rest of your files). For example: 

To resolve the problem for your own server, you can create a local SELinux policy module with . Feed the AVC to by standard input, something like this: 

You get an SSL protocol error because nginx is only serving HTTP on port 80, not HTTPS. But you mistyped https at the beginning of your URL. 

You can only set in . It cannot be set while the database is running. In any event, 2M is far too small for all but the tiniest test database. 32M is almost certainly too small for any real database. If you're tuning a database server, this is usually the number to increase, not decrease. 

As far as I can tell from the package manifest, the build of PHP included with RHEL 7 is pretty minimal, and a lot of extensions are missing. They don't seem to be in any other channel, either. Many people use the remi repository for up-to-date and complete builds of PHP, and you may wish to do this as well. Repos are currently available for PHP 5.4 and 5.5. 

The remote web server returned HTTP 304 (Not Modified). This means the browser already had a cached copy, and the server instructed the browser to use it, and didn't send a new copy. Therefore there was nothing for squid to cache. 

You'll also want to clear the and attributes, since these may affect your ability to remove the files. 

You can't upgrade the kernel because this isn't a real virtual machine. Instead, it's a container using OpenVZ containers, which are rather old, and still use a kernel ABI/version from 2010. You will need to cancel the service and obtain a VPS from a different provider, which does not use OpenVZ. 

is an IPv6 address, so you have to remove it from the list of IPv6 DNS servers, not the IPv4 list. Windows unfortunately keeps two separate lists... 

You're using an ancient version of iptables which dates back to January 2006, and probably on a very old Linux distribution. The problem is that the feature you were trying to use was added to iptables in 2008. The solution is to update to a more modern Linux distribution. 

You're running EL7, but you installed the remi repostiory for EL6. Install the correct repo and try again. 

This must be a very small college, if it's still only using a T1/E1 for public Internet connectivity. Anyway, doing anything about either of these two issues is going to require money, and I'm guessing that's probably the one thing they won't give you. 

At the moment, the only P2V tool for KVM virtual machine destinations that I'm aware of only supports Linux source machines. So this is going to be a manual process with a few minutes more downtime than would be the case if a tool existed. 

(Note that I use the same document root for every virtual host, which is outside the normal document root, so certbot is never writing anything to the web sites' actual directories.) 

The Puppet tool uses internally to determine the type of virtualization in use, so if you are using Puppet, you already have this installed. 

Google Mail's SMTP server is requiring you to connect with TLS, but you have configured fetchmail to never use TLS. Check your fetchmail command line and configuration file for and make sure it is set to . On the command line: 

That's a Google IP address, and they're probably trying to access it because something was there at some point in the past. Your web server sent them a 404, since there is nothing there now. It is kind of unusual that you didn't provide redirects when you reorganized your site; typically this is done for search engine optimization purposes. 

You can't create a custom error page for "ssl connection error" because, if this happens, then there is no connection! The browser could not even send an HTTP request for the server to respond to, if SSL/TLS negotiation fails. The browser's built-in message is the only thing you will get. Fortunately, when this happens because of a missing or invalid client certificate, the browser's message will state this. 

The IP address remains attached to the VM until you stop it. If you reboot the VM, you will get a new ephemeral IP address. From the documentation: 

Congratulations, you've found a bad Internet tutorial. It appears that the author of that tutorial never actually tested it himself to see if it works, because it doesn't work as-is. Worse, it appears that that tutorial is actually linked to from the official OpenVAS web site, which is going to mislead and frustrate a lot of people. So, the reason redis is failing to start is because SELinux denies redis-server to write to . You can see this in your audit logs: 

You have a conflicting repository named installed. Remove this repo (and any packages installed from it). Once this is done, run to sync your system to the latest versions of packages which are in the repositories. At this point, you can install any additional packages you need. 

Run or to see a list of defined virtual hosts and the configuration files in which they are defined. 

MariaDB is not allowed to access files in root's home directory . Thus, the CA, certificate and private key files are unreadable. The standard locations for these files on RHEL are in directories under : , and . If you copy them here, and set the proper ownership and permissions so that MariaDB can read them, you will find that it works. Alternately, you can place the certificates and private key file in a subdirectory of . 

CentOS has some instructions on building a custom Live CD. The process uses a kickstart file to determine what is on the Live CD, so you can perform any customizations possible through kickstart. 

The only reason for actual device nodes in /dev nowadays is for the boot environment, before udev has started. Typically only and are needed in the actual filesystem, which is sufficient to get to the point where udev can be started. It will then provide everything else. 

Hurricane Electric has a management-level presentation The Business Case for IPv6 which you may find helpful. It's a bit dated, but still useful: eweek's How to Build a Business Case for IPv6. You can find much more from an Internet search.