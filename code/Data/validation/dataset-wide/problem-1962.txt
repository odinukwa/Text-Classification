I would strongly suggest that you don't. Confrontational business meetings with people you need to continue to work with after the meeting should only be done as a last resort because their purpose is to break the relationship in the hopes of reforging it as a better relationship. If, as you seem to suggest, the current relationship is acceptable to you, and you need to continue to work with him, then there is no need for such a drastic measure, particularly when there are other resolutions available. 

On the one hand, in most incubators you hope and expect every project to succeed individually, and as incubators usually have projects in related fields going on simultaneously it's useful to share information that other projects will use. Particularly in the hope that they too will share information that you may find of use. However, there is an element of competition. Where a lot of projects are vying for similar funding sources, and in fact are often pitted against each other depending on how the incubator brings investors to the table, you may find that your very good project is eclipsed by someone else's even better project. There's a balance between news that is very specific to your operation, and news that has general applicability to others and doesn't give heavy insight into yours. An obscure article in some out of the way journal that directly addresses the space you're in probably shouldn't be shared. An article from a major news organization that several other news organizations have also written about should pose no risk to you. An article published by only one news organization, in one of their minor sections, might fall on one side of the line or the other. What you've discovered is that your colleague has a different standard than you, and has judged that specific article to be more specialized than you have. It's worth having a discussion with them, trying to understand their perspective to make sure you haven't missed something, but unless they are your superior I wouldn't put too much weight on their assessment if, after understanding their position, you still feel it doesn't harm your project. 

Sets boundaries. Most people know not to bring up work with someone who's grieving, but, unfortunately, some do not or may believe that their issue demands their attention. Make it clear that they are not to disturb the employee, and you can have your liaison do so if necessary, if the employee has chosen to start fielding such questions. Lets employees know that the company will provide some information about condolences/funeral arrangements, etc later so people don't start asking questions about it now or sending their condolences as replies to this email, possibly to a large mailing list. Doesn't discuss the details (in fact you may want to stick to "close relative/family member" rather than specifying). These emails may be seen further than necessary, and so only necessary information should be communicated to preserve privacy. Those that are close to the employee will find out through other channels, those that aren't don't need to know. Provides a single point of contact that from that point forward will be able to direct others. You want people to immediately stop calling employee, and the quickest way is not to make all the assignments, but to make one assignment that can then redirect others as the actual assignments are made. Lets people know that other assignments will be made, this is an indeterminate situation, and they may be expected to take on some of the additional load. 

Live with the discomfort Right now you are already living with the discomfort. You know how that feels, and if you aren't going to change yourself, your environment, or your job, then this is the default. You can continue doing this - perhaps the job is particularly useful from a career perspective, or the networking connections you're building are valuable, or you expect to change jobs in a short period of time. This isn't a bad choice, particularly in the short term. Adapt to the working environment As others have pointed out, changing your personal values and standard is an option. By immersing yourself in this new environment, and desensitizing yourself over time you should be able to largely adjust to the point where this no longer distracts you. Humans are very malleable and adaptive, so if your concerns are cultural, and you don't mind changing, then this is likely the easiest path. Note that having particularly low standards will allow you to work in many environments, while demanding high standards of those around you will limit your options for employment in the future. Ask for a change in the dress code One option you have is to find out if there are ways to change your work environment to offer fewer distractions. If a co-worker was playing music too loudly, or swearing loudly and often, and these things pulled you out of your zone, preventing you from working as well as you'd like, it's easy to have a discussion with HR or your supervisor to see if these distractions can be mitigated. Rather than nebulously saying, "Their dress and wardrobe appears to be seductive" you should focus on specific business outcomes that professional attire would achieve. For instance, one article points out: 

"Fail early, fail often." When you have minimal requirements, build a minimal system, then show it off. Demonstrate it and its features all along the way, and request and expect feedback that will alter your trajectory. Yes, many developers like you want a pristine specification, whereupon they'll go to the tower, and some time later emerge with the correct implementation, ready to receive the next project. However, you've joined a company and team where you are instead expected to run with minimal input, jog for a bit, come back with questions and demos, and jog for a bit more. There is an element of inefficiency to this process. But often business requirements and needs dictate it. If they waited to create the perfect specification, the project wouldn't be done in time, and would still need modifications anyway because no one can predict the future. Iterative development might not be your cup of tea, but as you'll discover, it's much, much more common than the perfect spec development. Communication, frequent user/customer/supervisor testing and feedback, and a willingness to roll with the punches will become great skills to have if you develop them. 

You should not work more time to make up for their inadequate tools. Depending on your job, they may save significant money by providing lower quality tools. If they are a contract house, paid by the hour, then you working more slowly will earn them more money. Further, depending on how the accounting and IT department are set up, how budgets are allocated, and how they depreciate tools and equipment, they may be able to minimize their financial losses by providing inexpensive tools that they rarely upgrade. You've undoubtedly expressed the problem of the slow tools to your manager. That is all you have to do. Once you've made them aware of the problem, continue to work according to your schedule and your own personal decisions, and don't factor their poor tools into your decisions - these are what's provided, use them to the best of your ability and don't stress about it. 

If you have to yawn more than once during an important interview, then you're already displaying an inability to prepare for an important meeting and present yourself rested and ready to work and interact. This coupled with leaning back suggests a lack of interest or desire to "win" the interview. If you have a reasonable explanation that tells them this was unavoidable, exceptional, and will not happen in the future when you are working for them, then, at this point, it can't hurt you more than your yawning and slouching already have to try to explain your condition. In other words it probably doesn't matter, you've lost the opportunity, so an explanation can't hurt, and may possibly help if you can convince them it's unusual and wouldn't happen again. 

The two best options appear to be to move him to a new location, or to give him a specific set of requirements, perhaps in checklist format, that provide exactly what the space has to look like when clients come over. Such a list won't be easy to put together, though, given his particular style of workspace management. Perhaps something similar to: 

You don't, at least not to this programmer who doesn't want to hear it. He's not a manager, and apparently doesn't want to be empowered to make decisions or take action without direction to improve the business. He wants input in the form of feature requests, and he wants to provide output in the form of perfect code. Your desire to train him to be a decision maker, or to care about the business, isn't a bad desire, but in this case you should set that desire aside, and focus on the business priorities - making this programmer productive. When you have a system that isn't working, you can open it up and tinker with the internals, or you can fiddle with the input until it produces the right output. In this case I suggest you fiddle with the input to the programmer, rather than trying to change the programmer. 

Add any other items as needed - test equipment, trash, wire, parts & materials, etc may need special attention depending on the tasks this person is tackling. Honestly moving them seems to be the better option - or moving the conference room - but if that's not possible and the work area must be clean, this type of system might communicate the objective requirements well enough that "Please clean this work area" has real meaning, vs the current situation where it doesn't translate for him. 

Unless you have an offer and a start date in hand, you should not alter your plans at your current job. The new project is probably to your benefit, particularly if the job offer never materializes. The contract/exchange should have clauses for employee replacement in the event an employee quits, dies, or otherwise becomes unavailable. Tying a project to a certain group of employees and making a contract that guarantees the project will fail if any employee leaves is just not reasonable - but if that's the route they've chosen, that's their responsibility, not yours. The only contracts you should concern yourself with are those you sign. Don't feel you need to support some third party contract if your circumstances change. 

Typically open systems will force a more formalized salary structure over time. Consider the government and military pay systems. They are open, but because they are open they are subject to scrutiny and anything which is objectively unfair is steamrolled out until the playing field is level. However, that rules out any subjective measurements of employment. If you are really good at forecasting sales then you can objectively measure your performance and compare it to another person whose forecasts are less accurate. If, however, you foster a working environment that enables others to work better and more happily, it's hard to justify in an objective way. Worse, it usually starts to incorporate objective measures of employment that "make sense" but don't actually help the company. For instance, seniority. While the longer one works in a company, the more knowledge and skill they may have about the company and their position, there's no easy one to one correlation between the length of time one's been at a company and their value to the company. Someone may come in as a new employee and right off the bat be more valuable to the company than one that's been there for a decade. Further, there are some structural negative consequences of long term employment - "It's always been done that way, so we will always do it that way" and "If I only share the absolute minimum information I have to, then they will not fire me because I know things and have skills that they need that aren't easily transferred." Rewarding seniority with no other justification can change how people approach their position. I joined a company which hired me due to experience gained on consulting projects completed during school, and paid me at a higher rate than others with less experience. When that company was purchased by a company with a structured salary that was essentially open, they could not count experience gained prior to graduation. While they didn't cut my salary, I knew I would not be given raises there for years until my in-company experience caught up with their pay scale. You can probably come up with fixes for some of these problems, but generally these only work in small companies where everyone knows and trusts each other. Once you increase in size to the point where you don't know everyone in the company, then you might have a hard time understanding why someone two departments away is getting more than you unless it's clearly visible and objectively measurable. Now, this doesn't mean that an open system is bad, but you have to understand the pressures and typical direction such systems move in. It can be hard to switch from open to closed, so you have to make sure it's what you want when you start using it.