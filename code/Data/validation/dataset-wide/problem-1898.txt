First of all, as mentioned in the comments, do not lead with the technology you want to use. If you want to move away from an existing system, regardless of what type of system it is, you have to justify its cost. The best way to do this, is to start with a cost/benefit analysis. Gather information about how much time is spent using the current system, as well as a strong estimate of how much less time will be spent if the system is changed. You may not know the salaries of the people using it, but your boss will, and he/she can use the hours to come up with a cost associated to the time spent. It is possible that time is not an issue, in which case try to attach a cost to the overbooking, and legibility issues that are side effects of the current system. Once you have a dollar amount tied to the current system, figure out what a replacement system would cost for the same activities. If the savings is enough to justify investing in a new system, then you can start suggesting technologies to use. 

First of all, you are both wrong. He is wrong to insist that code looks good, and you are wrong to insist on using an anti-pattern. The appropriate way to develop software lies somewhere in the middle of your two ideologies. It is possible to follow best practices and still have code that can be developed quickly, has good performance, and is maintainable, and this is where you both need to get to. There are many ways to do this. Your developer seems to be of the type to see "best practice" and never stray, even when the best practices change. The best way to fix that is to find a better best practice to meet your needs, and then you both must follow it. It is important to not get stuck on the terminology, or precise methodology, and this sounds like it may be a problem for your developer. No best practice is any good if you cannot implement it, or if it results in poorly performing code. Rather than arguing with your developer, you should try to understand why he refuses to write code that does not look good, and then nudge him towards a practice that allows him to write good looking code as well as good performing code. In case you do not believe that formatting is an issue, just Google the phrase "space or indent programming" and be amazed at all of it. How code is formatted has a lot to do with how maintainable it is in the long run. Also, check out some of these books, recommended by Jeff Atwood. They are all good, and will help you understand better why you are just as wrong as your developer is. Ultimately, you need to stop competing with the developer. You are on opposite sides of the spectrum, and if you both just say "I am right," you will never get better. You must try to understand where he is coming from, and hopefully he will see the effort and then try to understand where you are coming from. Perhaps if you try to optimize the 4 hour query using a different "best practice" that still looks good, he will understand better. Some links to a few development methodologies: 

As you are not exactly from IT background, leaving a job, getting unemployed and then finding a job in that industry where you are not expertised is not going to help you, as you have mentioned there are very few possibilities as the extent of industry I am working in is very acute. It is recommended to stay at your current job and start looking for the best alternative of it. Also a little friendly talk with your boss about your task not being reviewed properly could show your loyality towards your duties and might you get some attention for your work. 

Bravo.! That's really a brave question. Its a problem that i think many of us should have faced. The question to this is simple. As you have mentioned, there are only 8 or 9 employees in your office, that means your absence in the office will definitely affect the work. Also, you have mentioned that you are feeling quite better and the disease is not much severe and you will be fine in 2 or 3 days, so you might talk to your boss about the disease and ask him to decrease the workload from you. Even working in weekends for completing the work might do the trick. But all depends on how you presents your illness to your boss. but i must say Never Compromise anything for the Sake of you HEALTH 

Many jobs are gained and lost based on who you know. I have seen this in action many times in my career. My first job out of college I got because I was recommended by a professor, who used to work for the guy that ran the company.. Where I am now, I highly recommended two people from a previous position, and in one of those cases that recommendation was the deciding factor between him and the other candidate. While legal issues are outside the scope of this website, there is nothing ethically wrong with a manager following up on references, regardless of the relationship the hiring manager has with said references. This is exactly why networking is such an important part of your career. As you progress, it is important to meet people and leave good impressions. You never know when someone may recognize you and say a few nice things to a potential employer. In your case, it sounds like your reference left a bad impression. This is not necessarily bad for you, but certainly not good. 

Ultimately, how much you learn depends on you. Since you are interested in learning, you will learn a lot at either company. However, the different environments mean you will learn different things. I have worked for small companies (<10 technical employees) and larger companies (>100 technical employees). In all instances, I have learned a lot. At a small company, you will be tasked with a much wider range of duties, and it is likely they will be less concerned about doing it "right" as they will be as doing it "now". As a result, you will learn how to kluge your way through an awful lot of things. Obviously this is both good and bad. At a larger company, you will likely be tasked with a much smaller range of duties. They will probably be more concerned with doing it "right" (which does not mean it will be the right way, but it will be a consistent way) than they will be with doing it quickly. As a result, you will learn proper methods and processes to do whatever it is you are tasked with. That is not to say you will never have to kluge anything, just that it will be the exception rather than the rule. You must also consider that a larger company will probably have more resources available for training/continuing education than a small company or a startup. The small company simply cannot afford (this likely has nothing to do with money) to send you away for a week to do training. As an aside, you should really base your choice on culture. If you hate the people you work with, or think the company rules are idiotic, you will have a rough go. Finding a company that is a good fit for you is more important than just about anything else when it comes to job satisfaction. 

You just mentioned that, my boss feels very strongly that I am just a perfect fit for the job and am exceeding expectations. If you are regular enough, completing assignments on time and your boss is extremely satisfied with the outputs you are providing, then there's nothing wrong that your boss stood beside you in case of any job related issue of yours. In my case, we have to report to our team leader and we dont have direct interaction with the HR folks. We are upto the expectations of our TL. We mostly have some salary and incentives related issues every month. In every case, our TL speaks for us with the HR people. So its fair enough for your boss to stand beside in your problem. However, if your problem was severe enough, that it could put fingers on the boss's potential, then you could ask for what you can do to make up for the damage that is done. 

I was in the same situation in the college days, but in my case, F was really a close frnd, thus it doesnt mattered that F worked or not as much as we did, but F gave the project presentation for us, in that F was really good. In my case, A always try to be a perfectionist, thus he doesnt likes any of the work done by F. Every time, F tries to mark his presence, A always denies F's work, by saying almost the same words that you said The work F did in 4 weeks, i could have probably done in 2 hours. So you better find out the best part of F(Asking a friend to leave the group is quite rude). Even if you want to do that, do it before its too late for F to get in some other project. Have an honest talk with F or even with the project guide. 

There are many others. Some will be good, some will be bad. Some are no longer used for a reason. Our work paid for an Agile workshop, in which we covered Agile in general, and picked a subset of those principles to implement. It has helped us in many ways, and also hindered us in a couple. It is much better than what we were doing before, but in our case the issue was all process related. We have found that the biggest help was learning to focus on the minimum viable product. This means that we give the customer the smallest bit of functionality to meet their needs at first, and expand on it as needed. This keeps the software from getting bloated with stuff the customer never asked for. 

Some of these options actually overlap a bit. For instance, if you go to a freelancing site (do a quick Google, there are several reputable ones) some of the jobs will be to create a mobile app. Or a freelance gig may turn into a longer term contracting/consulting opportunity. If you have some ideas, mobile app development is a good way to go. You may not make any money on it, but having a background in C you are already a leg up if you start with iOS or Android development. I am a full time software developer myself, and do some contracting on the side. I worked out a deal with a business acquaintance in which I provide development and support services for a flat hourly rate, and I only work evenings and weekends. It is a nice little gig for some extra cash, nothing major. I have also checked out some freelancing sites, but decided against it. Most jobs seem to take more time than I am willing to commit to. However, in your case, freelancing is probably the easiest path. Create a profile on one or two sites, bid on some jobs you can complete and start getting paid for your services. As for work/life balance, you need to judge for yourself. Always evaluate prior to an extra project whether you can handle it or not. If you start to get burnt out, you will need to ease of the extra work so you do not affect your day job. The link @gnat in comments provided is a good one, but every situation is different, and you know yourself better than anyone else (presumably).