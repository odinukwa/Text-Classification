What would you say? Would you hire them? No, it would be so funny you wouldn't even reply - you'd assume it was a joke. The analogy is perfect because, regarding degrees and other qualifications..... Say the hypothetical guitarist said to you "Actually, I did a masters degree in music at NYU". That would be good, you'd be like "Fair enough, that's a good thing." But would you hire the person for that reason alone? No. In contrast, say the guy said to you "I'm Mike Campbell. I played guitar for Tom Petty for 10 years." Would you hire him? Indeed, just as with experienced programmers, you wouldn't be able to hire Mike Campbell, because he's in so much demand you wouldn't even be able to call him. Which is exactly how it is with experienced programmers. Thus, 

It's really, really common in software that you have not-very-competent staff in a role R. When someone arrives who is competent at role R, it inevitably happens that 

To make perhaps an analogy: say you said "would it be unprofessional to quit because I have bugs?" The answer would be "yes that would be unprofessional, slack, half-assed" because the whole nature of the job is dealing with bugs. There are good reason to resign (grandmother passed away, you just got offered 2x more somewhere else, etc). Giving up because you're a little "under the gun" on time management, would be weak-assed. Don't do it! (As others instantly mentioned, changing jobs won't affect your psychology in any way.) Note that this answer strictly applies to programmers and a handful of other professions. If you are a surgeon, CPA, etc the answer would be "quit now out of shame!" For programmers, "time problems" are just central to your life - everything you describe is normal. 

Just the usual comic shit. That's the answer to your question. In the past - you could say in stage one of the business - this worked. That was precisely how the business operated. IMO however, there has been a sea-change. It's becoming harder and harder to use these tricks. So - all the way through that era, everyone quietly said (when no programmers were around), "Imagine if these kids ever realize they can get paid money? We'll all be fucked." In fact - that has happened. You basically have to pay through the nose (ie, actual money) for competent programmers now. So the answer to OP's question is they COULD try the usual tricks (listed above), but it's entirely likely they are screwed and will just have to pay. (Just as with musicians, experience is the key - it's still very hard / impossible to get your "first jobs" as a programmer.) 

Here is how to get from where you are now, to, a better place. Here's the specific language you need: 

Essentially what you're looking for here is negotiating language. I would give it a couple of weeks. During that time, keep the issue "live" but without being a whiner. Keep generating language like 

It would be totally inconceivable that you would pay your own moving expenses. (Don't even ask "if" they are going to pay, just start talking about the mechanics of how the move is going to happen. You would no more ask "if" they are going to pay your moving expenses, than, you would ask "if" they are going to pay your salary that month.) A typical relocation budget is two month's salary (certainly not less than one). Often, to try to cut corners and save money, employers will simply offer you a fixed amount of cash ("we'll give you two months salary "towards" relocation"); it's your choice whether you'd rather do that or have them "pay the invoices". The facts of the situation would seem to be 

1 A relevant caveat here is that, indeed, US immigration can look at your academic qualifications - but that's only if you get to the point of having a company want to sponsor you. 

It's a fair question and an interesting one: the most common thing is to discuss each-other's location. Very briefly, to establish a setting. So, "your city" issues: 

It is 100% correct and good to leave skype chats, as you describe. In fact, the manager of each chat wants you to do that - to be proactive and leave. So that the chat manager doesn't have to clean everyone out. Just as you literally leave a physical meeting - you don't expect the manager to hold your hand, get your bag, help you to the door etc !! :) - you can, indeed must, leave Skype rooms when appropriate. 

This is so common you're more or less describing........ the very nature of the software industry!!! Essentially, if you can't deal with this or work with it, you can't work in the industry! (Sucks but true.) Another way to look at it: people who (essentially) make a lot of money in software, who are very successful, are, indeed, the people who can best deal with the issues you so accurately describe. The absolute bottom line is this: just explain clearly, and as politely as possible - and repetitively: "That's fine, but it will cost €X. Using this more modern system, it will cost €Y." For example, a huge innovation in the mobile scene at the moment is "bAAs" (eg Parse, etc and huge innovations like google play and so on). We go in on big projects and simply utterly eliminate the entire server side of a dotcom and just use Parse or whatever. This literally results in 3, 4, 5 server people losing their jobs (and moving on to a better more interesting career!) You have to remember that "disintermediation" is the ongoing, month by month story of the software business. Looking back 20 years, we'd all make a huge fortune, a prince's ransom, doing something like "adding credit card processing !! to a online shop!!" It just seems insane now, that one used to be able to charge six figures for that .. obviously anyone's Mom can instantly have the world of online payment processing, completely for free, using google, paypal, whatever whatever whatever. that whole "segment" of the business evaporated completely. Another incredibly important point for you personally... You have to ask yourself very carefully - for the sake of your family's finances and so on - Do you want to spend the next year working on dead technology? How will that look a year from now when you're trying to find your next job? "Oh, so you spent the last year working on 10 year old technology that is now even more useless?" It does not look good. Consider simply leaving the company. Just very politely explain, look, I love you guys but if I work on 10-year old technology for the next 12-18 months, I've just lost 1-2 years from my career, and programmers have maybe 15 years maximum power in their career at best, so it's not going to be possible. Then leave, and get a new job this afternoon. There's so much work around that anyone can get any job they want any time anywhere, so, again - please be very careful about working on "dead technology" at this stage. Hope it helps in some way!!! 

It won't happen. That's wrong. Set that idea aside because, very unfortunatyely, it's wrong. There are 1,000 questions on here saying "I thought I had a mentor/teacher/senior but they do nothing / don't teach me / know nothing." In software, any idea that anyone can help you, is unfortunately a dream. It won't happen. 

regarding that, unfortunately it just won't happen on two levels: 1 - They won't change. It won't happen. "12 months means never" 2 - If they miraculously did, the "senior" will be useless. You'll be back here posting "I thought I had a mentor/teacher/senior but they do nothing / don't teach me / know nothing." Regarding building skills, that will happen in two ways: 1 - take more and more challenging jobs. Always try to change programming languages and environments. 2 - read all the classic books. Which classic programming books have you studied? If the answer is "none yet" I've given you all the "mentoring" you need for the next 36 months. One point, regarding your next opportunity. You pose the question, which part of the world? Simply, don't look at it that way. Just look at "the whole world" and pick the opportunity for you. These days the best, most amazing challenge can be anywhere. Sure, way down the line it will be good if you can say "I worked in XYZ major cities for ABC years." It's a non-issue for now. You've "aced" your first job, now go get your second. But first go get those books. You say... 

simply say "I'm Jane nice to meet you" it is extremely common to have >short< comments on each person's city. the most common is "I have/not been there", "Question about weather" "My microphone is working ok?" and then, the important person says: "Let's get started .." or You say something like "So, what would you like me to do first today on the call..." 

The simple fact is at this point you should just tell HR, or your Manager. You're already said "No" endlessly. It's plain harassment and there's no reason you have to put up with this. Simply tell your boss, or HR. 

This is a many-times duplicate. Do nothing. Every programmer is continually looking for another job. Every employer of programmers is continually looking for other programmers. 

Unfortunately, if you are TRULY AND IRRECOVERABLY out of your depth, Then the one and only path is to (this hour) tell your boss "Sorry buddy, I'm out of my depth on this - it's unfortunate you hired me as it wasn't clear what was needed. Let's call it a day, I won't take any legal action for my time wasted." Since there is simply an infinity of jobs available at the moment in every field of development, there is zero hardship on your end as you can have a new job the same day. So that's it. There's no other course of action if you are TRULY out of your depth. However as everyone has said: (1) Programming is incredibly hard. Even worse, programming is the only human skill where you have to continually completely re-learn everything. If you're just a brain surgeon or if you build suspension bridges - that's nothing. You spend a few years learning how to do it - and from there it's a yawn until you retire. Unfortunately programming is constant mental torture. No human way of life, has ever been like this before, you're on the absolute cutting edge of socio-consciousness evolutionary difficulty. (If you're not up for this - forget it and find a totally different career. There are any number of much much easier ways to make the same money, so don't hesitate if that's your choice.) (2) As everyone has said, don't panic and just work harder to learn the problem at hand. Just cadge between buying more time, getting advice, and (like any programmer) fit more hours of work in to the seven days available each week .. utterly forget concepts like "eating" "free time" etc. (Programmers have no life: zero. Utterly nothing. It's so difficult it's an every-waking-moment thing. So, squeeze in an extra 30 hours a week studying the systems at hand, and keep doing that until you retire or die.) However NOTE THAT all the people here who are suggesting (2), are in fact excellent programmers - ie, they live their entire life, 24/24, 365/365, from age 15 until retirement, in a blind searing panic trying to learn Swift, CSS, functional programming, bAAs, Mecanim, or whatever totally new, utterly different pile of nonsense has just come along and (effectively) put us all out of a job until we can get up to speed. So, you could say, it's easy for everyone here to breezily say "oh, that's life in programming - come up to speed!". Footnote -- "I would like a reference if the role ends as I can quantify just how hard I have worked for them" This is dreamland material, forget it. As soon as you tell them you're quitting they'll politely escort you to the door, they have clients paying millions of $ waiting for them. Secondly nobody really cares that much about references or cvs for programmers - you just have to be a superb programmer. "just how hard I have worked..." you haven't worked hard, every programmer works simply constantly (90 hour weeks are nothing, that's completely normal). The reason many software engineers now work independently at home is it's easier to get in 13, 14, 15 hour days rather than 12, 13 with commuting.