Whenever I am asked to complete a technical coding test, I always google the internet for answers and read through three or four examples. Then I ignore everything they did and write it my own way. Let me go into more detail for why this is necessary. Most of the answers you find on the internet are only going to be technically correct. For example, if you have a question about how to do X there are very likely multiple ways to do this regardless of what language or frameworks you are using. Some of these will be scalable - some will not. Some will use methods that are rightly deprecated (Eval!) and some will not. Some will be out of date for modern programming languages, and some will not. Most answers will NOT work in a real-world situation. Are they quick solutions? Yes, but they are usually quick for a reason. With more then one way of doing something, you have a chance to demonstrate mastery, not just understanding. This is your chance to demonstrate the specific expertise you bring to the table by being able to demonstrate that you understand the different approaches and when to use which one. For example, I will sometimes provide TWO different solutions, with an explanation of which solution fits which situation. "You didn't say if this code was meant to be re-useable, I usually assume reuse-ability, but the fast example is here. However, if this was something I was expecting to re-use, I would structure it like so." If you can Google a solution, expect that the interviewer can to. I know in the past when I have looked at coding samples submitted by prospective employees, I have put portions of their code into Google to see if they copied it from somewhere. Typically if the code is presented that way, with no explanations, I will reject the candidate outright. If they provide explanations, good on them. It's important - if you use any other copied code or if you use a framework - to explain why you selected what you did, and not just include them outright. Otherwise the interviewee will simply assume you googled what was best and don't understand the nuances of what you selected. Interviewers should be more interested in your thought process then your technical skills. Frankly, anyone can google enough code and with a low level of skill, slap something together these days. Really good technical tests will require you to submit a repository history along with your submission to ensure that they can follow along with how you developed it. This is much harder to fake, and gives a much better idea of how the candidate came to the solutions that he came to. Copying someone elses code gives them no reason to hire you over anyone else, and no insight into how your mind works and if you are a good meld for their existing team and company culture. Showing and explaining multiple approaches shows that you took the time to research the project, did not fire from the hip, and put care and consideration into even the most insignificant work that you do. This cannot be stressed enough - as a hiring manager I want candidates who know what they don't know and have the capability to learn. And as a candidate, I want a job where going the extra mile will be recognized and mean something. Taking extra care, providing additional information and coding samples shows the company want kind of a candidate you are AND gives you a chance to feel out what kind of company they are doing to be. While copying and pasting might be the quick solution - companies that accept candidates who are just able to copy and past technical test answers quickly and easily are going to have a much poorer base programmer then companies that reject them, and probably aren't a place you are going to want to work at for very long. 

It seems your manager and the company have allowed a double-standard in accountability and other things between most employees and this particular employee. You reap what you sow... and you are not the manager; your manager is. Your manager has this problem because s/he has chosen to apply a double standard --something a good manager wouldn't have done because it shows partiality/favoritism. As Snow said, there's not much you can do, and it's not your job to do it. There's not much to this. Your manager friend should hold everyone to the same standards, including general behavior, professionalism, level of accountability, and so on. 

[EDIT-1]: She does have a 'backup' plan to negotiate some things if it comes to that, but that's different to knowing whether this is or isn't something that's even permissible to do by employer and, if so, how employees could/should handle the situation. [EDIT-2]: She just got out of the meeting, and they did take away her vacation/PTO. I've updated the question on this basis. 

In addition to what the others have said here: When I am working with a recruiting company I always arrive at an interview with my OWN copy of my Resume (and usually five extras, because you never know who you meet with) and provide it to them immediately and say, "This is the Resume I am prepared to discuss, regardless of what you have received from my recruiting company." In the past I have arrived at interviews to find out that some experience (I did not have) was added to a resume (without my knowledge) that was provided to the company I was interviewing with. Unfortunately, there are LOTS of unethical recruiting companies out there, and even more unfortunately the best places to work at seem to utilize only the worst companies, so sometimes working with a less then scrupulous recruiting company is not an option. However, I have not been afraid to tell company's I am interviewing with that the recruiting company did/encouraged/said for me to lie in order to land a job. Otherwise the company would have no idea what was going on. 

Is it ethical/appropriate for the employer to do this? What steps can/should Alice take to better handle this situation? What is a good/tactful and effective way for Alice to communicate her concerns to her boss so that the chances of having her vacation/PTO restored to pre-disaster days are higher? 

Someone I know, let's call her "Alice", is on the receiving end of the following situation, and I'd like to become better informed before providing my opinion. This is in the US. Alice is an exempt employee in a consulting company. She works remotely from Puerto Rico, a US territory, for the company, which is based in the US mainland. Due to hurricane Maria back in September, Alice was left completely incommunicated for over a month, meaning she could not perform work during that time. The company continued to pay her salary during this time, which is required by law as far as I know. Currently, she's working from somewhere else in the US mainland, and has been doing so for over a month now, too. However, Alice's boss/manager met with her and told her that she has to update her time sheets to mark her vacation/PTO as having been "used up". To be honest, that seems inappropriate to me for a few reasons: 

As per the terms of your contract, the company has 45 days to respond to your email, by paying your invoice. You have so far provided them only 21 days. It is rather unprofessional of you to hold them to a different standard than the contract specifies. Yes, they might fail to pay you within 45 days. They might announce that on day 44, or they might not announce it at all, just fail to pay you. Hopefully that doesn't happen, but that's why you have a contract. If you wanted different terms (for example, the company must acknowledge the invoice), you should have put this in the contract. It would be an incredibly strange clause to include, but you can more or less put anything you want in a contract, so long as the other side agrees. Short of that, you could, in the future, try read receipts or try sending the invoice with a sentence such as "Please acknowledge receipt of this invoice" in the email body. But the company may choose to ignore your request and it would be inappropriate for you to demand this, assuming it isn't in your contract. 

How's that different from you asking your boss: "are you planning to lay me off or fire me?" or being asked about your religion during an interview? I've been in places where management constantly talks about how employees are their "greatest asset" only to lay them off in large numbers a short time later.. Alternatively, you could be up-front about the simple yes/no nature of the question: 

In my book, giving the "political" response (i.e. the so-called "white lie") is not a moral thing to do, even if it's (supposedly) considered "good practice" in the industry to do so. If you're tempted to lie about it... just refuse to answer. 

The best thing I could find was this article, but the closest thing there is the section on "Exempt employee chooses to stay home because of weather" (my emphasis), which isn't exactly applicable here. I don't know how closely this may get to walking the line between ethical/unethical behavior, if at all, but it at least seems inappropriate to me as it seems to be "punishing" the employee for something outside the employee's control. The questions are as follows: 

I work from 7 AM to 4 PM my time, but am in a different timezone than most of my coworkers. Most of them work from 10 AM to 6 PM my time. What works for me is to add a recurring calendar entry blocking off the time from 4 PM to the next morning at 7 AM. This heads off almost all such meeting requests. Given that I have my manager's consent to work the hours I do, and given that my calendar shows I'm unavailable outside of those hours, I'll simply refuse meetings outside of my work hours unless there's an exceptional need. So long as you have consent to work your hours, that's what I suggest for you, too. If I was you, I wouldn't show up for the first half hour. Just refuse the meeting entirely, just as you would if the meeting was at a convenient time but you had a conflicting meeting. If your calendar is blocked off in this way and you are still receiving lots of meeting requests, it's time to talk to your manager. Either your work hours are appropriate and therefore you don't need to attend meetings outside of those hours, or your work hours are not appropriate and you do. 

No, because you can't change or improve anything by getting worried. In fact, you might become desperate and make matters worse by doing something you could soon regret. Give it time. Give yourself time to prove yourself, not only to yourself, but to everyone else in your team. 

There's a pre-scheduled conference company staff will attend (2 days from now), and Alice will be meeting her manager in person there as well; this topic will likely be brought up again in-person. 

I think other answers are very good, but I think what goes around comes around. Perhaps this person needs to receive a cup of his own medicine? Maybe you and/or your team members should feel offended at the fact that this person keeps feeling offended for trivial things and on someone else's behalf, and take the issue to HR? Who is he/she to feel offended when "Jeff", who is the target of the joke, didn't? That's just pretentious, to put it politely. On a more serious note, it's likely that HR is coming down on you hard because this easily-offended person is the only person making any noise (i.e. talking/complaining/reporting/etc). If you stay quiet and do nothing, you will pay the consequences later on because they may interpret that as you having "admitted" to being "offensive" by omission (e.g. not defending yourself). In fact, you don't even know what this person actually claimed behind your backs. This person is very unlikely to be trustworthy. (I've had to deal with difficult co-workers before, the "everyone's out to get them"-types, although it never got to HR in our team's case. Our team had tried to play "nicely", but they've been suffering the consequences of it for a long time now.) Instead, if you and/or the rest of your team report the situation to management and HR, then they may realize where the real problem actually is and, who knows, maybe even do something about it. To top it off, if/when HR comes down on this person, they might get everything they need out of this person's instant on-the-spot reaction. 

I have a mechanical keyboard with Cherry MX Brown switches. I absolutely adore it. I love the feel of a real mechanical keyboard and I love the sound it makes. But I work from home. If I was working in an open-plan office, there's absolutely no way I would bring this keyboard in. As pointed out in another answer, mechanical keyboards are loud. Far, far louder than would be appropriate in many open-plan offices. Unless the office is already very loud (regular ongoing conversations in the open space), it is inappropriate for you to bring your keyboard. This isn't a case where you should try it out and watch people's body language. This is a case where you should simply not even try it. 

I encourage you to call the Employment Standards Branch. Assuming you are an adult (different standards apply to young people), you can most definitely be required to work overtime. Note that all work must be confined within 12 hours, so if you start work at 6 AM, they are not allowed to have you work past 6 PM. If you are working two jobs, this only applies to each job individually. For example, if you work at one job from 6 AM to noon, the other job is perfectly free to have you work from 2 PM to 10 PM. Any work past eight hours for a single employer is subject to overtime and there's a separate calculation for overtime based on weekly hours, too. You can read more here. 

It sounds like you're showing that you can do things to a degree that your team lead finds reasonably good, and that is good news, as long as your team lead has also met the above requirements. (An endorsement from someone already trusted and respected will have more weight behind it than that of a bad team lead.) That said, you need to understand that none of these things can be generally achieved within just 1 month. Even if you pulled some 1 or 2 miracle solutions, you've still not been there long-enough to show long-term consistency, among other things. Team Leads Must Continually Remind Upper Management About Their Team's Accomplishments Something I think will be very important here is how good a job your team lead does when letting upper management know about the accomplishments of his/her team and their members. In other words, even if team members are doing excellent work, the team's reputation with upper management depends on how well your team lead represents and "fights for" their teams. I've seen good and bad team leads and the consequences that followed in both cases. I'm speaking from first-hand experience here. In one case, the bad team lead and the manager were so "out of sync", that the team lead asserted the tasks he was assigning were "very important", yet my manager, during my annual performance review no less, that the tasks I was working on were "not important". That's even leaving aside the fact that the process is inherently broken. It was no coincidence that everyone in my team received poor performance reviews, compared to all the previous years when we had been with the good team lead. Upper Management Does Not (Necessarily) Know (or Care) About Your Technical Details In my experience, upper management doesn't care if you found a very clever solution to a problem by changing the data structure from a List that you needed to sort repeatedly over to a Priority Queue. In many cases, they probably won't even know what that means. Take-away: Upper management (probably) cares about your source code as much as you (probably) care about Excel spreadsheets (read: not much). The truth of this statement is proportional to the size of the company in which you are. At this level of abstraction, what "matters" is that things "work as intended", and that your team lead has done a good job in communicating your team's accomplishments, including yours as mentioned above.