I'm not going to focus on the personal and interpersonal aspect of the question, as they're covered well enough in other answers. I instead want to focus on the technical aspect. Testing You said you're writing unit tests. Do you try to have full test coverage? Do you write integration and end-to-end tests? Don't forget that a good testing suite has all three aspects of testing, and having everything tested will make you feel more secure. Dropping testing in favor of delivering more is a temptation anyone has, sooner or later, and it's far too easy if you're left by yourself and don't have testing standards. Force yourself to test, and never consider it a waste of time. Code metrics Try using a code metrics tool (giving you a specific tool is impossibile since you don't specify the language you're using), and conform to industry standards when it comes to writing function names, variable names, etc. (nobody wants to see hungarian notation in their java code). Obviously, you should first of all keep your code style coherent with the one used at your company. Try to read the other devs' code and learn how they write. Deployment system and Bug Tracking Since you are just 5 developers inside a bigger company, you probably also lack deploy and bug tracking tools. Trying to at least standardize (if not completely automate) the way you deploy the product will reduce the risk you give someone an outdated file or library, and having a formal bug tracking system will help people tell you if your product has issues or bugs. Having everything automatically checked and tracked will surely improve your confidence, and will help you deliver a great (or at least good enough) product. 

but this might not be clear for your boss, and this confusion might lead him to think you're just trying to impose you ideas on him. Last, don't be bothered by it. Nobody can be fired or reprimanded for just doing his job. 

In addition to contacting the OSHA, I'd also start looking for a new job, just to keep multiple doors open. Equipment breaking and not being replaced might mean multiple things (no money to replace it, bad management, ...) and an investigation from OSHA could put your company out of business. You want to be ready to jump ship if the one you're currently in sinks, and I'd suggest you to start looking asap, since you said it won't be easy to find another one. 

It's pretty clear to me that your manager is most certainly gathering evidence and working toward getting rid of the other person. Explaining that "we have to let her own mistakes" is not-so-subtle language for "if you continue to help her, I'll never be able to argue that she can't perform her job and get rid of her". Any manager worth their salt would expect the team to give extra help to the 'weak link' if you will, bringing them up to the level of the other team members. The best thing in these cases is almost always communication. I would first talk with HR and ask how they recommend handling the situation. They are already aware of the problem that exists between your manager and the other person, and should be able to tell you if what your manager told you to do is acceptable or not. You should be able to work out with a representative from that department how you can meet with them privately, maybe even on your own time, if you're concerned about how your manager would take knowing about the meeting. Developers frequently make changes that more senior staff are not aware of: it's only an issue when those changes don't go well. I would guess that your manager probably had a similar, painful conversation with their boss, and simply let the 'sh*t roll downhill' if you will. Part of your job as a developer is fixing bugs when you find them, and I doubt that your manager wants to be aware of every small change you make: they've likely got a lot more to worry about. Bugs happen; if they didn't, there would be a lot less need for developers. IMHO, your manager handled this poorly and now has a grudge against your co-worker. Even if you did continue to help your co-worker, it can be difficult or impossible to change someone's mind about another person who they feel has slighted them, as your boss seems to feel after having management talk to them about their 'outburst'. Once you talk to HR you'll know how this is going to play out. Either they will counsel him to tell the rest of your team to disregard his earlier instructions, or they will counsel you to do what your manager said. Either way, as long as you can talk to them confidentially, your manager won't have anything to hold against you. 

Chances are the recruiter just copy-pasted a list of skills someone else gave her. The important thing is to know what are the requirements for the job you're gonna interview for, and brush up on the core concepts. That list only tells you one thing: they're asking for a web developer that is probably going to write both server-side and client-side code, and this should be your main focus of study. They also seem to care about clean code, so try to at least be familiar with SOLID principles and designing a modular system. Don't try to focus too much on the single points of the list and you will be ok. 

This is fairly common if you have an overworked manager. The main way to proceed is finding other sources of work. Are there things the office needs and nobody already implemented? (automated build process, ticket tracking...) Check from you colleagues if they need something software related, or if they feel your products need something implemented. You can develop those features in a side branch* and merge them to the main product branch if they get approved. You obviously should still send emails and reports to your manager, to keep him informed of what you're doing and if the things you're doing are fine. If you still feel you have too few things to do, you could resort to online courses to learn new technologies or strenghten your skills on libraries and frameworks you're using. A good developer never stops learning. 

Your resume is a formal document, just the fact of trying to use humor in it will be seen as unprofessional by some. You don't know who will see your resume, and you'd better try to avoid being rejected immediately for such a small addition. If your resume is "terrible" as you wrote in a comment, humor is not the way you should solve the problem. Be sure to keep your resume short and focused on yourself and your work experience. You can find a lot of tips on writing a successful resume on many sites. Last of all, it's normal not to receive a reply if they're not interested in your position, and that's why you should be applying to a lot of places at once, expecially if you're in an oversaturated job market or if you have no previous experience.