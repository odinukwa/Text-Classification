As you can see, the final form ("Final query") of 2 queries are the same, their execution plans are also the same. The queries were running for 2 minutes because statistics_level was set to ALL in order to gather plan statistics. So knowing that the distinct can be eliminated from the query, look at the text of this query: 

If there is a big difference, gather statistics. Is there any correlation between the columns and ? If there is, did you gather extended statistics on them, so the database can estimate cardinality more accurately? If both the statistics and the above estimation are good enough, then why isn't there an index on the (and BASLIK) column that the database could use to access the required rows effectively? If both the statistics and the above estimation are good enough, then why does the database decide to use parallel query at all? Did you force it or set it at table level? In the section: 

That is part of the solution. You can catch the error/exception then display the appropriate message to the client ("you are already logged in", "connection limit exceeded", etc.). This is not something we can solve in the database. I have seen a similar extreme case, where transactions were blocked with the event , that is something that can be managed in the database. But I have yet to see a case where is a database problem. 

This is not about function (UDF) vs procedure. It is the context where you use them. You can have DML operations in a function: 

Enterprise Manager 11.2.0.4 Database Control Backup Settings are not Retained, Scheduled Backups Fail to Run (Doc ID 2185136.1) 

1), 3) and 4) runs successfully on , 2) throws . On , all 4 runs successfully. The one thing to keep in mind: never rely on implicit behaviour you can not control. Use explicit, unique aliases. 

Now try to apply 23530402, and after that, apply 23515277 (160719 JavaVM, you did not mention this, but that is the newer version of 22839614). 

Yes. Instance is the collection of processes + SGA. Typically one instance belongs to one database, but a RAC database can have multiple instances on multiple nodes. is the name of the database. It is stored in the database files as and pfile/spfile as well. identifies the instance by the name. It can be changed by setting the parameter. It is not stored in the database files, only in the pfile/spfile. (Note that it is not a strictly unique identifier, multiple instances can exist on the same server with the same name, running from different Oracle Homes). defaults to . In case of a cluster database, defaults to . On top of the above, can be changed by setting to a custom value. 

This will not work. First, as the error message states, you are not allowed to use local collection types in SQL statements, you need to define them in the database. Second, that syntax does not exist. So first you define the type: 

And here comes , the variable that was meant to make your life easier, but it is also a great feature to play a prank on someone who does not know about it. Even if you connect , SQL*Plus will try to open a remote connection because of it: 

Added aliases everywhere + inside the subquery, so it can be joined to the outer query based on that column. 

The platform ID identifies the platform of the datafile, and that is all what matters. You can match the platform ID to platform name by using the information in the V$TRANSPORTABLE_PLATFORM view. For example platform 13 is x86 Linux 64-bit: 

You have created a CDB (Container Database), and connected to the root container. There you are not allowed to create regular users, you can create common users whose name starts with . If you do not care about or want to use pluggable databases, I suggest that you drop your empty 12c database, and create a new non-CDB with DBCA (Database Configuration Assistant). 

This will prompt for a password, then it will create the password file. After that, you can log in remotely as SYSDBA. PS: This version uses OS authentication: 

Application Continuity WebLogic Server 12.1.1 and 10.3.6 Support for Oracle 12c Database (Doc ID 1564509.1) Most importantly, you need to modify your data source to use the Driver Class. 

The tutorial you linked uses the multitenant architecture with pluggable databases. I quickly read through the tutorial, and it does not cover this topic, but pluggable databases do not open automatically with the root container, unless specified otherwise. My guess is that you tried to connect the pluggable database. Run the below: 

Create groups with based on . Find the of and for each group. If the values equal for both condition, keep the . Count the distinct values. Above translated to SQL: 

SQL*Plus is not part of the basic Instant Client, it is an additional download at the Instant Client download page. Once you have downloaded and installed it, you can use it by setting the ORACLE_HOME and PATH envrionment variables, for example: 

Then name of the synonym is . You are trying to drop the object (view) here, called: . And that view is owned by SYS, not SYSTEM. Where you see , the synonyms points to a non-existent object. Replace the object or drop the synonym. 

With added, tkprof will not aggregate the SQL statements and it will generate an output where the order in which the statements were executed is preserved. Without that, you can aggregate multiple executions of the same SQL and sort them, a typical use case would be to sort by elapsed time, so you the output starts with the longest running queries: 

As to what caused the message, we do not know your table structure nor the exact method how it was loaded, but it was done with an inappropriate method, I think. Finally, if your file really is a plain text file (just guessing because of ), then you could store that in a instead of . 

Can run on any node as eth0:X. Number of SCAN VIPs is independent of number of nodes. HAIP (11.2.0.2 or above), no names, the IPs are dynamic, so I have just put some random IPs here to complete the example: 

should be replaced with the name of your instance. After that, restart the listener. One way to find the name of the instance is: , while logged in. Based on your , I guess your instance is called . So: 

As long as you try connecting locally as SYSDBA with a user that is member of the group (defined at install time, typically ), you can type any password, because you will be authenticated based on your group membership, not the password. Successfully logging in with the above does not necessarily means that the SYS password is dolan123. 

and are deprecated long ago. LOG_ARCHIVE_DEST_N is available since 8.1 in EE, and 10.1 in SE. You can define up to 31 destinations, but only the first 10 can be local. Remote destinations are not supported in SE. 

You can use the Multitenant option, create a container database, create 2 pluggable databases called and , then import the first dump file to , the other dump file to . You can switch between pluggable databases with as: 

Even if you manage to create a database with (from scratch (Custom Database or manually), not seed or template) , the indexes will be still created without these settings and you have to take specify them manually.