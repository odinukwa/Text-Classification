This may not immediately read like "brilliant coder!" but this will show that you've worked with an existing codebase, you can communicate with people to understand the problems they're having, work with the existing design to understand that your fix isn't breaking something else, and generally explain what you were doing during your internship without having to go into source-code-specific details. Again, as noted by Lilienthal in the comments, be prepared to talk about all this at interview, go in-depth about how you did things, but not about the details of the source code you were working on. 

Talk to your manager - either to have a word if this colleague is their responsibility, or to pass it through the appropriate channels. If you've already appealed to the colleague directly to change their behaviour, I wouldn't try anything further directly, just talk to your manager and ask them to deal with this. In the meantime, I would advocate going to the meeting room as much as possible anyway. First, it allows you to talk more freely - you can discuss work as you're actually going to implement it, and more junior colleagues can feel that they can ask questions about things they don't understand without being belittled. Second, it withholds information from the problem colleague - if there are things he doesn't know about what you're doing, he might be less willing to assume that his answer will be correct, just in case he hasn't taken everything in to account and makes himself look bad for being wrong. You can then follow this up with references to "As we discussed at the meeting" in conversations that are in the problem colleague's hearing - he can't easily continue this behaviour if he doesn't know what you're talking about. 

You can't show the source code, but you can explain your workflow processes. So, something like: Engineering Intern, BigCompany Ltd (Start Date - End Date) 

If you can, give him a little space to get used to the fact that you're not interested. If he was interested, he's got the hint that you're not, and with some space and time, he should get over it. If he wasn't, then neither of you was interested and everything's fine. If you confront him, he'll probably stick to the "not into you" line, and might even get annoyed, which doesn't do anyone any good. He's said he's not into you, take his word even if it's not true, that's your fastest way to resolve this situation. I don't know the precise circumstances of your pair programming or how much of a requirement that is, but if you can get on with some stuff on your own and then have him look through it, or break up your time with him in some other way ("We can work on Project X until 11 but then I need to {perform other task} so it's done before lunchtime" or similar) then that can help ration his time with you and give you more control over things. If you can, find reasons to spend time working with the other developer - more expertise, or a fresh pair of eyes, or whatever. Talk to your manager, express a preference for less pair programming with your current task, more development and then review. Try to express these things as positive changes rather than just "My colleague is acting weird" - that turns it into more of a conflict with your manager looking into it, and that makes it more of a problem, and focusses more attention on his (probable) lie about not being interested, which makes him feel worse, which just makes the problem bigger. If he's doing anything inappropriate or unhelpful in a work context, keep a diary of what and when, and take that to management as evidence. But if he's just unhappy and things are awkward, bringing that to management makes it look like there's a problem between you and him. I get that you want your voice to be heard, and you're not comfortable having to spend so much time with him, but try to present positive reasons for being elsewhere rather than negative reasons about your colleague. Above all, stay professional, and focus on the work and getting it done. If he's more interested in something else, and is now sulking/whatever, then this will become obvious and his behaviour will be looked in to. I very much hope that this problem will pass, but if it doesn't, you'll be very much on safer ground having been trying to not just get on with work but improve things. 

Start by being patient. Explain to him that there's a lot to take in, so you're probably not going to grasp all the details immediately, and you're going to need him to go over some of the knowledge from time to time. Add that it's better that you learn this stuff well, and make sure that you've got it right, than have him just deliver one presentation, expect you to immediately learn and understand everything, and then have you make mistakes. On the other hand, also try to reduce how much you need to ask him by writing down as many of the details as you can when he's transferring knowledge. Hopefully this will help you remember things, but more importantly, you have the details written down somewhere which means you can consult that source of knowledge, rather than your colleague. His expectations of instant understanding are unrealistic, but there's little to be gained from direct confrontation, so if you explain what you need to know, and point out that it'll improve the quality of your work if he tells you this - plus you make an effort to write it down - then he can't have so many reasons to grumble. 

Periodically I go through and remove or add some languages to it, but I use the rule of them that I must feel at least comfortable to work with the language and that the "ramp up" time to get back to using it extensively would not be too much. Plus, when it comes to hunting for a job, most people are going to want to skim the languages you know in a terse format as opposed to going through all of your work experience. Depending upon who you are applying with they will want you to rate yourself on language usage and that is were you should be careful and very honest about how comfortable you are with some of the languages. You might be able to get away with listing a bunch on a CV if you aren't giving skill levels but once they ask for skill levels be honest. In practice, they are going to doubt that a new graduate is an expert with a language (I'd argue that point though, if the school uses Java as the lingua franca for classes then you might be able to get away with it) so be aware of that as well. 

In all honestly, motivation is very hard to measure and there is always a possibility that you will not ask the right question to be able to get a good answer. For example, using the ones that you provided: 

Recently I accepted an offer for a position; however, I have interviews that are scheduled for a couple days out. What is the best way for me to phrase an email and/or conversation explaining that I need to back out of the interview? 

In general, you are better off not trying to be funny during an interview (barring an interview as a comedian of course) because it is simply too easy to say something offensive accidentally or worse yet, leave a negative impression with someone who takes things seriously. If there is a lunch or dinner portion of the interview you might be able to get away with being a bit lighthearted but you need to remember you are still "on the clock" and there is a critical eye on you. 

With regards to what should actually appear, it depends upon the environment involved and the actual context. Generally it is only appropriate to the academic degrees if it is directly relevant to the context which is why generally they only see heavy usage in academic environments or in the medical profession. Likewise, professional licenses and the like would only be listed if they are relevant to the environment (i.e.a CPA should not include it if they are working for a software company as a developer) and should be added or dropped from correspondence as needed. Thus, the usual rule of thumb in the United States it that less is better and in most cases they are dropped completely from anything less than very formal correspondence. 

Again, this isn't really a good question because there are a lot of employees that will do this while at the office and on the companies clock when they have downtime or as part of "recharge" time at the office when they need to take a break away from what they are currently working on. The question that I generally is going to give you the most insight into how well motivated a candidate is something along the lines of the following: 

Personally I've always heard that it is better to keep your desk clean as "a cluttered desk is a sign of a cluttered mind" and reflects negatively upon the employee as well. Periodically you will find articles about the clean versus cluttered desk debate and honestly it does come down in part how you work, what you are working with, and the company culture. In practice the best workers tend to be the ones that know where to find things as soon as you ask for it so you are best off taking that to heart and keeping your desk as you like it, as long as you can find everything you need when you need it. 

As other have noted, it depends on where and it depends upon what the game is. If you are in the break room and everyone else is engaged in non-work activities then you should be fine as long as you aren't playing a game that is likely to be controversial (i.e. Grand Theft Auto) or contains objectionable activities. Depending upon the industry that you are in, puzzle games might actually reflect somewhat positively as it shows that you have problem solving skills which can be desirable skills in an employee. Consider two employees reading a book, one is reading a non-fiction book about something that is mildly indirectly related to work while the other is reading a random fiction book, which do you think is going to look more impressive to an employer? In the event that someone does object to playing the game, I would say you need to be careful about how you address the game playing, but depending upon the type of game, you could point out others playing sudoku or doing a crossword puzzle and ask how that is different? 

The others raise a lot of good points about how to handle the situation; however, at the end of the day, if the schedule of your group is disrupting others in the company then you must correct the problem and ensure that things run smoothly. With this in mind, you need to find out when other groups need reliable access to the developers and if there is any room for flexibility in that schedule. If other groups need access to developers when they are at the office on an unpredictable basis then a core segment of developers need to make sure that need is accommodated. If this means that some developers have to be at the office at fixed periods of time, then it is what it is. With regards to moving the developers to some sort of a fixed availability schedule, your best bet is to ensure that any "hard hours" are softened as much as possible. For example, if the "core hours" are from 11:00 to 15:00 then you can also make sure that the core hours on Friday are not present and Friday is a true flex time day. As Tuesday, Wednesday, and Thursday are traditionally considered the most productive days of the week you might be able to have the core hours apply to those days and allow Monday and Friday to be full flex days as well. In terms of ensure that the hours are adhered to, if the direction comes down from the top and is approved by upper management then ultimately the developers must adhere to it as part of their employment. You should do what you can to ensure that it is phased in and if some developers have flex-time written into their employment agreement it should be addressed (eg. by changing their compensation and benefits, grandfathering them in, etc.); however, at some point you are going to have to ensure that the policy needs to be adhered to which may also require official disciplining of employees. Likewise, if some choose to leave it may be worth trying to see if they are willing to stay with compensation and benefits changes; however you may also have to accept losing some of the developers. Ultimately, if your job requires that you enforce a cultural change to the group to meet the needs of the business then you options are going to be limited to an extent. You can and should do everything to soften the change and elicit any compromises with other groups as you can, but eventually you will need to enforce the change and accept any personnel change that may come with it.