There's nothing wrong with establishing what you want in a salary with a recruiter. Nobody wants to waste time if they can't meet your expectations. Seriously, they're doing you a favor. It doesn't matter what they pay you even if the job requires just staring at a wall if you can't pay your rent with it. Now, this notion that you're not a suitable candidate because you don't know what you are worth in a given market, is a little over the top. A good recruiter will educate you in this area and put you into a job you can handle. This is how they get paid. It is possible he doesn't think you're qualified for other reasons, but I doubt he knows a good candidate when he meets one. 

Be honest, but that doesn't mean you have to describe everything based on your perception. Try to think about the job from the perspective of someone who may like this environment. The candidates can then figure-out if they fit or not. I don't like IPA beers, but if I wanted someone to try it, I would say, "If you like a hoppy beer, try this one." If you tell me your company doesn't require source control and requirements change often and are not communicated effectively, then I'm definitely using source control. It will make this job easier to get things done faster. That's what someone with any level of experience will do. Although it does seem like your workplace is more chaotic than most, it does offer a programmer some freedom to put her own best practices in place along with some variety of work in a fast-paced environment. It's not for everyone. Many programmers over-engineer things. When a company just needs to get some semblance of a website up and running to satisfy potential investors (We just need to have a site like every other company.), programmers start thinking about performance and scalability over the next 5 years. In defense of programmers, they often don't hear the whole story and are just told to build a website and have it ready by the end of the week. 

Certainly someone above you would like to see these projects finished, but they have not felt the need to make sure people do their jobs. You need to let those in charge know what the status is on all projects. If they are aware that the people who haven't responded are too busy, there's nothing you can do about it. They'll get back with you when they can. After multiple prompts, I would like to think I would reply with some sort of short message explaining that I cannot address the issue at the moment. Hopefully, I would have an idea when I could, but that is not always possible. 

If they can make money off of this app, which is a long-shot, then you are extremely valuable to this company and my guess is they'll want to keep you. Good developers are hard to find. At this point, you would be in an advantageous situation to be compensated better than most recent graduates. My guess is, this app will make nothing and you better hope you get a strong recommendation for your experience. If your boss gave you money and asked you to go buy a lottery ticket for him, how much of the winnings would you expect to get if any? 

As a team or someone in charge has to decide if anyone really owns the code. I think everyone should take responsibility for the work they do and take pride in how they do it, but that doesn't mean no one else is allowed to touch the code. In some way, you both may be right. Copying and pasting code can introduce problems, but it can also be the quick solution when quick is preferable (not the most effective argument). Identifying code that has been copied and pasted without any modification from the original is difficult (code change could be made before being checked in.). Maybe this app has a history of things appearing to be the same but ending up changing anyway. I can't give an answer to all instances. What you can do, is have code reviews and refactoring code. Although your process is not as formal, it seems like you've reviewed the code in some way and suggested changing it, but that hasn't worked. Having to alter something later is more time-consuming, but so is continuing to argue with someone you have no authority over. Maybe someone in charge will consider not allowing people to post code to production that the rest of the team doesn't approve. 

Read their website. Because it is not very common and companies usually take pride in separating themselves from others with a flat management style, they probably mention this on their website. I realize not all job advertisements indicate the company when it goes through a recruiter, but you can always ask during the first interview. Edit: Do some digging during the interview process. They may proclaim they have a flat structure, but ask them to describe their decision making process. Find out if teams have any authority in major areas like hiring, project planning, etc. 

There could be a couple of communication problems here. The first one is, you need to frame the concerns in a less technical manner even though your manager claims to want detailed explanations. The more details you give, the more he's going to take the risk and just let you figure it out. Just say you have no one on your team that has ever managed such a server. When you're use to just having servers on a LAN, you're getting into a much bigger league when servers are accessible from the Internet. Also, the unpredictable traffic is a concern. That assumes your boss already knows how much traffic there will be or he's not very optimistic about the success of your game. Second, you're saying you need system admin expertise, but all your boss is hearing is that you want to hire a full-time person and he can't afford it. There should be plenty of consultants and service providers to monitor servers. They're most likely to be able to provide some sort of 24/7. I don't know when you launch, but the idea of hiring a qualified admin as a full-time employee between then and sounds like the thing a manager wants to avoid doing unless there is a budget he needs to burn through. 

You're a Scrum Master who doesn't like to change plans? Scrum is a system to handle change. You should start putting these practices into your daily work and perspective on your job. Unfortunately, you'll find that you've prepared for a meeting that doesn't happen, but don't focus on the time you wasted. Instead, reorganize your schedule (since you like to be organized) and start focusing and taking pride on your ability to handle change. The ability to handle change and embrace it, will have to become a learned skill for you. You'll need to make an effort to get over your natural desire for things to not change. You are there to help your boss be better at their job. Sometimes that means you have to enable their short-comings and stop focusing on thinking you can change their ways. Respect is a two-way street, but that doesn't mean some of the lanes aren't wider than others. 

Based on whatever your expectations are, you have to determine if they're getting things done or not. You catch more bears with honey. Work out a plan to either wrap up a project, do a brain dump, train a replacement or whatever. If they get that done, let them work from home or tell them you're more "open" to taking time off. Don't just assume everyone will abuse the situation. Always let people know what is expected. If they're not relying on you for a future reference, that's a bit on you or maybe you should have let them go sooner. 

You need to hide the fact that you know what others are making. Disclosing this during the review could be a very bad move and won't help you in negotiation. You have to show that you are pulling your own weight or possibly more. Then you should ask for more money than that the others make. Your boss may or may not counter-offer. Hopefully you will learn what his reasoning is in determining your salary. He may say the company doesn't have more money to pay you. If a counter-offer is still under their salary but he claims he can't pay you more than anyone else, now you know how to tell when he's lying. 

I'm not sure you can depending on how deep the interviewer probes. I can't imagine the questions are that specific (Maybe an example could be provided?). Interviewers are going to pick up on the awkwardness during the interview (if they don't it may not be that big of a deal) and for you to deny there is a problem if asked directly, may invalidate your entire reference. This person is technically competent and able to function in the workplace. You need to have a discussion with this person and stress that you are going to give an objective reference (based on your post it sounds like you are intent on being honest). It is up to him to continue to use you. This may provide this person with the opportunity to work on it or get some help. They say the first step is to admit there is a problem. 

What is your friend going to say if you boss wants to know if he told you about this previously? The boss may want to know if he needs to inform you or not. Is your friend going to lie? How hard is your friend going to work to help you with the transition? Will he take the time to do extra documentation on his projects? Is your friend going to give ample notice? Will he hold off for a more convenient time? 

Don't hide it from your boss. If you have to hide it, you're getting into insubordination. The text should relate to your current job, project or to something reasonable in the future. Otherwise, it's sort of goofing off or using company time to prepare yourself to work somewhere else. Again, you should be sharing this with a boss. You may be encouraged to try different things, but you would know this already. Make sure you're getting your work done. If I let an employee read on the job and they constantly tell me they didn't get something finished because they didn't have enough time, I would have you cut-back on reading. Assuming you are factoring this time into your estimates. 

Take the markers away if you must. This person needs to know that you will more likely to consider his recommendations once you feel comfortable he has all of the information. Assume he wants to come up with the "right" answer and not just an answer for the sake of hearing himself talk. Most programmers don't like to hear themselves talk as much as they like solving problems. They don't leave the Sudoku puzzle half completed. They think about coding in the shower. It's a driving force for getting things done. Your job is to make sure this behavior doesn't affect the others and that his is as productive as he can. Have a private meeting. Not everyone picks up on social cues as well as we hope. Treat him alike an adult and let him know the consequences will get worse if he doesn't comply. He may not be able to do it immediately. Put in a reasonable time frame. Give him a "Get out of jail free" card or two. The goal is to keep getting his valuable input (if it's not valuable, you have a bigger issue) in a more appropriate manner. 

I know in finance in the US there are many regulations. Employees go through background checks as part of the regulations. They are going to ask, so you should either confess or make sure your records were truly sealed. I worked with someone who thought a crime had been erased (he was not a minor), so he lied about it. Turns out, they did not erase the record, so he was fired for lying about it. Sometimes it's the cover-up and not the crime. 

I think this question should be along the lines of how to select a title and not just what the title should be. Focus on why you were hired. I worked as a programmer and changed a light bulb one day, but no one called me the electrician (Someone may have as a joke.). The other thing I would focus on would be what job do you want. If you want to be a programmer, then say you were the programmer. Some companies like people who have a specific skill set and others will like the fact that you're willing to do what is needed. You don't need to itemize everything you did. Eliminate things you were not that good at and don't want to do. You don't want to be hired for the wrong reasons or get stuck doing things you don't like. You can vary easily get tracked into a particular path in many companies with no way to get out.