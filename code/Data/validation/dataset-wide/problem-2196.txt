Put an entry on your CV saying 'Software Developer (secondment)' and list the projects you've delivered and your personal contribution to them. When you're interviewed by other employers, make it clear to them that the company didn't update your official title; if they ask why, tell them whatever your boss told you. They won't take up references until after you've got the job. 

Make your problem a problem you and your boss share. Meet at least twice a week. If it's important enough that it makes you look bad, it's going to make her look bad too. Manage expectations early and often. You should only give your boss pleasant surprises. If something is behind schedule or isn't going to work, tell people as early as you can - if the ship's heading towards the rocks, the captain wants to know while there's still time to steer around them, even if he's grumpy when you wake him up! Agree with your boss how much of your time should be spent managing the interns, and how much should be spent as a direct contributor. It could be that she wants you to spend 100% of your time coaching/training/looking over their shoulders/pair programming/cracking the whip. Your individual contributions will inevitably drop as you have less time to spend on them. Like any time you're worried about things in work, update your resume and start thinking about where you'd like to be in five years. You say your work is the easiest programming work you can get, so it sounds like you could be ready to move on. 

You work for a USA company, but are working in India. They are effectively using your office as an outsourcing resource for the work they don’t think is important enough to use they own employees on. Even if you work for a “native” company, unless that company does more then provide cheap staff to other companies you will get the same problem. It is well known in the “west” that most India developers cannot produce useful results unless there is a very well defined spec – maintenance tasks tend to have a well defined spec. We used to call code written by the India outsourcing company “yes man” code – as they would never question what they were asked to do, just produce software that was no use to anyone. (Therefore it was best for us, if we somehow stop the management getting them to do anything important.) So you need to work for a company that does not depend on work from outside of India, or work for one of the few western companies that developers complete products in India from concept right though to sale and support. 

Companies are mostly looking to see that you have written a lot of code (many weeks to produce one program, not a few hrs like most university course work.), ideally working in a team with other people on a real problem. Failing that contributing to open source projects is a 2nd best. Your internships should put you in good standing if you wrote a lot of code on them. To rise above male colleagues, you can stand out by showing basic social skills like looking people in the eye when talking to them, provided you are good as the technical side. I believe the real issue is that women tend to underrate their own skills, when men tend to overrate them and other people tent to rate you as you rate yourself. 

You should let them know as soon as possible. The only time it is acceptable to notify an employer of an absence so late is if you are ill or something else unexpected has happened that prevents you from coming in (e.g. death of a close family member.) 

It depends partly on the vulnerabilities you are trying to address. In the case of SQL if there's any risk of confidential data being accessed or databases being dropped it's obviously a fairly major concern. You also have to assess if your job is at risk if something does go wrong - how protected are you if you prove that the managers prevented you from fixing the offending security problem? 

If you've done things as part of a job in a relevant work environment, then yes I would say that counts as experience. It's also worth applying to jobs anyway if you're not sure you have enough experience or even if you know that you don't have as much experience as they're asking for. (I know several people who have done this and got the job.) I don't think most people would consider 2 years or less as being very experienced but this may partly depend on your line of work. You're probably not considered entry level anymore but you wouldn't be assumed to be an expert either. I assume that all the jobs you are talking about were in the same field. 

If you have a contract it may state their policy on request/notification of absence so check that first. If not I would suggest that you inform them both as HR may need to know for administrative reasons and your supervisor is the one who will be affected by you not being able to work that day. Perhaps email your supervisor and CC HR. 

There are a few differences. If someone is currently out of work, and does not have other job offer, the employer does not know if they truly want to take the job, or if they are just taking it due to having no other options, or to keep their unemployment benefit advisor happy. In the UK anyone on benefits has to prove they have put in enough job applications and list all interviews have had, often the benefit advisor will phone up an employer to check how some ones interview went. Therefore don’t expect them to tell you they don’t want to job, or know that they can’t do the job. Likewise it is required that someone takes the first job, even if they know they have another job starting in a few weeks time. On the other hand, no employer likes “letting someone go” within the probation period, but if a person is out of work, the employer can over then a few weeks extended trail, without feeling bad if things don’t work out. 

If someone has x years of experience doing XYZ and still is seeking another job doing XYZ, then it is reasonable given the above to assume that at least at some level they consider themself good at the job. This fails if they have been working elsewhere when everyone is bad at the job, so they are just a little less bad. For the same reason some companies will not make a job offer until they know that the candidate has offers from elsewhere, as they never will to take on someone that is being “forced” to work for them. 

"Prefer" usually means "we use this but it's a hard-to-find skill so we'll do on-the-job training if we need to". For example, I hire programmers to work with a bunch of technologies, Oracle included. I'll take someone with no oracle experience who does well in a technical interview over someone who does poorly in the interview but has more oracle experience - I myself was hired without any database experience, so I know it doesn't take long to learn to read an explain plan. A candidate who interviewed well and who had lots of relevant experience would be even better - but I'm a realist about the current job market for programmers :) On the other hand, if you're in an industry where there are many applicants for each job opening, employers might be more picky. 

Ask your boss if your company has had successful intern projects run in a similar way in the past; and if so ask whoever ran them for advice. I suspect the answer will be no, this hasn't successfully been done in the past; I think that because the secret no-one likes to talk about is proper internships barely produce any business value. People don't like to talk about it because it's pretty demotivational, but in my experience it's often the case. I went to a good university, was near the top of my class, and did internships at reputable companies. Looking back 10 years later, I realise they probably threw away at least 80 percent of my work. Parsing Verilog in Perl using five-level-deep nested data structures I blindly copied out of the data structures cookbook? I had no idea what I was doing! I now work at a different reputable company with a decent intership program that attracts students from good universities. In spite of this, I would estimate we discard about 80 percent of their output. We also have to put quite a lot of developer effort into teaching the interns the kind of hands-on stuff university courses don't always cover. And that's with a reasonably reputable company, drawing students from good universities, paying a decent salary, and doing reasonably thorough technical interviews. If your employer didn't do those things, I doubt you'll have a better time. So why do we do internships? So they join us as full time employees after they graduate, and to improve our on-campus name recognition for general graduate recruitment. How should you address your predicament? I would suggest three avenues: 

It is a very bad question to ask at an interview without telling the candidate ahead of time you are going to ask it. However it would be a great question to ask at an interview if you ask the candidate to bring with them a printout of some code that they like, saying you would expect them to discuss it at the interview. The candidate should be given at least a few days warning of this. A variation on this, is to ask a recent comp sci student to bring a printout of their 3rd year project code, then pick a few pages at random and ask them what the code does and why they wrote it in that way. You are looking to see if the candidate can reason about the code, and show that they considered other options, and can accept that there is more than one correct way to solve a problem. Follower up questions can be like. 

If you go to HR about the meetings, expect your boss to push back on everything you have ever done in company time that is questionable. Likewise if your boss does not like you, expect to get smaller pay increase. If you have a union, talking to them may help, but your boss will know who the trouble maker is. One option is to record all the meetings, along with an email to your boss explaining that you will now attend them, as he has make it clear it is expected for you to do so. Then after you have left for a new job, and got a good reference, speak to a employment lawyer about making a claim for the unpaid hours. But it will get out what you have done, and other employers will avoid you due to it. 

Probably only if the information is expressly mentioned. You can try to do some damage control anyway; if you think the information makes you look lazy, for example, you can bring up some examples of things you did that prove you aren't. I've generalised this answer a bit to make it more useful for others. You may find this article interesting. 

As Jan Doggen has said in the comments, fixing these issues in your own time is not a good approach. You need to explain to your bosses what is at stake if security issues are not resolved. Firstly you have to impress on them just how many people out there are dedicating their time to breaching security for profit. Often people ignore security issues because they think that it is unlikely that this will ever affect them. Secondly you have to provide scenarios for each case for what could happen if you don't fix it and someone does get in. Consider the affect on the customers, the time it will take to remove any problems and as a result of these combined the potential losses to the company. People tend to sit up and take notice more when you bring monetary values into the discussion. If after this you can still not make them really care about the issue then you can either give up or find people who do. Many voices are heard more than just one. 

Given that you definitely told them you were not taking the job, simply contact them, tell them you received a healthcare membership card in error and ask them if you need to return it or shred it or anything. Addition: Depending on where you are you may want to keep records of your communications so that you're covered if someone tries to get you into trouble for this. 

Your current company has proved that they cannot be trusted; otherwise they would have paid you what you were worth without you having to show then a job offer. Likewise they will never totally trust you as you tried to get a new job. But if the take the job with the bank and it goes wrong, then don’t expect a helpful reference from your current job. Whatever happen expect to have to work a lot harder or smarter, as when a company pays more, they expect more. 

Reporting in sick must be easy and quick. I have worked for companies that require you to PHONE in and SPEAK to your manager, that can take 30 minutes on the phone if someone has to go to find the manager. It also has to be done at a time when the manger is at work – not good if someone wakes up sick at 6am and knows that are not fit to go into work that day. Therefore allow email and/or txt to be used. Never say anything negative to someone that reports in sick, they are helping you by doing so. Don’t question if the sickness is real etc. Leave all the questioning until the person is better, or let HR contact them after a few days. (Remember some people don't have a phone line or mobile coverage at home, there are even people without internet access at home.) 

You can’t as per the other answers. However you are more likely to get them to agree to tell you the userIds of some of their programmers that have accounts on StackOverflow and Programmer. Looking at the problems their staff have will give you some idea what their code is like.