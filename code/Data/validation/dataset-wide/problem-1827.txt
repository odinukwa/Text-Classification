The nginx documentation clearly says that if you want to change the response code, you use . For example: 

We can see that your instance is running very low on memory, and is actually swapping. This is disk I/O for which you'll get billed, and also causes your site to run slower. Free up some memory by stopping unnecessary processes and tuning your web server to run fewer workers (e.g. Apache or php-fpm). 

You installed the wrong EPEL RPM. You are running CentOS 6, but you installed the epel-release RPM for EPEL 5. Remove it and install the RPM for EPEL 6. 

If the kernel update didn't fix the problem, then you may find a drive that failed the self-test. If you don't find a drive that failed the self-test, check the drive attributes anyway. 

My go-to for PHP on CentOS is the remi repository. Remi is a Red Hat employee who also packages the official Red Hat PHP packages, in addition to his own repos where he maintains compatible packages which are more current versions. Simply installing and enabling the remi repository on CentOS 6 and then yum updating is sufficient to upgrade to PHP 5.4. (The repos ship disabled by default and you need to explicitly enable them.) You can also enable PHP 5.5 or 5.6, and probably should do so since 5.4 will be EOL soon, and almost all packages that work on 5.4 will also work on 5.5 or later. For compatibility, I would just go ahead and upgrade Postfixadmin and PHP at the same time. You'll need a short maintenance period (five minutes or less?) or a slightly longer period if you need to do database schema changes and have a large database (you likely don't). The Postfixadmin web site says that loading upgrade.php after the upgrade is sufficient. Remember your backups. 

cups-pdf comes with an SELinux policy which allows cups to print to user home directories. You'll find it in . It should be only a minor modification to let it write to Samba shares: 

Services such as Amazon EC2's Auto Scaling can accomplish this for you. Once you have your web app set up on EC2, it's pretty easy to get set up; Amazon's docs cover it in depth. Other "cloud" services usually will have similar features. 

expects an IP address, optionally followed by a CIDR or old-style netmask. So you need to change it to one of: 

Hyper-V Manager is shipped with Windows rather than with RSAT because Windows 8/8.1 also ships with a workstation-customized version of the hypervisor, known as Client Hyper-V, which Hyper-V Manager also manages. 

The third thing is that it uses a third party repo called atomic, which provides packages that conflict with packages in normal repos such as EPEL - which already provides redis and OpenVAS! It's not clear why atomic have done this, nor why this tutorial uses atomic to begin with. Using repositories with conflicting packages is potentially dangerous. If you continue with using atomic packages, you will need to be absolutely certain that this (virtual) machine is never used for anything else for any reason whatsoever. Finally, once you get it installed, the web interface isn't actually reachable because the indicated port isn't open in the firewall. You also have to do this yourself. 

However, this doesn't complete the picture. As you can see, when I set a solid background color, the taskbar changed but my window borders didn't change. I suspect this is a bug. To actually override the color of the window decorations (and taskbar) do this: Open Control Panel. Under Appearance and Personalization, choose Change the theme. 

In addition to the EC2 security group, your port 80 also needs to be opened in the CentOS firewall. You can use to do this from the root shell by selecting its Customize option. 

Yes, you can do this, and some people do. For quite a while there was a running joke where, when someone asked for illegal software, they would be sent to warez.example.com - which had been set up in DNS to point to 127.0.0.1. Hilarity ensues when the person comes back and says something like he had all that software already. 

You can build packages for EL5 on an EL6 box, but the problem is that EL6 has a newer version of RPM that writes files incompatible with the version of RPM shipped with EL5. You can work around this with some arguments to when building your source packages, preferably in a wrapper script. Something like this will cause to use the older format: 

Generally, you can't share a UNIX domain socket between two different virtual machines. In the particular case of OpenVZ, you can't share a UNIX domain socket between VEs without special kernel patches to break the security. From searching the Internet I see that such patches were written several years ago, but there's no indication of whether they have been kept up to date. If you really want to do this, you should seek help in an OpenVZ support channel. This is not a recommended configuration. 

If you specify both interfaces and source IP addresses for a zone, then that zone matches for traffic from either the interface or the source IP addresses. If you want the zone to match for only source IP addresses, remove the interface from it. 

Your https server block should not redirect anything to http, as you don't need that in this situation. Your http server block should redirect everything, except the URL in question: 

The parameter was added in nginx 1.1.11, so your version of nginx is too old to use it. Since you are on CentOS, you should run the latest stable nginx provided by nginx.org's own CentOS repository. Updating to the latest stable nginx via this method will resolve the problem. 

You've posted an SELinux denial, wherein is being denied access to read . From looking at the log entry I can see that it has an invalid security context (it should be , not ; did you manually edit this file?). I recommend you fix the security context on (and the rest of the system just to be safe). To fix invalid security contexts, back into the filesystem and then run: 

You need to have your directive under , and not under . This is one of the most common nginx configuration mistakes. 

Looks like something ignored or stripped out from the response. That clearly looks like a chunked response, but delivered to the browser unchunked. Look for something between you and the web server that might be altering your connections in flight, such as another proxy server, firewall, state censorship regime, etc. 

Log in with your normal user account (the one for yourself, that you didn't put in a chroot) and to root, then you can fix the problem. If you somehow managed to chroot your own user account, or never created one in the first place (don't ever repeat this mistake) then you will have to get on the console, reboot to single user mode and recover it from the console. 

You're using a catch-all block to handle all of your subdomains. So, if you name your XML sitemap files using the actual subdomain name in the filename, then this gets very easy. For instance, you may create a file . Then you can load that file with a single with an : 

This leaves you with your original option, that recommended by the vendor: Hack the script, and (optionally) report the bug to Red Hat. 

There are many ways to do this, but just not loading PHP files in a particular folder is not enough. Someone could upload a file with a .jpg extension that actually contains PHP code and then execute it. So we'll do two things: 

Make sure your Red Hat subscription for this machine is active. Not having an active subscription is usually the cause of this. (If it is active, call Red Hat.) And if you're compiling your own version of PHP, you don't need to do any of this. 

This particular daemon comes from the package shipped with EL6. This is Apache Qpid, an implementation of Advanced Message Queuing Protocol. Interestingly, none of my CentOS installations had this particular package installed, though I did my installations using CentOS install CD. Are you sure you did an actual "minimal" installation, or did you install a virtual server based on someone's "minimal" (so they claim) template? Perhaps someone's pre-made EC2 AMI? The other item listening on localhost port 25 is postfix. In its default installation, it only listens for mail orginating from the system, and cannot receive mail from the network. It's generally safe to leave it in that configuration, though you may want to set it up to forward all server-generated mail to some other email address, so that you actually receive it somewhere convenient. 

The reason for setting these routes, of course, is so that (almost) all of your traffic goes through the VPN link. It is done this way so as not to override the default route, which has to be left alone in order to carry the VPN traffic itself. 

Don't count on it. While CentOS is a clone of RHEL, which is forked from Fedora every few years, Fedora moves relatively quickly and downstream packages should not be considered compatible with upstream, especially after several releases. This package will probably fail to install, and even if it installs, it will probably fail to run, and even if it runs, it will probably exhibit strange behavior which can't be traced to any obvious cause. Instead, install FreeSWITCH from source, or rebuild its source RPM on Fedora. (Of course, if you actually try that, you'll find that it fails to build, which should tell you something... I know because I actually tried this and was forced to give up.) Now after you've done all this experimentation, just go back and install FreeSWITCH on CentOS 7. You'll be happier and more stable. 

Your "VPS" is actually an OpenVZ Linux container, rather than a fully virtual machine. Libvirtd cannot start inside OpenVZ containers. You'll need to obtain a VPS which is based on nestable virtualization, such as KVM, Hyper-V, Xen, VMware, etc., and on which the provider has enabled nested virtualization. 

With DHCPv6 in particular, the client should attempt to renew the lease before the preferred lifetime ends, but if it is not able to do so, the address will be deprecated (and the client can continue using it if it doesn't have a preferred address) until the valid lifetime ends. Thus, clients with existing addresses can continue to communicate during brief DHCPv6 outages, for instance. They can also finish up long-running connections that may last longer than the preferred lifetime. 

I went over the networking configuration with a fine tooth comb, and discovered to my chagrin that the default gateway had a typo in it! 

You originally installed PHP from the remi repository, but you forgot to enable the repository when adding this package. To fix the problem, re-enable the repository, either temporarily: or permanently by editing . 

This is happening because Apache doesn't have permission to search (descend, the permission) one of the parent directories. To resolve the problem, first check to see which parent directory is missing the proper permissions, e.g. with . Find the directory that is missing the permissions for all users, and give the correct permissions with . 

just manages the physical link layer. It has nothing to do with addresses. To manage your addresses, use . For instance: 

In either case you'll temporarily need to connect a keyboard and monitor to enter the connection information. And...that's not a server motherboard. 

Your system is having some sort of problem with your Red Hat subscription. Make sure you have an active entitlement assigned to the machine, and if you do, contact Red Hat to resolve the problem. 

In Puppet Enterprise the puppetmaster should be listening on a dual stack IPv6/IPv4 socket by default. Though PE has some other IPv6-related brokenness (my site) you'll have to work around. In open source Puppet, such as you may have obtained via EPEL, you need to set the explicitly in the section of : 

will undo the transaction listed. If you don't have a working on your system, then you've damaged it beyond reasonable repair and should restore from backup. 

Since you say that worked for you, I suspect something non-obvious was broken with your installation. At this point you may never find out what it was. 

IPv6 really isn't optional anymore. It hasn't been for a while. The best thing to do, of course, is to not disable IPv6 on the system. If you can't do that for some reason, then check your unbound.conf for and directives that specify IPv6 addresses and remove them. Note that the default for is to listen on both 127.0.0.1 and ::1, so you'll have to specify it explicitly if you don't want ::1. 

The "intelligence" of how to route packets must reside in the routers, not the end boxes. So your default gateway must be one directly accessible on the same subnet; that gateway must then figure out what to do with the packets to get them wherever they should go. 

This happens because yum could not remove the old copy of the named file, . This may be because the permissions are set incorrectly, or an immutable attribute is set. Check the permissions and attributes for the named file/directory, and of the containing directory, and fix any problems. Then try the update again. 

t1lib was removed from Ubuntu 14.10 because it was removed from Debian, which is upstream of Ubuntu. And it was removed from Debian because it appears to have been abandoned by its upstream maintainers, and has years worth of security issues. It is probably not coming back. The t1lib web site hasn't been updated in so long that its download links are dead, and have been dead for almost a decade. You should plan now to move to alternative libraries, if you even need Type 1 support at all (which is unlikely). Modern systems generally use freetype2. 

The validity period of the lease is however long you set it up to be on the DHCP server. Clients typically renew the lease once 50% of that time has elapsed, though actual DHCP client implementations may vary. 

This is generally the first attribute I look at on a spinning rust disk. Anything other than a zero raw value is a potential problem, as it means parts of the disk surface have been marked as bad internally, and reserved space is now filling in for the bad sectors. With large numbers of reallocated sectors you'll see performance problems, and eventually, lost data. It will have to have a lot more bad sectors before SMART actually shows it as failing, but you can be sure that it is failing now, and should be replaced.