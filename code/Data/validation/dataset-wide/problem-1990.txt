If they have a problem with such a meaningless and insignificant thing such as saying "Sounds great" versus something more formal then I would rather not work there then to have to worry about meaningless nothings and sell my soul to a mindless, drone like company. Even places like Google, Apple, Microsoft, Sony, Fords, GM, GE, etc. don't care about those things. It is part of what gives people personality and voice...never let a company silence that or change it, it is not worth it. If you feel that you are not a good fit for the culture, maybe you should take that as a sign. Otherwise, it could just be the personality of the individual. 

Communication is key in areas like this. This is why "must have strong communication skills" is almost always in every job description; This is because often there are others who simply cannot communicate very well. I think the problem is two fold really. 

Obviously the above is just a rough template and you should express yourself in your own professional sense, but do not go overboard (i.e. keep it to a paragraph and summation). This presents your side of the case in a professional manner while accomplishing 4 key principles: 

I think we've all been in your situation before. First rest assured that being a new developer is a difficult position and that by the sound of their code base, they had made it harder for you than it needed to be. On the positive side, you will be seen as a competent developer faster than otherwise if you stick with this place for a few years simply due to their incompetence. You need to do a few things. First, learn git in your own time outside of work. You can learn how it actually works on your home machine and go beyond the basics of the shell commands. Read about and learn the underlying mechanics, than try it out locally. It is absolutely important to get this right because some developers will pick on it before they pick on your code. If you can get this right, you're 50% of the way there. Now when it comes to the code I suggest when you get home you write down in a notebook how the part of the system you worked with that day works, pros and cons of the approach and how you would of done it. Soon you will map the whole system and have a good set of notes to guide yourself around. This is more useful than just working with it because by writing down thoughts you give yourself the opportunity for insight. If there is the option to refactor as you go, perhaps check with your lead first and then do light refactoring in separate commits to your bug fixes/features. Only do this if there is decent test coverage and to begin with just stick to things like style guides, factoring out multiple responsiblity methods into single responsibilities etc. Always get refactoring reviewed by a senior developer and don't do it on work someone else is working on otherwise the merge may aggravate them. Also just try to ask questions less often if people are getting tired. Maybe try writing tests if you're not sure on how something behaves or just having a quick experiment. There isn't a world of difference you can make on this front, if they're not great people then being a junior is always going to be painful even if you're a good ju. The best piece of advice in this thread was in another post, be friendly and convince someone to want to mentor you. 

Makes you look loyal and that you stayed with a company (despite being purchased) for X number of years. Shows, potentially, that you grew within a company. Increases the length of jobs to prevent the appearance of job hopping (usually it's only worrying when the time at companies is months OR less than 3 years). Increases readability of a resume (since most people spend less than 30 seconds on one) 

In your case, there is nothing preventing your manager from viewing your file (even if it just your termination letter) for any reason. He might need to do so if inquiries ever arose where: 

So while you perhaps did not see any Asians, Africans, Indians, Muslims, Americans, Italians, Latinos, etc. does not necessarily mean the company is not diverse, but perhaps the location of the office is just prominent for those demographics. Statistically, women are less interested in software development than men, but that does not mean the company is sexist it just did not have many or any female candidates for positions offered. Considering all of these points, I do not think the company is any less diverse than any other company. 

If you just want to write some code, check test coverage and improve it. It's rarely 100%. Javascript tests can be a good target as devs tend to write them less often. 

No, don't tell them. It's just stupid and could backfire. You will have the market power to make wage demands when the time comes, until then just gain experience. You should think of the situation as getting the experience now and then getting the 'real' engineer pay in 3 years time at a competitor. Only discuss pay when you're in a position to enforce your demands. Until then you need to keep your powder dry. What you're considering is a) naive b) counterproductive and c) indicates a serious lack of people skills (which is as much a barometer of prospective payscale as hard skills). Option 2. is fine, you don't have to be explicit "pay me this or I will leave" just "I've done some research and it looks like my position is worth X because of A,B,C". Save this until the time has come to get the rise. Until then you are weak and shouldn't be making manovures like this. From a managers perspective, it just looks like trouble. What happens if you get fed up of waiting 3 years and quit after 18 months? Maybe I shouldn't bother investing in you, at all. 

I can see your concern and confusion with this employer and this opportunity. Keeping in mind that if you are interested, then you should get clarity on points about the position such as a job description, salary, benefits, etc. Treat like any other job, find out as much as you can before committing to it. Analysis & Thoughts For starters you mention some preliminary facts that we should address: 

Currently, I work for a company that gave me a written letter of offer (a few months ago) that stated expressly: 

I am not an outgoing individual nor do I complain publicly or even privately when it concerns my job (probably because of the money). I am EXTREMELY quite and I am ALWAYS working. I do not like disappointing my manager(s) nor do I like failure myself. Recently though, I feel like I am crumbling away due to sheer number of pressures applied to me. For example, today I was asked for reports that normally require 2 days to construct and complete. I had a mini panic attack because I would have to drop everything (getting behind) and scramble to prepare these reports, yet I did not speak up or say anything. I just accepted the task willingly knowing it will cost me in other areas. Then, after working to the bone, I presented the reports to manager and he snapped at me for some title/heading formatting. I felt like an absolute failure and that it was all my fault, I took responsibility for everything and stated I was sorry and that it will not happen again. How do you approach such a situation? Was I at fault? How would I have fixed it/should've respond? How do you ask your manager to change deadlines? How do you deal with a manager who seems to be displeased with you and has not given any training or feedback? How do you talk to your manager? What are the strategies to keep everyone happy? Do you even speak up or just suck-it-up and move on? I've never acquired a good relationship with any of my managers (they have all either quit or been fired). NOTE, I have only been at my current position for a month. Thanks,