Take a look at the initialization parameter both here and here. These links are more to do with when you upgrade a database rather than import into a higher version but it should help if, perhaps, you can import your data into a cloned 9i database (so as not to mess up your original database) then upgrade that with the compatibility setting on to 9i. 

trunc here will simply remove everything ater the fourth decimal digi (I'm not taking into consideration what Nick said regarding 2 and 2.00.) 

What it does is mark up your text (surround the found items with ) and outputs that new text to a which is then searched for the markup. All text that is found in your query will be marked up but my PL/SQL will only display the first result; it can be adapted to find them all and display only the unique ones. This is a simple example and perhaps can become too complicated for your original query but it's here to point the way. 

If I understand the question correctly you want to find numbers that have, for example, more than 4 digits of precision after the decimal? E.g., you want 3.0671, 3.06713, etc. but not 3.067 or 3.06 or 3. If that is the case then you could do something like: 

In Oracle Grid Control you can make a global view of your entire enterprise. This is an advantage above DB Control. It is slightly easier to authorize employees for certain targets in Grid Control. If your mail gateway changes, you have the advantage of only one location to change. When making clones, Grid Control has the advantage of not having repository parts in the target databases. On the other hand, DB Control is closer to the database and most of the times better support for new features. Oracle Grid Control Requires quite some resources to run and in many cases at least one dedicated dba to keep it running. You have no single point of failure for management. Oracle DB Control is very easy to setup. With a little smart thinking you can build a central page with links to all DB Consoles that you want, complete with links to the documentation. Grid Control easily gets mixed up when making clones, even without a local repository in the target. I think it is a personal choice. At the moment, after having wrestled with many GC installations, I think having an own repository for historic data and links to Oracle DB Consoles is not a bad idea. 

What are my options if I need to move a database from SQL Server 2012(32bit) to SQL Server 2005(64bit)? I know I cannot: 

My SQL Server 2012 Standard edition, 64bit has a total virtual address space of 4GB. Why is that? it is a 64bit installation: print @@VERSION : 

SYSTEM: I have a system with about 150 databases, each of about 2gb in size. 130 of those are mostly inactive but need to be online. Those are set to simple recovery, active dbs are set to full. I have a daily full backup and hourly tran log backups. I am using sql server maintenance plan backup and I am backing up all user databases PROBLEM This (the full backup) generates a large backup set that, for various reasons I am finding it hard to deal with. QUESTIONS I am looking for a back strategy that would not result in unnecessary backup size. I am not using differential backup (which I think would reduce the size of the backup of the inactive DBs) because I am afraid of having to deal with large set of files in case of having to rebuild from backup. I know I could maintain different backups maintenance plans, and update it as a db goes inactive, and as I add new active databases, however, this is manual process and we add a few databases a month. I've done this before and mistakes were made... Is there a way to take advantage of the fact that inactives are simple recovery to threat them differently? How about the backup compression? I have never used it, not sure what this will do to my CPU usage (currently the DB server is typically <15% CPU) Thank you! PS, i am not a DBA, but a developer. 

will appear if you are using a lot of in your with a small buffer amount. If you are just debugging then you should set this to a large amount ( is traditional though from 10g onwards it can be unlimted: ) but try to remove them when going to production. 

...and then try a drop. Also, check both and for entries. EDIT: I see you've updated to say you are logged in as the user. For some reason, flashback/recyclebin does NOT work for . I can't find a good reason why but it just doesn't. Create a new user and try creating and dropping a table while logged in as them. I'm sure you'll find that the recyclebin works fine then. 

Therefore it is probably one of those types. If you can select from it then it rules out the first five leaving it to be either a table, view, private synonym or materialized view. When you searched in etc. you did use upper case? For example, 

You might want to look into the or functions of the package. An example of how can be used for your query (this assumes your index is called and you have an column): 

At the moment, for the first row, the would return which doesn't exist. By replacing the time portion with the same set of characters () then we can ignore that and it becomes: 

In you scenario, as long as you have your control file backups, you won't need to set the dbid. This changes when you also loose the control file backups. Make sure that you have them since in emergency situations they are worth gold. Having a catalog database does not make life easier. 

Can you ignore the pre entered value for the PK, so effectively only using the sequence? The way it works now is almost as bad as querying the max(pk)+1 from the table. 

If you happen to be using the same platform (cpu/OS) it is fairly simple to get this up and running, if you know from which version of Oracle this backup is AND the backup is taken in the correct way. In your case, since all you have is ctl and dbf files, it should have been a COLD backup. If all of the above is not in place: forget it. If all of the above is in place: 

your db_block_size is 8k and your db_16k_cache_size = 0. Normally we don't build databases with mulitple block sizes because the optimizer does not take the different block sizes into account. If you still want to do this, start with something like