I had this interview for a Software Development position. I'm from Kosovo and the job opening was in Germany. They were also offering visa sponsorship. I'm a Web Developer and the position was open for all levels. Rating myself, I'm way off the "Junior" title, but also need a few more years of work experience to go "Senior". So the Skype interview was nice and the interviewer was really friendly. However, he asked me 2-3 questions and he concluded I'm not a fit for his team. First question: Explain the IoC container. Second question: Explain the repository design pattern. After I struggled answering the questions, especially the first one because I wasn't aware of the term, but I knew about the design itself without putting a term to it, the interviewer said I'm not a fit for his team. I also showed him a 5% completed API that I'm working on and he said that my code is really good and clean, but I have too many controllers... All while being unaware what the actual project is and why it needs those controllers (they were just scaffolds anyway, I'm still far from touching those parts). He told me that HIS team needs a Senior level developer, but he'd pass my CV to the other teams which need other levels - I haven't heard from them and its been over a week. Anyway, how does not knowing these terms make you a bad programmer? I believe that these interviews should be more technical and require the interviewee to write actual code that might be suitable for the company. I think asking "What's an IoC container" might confuse a lot of people and it's an unfair way to check if the interviewee is qualified. This is the first time I've had a "professional" interview with a big company and to be frank, I felt a little unprepared and intimidated. What are some tips to handle these interviews like a pro? Do I really need to know programming definitions? 

I know maturity level is more important than age, but I also know any thing taken to an extreme is ridiculous. I have been in touch with an international marketing firm and had been invited in for a second interview. The person interviewing me looked awfully young and was dressed in a very stereotypical suit. At one point he asked me my age (which, by the way, I heard is illegal?) and I answered. I asked him the question back and he said 19. He seemed like a typical 19 year old, for example he talked about how winter is his favorite season as he can go snowboarding then. Now, I'm not saying there's anything wrong about being 19 or snowboarding, but I'm not sure I would be comfortable having someone this young in a management position. He had some young tendencies that most people his age have. It has been my experience that employers like to hear would google search something to find how to do it, but when I told him this he didn't like it and I remember back in grade school it was consider cheating to "google search the answer" (though obviously in the work place that's what you do). I don't know how to take it that the second round interview was conducted by a 19 year old kid. Also there was some other questionable circumstances, like how we ended up going to Starbucks for the interview as apparently the office was in the middle of moving. 

I just joined a new company which is a new start up, STILL applying for funds etc. The product is very promising and likely to be a success once fully released to the public (we're currently in a closed beta). It has a very nice user interface and an easy experience, so design wise it's top notch. However, the application itself is written quite poorly. I'm a Senior Web Developer in this company and I was a little shocked with the lack of structure of the code. The manager (Main Senior? Can't think of an appropriate name) is very logical and always has the right solutions in mind and can also code them out nicely, but they are not very efficient performance wise and don't follow any particular concept (eg. DRY). We use a kind of a MVC model, but it's not very efficient and does not save us from the headaches it should fix. Code repetition is a major problem and so is the amount of jQuery, Ajax calls, unnecessary timeouts etc. The database abstraction layer seems very inefficient too and it doesn't include any sort of ORM. So to sum this up, the code is a mess, but the product works (can't judge the security yet). I would be able to take the whole project and code it from scratch with some rules in mind. I would make it easy to extend while preserving the same functionality, though it would take a while since a lot was done. I would incorporate things that would make development for the future team very seamless, such as: 

How does one write a good resignation letter? Should the reason for quitting be included? I had recently started a job. The person responsible for training was on vacation so the main manager trained us for a couple hours, then handed us off to a random person (in the sense it wasn’t her job to train) for a bit more. I’ve been told by others we weren’t properly trained and I certainly feel I lack training. Also I did not know before starting that this job was essentially on call and would receive little notice of the time and location to work at. I was never trained how to read the schedule (I know it sounds strange, but they have a very complicated way of communicating work times and locations). In my resignation letter I don’t want it to sound that I’m blaming the manager for not being trained. Should I give any reason and if so what should it be? Obviously I’m not going to say “I quit because you didn’t train me” but should I include “sorry I missed a shift, I was never trained how to use the schedule”? EDIT: this is a government subsidiary and I don't want to burn any bridges in case I want to work for the government again in the future. 

Anyway, I don't know how to approach the manager about this. It would take additional resources to get this started and done. Also time. But I know that as soon as we go online and get huge amounts of visits, we'll end up exploding and patching things in that mess, until we end up rewriting the whole thing or the product failing altogether. What should I do? 

Alright, so I'm in a team of web developers (RoR devs), consisting of 4 other people. My manager's programming abilities are ridiculously low comparing to the other team members. So that's causing a lot of delays in projects, as he's always the one starting them and then handing his work so we can continue extending it. Then usually we end up rewriting everything from scratch, because he's really that bad. Also before a project starts, we have brief discussions on how stuff should be. On the last project WE had to organize a meeting so we can give a structure to the project. This is definitely poor management and this costs the company very much. So, what would be the best way to confront the manager about his poor skills and maybe even ask him to step down from his role? 

I had a job where I worked a couple weeks for a temp agency. The hours were long and they owe me a large amount of money, which I need. The other day I got an email saying they had forgotten to get me to sign the contract for employment. The job is already finished, and essentially they are withholding pay until I sign and send in the contract. Now, the contract is fairly standard and nothing really bad about it. Though I feel very uncomfortable and this was unprofessional of them. The contract did contain information that would have allowed me to do my job better if I had received it before work (for example knowing the hierarchy of the team). I already have in writing my work schedule and pay rate. This contract is mostly legally jargon e.g. “we will not claim any responsibility or liability for any accident while attending training sessions or during any event you work or for damaged or lost personal belongings.” One part of the contract said I must show up 15 minutes before each shift and can’t be late. I didn’t know to do this so I didn’t. Is it even legal to include this as it’s unpaid work? Anyway, at this point what’s my best course of action? I would like to just sign it and get my pay but was thinking I could include a message in the email that I was unaware of this prior to work. According to the law, the date the contract is signed is when it becomes enforceable, so I’m not sure if signing it now could make a difference? No incidences occurred during this work and I don’t think anyone plans on suing anyone. EDIT: I don't think hiring a lawyer is a practical solution as I would end up loosing money and making none.