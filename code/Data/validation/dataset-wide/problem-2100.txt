If they only care about you showing up, forget it. Show up at the usual time and patiently wait while the crappy laptop wastes 15 minutes of company time. Maybe bring a book to read while you do it or make some coffee in the meanwhile. If management is very strict, work on something else (check your emails on your phone, look at your calendar/agenda) so they can't badger you over it. The company has their own accountants and productivity experts, if they care they will see the inefficiency reflected in their data and independently solve the problem. Maybe they will even ask you if you have suggestions to improve productivity. Let's say you work 40 hours a week and get $30/hour. Let's also pretend that you spend 20 minutes every day, waiting for the reboots and shut downs, so that you could be spending 15 minutes less if you had a modern computer. That means 3% of your 8 hour day is wasted: The company is paying you $240 for the day and getting 97 units of work, whereas they could be getting 100 units instead if they gave you better equipment. Effectively, they're wasting $7. Is that your problem? Hell no. Your job is to show up at the time the contract says, take the tools the contract says they'll give you, do the work the contract says you will and happily take their money. Budget consulting is extra. You could indeed show up early, and make sure they get 100 units of work like you think they expect. However, if you do that, you will also be working 8.25 hours a day, not 8. This means that you are now spending 41.25 hours at work and getting $29 for each of them (maybe there's another company that would have hired you for $29.5?). Technically, it's not breach of contract since no one asked you to do it, but doing it essentially amounts to giving your company a donation in the form of unpaid volunteer labor. Presumably, your contract does not say anything about mandatory unpaid volunteer work (I don't even think it would be legal) so that you are under no obligation to do it. If you know the manager or owner personally, then yes, it's nice to do it, but so would handing him a $100 bill. On the other hand, if you do get paid for work and not time, it's different: Do whatever it takes to complete your part of the project before the deadline (although this isn't matter of ethics, but practicality: You'll get fired if you don't). If you feel you are forced to spend too much time because of this slow booting, then take it up with management. Even if they are not cooperative, consider just buying your own laptop, and then mentally discounting your salary accordingly when you get competing offers from rival companies. Lastly, a tangent: This company is doing software development, they hire you at a rate high enough that even a few minutes of your time can pay for a laptop, and they hand you a potato that takes 15 minutes (!!!) to boot? Sounds like management needs to get a clue. 

I've read a few job descriptions and replies from interested parties about their places of work, that they have a "regular" workday with the hours of 8 to 5. I am normally used to working 9 to 5 and that is considered full-time as well to many of my colleagues and management. In the US, the Fair Labor Standards Act does not set a legal number of hours that divides full-time/part-time work and it is left to the employer. So in what cases would companies see 8-5 as being more acceptable than 9-5 to be "regular" (in their words) full-time? These jobs in question are both for filling the same role, (software engineer) and are in the same geographic area. They usually haven't indicated if it is to keep up with a regional office from a different time zone. Is the number of hours required to work as full-time largely an indicator of the company's local culture? 

One of the more common expectations from working in a smaller company is being able to do more, and manage a wider variety of skills. They usually cannot afford the level of specialization that larger companies have. The advantage of smaller companies is that you can be a bigger fish in the pond, giving you potentially more control and direction of working on projects. It can be quite easy to have a management position there even if you haven't had that experience in previous jobs. As a personal example, I was offered a Project Manager role only 3 months in, on my first job after finishing college. (because I was still wet behind the ears, I only declined it to focus on building my technical skills) If you are interested in leadership positions, working at these companies would be a good way to get the experience. That has its downside, in that you might reach a plateau of experience or seniority too soon. Smaller companies tend to involve more horizontal movement than vertical movement in job titles. Overall, though, working in smaller companies will make you a more well-rounded professional. 

tl;dr: Ask yourself, is there an amount of money that would make you feel comfortable doing this? If yes, explain your position to them and say, "sorry guys, the initial agreement was for a normal project - if you want this super secret stuff we can do that too but you're paying extra". Either way, be prepared to walk away. Money is nice but this is a lot more risky than your usual job. Ghost writing costs more than normal writing, so if you agree to being paid the same, you're being underpaid. 

Sounds like you would only take this other job if it has all (most) of the pros of your current one, and none (few) of the cons. Fair enough. You could put it exactly like that, then explain why you mostly really like your job, and then give the few things that you don't like. I think this won't go over very well, the interviewer might get confused and assume you basically like your job and don't want to leave. Instead don't talk too much about your current job and focus on expectations. There are nice things about your current job that you like and don't want to give up. Okay, make a list of these. Say, 5 that are most important to you, or whatever number you think. There are things that are not so nice, like the commute, that you want to escape. Okay, make a list of these also. Combine both lists. That's your list of things to ask the interviewer about. When asking, disregard whether your current job satisfies each point - simply ask it as a desired feature of your potential new job offer. Then your situation is like any normal job-seeker with a list of things they want from their job, and a list of skills and abilities they can contribute in return. Sounding sufficiently interested shouldn't be a big problem. After the interview is over you can decide based on what they say. If you like their answer to all of them, the job is clearly better than your old one. If the answer to all are bad, it's clearly worse. If only some are good, then fill out your checklist for the current job also, compare, see which one sounds better to you. 

Have routine for starting work - something like always starting at some defined time. I used to walk to the local shop and buy a newspaper. I made sure that I went out at lunchtimes and breaks and talked to people in the neighbourhood. I occasionally made a point of visiting local pubs/restaurants at the time other businesses kicked out so that I would meet people working locally. This sort of simulated "grabbing a few after work with the colleagues". 

Number number numbers + analysis + numbers! What I'm basically saying is that you need to present a business case to whoever makes the decision as why you need one. The easiest case is usually to determine how much more your work costs the company using the existing hardware and how much they'd save if you got different hardware. The costs are not just financial (though they will come down to this at the end), they could be things like impact to other people in terms of delays in getting things to them. Log each time something has gone wrong or taken too long. Did you have to log a support call. How much time did you waste? Did you have to get help from others. Every 12 x 5 minutes adds up to a wasted person hour. Every 5 of these adds up to a wasted day. I've done this for clients where server performance was inadequate, and for where I've need better hardware for specific tasks. Also it's not jsut about asking for "a new computer" - it's about telling them exactly what computer they need to get for you and why it benefits them to do it. 

The point was that I would be lonely during work, but I'd mitigate it by interacting with people every day. These days I use IM and make sure I have non work & work related conversations with colleagues too. An important thing to remember is that you are working, so you need to focus. If you're clever you can use the isolation to help you focus on the work better. This means that you may be more effective but at the same time you have to watch for mental fatigue and a good way to combat is to follow the steps above. These days are lots of things that are accessible via the internet such as meetup.com where you can get together with people for professional or non professional networking. One person I met like this a fellow programmer who lived locally and we used to code review for each other. 

Not all companies pay you for how much work you do. For instance, a security guard is not paid per thief he catches, he is paid to be there 8 hours every night so that management can rest easy in the knowledge that there is at least 1 guard present on the premises from 10 pm to 6 am every night. Or a receptionist at the front desk: They are not paid by the number of visitors they help, they are paid by the hour because it is crucial that there always be a receptionist manning the front desk at all times, no matter what, even if nobody shows up. Software development is often a "paid for work" field where the key thing you provide to the company in exchange for your pay is not availability, but completed work. However, this is not always the case. You can tell by the attitude of the company: 

The whole aim of your work is to take a project that the customer is not satisfied with, and fix the customer's complaints. Yet you are not allowed to talk to the customer. Fine, c'est la vie. But this will slow you down, therefore the project will take longer than usual, and perhaps the work will be harder (more $$$/hour). So you should discuss pricing again, because assumptions behind your original quote likely no longer hold. With all this secrecy, what proof will even exist of your employment? When you get paid at the end, your tax authority will need to know where your money came from, because large sums out of the blue are often connected to criminal activity. You also need enough legally admissible proof that yes, you are hired by them and yes, you do expect to be paid so much money for rebuilding this app. Their customer needn't see these documents, but they must be prepared between the two of you. Otherwise, they could just not pay you after the work is done, and you couldn't prove in court that you even worked there at all. Or they could pay you, and then the government audits your taxes, and you have endless headaches explaining to them that it was a "secret project". Secrecy costs money. Bluntly, not all developers have the tact to do such work without blowing their cover, therefore those that can (like you) should be paid more. It's supply and demand. So this is a valuable additional thing that they need to compensate you for, on top of what I mentioned in #1. Last but not least, the payoff of your work is not only the money, but also being able to show future clients your past work to show that you're a capable developer. If they intend to keep it completely secret, they are essentially taking that away from you, so they should give something else in return - like money. Meaning if this will be a secret not only during work, but even long after the app is rebuilt and the customer is happy, then that will cost extra too, on top of #1 and #3. 

I have signed a contract a month ago to start getting consistent work from a company. The boss promised me an average of 25 hours a week (but that wasn't explicitly written), but for the past two weeks there have been no reasons for me to come into the office, as there was, to my surprise, no work being offered to me. Even my boss hasn't shown any concern at me not showing up. Project managers typically come to the employees for more things to do, but they are paid on salary. Here are some relevant statements from the contract: 

With my experience, I am terrible at reading people, to see if they are open to casual talk for a while, or if they don't want their work to be interrupted, so I don't know when to start chatting with them. Also, my own life isn't very interesting to talk about, as I don't go out on a typical weekend. I don't want to start talking "just because". I am good at staying focused on my own work all time, but usually when I talk I tend to catch people at a bad time (they are quickly interrupted by some work-related order). And at work there are conversations that can be over 15 minutes long. This is not a problem for me in non-work related situations, such as a friendly outing or a party, because I know people want to talk. But at work I either risk being labeled a shut-in or a guy who slacks off too much. How do I balance it? How do I know when to start/finish a chat, and make it sound natural without being forced or contrived? 

The last two weeks have fallen really short of these expectations. If I don't have work, I don't have hours to report, so I do not get paid. This makes me feel like I've been put on furlough, but doesn't that usually apply to paid employees and not contractors?