Every profession I have worked in has used some equivalent of these terms. They pretty much date back to the middle ages when you had apprentices, journeymen and Masters of a particular profession. While they often seem to be deternmined by number of years, really the true distinction is in the difficulty level of the work you can assign and the abilty to work with more or less supervision. 

So no, earning more certificates would never, in my mind, make up for not having valid experince or formal education and you would almost always rank lower in terms of selecting people to interview than the people who had that. If you want to make a bigger difference in your selection,I would go for a personal project where you actually have to build something that shows you have the skill level expected of a professional. I think that would move you up the ladder of things that are considered and would be abetter use of your time. More formal education can help too if you have not yet finished an Bchelor's degree. I personally would not be more interested in someone with a Masters and no experience than someone with a bachelors because I don't have research type jobs to offer. A company with the kind of jobs that require that experience would of course find you more valuable with the higher degree. But if you have the Bacjhelor's degree, you are better off getting more experience than spending the time on more education for many jobs. 

If you work in a call center, you are likely paid by the hour, so they naturally expect you there for every hour that they are paying you. Looking at this from a business perspective, you may not be in the only call center the company has. I was the network support for a call center once and sometimes we had to take workload unexpectedly from another center because they had a power outage or a network issue. And sometimes the calls are returned or the workload suddenly picks up. You can't come back from home to pick up the work of a call coming in right now. This is likely the reason they can't release you. They may need you on short notice to pick up calls. I'd suggest bringing reading material. Or you could get with your call center trainer to see about putting together some refresher training for slack times. Or perhaps you could work on organization something for charity? Of course check with your boss before doing any of those things. Call centers tend to be pretty micromanaged. 

Yes a significant portion of Indian workers are vegetarians. Very few of the ones who eat meat, in my experience will eat beef because cows are sacred in India among Hindus. It is great to suggest places to eat but I would never suggest a steak house. And I would always be sure to pick a place that has vegetarian (but not necessarily vegan, they can eat cheese) choices. That way you don't run the risk of being offensive without having to ask. Now if the restaurant has plenty of other choices, you can order a meal with beef if you want. Just don't go anywhere that serves mostly beef as that would be insensitive to their culture. If you go to an an American style restaurant, you may have to help them find the vegetarian choices as what they call things and what we call things may not be the same. I remember some Indian colleagues at a picnic who did not know that coleslaw was safe to eat because they had no idea what coleslaw had in it. Especially let them know that something has beef or pork if that is what they are looking at. Especially if it is in something like green beans that appears to be a vegetable dish to them. 

For most adults, order doesn't matter much. I personally put the people I am most concerned about acting on something in the email first. I also put people who are being informed but not expected to take any action in the CC not the To block.Some people alphabetize, others put people in as they think of them. However, you have had a coworker mention that this is a problem specifically at your workplace which might well be a personal hang up of his (in which case, putting him ahead of his peers in emails may make him like you more and hurts no one else.) or may be organizational culture. Some companies do things differently than other companies. As an intern, you need to learn to observe how things are done at your company. Look at various emails you receive and see if people are generally put in order of their seniority. Check with your boss to see if this is something that you should be paying attention to. No need to mention who told you that, just say someone mentioned it and you were unsure if it was truly the case. 

Depending on the nature of the bug I might tell them. Most people would appreciate being told that you were on their website and went to this screen and got an error message. Just like they would prefer any other user to tell them. I am sure I would not be interested in working for the kind of person who would be insulted at reporting an error message you saw. If the bug was one you found by really digging in the HTML or the URL line, it is a gray area. I would think many people would like to know you took the time to go into that depth. I would think I would prefer to work for those kind of people. If you spent a lot of time trying to hack into their system and got in, that may be a better thing to tell them later. Unless this was for a job where those kind of hacking skills were needed and even then I might be careful. But your mileage may vary. Maybe you only want to work in a place when hacking into stuff you shouldn't be into is acceptable or encouraged. Then telling them this stuff might knock you out of some postions, but improve your chances of ending up in a compatible place. 

You should take as much care with the preparation of sample code as you do with your resume. The purpose is to sell your skills to the potential employer. As an interviewer what I looked for was code that made sense and would work. I looked for code that showed a level of complexity consistent with the job I was hiring for. A code sample for a senior devloper would be expected to be more complex than one from a junior developer. I looked for the abilty to adhere to a consistent style (it didn't have to be the style we preferred, but should be internally consistent). I was looking for evidence of a cowboy coder who didn't care how maintainable the code was (something that would not be a good thing). I wanted the code to be something that shows you can solve the types of problems I have. But most of all I was looking for the code to be something the person could explain to me. You would be amazed at how many times I have gotten a code sample when that person could not explain what it did or how it did it. And if it was something that you are personally proud of and excited to talk about, that helps too. Another thing interviewers are looking at when getting code samples is your judgement. Even if you don't have an NDA, we don't want to see code that clearly identifies the company it came from. We want you to tell us that you have specifically modified the code to avoid an NDA and it is not exactly the same as what was actually implemented. Or we want you to tell us it came from a personal project with a link to the the whole project. We want to see if you gave us code that relates to the job we are hiring for or is at least at the right level of complexity (this is part of the judgement test, have you thought about what kind of code we would want to see). If I'm hiring you to do backend database work, I would expect to see database code. If I'm hiring you to create web sites, I would expect to see some front end code. If I'm hiring to do embedded code in hardware that is the type of code sample I want. If I'm hiring to do games programming, then a game program or at least something showing that you can handle the math involved is what I want to see. I also want to see the solution to an interesting problem. It's true that most professional code is under an NDA, however it is possible take such code and make it so that the it does something similar to what the orginal code did but is not identifiable to a specific company or process. I believe the proessional who wants a job should have taken the time to create a portfolio of his or her work in such a way as to make it not company-related. The code can be from a personal project or from something that the person rewrote at home to be not under the NDA using concepts similar to things he did at work. Rewriting it in a different language than the one you used at work would be extra impressive. A code sample doesn't have to be a complete application as the interviewer is not going to go through thousands of lines of code. But don't make it so short that it doesn't show your skill level either. Above all don't make the code sample sloppy or buggy. Handle errors, be consistent in your naming practices, use good design patterns, avoid antipatterns, etc.