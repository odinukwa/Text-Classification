Which exits cleanly, and brings the device back into the pool. Perhaps this is due to the load order of different modules during boot? Maybe the activation of dm-crypt devices is done such that ZFS begins importing pools before the LUKS container is properly open? 

UPDATE 1: Worth noting that I've been able to duplicate this behavior on a second SSH host, as well as an IRC server, thus proving (in my mind) that this is an issue wholly within some config on my local host. 

I have recently configured my own mail server (Linux-based postfix + dovecot scenario). This is just for personal use - I have no bulk mail going out, no automatically generated mail outbound from the host, nothing like that. I've gone through the trouble to configure all the additional fun-to-debug email DNS records: 

We run firewalls on all local workstations where I work and we view it as a "good thing", insofar as has been mentioned previously, some lunkhead could bring a personal laptop in that's infected with a virus or worm and release it into the `trusted' corporate network. Running a solution like Symantec or McAfee, you can centrally manage the firewall rulesets on all clients to quickly respond to a fast-spreading worm, (then again, if you're a quick thinker on your feet, you can also create pre-set ACL's on interconnecting switches and routers within your LAN to potentially block a malicious code from spreading, once you know how it traverses a network.) That being said, be advised that you MAY POSSIBLY run into application issues where your clients need to communicate with servers on specific ports, etc. To summarize; Firewalls on XP, Vista, etc. workstations = good thing. Do not deploy onto servers, unless you're ready to document and tweak for clients connecting to applications. 

making the default action a softfail instead of a hardfail. The problem is, I don't want to go around spamming lists for no good reason to test this change. Has anyone else been here before and can verify/refute my theory? 

Keep SPF, DKIM, DMARC, and ADSP and give up using mailing lists, or Drop this DNS security/reporting layer and have my normal outgoing mail rejected by Google, Yahoo!, Live, etc. 

Is this proc wait delay real? Confirmable by VMWare documentation? If it is real (and not obvious from provided documentation), are there equations to measure projected impact of guest vcpu increases ahead of time? Tooling to measure what kind of real world impact the delay is already having? 

Typically for folks using ZoL that want encryption, encryptfs isn't desireable because you lose both performance and fuctionality. ZFS works best when it is the filesystem, not when you layer others on top of it (again, you can, but it's suboptimal). This is what encryptfs does (layers an encrypted filesystem on top of ZFS), and exactly why you see so much about LUKS (which works the other way around - it can configure ZFS on top of an encrypted container which is managed by the kernel - very performant for what it's doing and you don't lose any ZFS features. Unforunately, as others have noted, ZoL does in fact not include native filesystem encryption such as in the Oracle implementation at this time. You've got to layer your encryption above (encryptfs) or below (LUKS) the ZFS magic. 

If you're good on the above, a too-deep file/folder path might be giving you some grief. Try navigating several folders towards the root, then cutting and pasting them to reduce some of that path. Alternately, you could rename the folders in the path to "1", "2", "3", etc. Cutting down on some of the extraneous characters. 

DISCLAIMER: I'm assuming that you've already checked your replication, made sure everything else is working properly, etc. This is intended to be a quick-check option. 

We enforce a 90-day password expiry on everyone here, (including ourselves.) Mostly because it's simply best-practices. Chances of someone using a "weak" password, vs. a stronger one is greater and the longer you leave it the same would possibly result in a long-term, undetected security breach. 

EDIT 1: Thinking back, and thanks @Alex for setting me straight, I really haven't provided enough data to make an accurate assessment. Here's an example of a notice I received on my address when attempting to post to a mailing list: 

Looks to me like this is a DKIM signature failure, but I have no idea why. Is the receiving server trying to verify my DKIM signature against the mailing-list-server's key, or vice versa? For some reason, I wouldn't expect this to happen - I remember reading somewhere that in cases like this Relays and such will sometimes remove/munge headers like this to ensure these types of failures don't occur? 

Where else can I look? What other debug tools can I use (all I can think to do is run )? I tried running on remotehost while attempting a connection, but couldn't figure out how to filter the packets from the shell running thus infinite-loop spamming myself out of any useful diagnostics. 

Here's one of my favorites. We've got 700+ users and various divisions and subgroups that require their own drives. We're mapping based on username currently: 

Yes, "We" can see what you're doing, long story short. Here, we use Altiris to enable Helpdesk to administer your machine from afar, as well as perform application metering, maintaining configuration standards in the guise of rapid image deployment. On our network and in our company, Skype is a banned application. If you install it, thanks to app metering, we'll know within 24/48 hours. Altiris also comes with a remote control function that can be hidden from the logged-on user. (At least the taskbar display icon, etc.) If the bosses-that-be decide you need to be monitored, after our system emails us that you've installed Skype, then we'll do so. Remember that "Use of electronic company equipment constitutes consent to monitoring", etc, blah, blah? Maybe it was worded differently in your company. Either way, I'll bet you a can of soda pop that your sr. IT, HR and Legal management have agreed on this policy. Let's say that you install Skype anyway and we don't catch it for a while. I'm still a pretty good network admin though, I'll probably catch the traffic from it on one of my wireshark or LanHound monitoring laptops. Or, you could just whip out your cell phone and call whomever it is you want to talk to, completely independent of your work-network. At that point, all you need to worry about is the NSA. :) And you're not doing anything wrong, right? 

EDIT 1: During cryptsetup creation, I used the SCSI identifiers (e.g. ) to initialize the device with LUKS. However, in I'm specifying the devices through the UUID of the underlying physical disk. Is the utility sensitive to how you identify targets? In other words, do I need to re-do my and pass it the disk UUID instead of the SCSI name? 

But this isn't working; my conditionals are rendering nothing (empty strings). Even if a small refactoring would get the job done, this smells to me. Is there a more idiomatic way to alternate small details like this with Salt without so much templating boilerplate? 

From what I know, if it's in it is - by definition? - not subject to change (even across reboots). I will replace the definition of the dm-crypt-name in my zpool with the id-name and report back. Same drive, same LUKS container, just a different way of addressing it. 

With those, you can likely derive what you need. I'd hazard an educated guess that your answer lays within the "FROM" and "TO" .cfg entries. As one more alternative, you could always skip those above and simply write a batch script that will move/archive or delete the previous week of logfiles -out_ of the default "\LogFiles\W3SVC1" location to say, something like "D:\IIS-Logfiles-Archive", and then run the analog analyzer for the day. Some pseudocode that might help you get started and moving in the right direction would be: (and again, this is PSEUDO-code. Rough, ugly and fits like a wet wool sweater. There probably isn't a need to delete the directory, but I'm cribbing from another script that I use, mmmkay? :) 

EDIT 2: Thanks to @Christopher Karel for referencing a DMARC report parsing tool at dmarcian.com. The lions share of entries are listed as forwarders (which makes sense). There is one server (*.mailhop.org) listed as "preserv[ing] DKIM" - I've sucessfully sent mail over one of the Ruby language forums which has worked, and I know from my research they use mailhop.org. Under the category "Servers that break DKIM signatures (or create spoofed signatures)" are listed , , (dunno why this appears here, maybe another list I'm on uses them as well in a different configuration), among others and the lists I've been most active on are Arch and a few hosted by Google Groups so this makes sense. About 400 messages in total - I haven't sent nearly that many messages, so I guess maybe it's counting retries. I'm getting depressed - at the moment it seems like my choices are: 

I think you get the gist of where this is going. To summarize, if my workday consists of training co-workers and subordinates, passing on knowledge, doing a daily log check and focusing PRIMARILY on strategic IT initiatives such as security, tools to make the user's life easier and making the network run.. Oh, I dunno, faster or better or something, then I am "doing well", I suppose. Eh, kinda rambling, but I warned you in the beginning. :) 

Windows 2003 native mode. One domain controller on-site, read-write, no RODCs. DNS is running on the DC onsite. Servers would be pointing to the DC for DNS and authentication. How long would the child domain remain functional without it's ability to contact the forest level domain controllers? Could users still log in, up to several weeks after the disconnect, or would they experience Kerberos authentication issues? 

Turns out there doesn't seem to be anything wrong with my configuration. What's happening is that my messages are being processed by mailman correctly, and being relayed out to the list. There are a couple of receivers however which (for whatever reason is unique to them) reject the message. Because I have actually correctly configured SPF, I'm seeing the rejection message from those destination SMTP servers, not from the Mailing List relay itself. Some awesome folks in the Arch community helped me chase this one down, as they had access to said ML server. 

UPDATE 2: Also worth noting that while my localhost has trouble with these outbound connections, other clients (including on one, and one off, my LAN) have no issues whatsoever to any of the same remote hosts, or any other hosts. Again, leading me to believe that this is solely some config issue within localhost (but maybe I'm wrong?).