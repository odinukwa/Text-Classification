You appear to have installed RPM Fusion repositories for Fedora, rather than for Enterprise Linux. These would not be compatible with your CentOS system and therefore would cause this error. To resolve the issue, remove the repos (e.g. ) and replace them with the correct repos. Then, check your file and remove any inappropriate s. (The error 503 is a temporary failure and will resolve itself when the upstream fixes their web site. You can ignore that for now.) 

Hostnames can point anywhere. It's unique global IP addresses for each VM that you need. (Make sure you actually have them; they can be very hard to get in some parts of the world.) Each virtual machine will require its own IP address, and if you want to reach them from the Internet, they must be global addresses. The easiest way to do this is to use bridged networking for the VMs. How you set this up depends mostly on outside factors, such as whether you're installing a VM control panel, but this howto will give you the basic steps to set up a bridge on your local machine so you can begin testing and become more familiar with how everything works. 

You really have run out of memory (and swap!). Either tune your services to use less memory, or buy a VPS with more memory. 

Quote from the developers to someone trying to do the same thing: Doing traffic control on vlan's may not work as expected because the vlan pseudo-device does not have any transmit queue. Since you've already written your rules to rate limit by subnet, it's a matter of getting Linux to rate control it. I would suggest working around it by putting the VLAN in a bridge (though for consistency's sake you might want to create a bridge for every VLAN): 

If you aren't running perl CGI scripts (most people don't) then disable mod_perl entirely. If you must have mod_perl installed, disable perl-status if you had it enabled. If you weren't using perl-status, this issue does not apply to your system. Oh, and file a security bug in launchpad and ask why in the world they haven't pushed a security update for hardy. 

Use the nginx realip module, and then you don't have to worry about the X-Forwarded-For header; you can just act on IP addresses as if the load balancer wasn't there. A sample configuration: 

This error means that you can't create a partition of more than 2 TiB on an MBR-partitioned disk. You must use GPT partitioning. To resolve the issue, create the GPT first: 

You cannot use a domain name that someone else controls. If you attempt to do so, you get the errors shown here. Instead, use a subdomain of your own domain name. If you do not have a domain name, one can be obtained very cheaply from numerous domain registrars. 

Add a static route to your external mail server's IP address which is explicitly routed via the Ethernet interface instead of the default route. Send out your outgoing mail to the external mail server on the submission port (587). 

Try starting the DNS server and making sure it isn't firewalled or misconfigured. Your nameserver is having some sort of problem: 

Nope, that's completely out of line. The refers to the path of the file on the filesystem, not the path in the request URI. Typically it should be something like: 

Use something like logrotate, or the rotatelogs utility that came with Apache, to rotate your log files on a regular basis. 

It didn't take long to find Debian's list of supported RAID drivers. Unfortunately it's out of date, and seems to be a much shorter list than other distributions. 

Place it in a directory (or shared filesystem) under . This is what it's for. The directory is intended for site-specific data served by the system. From the standard: 

Anything that will run Windows 8 is already 64-bit capable, unless you happen to have some first-generation Intel Atom netbooks (and I doubt that very much). That's about the only thing I can think of. AMD released its first 64-bit capable Opteron in 2003; and since then virtually every processor they have made has been 64-bit capable. Intel was a year later, releasing its first 64-bit Xeon (Nocona) in 2004, and expanding to just about the entire product line by 2006. Aside from the aforementioned early Atom chips, every Intel processor today is 64-bit. Wikipedia has a broken down processor list if you're interested in ancient history. 

The kernel config you want is already present in the distribution-supplied kernels in CentOS 7. As you mentioned, you're using Linode, so you are likely also using Linode's supplied kernel instead of the standard kernel. You just need to switch back to the distribution kernel. 

DNS is only one part of the story. The web server must be aware of the domain names that you intend to use. So you will have to set up the names in the web server as well (e.g. using Apache's directive. 

You should be serving a 206 in this case. RFC 7233 makes it clear that if any part of the requested range is satisfiable then that is what you send back, even if part of the range is not satisfiable. From section 2.1: 

Whatever GUI tool you're using in OS X is doing that, not . If you actually use to extract the file, you will get the expected directory structure. 

When iptables reaches the end of a user-defined chain, flow returns to the next rule in the calling chain. The RETURN is therefore implicit; it does not need to be explicitly given. 

First, I would not believe everything you read on the Internet. Most of it is crap. Though, it seems that does indeed behave in the way you describe. At least, a note on qemu's wiki states that they intend it to behave that way. 

You're getting a 301 redirect because you specifically asked for a 301 redirect. To fix the problem, use a relative destination URL, and instead of . For example: 

In NAT networking mode, VirtualBox machines can talk to the Internet, but not to each other. In host-only networking mode, the virtual machines can talk to each other, but not to the Internet. (Though you could NAT them manually if you are on a Linux or FreeBSD host.) Another option is VDE networking; this is only available in the community edition, and not the Oracle edition of VirtualBox, and only on Linux and FreeBSD hosts. It's much more involved to set up, but would do what you want once done. The fastest and easiest way to set this up is, of course, bridged mode. 

You're using PPTP, so it's already insecure. As for the masquerade rule, that's required to implement NAT, and you wouldn't be able to access public Internet addresses without it. 

In iptables, you need to redirect HTTP traffic to the squid intercept port, not the standard proxy port. You also need to redirect HTTPS traffic to the intercept ssl-bump port. 

The Linux bridge is a basic layer 2 switch. In order for it to send traffic to an interface connected to it, the traffic must be appropriate for that interface (i.e. the destination MAC address is reachable via that port). While layer 2 switches often have a port mirroring feature which forwards all traffic crossing the switch to a designated port, the Linux bridge has no such functionality. However, you can fake it with Linux's traffic control (tc). I do this to forward traffic to a KVM virtual machine running suricata. The limitation of this method is that you can only mirror traffic on a single physical port. In this script, the is the port to be monitored, which must be a physical port, and is the interface to which the traffic will be sent (which can be a virtual port or a bridge). The monitored port does not need to be in promiscuous mode with this method. And the mirror port does not need to be bridged to the monitored port. In my case, the host has a bridge br0, bridged to eno1 and to which all the virtual machines have a virtual NIC. I have created a host-only virtual network (as virbr2) for this VM and added a second NIC in the suricata VM on this network in addition to its regular NIC, and directed the traffic to it. 

Assign as many vCPUs as you wish to any virtual guest, up to the number of physical CPU cores (or hyperthreads). You can overcommit CPU by assigning more vCPUs among your running virtual machines than exist in the server, subject to the limit that no single virtual guest may have more vCPUs than physical CPU cores. Keep in mind that if you have CPU intensive tasks, that overcommitting CPU won't buy you anything and may slow down the rest of your guests. 

Serve all static files from nginx, and only pass upstream to Apache any other requests. When necessary for performance reasons, make the homepage a static file such as in the document root. Thus, nginx will serve it directly. Delete it to return to the previous behavior. 

If the package was just installed, and hasn't yet been updated, you can rollback the transaction with, e.g. . This won't work if any of the packages has been updated since installation, though, as it matches name, version and release. And if you really just installed the packages, you can skip everything else and run to rollback the most recent transaction. 

is redundant. When any other options are in use, it can be omitted. It only exists to fill the relevant column in . And since is already a default, it too is redundant. 

You don't appear to be running Red Hat, but Amazon Linux. Since this is designed to be a server instance, they may have chosen not to provide desktop tools such as .