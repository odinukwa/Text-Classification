I have a very central table in our database that is used by a range of applications, it has rules attached to it, triggers and all the dependencies that you can imagine. Now I would like to modify the table without causing any problems with the dependencies. I have previously been successful with doing the following but in a much less complex case: 

Now I would like to utilize the test view or any other view in a GUI which simply presents an editable table. This is possible with the recently introduced automatically updatable views. I want the table to contain drop-downs containing all possible values every time there is a column with constrains on it, like the column with a foreign key in this case. How can this be achieved? I know that I could utilize enums and I do that today, but on Amazon RDS they are unreasonably hard to modify. I had an idea of (ab)using the "EXPLAIN SELECT" query for each column and check which table and column is being queried. 

But that would throw error messages in all the applications, and potentially stopping new customers from registering. Therefore, I am looking for this auto-converting rule/trigger which will handle any updates or inserts into this table. Is it possible to do this at all, so it won't come back and bite me later? 

I need to generate either backups or data dumps for about 30 tables. I want to generate a file of some sort that contains the data for these tables and transfer them to a different system. Each table has 3.8-4.5 million rows. also a large number of these rows have columns with text that has newline characters which need to be handled correctly. I'm using and have . Due to security and other particular reasons I cannot just use for simply exporting tables from one database to another. I have a requirement to get a dump of the data to transfer to a remote system. I have tried capability, which does appear to handle the newline characters, however There is another issue. In some of the fields the text is similar to "something blah \". that slash causes a problem with the script that gets generated, because the process wraps that text in and with it basically escapes the single quote which corrupts the remaining data. I have also tried to generate flat files via and this doesn't appear to handle the newline characters correctly and again corrupting the remaining data. Any help would be greatly appreciated. and I can clarify any information that is missing. 

What this achieves is that I could now modify the new "matches" table and for example add a column or rows, which do not need to get presented in the "reconciliations" view (by adding a where clause to filter them out). I am on Postgres 9.5 so the view is automatically updatable. Initial tests shows that there are no immediate problems with this, so I am asking this question to know what kind of problems I should be looking for. Performance is not a big issue. 

Needless to say, it is impossible to get fluent in the naming of our database objects. Also, because we are very agile with releasing new updates (uptime is not much of a concern so fast is better than correct at first attempt), we keep adding more objects with wrong naming. Postgres will help me out in some cases, but it will not fix references to a table inside a stored procedure and the same goes for any references from our any application, or configuration script. What I am after is that if I write a stored procedure then the stored procedure will use the following while running: 

Another solution could be to add aliases, so after renaming a_table to b_table then querying a_table would still work, but all queries to the a_table would get logged and I could search for those queries that get run towards the old table. This would mean that there would be no risk involved in renaming a table. The same goes for columns, stored procedures etc. Does such a solution exist? I realize that the first solution requires major work in the IDE but having such an IDE would mean that I could safely rename tables and columns at will. Maybe a quick-fix solution to this would be a Mac/Windows hack where if any text editor presents the following text to me: 1UL0Aii1aaErbU then that will always get auto-replaced with a_column no matter where it is presented. I believe AutoHotKey.com could achieve this on Windows. 

and the other way of adding a new column is by going into , bringing up the for the table I want to update, and adding the new column's information to the design. 

update would the above query work if say the columns between the two tables are the same, but are in a different order? 

I am wanting to combine 2 tables. until recently the column names were different , and one had fewer columns than the other, however it was deemed unnecessary to have them as two tables. I have basically made the two tables identical (making them have the same column names and number of columns), and now I need to move the contents of one table into the other. I'm not quite sure how to perform this, other than my assumption: 

I'm needing to update a few column names in some tables I have in my database. I'm using . I'm aware of using the ability: 

I'm wanting the best way to add a column to an existing table in my database. I'm using . I don't want the data that is in the table to be affected, I just want to add a new column that has a default value of . The only ways I'm aware of for adding a new column is by using: 

I am considering a model where I use PostgreSQL COPY to copy data from a file into a table. I was wondering what kind of performance to expect on high-end hardware. An interval in MB/s would be nice so I can start estimating. If you just know the answer on other databases, I would be interested to compare. 

I have about 26 applications interacting with our database, some of these will store email addresses in mixed case. Since I made the mistake of using varchar as the column type and not a case insensitive one, I would like to make some kind of trigger or rule, which will convert all attempts to save email addresses as mixed case, into lower case. I could achieve the same using the following query: 

If I share a Google Spreadsheet with someone, I will share a link like this: $URL$ This means that I am free to edit the name of the file (for example to "Book - absolute final version really7"), the Google Drive folder it is located in etc. etc. while the link will still work. Would it be possible to simulate something similar in a database? The problem I am trying to solve is the intense pain and risk I have to go through every time I need to rename a column, table, view or stored procedure in the database, or if I want to move it to a different schema. Because of this pain, I currently have all sorts of naming of all these things so you will see a primary key lookup looking like this in my database: 

or by using the by pulling up the Table's Design and then just updating the name for the column and saving the changes. What I need to know is if either of these drops the column in question. I don't want to lose any of the data, I just want to rename the column name to something else. 

I have a Database that creates day tables and some of the tables don't have the same number of columns and in some cases the columns aren't the same. What I'm needing to do is consolidate all the tables into a single table. I'm not quite sure how to do this, but I'm assuming I need to make sure all the tables have the same columns and then add all the data from the multiple tables to the single table should be fairly easy. so my first step, find out which tables are different and which ones are the same. what I need is to find out if a table has the same columns as another. not the data, but rather like the column names and possibly the data type for that column. any help would be greatly appreciated. Thank you. I'm manually going through these and checking the content, but would definitely like something that would be much quicker.